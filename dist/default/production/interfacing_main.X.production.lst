

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Mar 23 00:38:23 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 17/01/2025 GMT
    32                           ; 
    33                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F452 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000FE0                     bsr             equ	4064
    66   000FE9                     fsr0            equ	4073
    67   000FEA                     fsr0h           equ	4074
    68   000FE9                     fsr0l           equ	4073
    69   000FE1                     fsr1            equ	4065
    70   000FE2                     fsr1h           equ	4066
    71   000FE1                     fsr1l           equ	4065
    72   000FD9                     fsr2            equ	4057
    73   000FDA                     fsr2h           equ	4058
    74   000FD9                     fsr2l           equ	4057
    75   000FEF                     indf0           equ	4079
    76   000FE7                     indf1           equ	4071
    77   000FDF                     indf2           equ	4063
    78   000FF2                     intcon          equ	4082
    79   000000                     nvmcon          equ	0
    80   000FF9                     pcl             equ	4089
    81   000FFA                     pclath          equ	4090
    82   000FFB                     pclatu          equ	4091
    83   000FEB                     plusw0          equ	4075
    84   000FE3                     plusw1          equ	4067
    85   000FDB                     plusw2          equ	4059
    86   000FED                     postdec0        equ	4077
    87   000FE5                     postdec1        equ	4069
    88   000FDD                     postdec2        equ	4061
    89   000FEE                     postinc0        equ	4078
    90   000FE6                     postinc1        equ	4070
    91   000FDE                     postinc2        equ	4062
    92   000FEC                     preinc0         equ	4076
    93   000FE4                     preinc1         equ	4068
    94   000FDC                     preinc2         equ	4060
    95   000FF3                     prod            equ	4083
    96   000FF4                     prodh           equ	4084
    97   000FF3                     prodl           equ	4083
    98   000FD8                     status          equ	4056
    99   000FF5                     tablat          equ	4085
   100   000FF6                     tblptr          equ	4086
   101   000FF7                     tblptrh         equ	4087
   102   000FF6                     tblptrl         equ	4086
   103   000FF8                     tblptru         equ	4088
   104   000FFD                     tosl            equ	4093
   105   000FE8                     wreg            equ	4072
   106   000F80                     PORTA           equ	3968	;# 
   107   000F81                     PORTB           equ	3969	;# 
   108   000F82                     PORTC           equ	3970	;# 
   109   000F83                     PORTD           equ	3971	;# 
   110   000F84                     PORTE           equ	3972	;# 
   111   000F89                     LATA            equ	3977	;# 
   112   000F8A                     LATB            equ	3978	;# 
   113   000F8B                     LATC            equ	3979	;# 
   114   000F8C                     LATD            equ	3980	;# 
   115   000F8D                     LATE            equ	3981	;# 
   116   000F92                     TRISA           equ	3986	;# 
   117   000F92                     DDRA            equ	3986	;# 
   118   000F93                     TRISB           equ	3987	;# 
   119   000F93                     DDRB            equ	3987	;# 
   120   000F94                     TRISC           equ	3988	;# 
   121   000F94                     DDRC            equ	3988	;# 
   122   000F95                     TRISD           equ	3989	;# 
   123   000F95                     DDRD            equ	3989	;# 
   124   000F96                     TRISE           equ	3990	;# 
   125   000F96                     DDRE            equ	3990	;# 
   126   000F9D                     PIE1            equ	3997	;# 
   127   000F9E                     PIR1            equ	3998	;# 
   128   000F9F                     IPR1            equ	3999	;# 
   129   000FA0                     PIE2            equ	4000	;# 
   130   000FA1                     PIR2            equ	4001	;# 
   131   000FA2                     IPR2            equ	4002	;# 
   132   000FA6                     EECON1          equ	4006	;# 
   133   000FA7                     EECON2          equ	4007	;# 
   134   000FA8                     EEDATA          equ	4008	;# 
   135   000FA9                     EEADR           equ	4009	;# 
   136   000FAB                     RCSTA           equ	4011	;# 
   137   000FAB                     RCSTA1          equ	4011	;# 
   138   000FAC                     TXSTA           equ	4012	;# 
   139   000FAC                     TXSTA1          equ	4012	;# 
   140   000FAD                     TXREG           equ	4013	;# 
   141   000FAD                     TXREG1          equ	4013	;# 
   142   000FAE                     RCREG           equ	4014	;# 
   143   000FAE                     RCREG1          equ	4014	;# 
   144   000FAF                     SPBRG           equ	4015	;# 
   145   000FAF                     SPBRG1          equ	4015	;# 
   146   000FB1                     T3CON           equ	4017	;# 
   147   000FB2                     TMR3            equ	4018	;# 
   148   000FB2                     TMR3L           equ	4018	;# 
   149   000FB3                     TMR3H           equ	4019	;# 
   150   000FBA                     CCP2CON         equ	4026	;# 
   151   000FBB                     CCPR2           equ	4027	;# 
   152   000FBB                     CCPR2L          equ	4027	;# 
   153   000FBC                     CCPR2H          equ	4028	;# 
   154   000FBD                     CCP1CON         equ	4029	;# 
   155   000FBE                     CCPR1           equ	4030	;# 
   156   000FBE                     CCPR1L          equ	4030	;# 
   157   000FBF                     CCPR1H          equ	4031	;# 
   158   000FC1                     ADCON1          equ	4033	;# 
   159   000FC2                     ADCON0          equ	4034	;# 
   160   000FC3                     ADRES           equ	4035	;# 
   161   000FC3                     ADRESL          equ	4035	;# 
   162   000FC4                     ADRESH          equ	4036	;# 
   163   000FC5                     SSPCON2         equ	4037	;# 
   164   000FC6                     SSPCON1         equ	4038	;# 
   165   000FC7                     SSPSTAT         equ	4039	;# 
   166   000FC8                     SSPADD          equ	4040	;# 
   167   000FC9                     SSPBUF          equ	4041	;# 
   168   000FCA                     T2CON           equ	4042	;# 
   169   000FCB                     PR2             equ	4043	;# 
   170   000FCB                     MEMCON          equ	4043	;# 
   171   000FCC                     TMR2            equ	4044	;# 
   172   000FCD                     T1CON           equ	4045	;# 
   173   000FCE                     TMR1            equ	4046	;# 
   174   000FCE                     TMR1L           equ	4046	;# 
   175   000FCF                     TMR1H           equ	4047	;# 
   176   000FD0                     RCON            equ	4048	;# 
   177   000FD1                     WDTCON          equ	4049	;# 
   178   000FD2                     LVDCON          equ	4050	;# 
   179   000FD3                     OSCCON          equ	4051	;# 
   180   000FD5                     T0CON           equ	4053	;# 
   181   000FD6                     TMR0            equ	4054	;# 
   182   000FD6                     TMR0L           equ	4054	;# 
   183   000FD7                     TMR0H           equ	4055	;# 
   184   000FD8                     STATUS          equ	4056	;# 
   185   000FD9                     FSR2            equ	4057	;# 
   186   000FD9                     FSR2L           equ	4057	;# 
   187   000FDA                     FSR2H           equ	4058	;# 
   188   000FDB                     PLUSW2          equ	4059	;# 
   189   000FDC                     PREINC2         equ	4060	;# 
   190   000FDD                     POSTDEC2        equ	4061	;# 
   191   000FDE                     POSTINC2        equ	4062	;# 
   192   000FDF                     INDF2           equ	4063	;# 
   193   000FE0                     BSR             equ	4064	;# 
   194   000FE1                     FSR1            equ	4065	;# 
   195   000FE1                     FSR1L           equ	4065	;# 
   196   000FE2                     FSR1H           equ	4066	;# 
   197   000FE3                     PLUSW1          equ	4067	;# 
   198   000FE4                     PREINC1         equ	4068	;# 
   199   000FE5                     POSTDEC1        equ	4069	;# 
   200   000FE6                     POSTINC1        equ	4070	;# 
   201   000FE7                     INDF1           equ	4071	;# 
   202   000FE8                     WREG            equ	4072	;# 
   203   000FE9                     FSR0            equ	4073	;# 
   204   000FE9                     FSR0L           equ	4073	;# 
   205   000FEA                     FSR0H           equ	4074	;# 
   206   000FEB                     PLUSW0          equ	4075	;# 
   207   000FEC                     PREINC0         equ	4076	;# 
   208   000FED                     POSTDEC0        equ	4077	;# 
   209   000FEE                     POSTINC0        equ	4078	;# 
   210   000FEF                     INDF0           equ	4079	;# 
   211   000FF0                     INTCON3         equ	4080	;# 
   212   000FF1                     INTCON2         equ	4081	;# 
   213   000FF2                     INTCON          equ	4082	;# 
   214   000FF2                     INTCON1         equ	4082	;# 
   215   000FF3                     PROD            equ	4083	;# 
   216   000FF3                     PRODL           equ	4083	;# 
   217   000FF4                     PRODH           equ	4084	;# 
   218   000FF5                     TABLAT          equ	4085	;# 
   219   000FF6                     TBLPTR          equ	4086	;# 
   220   000FF6                     TBLPTRL         equ	4086	;# 
   221   000FF7                     TBLPTRH         equ	4087	;# 
   222   000FF8                     TBLPTRU         equ	4088	;# 
   223   000FF9                     PCLAT           equ	4089	;# 
   224   000FF9                     PC              equ	4089	;# 
   225   000FF9                     PCL             equ	4089	;# 
   226   000FFA                     PCLATH          equ	4090	;# 
   227   000FFB                     PCLATU          equ	4091	;# 
   228   000FFC                     STKPTR          equ	4092	;# 
   229   000FFD                     TOS             equ	4093	;# 
   230   000FFD                     TOSL            equ	4093	;# 
   231   000FFE                     TOSH            equ	4094	;# 
   232   000FFF                     TOSU            equ	4095	;# 
   233   000F80                     PORTA           equ	3968	;# 
   234   000F81                     PORTB           equ	3969	;# 
   235   000F82                     PORTC           equ	3970	;# 
   236   000F83                     PORTD           equ	3971	;# 
   237   000F84                     PORTE           equ	3972	;# 
   238   000F89                     LATA            equ	3977	;# 
   239   000F8A                     LATB            equ	3978	;# 
   240   000F8B                     LATC            equ	3979	;# 
   241   000F8C                     LATD            equ	3980	;# 
   242   000F8D                     LATE            equ	3981	;# 
   243   000F92                     TRISA           equ	3986	;# 
   244   000F92                     DDRA            equ	3986	;# 
   245   000F93                     TRISB           equ	3987	;# 
   246   000F93                     DDRB            equ	3987	;# 
   247   000F94                     TRISC           equ	3988	;# 
   248   000F94                     DDRC            equ	3988	;# 
   249   000F95                     TRISD           equ	3989	;# 
   250   000F95                     DDRD            equ	3989	;# 
   251   000F96                     TRISE           equ	3990	;# 
   252   000F96                     DDRE            equ	3990	;# 
   253   000F9D                     PIE1            equ	3997	;# 
   254   000F9E                     PIR1            equ	3998	;# 
   255   000F9F                     IPR1            equ	3999	;# 
   256   000FA0                     PIE2            equ	4000	;# 
   257   000FA1                     PIR2            equ	4001	;# 
   258   000FA2                     IPR2            equ	4002	;# 
   259   000FA6                     EECON1          equ	4006	;# 
   260   000FA7                     EECON2          equ	4007	;# 
   261   000FA8                     EEDATA          equ	4008	;# 
   262   000FA9                     EEADR           equ	4009	;# 
   263   000FAB                     RCSTA           equ	4011	;# 
   264   000FAB                     RCSTA1          equ	4011	;# 
   265   000FAC                     TXSTA           equ	4012	;# 
   266   000FAC                     TXSTA1          equ	4012	;# 
   267   000FAD                     TXREG           equ	4013	;# 
   268   000FAD                     TXREG1          equ	4013	;# 
   269   000FAE                     RCREG           equ	4014	;# 
   270   000FAE                     RCREG1          equ	4014	;# 
   271   000FAF                     SPBRG           equ	4015	;# 
   272   000FAF                     SPBRG1          equ	4015	;# 
   273   000FB1                     T3CON           equ	4017	;# 
   274   000FB2                     TMR3            equ	4018	;# 
   275   000FB2                     TMR3L           equ	4018	;# 
   276   000FB3                     TMR3H           equ	4019	;# 
   277   000FBA                     CCP2CON         equ	4026	;# 
   278   000FBB                     CCPR2           equ	4027	;# 
   279   000FBB                     CCPR2L          equ	4027	;# 
   280   000FBC                     CCPR2H          equ	4028	;# 
   281   000FBD                     CCP1CON         equ	4029	;# 
   282   000FBE                     CCPR1           equ	4030	;# 
   283   000FBE                     CCPR1L          equ	4030	;# 
   284   000FBF                     CCPR1H          equ	4031	;# 
   285   000FC1                     ADCON1          equ	4033	;# 
   286   000FC2                     ADCON0          equ	4034	;# 
   287   000FC3                     ADRES           equ	4035	;# 
   288   000FC3                     ADRESL          equ	4035	;# 
   289   000FC4                     ADRESH          equ	4036	;# 
   290   000FC5                     SSPCON2         equ	4037	;# 
   291   000FC6                     SSPCON1         equ	4038	;# 
   292   000FC7                     SSPSTAT         equ	4039	;# 
   293   000FC8                     SSPADD          equ	4040	;# 
   294   000FC9                     SSPBUF          equ	4041	;# 
   295   000FCA                     T2CON           equ	4042	;# 
   296   000FCB                     PR2             equ	4043	;# 
   297   000FCB                     MEMCON          equ	4043	;# 
   298   000FCC                     TMR2            equ	4044	;# 
   299   000FCD                     T1CON           equ	4045	;# 
   300   000FCE                     TMR1            equ	4046	;# 
   301   000FCE                     TMR1L           equ	4046	;# 
   302   000FCF                     TMR1H           equ	4047	;# 
   303   000FD0                     RCON            equ	4048	;# 
   304   000FD1                     WDTCON          equ	4049	;# 
   305   000FD2                     LVDCON          equ	4050	;# 
   306   000FD3                     OSCCON          equ	4051	;# 
   307   000FD5                     T0CON           equ	4053	;# 
   308   000FD6                     TMR0            equ	4054	;# 
   309   000FD6                     TMR0L           equ	4054	;# 
   310   000FD7                     TMR0H           equ	4055	;# 
   311   000FD8                     STATUS          equ	4056	;# 
   312   000FD9                     FSR2            equ	4057	;# 
   313   000FD9                     FSR2L           equ	4057	;# 
   314   000FDA                     FSR2H           equ	4058	;# 
   315   000FDB                     PLUSW2          equ	4059	;# 
   316   000FDC                     PREINC2         equ	4060	;# 
   317   000FDD                     POSTDEC2        equ	4061	;# 
   318   000FDE                     POSTINC2        equ	4062	;# 
   319   000FDF                     INDF2           equ	4063	;# 
   320   000FE0                     BSR             equ	4064	;# 
   321   000FE1                     FSR1            equ	4065	;# 
   322   000FE1                     FSR1L           equ	4065	;# 
   323   000FE2                     FSR1H           equ	4066	;# 
   324   000FE3                     PLUSW1          equ	4067	;# 
   325   000FE4                     PREINC1         equ	4068	;# 
   326   000FE5                     POSTDEC1        equ	4069	;# 
   327   000FE6                     POSTINC1        equ	4070	;# 
   328   000FE7                     INDF1           equ	4071	;# 
   329   000FE8                     WREG            equ	4072	;# 
   330   000FE9                     FSR0            equ	4073	;# 
   331   000FE9                     FSR0L           equ	4073	;# 
   332   000FEA                     FSR0H           equ	4074	;# 
   333   000FEB                     PLUSW0          equ	4075	;# 
   334   000FEC                     PREINC0         equ	4076	;# 
   335   000FED                     POSTDEC0        equ	4077	;# 
   336   000FEE                     POSTINC0        equ	4078	;# 
   337   000FEF                     INDF0           equ	4079	;# 
   338   000FF0                     INTCON3         equ	4080	;# 
   339   000FF1                     INTCON2         equ	4081	;# 
   340   000FF2                     INTCON          equ	4082	;# 
   341   000FF2                     INTCON1         equ	4082	;# 
   342   000FF3                     PROD            equ	4083	;# 
   343   000FF3                     PRODL           equ	4083	;# 
   344   000FF4                     PRODH           equ	4084	;# 
   345   000FF5                     TABLAT          equ	4085	;# 
   346   000FF6                     TBLPTR          equ	4086	;# 
   347   000FF6                     TBLPTRL         equ	4086	;# 
   348   000FF7                     TBLPTRH         equ	4087	;# 
   349   000FF8                     TBLPTRU         equ	4088	;# 
   350   000FF9                     PCLAT           equ	4089	;# 
   351   000FF9                     PC              equ	4089	;# 
   352   000FF9                     PCL             equ	4089	;# 
   353   000FFA                     PCLATH          equ	4090	;# 
   354   000FFB                     PCLATU          equ	4091	;# 
   355   000FFC                     STKPTR          equ	4092	;# 
   356   000FFD                     TOS             equ	4093	;# 
   357   000FFD                     TOSL            equ	4093	;# 
   358   000FFE                     TOSH            equ	4094	;# 
   359   000FFF                     TOSU            equ	4095	;# 
   360   000F80                     PORTA           equ	3968	;# 
   361   000F81                     PORTB           equ	3969	;# 
   362   000F82                     PORTC           equ	3970	;# 
   363   000F83                     PORTD           equ	3971	;# 
   364   000F84                     PORTE           equ	3972	;# 
   365   000F89                     LATA            equ	3977	;# 
   366   000F8A                     LATB            equ	3978	;# 
   367   000F8B                     LATC            equ	3979	;# 
   368   000F8C                     LATD            equ	3980	;# 
   369   000F8D                     LATE            equ	3981	;# 
   370   000F92                     TRISA           equ	3986	;# 
   371   000F92                     DDRA            equ	3986	;# 
   372   000F93                     TRISB           equ	3987	;# 
   373   000F93                     DDRB            equ	3987	;# 
   374   000F94                     TRISC           equ	3988	;# 
   375   000F94                     DDRC            equ	3988	;# 
   376   000F95                     TRISD           equ	3989	;# 
   377   000F95                     DDRD            equ	3989	;# 
   378   000F96                     TRISE           equ	3990	;# 
   379   000F96                     DDRE            equ	3990	;# 
   380   000F9D                     PIE1            equ	3997	;# 
   381   000F9E                     PIR1            equ	3998	;# 
   382   000F9F                     IPR1            equ	3999	;# 
   383   000FA0                     PIE2            equ	4000	;# 
   384   000FA1                     PIR2            equ	4001	;# 
   385   000FA2                     IPR2            equ	4002	;# 
   386   000FA6                     EECON1          equ	4006	;# 
   387   000FA7                     EECON2          equ	4007	;# 
   388   000FA8                     EEDATA          equ	4008	;# 
   389   000FA9                     EEADR           equ	4009	;# 
   390   000FAB                     RCSTA           equ	4011	;# 
   391   000FAB                     RCSTA1          equ	4011	;# 
   392   000FAC                     TXSTA           equ	4012	;# 
   393   000FAC                     TXSTA1          equ	4012	;# 
   394   000FAD                     TXREG           equ	4013	;# 
   395   000FAD                     TXREG1          equ	4013	;# 
   396   000FAE                     RCREG           equ	4014	;# 
   397   000FAE                     RCREG1          equ	4014	;# 
   398   000FAF                     SPBRG           equ	4015	;# 
   399   000FAF                     SPBRG1          equ	4015	;# 
   400   000FB1                     T3CON           equ	4017	;# 
   401   000FB2                     TMR3            equ	4018	;# 
   402   000FB2                     TMR3L           equ	4018	;# 
   403   000FB3                     TMR3H           equ	4019	;# 
   404   000FBA                     CCP2CON         equ	4026	;# 
   405   000FBB                     CCPR2           equ	4027	;# 
   406   000FBB                     CCPR2L          equ	4027	;# 
   407   000FBC                     CCPR2H          equ	4028	;# 
   408   000FBD                     CCP1CON         equ	4029	;# 
   409   000FBE                     CCPR1           equ	4030	;# 
   410   000FBE                     CCPR1L          equ	4030	;# 
   411   000FBF                     CCPR1H          equ	4031	;# 
   412   000FC1                     ADCON1          equ	4033	;# 
   413   000FC2                     ADCON0          equ	4034	;# 
   414   000FC3                     ADRES           equ	4035	;# 
   415   000FC3                     ADRESL          equ	4035	;# 
   416   000FC4                     ADRESH          equ	4036	;# 
   417   000FC5                     SSPCON2         equ	4037	;# 
   418   000FC6                     SSPCON1         equ	4038	;# 
   419   000FC7                     SSPSTAT         equ	4039	;# 
   420   000FC8                     SSPADD          equ	4040	;# 
   421   000FC9                     SSPBUF          equ	4041	;# 
   422   000FCA                     T2CON           equ	4042	;# 
   423   000FCB                     PR2             equ	4043	;# 
   424   000FCB                     MEMCON          equ	4043	;# 
   425   000FCC                     TMR2            equ	4044	;# 
   426   000FCD                     T1CON           equ	4045	;# 
   427   000FCE                     TMR1            equ	4046	;# 
   428   000FCE                     TMR1L           equ	4046	;# 
   429   000FCF                     TMR1H           equ	4047	;# 
   430   000FD0                     RCON            equ	4048	;# 
   431   000FD1                     WDTCON          equ	4049	;# 
   432   000FD2                     LVDCON          equ	4050	;# 
   433   000FD3                     OSCCON          equ	4051	;# 
   434   000FD5                     T0CON           equ	4053	;# 
   435   000FD6                     TMR0            equ	4054	;# 
   436   000FD6                     TMR0L           equ	4054	;# 
   437   000FD7                     TMR0H           equ	4055	;# 
   438   000FD8                     STATUS          equ	4056	;# 
   439   000FD9                     FSR2            equ	4057	;# 
   440   000FD9                     FSR2L           equ	4057	;# 
   441   000FDA                     FSR2H           equ	4058	;# 
   442   000FDB                     PLUSW2          equ	4059	;# 
   443   000FDC                     PREINC2         equ	4060	;# 
   444   000FDD                     POSTDEC2        equ	4061	;# 
   445   000FDE                     POSTINC2        equ	4062	;# 
   446   000FDF                     INDF2           equ	4063	;# 
   447   000FE0                     BSR             equ	4064	;# 
   448   000FE1                     FSR1            equ	4065	;# 
   449   000FE1                     FSR1L           equ	4065	;# 
   450   000FE2                     FSR1H           equ	4066	;# 
   451   000FE3                     PLUSW1          equ	4067	;# 
   452   000FE4                     PREINC1         equ	4068	;# 
   453   000FE5                     POSTDEC1        equ	4069	;# 
   454   000FE6                     POSTINC1        equ	4070	;# 
   455   000FE7                     INDF1           equ	4071	;# 
   456   000FE8                     WREG            equ	4072	;# 
   457   000FE9                     FSR0            equ	4073	;# 
   458   000FE9                     FSR0L           equ	4073	;# 
   459   000FEA                     FSR0H           equ	4074	;# 
   460   000FEB                     PLUSW0          equ	4075	;# 
   461   000FEC                     PREINC0         equ	4076	;# 
   462   000FED                     POSTDEC0        equ	4077	;# 
   463   000FEE                     POSTINC0        equ	4078	;# 
   464   000FEF                     INDF0           equ	4079	;# 
   465   000FF0                     INTCON3         equ	4080	;# 
   466   000FF1                     INTCON2         equ	4081	;# 
   467   000FF2                     INTCON          equ	4082	;# 
   468   000FF2                     INTCON1         equ	4082	;# 
   469   000FF3                     PROD            equ	4083	;# 
   470   000FF3                     PRODL           equ	4083	;# 
   471   000FF4                     PRODH           equ	4084	;# 
   472   000FF5                     TABLAT          equ	4085	;# 
   473   000FF6                     TBLPTR          equ	4086	;# 
   474   000FF6                     TBLPTRL         equ	4086	;# 
   475   000FF7                     TBLPTRH         equ	4087	;# 
   476   000FF8                     TBLPTRU         equ	4088	;# 
   477   000FF9                     PCLAT           equ	4089	;# 
   478   000FF9                     PC              equ	4089	;# 
   479   000FF9                     PCL             equ	4089	;# 
   480   000FFA                     PCLATH          equ	4090	;# 
   481   000FFB                     PCLATU          equ	4091	;# 
   482   000FFC                     STKPTR          equ	4092	;# 
   483   000FFD                     TOS             equ	4093	;# 
   484   000FFD                     TOSL            equ	4093	;# 
   485   000FFE                     TOSH            equ	4094	;# 
   486   000FFF                     TOSU            equ	4095	;# 
   487   000F80                     PORTA           equ	3968	;# 
   488   000F81                     PORTB           equ	3969	;# 
   489   000F82                     PORTC           equ	3970	;# 
   490   000F83                     PORTD           equ	3971	;# 
   491   000F84                     PORTE           equ	3972	;# 
   492   000F89                     LATA            equ	3977	;# 
   493   000F8A                     LATB            equ	3978	;# 
   494   000F8B                     LATC            equ	3979	;# 
   495   000F8C                     LATD            equ	3980	;# 
   496   000F8D                     LATE            equ	3981	;# 
   497   000F92                     TRISA           equ	3986	;# 
   498   000F92                     DDRA            equ	3986	;# 
   499   000F93                     TRISB           equ	3987	;# 
   500   000F93                     DDRB            equ	3987	;# 
   501   000F94                     TRISC           equ	3988	;# 
   502   000F94                     DDRC            equ	3988	;# 
   503   000F95                     TRISD           equ	3989	;# 
   504   000F95                     DDRD            equ	3989	;# 
   505   000F96                     TRISE           equ	3990	;# 
   506   000F96                     DDRE            equ	3990	;# 
   507   000F9D                     PIE1            equ	3997	;# 
   508   000F9E                     PIR1            equ	3998	;# 
   509   000F9F                     IPR1            equ	3999	;# 
   510   000FA0                     PIE2            equ	4000	;# 
   511   000FA1                     PIR2            equ	4001	;# 
   512   000FA2                     IPR2            equ	4002	;# 
   513   000FA6                     EECON1          equ	4006	;# 
   514   000FA7                     EECON2          equ	4007	;# 
   515   000FA8                     EEDATA          equ	4008	;# 
   516   000FA9                     EEADR           equ	4009	;# 
   517   000FAB                     RCSTA           equ	4011	;# 
   518   000FAB                     RCSTA1          equ	4011	;# 
   519   000FAC                     TXSTA           equ	4012	;# 
   520   000FAC                     TXSTA1          equ	4012	;# 
   521   000FAD                     TXREG           equ	4013	;# 
   522   000FAD                     TXREG1          equ	4013	;# 
   523   000FAE                     RCREG           equ	4014	;# 
   524   000FAE                     RCREG1          equ	4014	;# 
   525   000FAF                     SPBRG           equ	4015	;# 
   526   000FAF                     SPBRG1          equ	4015	;# 
   527   000FB1                     T3CON           equ	4017	;# 
   528   000FB2                     TMR3            equ	4018	;# 
   529   000FB2                     TMR3L           equ	4018	;# 
   530   000FB3                     TMR3H           equ	4019	;# 
   531   000FBA                     CCP2CON         equ	4026	;# 
   532   000FBB                     CCPR2           equ	4027	;# 
   533   000FBB                     CCPR2L          equ	4027	;# 
   534   000FBC                     CCPR2H          equ	4028	;# 
   535   000FBD                     CCP1CON         equ	4029	;# 
   536   000FBE                     CCPR1           equ	4030	;# 
   537   000FBE                     CCPR1L          equ	4030	;# 
   538   000FBF                     CCPR1H          equ	4031	;# 
   539   000FC1                     ADCON1          equ	4033	;# 
   540   000FC2                     ADCON0          equ	4034	;# 
   541   000FC3                     ADRES           equ	4035	;# 
   542   000FC3                     ADRESL          equ	4035	;# 
   543   000FC4                     ADRESH          equ	4036	;# 
   544   000FC5                     SSPCON2         equ	4037	;# 
   545   000FC6                     SSPCON1         equ	4038	;# 
   546   000FC7                     SSPSTAT         equ	4039	;# 
   547   000FC8                     SSPADD          equ	4040	;# 
   548   000FC9                     SSPBUF          equ	4041	;# 
   549   000FCA                     T2CON           equ	4042	;# 
   550   000FCB                     PR2             equ	4043	;# 
   551   000FCB                     MEMCON          equ	4043	;# 
   552   000FCC                     TMR2            equ	4044	;# 
   553   000FCD                     T1CON           equ	4045	;# 
   554   000FCE                     TMR1            equ	4046	;# 
   555   000FCE                     TMR1L           equ	4046	;# 
   556   000FCF                     TMR1H           equ	4047	;# 
   557   000FD0                     RCON            equ	4048	;# 
   558   000FD1                     WDTCON          equ	4049	;# 
   559   000FD2                     LVDCON          equ	4050	;# 
   560   000FD3                     OSCCON          equ	4051	;# 
   561   000FD5                     T0CON           equ	4053	;# 
   562   000FD6                     TMR0            equ	4054	;# 
   563   000FD6                     TMR0L           equ	4054	;# 
   564   000FD7                     TMR0H           equ	4055	;# 
   565   000FD8                     STATUS          equ	4056	;# 
   566   000FD9                     FSR2            equ	4057	;# 
   567   000FD9                     FSR2L           equ	4057	;# 
   568   000FDA                     FSR2H           equ	4058	;# 
   569   000FDB                     PLUSW2          equ	4059	;# 
   570   000FDC                     PREINC2         equ	4060	;# 
   571   000FDD                     POSTDEC2        equ	4061	;# 
   572   000FDE                     POSTINC2        equ	4062	;# 
   573   000FDF                     INDF2           equ	4063	;# 
   574   000FE0                     BSR             equ	4064	;# 
   575   000FE1                     FSR1            equ	4065	;# 
   576   000FE1                     FSR1L           equ	4065	;# 
   577   000FE2                     FSR1H           equ	4066	;# 
   578   000FE3                     PLUSW1          equ	4067	;# 
   579   000FE4                     PREINC1         equ	4068	;# 
   580   000FE5                     POSTDEC1        equ	4069	;# 
   581   000FE6                     POSTINC1        equ	4070	;# 
   582   000FE7                     INDF1           equ	4071	;# 
   583   000FE8                     WREG            equ	4072	;# 
   584   000FE9                     FSR0            equ	4073	;# 
   585   000FE9                     FSR0L           equ	4073	;# 
   586   000FEA                     FSR0H           equ	4074	;# 
   587   000FEB                     PLUSW0          equ	4075	;# 
   588   000FEC                     PREINC0         equ	4076	;# 
   589   000FED                     POSTDEC0        equ	4077	;# 
   590   000FEE                     POSTINC0        equ	4078	;# 
   591   000FEF                     INDF0           equ	4079	;# 
   592   000FF0                     INTCON3         equ	4080	;# 
   593   000FF1                     INTCON2         equ	4081	;# 
   594   000FF2                     INTCON          equ	4082	;# 
   595   000FF2                     INTCON1         equ	4082	;# 
   596   000FF3                     PROD            equ	4083	;# 
   597   000FF3                     PRODL           equ	4083	;# 
   598   000FF4                     PRODH           equ	4084	;# 
   599   000FF5                     TABLAT          equ	4085	;# 
   600   000FF6                     TBLPTR          equ	4086	;# 
   601   000FF6                     TBLPTRL         equ	4086	;# 
   602   000FF7                     TBLPTRH         equ	4087	;# 
   603   000FF8                     TBLPTRU         equ	4088	;# 
   604   000FF9                     PCLAT           equ	4089	;# 
   605   000FF9                     PC              equ	4089	;# 
   606   000FF9                     PCL             equ	4089	;# 
   607   000FFA                     PCLATH          equ	4090	;# 
   608   000FFB                     PCLATU          equ	4091	;# 
   609   000FFC                     STKPTR          equ	4092	;# 
   610   000FFD                     TOS             equ	4093	;# 
   611   000FFD                     TOSL            equ	4093	;# 
   612   000FFE                     TOSH            equ	4094	;# 
   613   000FFF                     TOSU            equ	4095	;# 
   614   000F80                     PORTA           equ	3968	;# 
   615   000F81                     PORTB           equ	3969	;# 
   616   000F82                     PORTC           equ	3970	;# 
   617   000F83                     PORTD           equ	3971	;# 
   618   000F84                     PORTE           equ	3972	;# 
   619   000F89                     LATA            equ	3977	;# 
   620   000F8A                     LATB            equ	3978	;# 
   621   000F8B                     LATC            equ	3979	;# 
   622   000F8C                     LATD            equ	3980	;# 
   623   000F8D                     LATE            equ	3981	;# 
   624   000F92                     TRISA           equ	3986	;# 
   625   000F92                     DDRA            equ	3986	;# 
   626   000F93                     TRISB           equ	3987	;# 
   627   000F93                     DDRB            equ	3987	;# 
   628   000F94                     TRISC           equ	3988	;# 
   629   000F94                     DDRC            equ	3988	;# 
   630   000F95                     TRISD           equ	3989	;# 
   631   000F95                     DDRD            equ	3989	;# 
   632   000F96                     TRISE           equ	3990	;# 
   633   000F96                     DDRE            equ	3990	;# 
   634   000F9D                     PIE1            equ	3997	;# 
   635   000F9E                     PIR1            equ	3998	;# 
   636   000F9F                     IPR1            equ	3999	;# 
   637   000FA0                     PIE2            equ	4000	;# 
   638   000FA1                     PIR2            equ	4001	;# 
   639   000FA2                     IPR2            equ	4002	;# 
   640   000FA6                     EECON1          equ	4006	;# 
   641   000FA7                     EECON2          equ	4007	;# 
   642   000FA8                     EEDATA          equ	4008	;# 
   643   000FA9                     EEADR           equ	4009	;# 
   644   000FAB                     RCSTA           equ	4011	;# 
   645   000FAB                     RCSTA1          equ	4011	;# 
   646   000FAC                     TXSTA           equ	4012	;# 
   647   000FAC                     TXSTA1          equ	4012	;# 
   648   000FAD                     TXREG           equ	4013	;# 
   649   000FAD                     TXREG1          equ	4013	;# 
   650   000FAE                     RCREG           equ	4014	;# 
   651   000FAE                     RCREG1          equ	4014	;# 
   652   000FAF                     SPBRG           equ	4015	;# 
   653   000FAF                     SPBRG1          equ	4015	;# 
   654   000FB1                     T3CON           equ	4017	;# 
   655   000FB2                     TMR3            equ	4018	;# 
   656   000FB2                     TMR3L           equ	4018	;# 
   657   000FB3                     TMR3H           equ	4019	;# 
   658   000FBA                     CCP2CON         equ	4026	;# 
   659   000FBB                     CCPR2           equ	4027	;# 
   660   000FBB                     CCPR2L          equ	4027	;# 
   661   000FBC                     CCPR2H          equ	4028	;# 
   662   000FBD                     CCP1CON         equ	4029	;# 
   663   000FBE                     CCPR1           equ	4030	;# 
   664   000FBE                     CCPR1L          equ	4030	;# 
   665   000FBF                     CCPR1H          equ	4031	;# 
   666   000FC1                     ADCON1          equ	4033	;# 
   667   000FC2                     ADCON0          equ	4034	;# 
   668   000FC3                     ADRES           equ	4035	;# 
   669   000FC3                     ADRESL          equ	4035	;# 
   670   000FC4                     ADRESH          equ	4036	;# 
   671   000FC5                     SSPCON2         equ	4037	;# 
   672   000FC6                     SSPCON1         equ	4038	;# 
   673   000FC7                     SSPSTAT         equ	4039	;# 
   674   000FC8                     SSPADD          equ	4040	;# 
   675   000FC9                     SSPBUF          equ	4041	;# 
   676   000FCA                     T2CON           equ	4042	;# 
   677   000FCB                     PR2             equ	4043	;# 
   678   000FCB                     MEMCON          equ	4043	;# 
   679   000FCC                     TMR2            equ	4044	;# 
   680   000FCD                     T1CON           equ	4045	;# 
   681   000FCE                     TMR1            equ	4046	;# 
   682   000FCE                     TMR1L           equ	4046	;# 
   683   000FCF                     TMR1H           equ	4047	;# 
   684   000FD0                     RCON            equ	4048	;# 
   685   000FD1                     WDTCON          equ	4049	;# 
   686   000FD2                     LVDCON          equ	4050	;# 
   687   000FD3                     OSCCON          equ	4051	;# 
   688   000FD5                     T0CON           equ	4053	;# 
   689   000FD6                     TMR0            equ	4054	;# 
   690   000FD6                     TMR0L           equ	4054	;# 
   691   000FD7                     TMR0H           equ	4055	;# 
   692   000FD8                     STATUS          equ	4056	;# 
   693   000FD9                     FSR2            equ	4057	;# 
   694   000FD9                     FSR2L           equ	4057	;# 
   695   000FDA                     FSR2H           equ	4058	;# 
   696   000FDB                     PLUSW2          equ	4059	;# 
   697   000FDC                     PREINC2         equ	4060	;# 
   698   000FDD                     POSTDEC2        equ	4061	;# 
   699   000FDE                     POSTINC2        equ	4062	;# 
   700   000FDF                     INDF2           equ	4063	;# 
   701   000FE0                     BSR             equ	4064	;# 
   702   000FE1                     FSR1            equ	4065	;# 
   703   000FE1                     FSR1L           equ	4065	;# 
   704   000FE2                     FSR1H           equ	4066	;# 
   705   000FE3                     PLUSW1          equ	4067	;# 
   706   000FE4                     PREINC1         equ	4068	;# 
   707   000FE5                     POSTDEC1        equ	4069	;# 
   708   000FE6                     POSTINC1        equ	4070	;# 
   709   000FE7                     INDF1           equ	4071	;# 
   710   000FE8                     WREG            equ	4072	;# 
   711   000FE9                     FSR0            equ	4073	;# 
   712   000FE9                     FSR0L           equ	4073	;# 
   713   000FEA                     FSR0H           equ	4074	;# 
   714   000FEB                     PLUSW0          equ	4075	;# 
   715   000FEC                     PREINC0         equ	4076	;# 
   716   000FED                     POSTDEC0        equ	4077	;# 
   717   000FEE                     POSTINC0        equ	4078	;# 
   718   000FEF                     INDF0           equ	4079	;# 
   719   000FF0                     INTCON3         equ	4080	;# 
   720   000FF1                     INTCON2         equ	4081	;# 
   721   000FF2                     INTCON          equ	4082	;# 
   722   000FF2                     INTCON1         equ	4082	;# 
   723   000FF3                     PROD            equ	4083	;# 
   724   000FF3                     PRODL           equ	4083	;# 
   725   000FF4                     PRODH           equ	4084	;# 
   726   000FF5                     TABLAT          equ	4085	;# 
   727   000FF6                     TBLPTR          equ	4086	;# 
   728   000FF6                     TBLPTRL         equ	4086	;# 
   729   000FF7                     TBLPTRH         equ	4087	;# 
   730   000FF8                     TBLPTRU         equ	4088	;# 
   731   000FF9                     PCLAT           equ	4089	;# 
   732   000FF9                     PC              equ	4089	;# 
   733   000FF9                     PCL             equ	4089	;# 
   734   000FFA                     PCLATH          equ	4090	;# 
   735   000FFB                     PCLATU          equ	4091	;# 
   736   000FFC                     STKPTR          equ	4092	;# 
   737   000FFD                     TOS             equ	4093	;# 
   738   000FFD                     TOSL            equ	4093	;# 
   739   000FFE                     TOSH            equ	4094	;# 
   740   000FFF                     TOSU            equ	4095	;# 
   741   000F80                     PORTA           equ	3968	;# 
   742   000F81                     PORTB           equ	3969	;# 
   743   000F82                     PORTC           equ	3970	;# 
   744   000F83                     PORTD           equ	3971	;# 
   745   000F84                     PORTE           equ	3972	;# 
   746   000F89                     LATA            equ	3977	;# 
   747   000F8A                     LATB            equ	3978	;# 
   748   000F8B                     LATC            equ	3979	;# 
   749   000F8C                     LATD            equ	3980	;# 
   750   000F8D                     LATE            equ	3981	;# 
   751   000F92                     TRISA           equ	3986	;# 
   752   000F92                     DDRA            equ	3986	;# 
   753   000F93                     TRISB           equ	3987	;# 
   754   000F93                     DDRB            equ	3987	;# 
   755   000F94                     TRISC           equ	3988	;# 
   756   000F94                     DDRC            equ	3988	;# 
   757   000F95                     TRISD           equ	3989	;# 
   758   000F95                     DDRD            equ	3989	;# 
   759   000F96                     TRISE           equ	3990	;# 
   760   000F96                     DDRE            equ	3990	;# 
   761   000F9D                     PIE1            equ	3997	;# 
   762   000F9E                     PIR1            equ	3998	;# 
   763   000F9F                     IPR1            equ	3999	;# 
   764   000FA0                     PIE2            equ	4000	;# 
   765   000FA1                     PIR2            equ	4001	;# 
   766   000FA2                     IPR2            equ	4002	;# 
   767   000FA6                     EECON1          equ	4006	;# 
   768   000FA7                     EECON2          equ	4007	;# 
   769   000FA8                     EEDATA          equ	4008	;# 
   770   000FA9                     EEADR           equ	4009	;# 
   771   000FAB                     RCSTA           equ	4011	;# 
   772   000FAB                     RCSTA1          equ	4011	;# 
   773   000FAC                     TXSTA           equ	4012	;# 
   774   000FAC                     TXSTA1          equ	4012	;# 
   775   000FAD                     TXREG           equ	4013	;# 
   776   000FAD                     TXREG1          equ	4013	;# 
   777   000FAE                     RCREG           equ	4014	;# 
   778   000FAE                     RCREG1          equ	4014	;# 
   779   000FAF                     SPBRG           equ	4015	;# 
   780   000FAF                     SPBRG1          equ	4015	;# 
   781   000FB1                     T3CON           equ	4017	;# 
   782   000FB2                     TMR3            equ	4018	;# 
   783   000FB2                     TMR3L           equ	4018	;# 
   784   000FB3                     TMR3H           equ	4019	;# 
   785   000FBA                     CCP2CON         equ	4026	;# 
   786   000FBB                     CCPR2           equ	4027	;# 
   787   000FBB                     CCPR2L          equ	4027	;# 
   788   000FBC                     CCPR2H          equ	4028	;# 
   789   000FBD                     CCP1CON         equ	4029	;# 
   790   000FBE                     CCPR1           equ	4030	;# 
   791   000FBE                     CCPR1L          equ	4030	;# 
   792   000FBF                     CCPR1H          equ	4031	;# 
   793   000FC1                     ADCON1          equ	4033	;# 
   794   000FC2                     ADCON0          equ	4034	;# 
   795   000FC3                     ADRES           equ	4035	;# 
   796   000FC3                     ADRESL          equ	4035	;# 
   797   000FC4                     ADRESH          equ	4036	;# 
   798   000FC5                     SSPCON2         equ	4037	;# 
   799   000FC6                     SSPCON1         equ	4038	;# 
   800   000FC7                     SSPSTAT         equ	4039	;# 
   801   000FC8                     SSPADD          equ	4040	;# 
   802   000FC9                     SSPBUF          equ	4041	;# 
   803   000FCA                     T2CON           equ	4042	;# 
   804   000FCB                     PR2             equ	4043	;# 
   805   000FCB                     MEMCON          equ	4043	;# 
   806   000FCC                     TMR2            equ	4044	;# 
   807   000FCD                     T1CON           equ	4045	;# 
   808   000FCE                     TMR1            equ	4046	;# 
   809   000FCE                     TMR1L           equ	4046	;# 
   810   000FCF                     TMR1H           equ	4047	;# 
   811   000FD0                     RCON            equ	4048	;# 
   812   000FD1                     WDTCON          equ	4049	;# 
   813   000FD2                     LVDCON          equ	4050	;# 
   814   000FD3                     OSCCON          equ	4051	;# 
   815   000FD5                     T0CON           equ	4053	;# 
   816   000FD6                     TMR0            equ	4054	;# 
   817   000FD6                     TMR0L           equ	4054	;# 
   818   000FD7                     TMR0H           equ	4055	;# 
   819   000FD8                     STATUS          equ	4056	;# 
   820   000FD9                     FSR2            equ	4057	;# 
   821   000FD9                     FSR2L           equ	4057	;# 
   822   000FDA                     FSR2H           equ	4058	;# 
   823   000FDB                     PLUSW2          equ	4059	;# 
   824   000FDC                     PREINC2         equ	4060	;# 
   825   000FDD                     POSTDEC2        equ	4061	;# 
   826   000FDE                     POSTINC2        equ	4062	;# 
   827   000FDF                     INDF2           equ	4063	;# 
   828   000FE0                     BSR             equ	4064	;# 
   829   000FE1                     FSR1            equ	4065	;# 
   830   000FE1                     FSR1L           equ	4065	;# 
   831   000FE2                     FSR1H           equ	4066	;# 
   832   000FE3                     PLUSW1          equ	4067	;# 
   833   000FE4                     PREINC1         equ	4068	;# 
   834   000FE5                     POSTDEC1        equ	4069	;# 
   835   000FE6                     POSTINC1        equ	4070	;# 
   836   000FE7                     INDF1           equ	4071	;# 
   837   000FE8                     WREG            equ	4072	;# 
   838   000FE9                     FSR0            equ	4073	;# 
   839   000FE9                     FSR0L           equ	4073	;# 
   840   000FEA                     FSR0H           equ	4074	;# 
   841   000FEB                     PLUSW0          equ	4075	;# 
   842   000FEC                     PREINC0         equ	4076	;# 
   843   000FED                     POSTDEC0        equ	4077	;# 
   844   000FEE                     POSTINC0        equ	4078	;# 
   845   000FEF                     INDF0           equ	4079	;# 
   846   000FF0                     INTCON3         equ	4080	;# 
   847   000FF1                     INTCON2         equ	4081	;# 
   848   000FF2                     INTCON          equ	4082	;# 
   849   000FF2                     INTCON1         equ	4082	;# 
   850   000FF3                     PROD            equ	4083	;# 
   851   000FF3                     PRODL           equ	4083	;# 
   852   000FF4                     PRODH           equ	4084	;# 
   853   000FF5                     TABLAT          equ	4085	;# 
   854   000FF6                     TBLPTR          equ	4086	;# 
   855   000FF6                     TBLPTRL         equ	4086	;# 
   856   000FF7                     TBLPTRH         equ	4087	;# 
   857   000FF8                     TBLPTRU         equ	4088	;# 
   858   000FF9                     PCLAT           equ	4089	;# 
   859   000FF9                     PC              equ	4089	;# 
   860   000FF9                     PCL             equ	4089	;# 
   861   000FFA                     PCLATH          equ	4090	;# 
   862   000FFB                     PCLATU          equ	4091	;# 
   863   000FFC                     STKPTR          equ	4092	;# 
   864   000FFD                     TOS             equ	4093	;# 
   865   000FFD                     TOSL            equ	4093	;# 
   866   000FFE                     TOSH            equ	4094	;# 
   867   000FFF                     TOSU            equ	4095	;# 
   868   000F80                     PORTA           equ	3968	;# 
   869   000F81                     PORTB           equ	3969	;# 
   870   000F82                     PORTC           equ	3970	;# 
   871   000F83                     PORTD           equ	3971	;# 
   872   000F84                     PORTE           equ	3972	;# 
   873   000F89                     LATA            equ	3977	;# 
   874   000F8A                     LATB            equ	3978	;# 
   875   000F8B                     LATC            equ	3979	;# 
   876   000F8C                     LATD            equ	3980	;# 
   877   000F8D                     LATE            equ	3981	;# 
   878   000F92                     TRISA           equ	3986	;# 
   879   000F92                     DDRA            equ	3986	;# 
   880   000F93                     TRISB           equ	3987	;# 
   881   000F93                     DDRB            equ	3987	;# 
   882   000F94                     TRISC           equ	3988	;# 
   883   000F94                     DDRC            equ	3988	;# 
   884   000F95                     TRISD           equ	3989	;# 
   885   000F95                     DDRD            equ	3989	;# 
   886   000F96                     TRISE           equ	3990	;# 
   887   000F96                     DDRE            equ	3990	;# 
   888   000F9D                     PIE1            equ	3997	;# 
   889   000F9E                     PIR1            equ	3998	;# 
   890   000F9F                     IPR1            equ	3999	;# 
   891   000FA0                     PIE2            equ	4000	;# 
   892   000FA1                     PIR2            equ	4001	;# 
   893   000FA2                     IPR2            equ	4002	;# 
   894   000FA6                     EECON1          equ	4006	;# 
   895   000FA7                     EECON2          equ	4007	;# 
   896   000FA8                     EEDATA          equ	4008	;# 
   897   000FA9                     EEADR           equ	4009	;# 
   898   000FAB                     RCSTA           equ	4011	;# 
   899   000FAB                     RCSTA1          equ	4011	;# 
   900   000FAC                     TXSTA           equ	4012	;# 
   901   000FAC                     TXSTA1          equ	4012	;# 
   902   000FAD                     TXREG           equ	4013	;# 
   903   000FAD                     TXREG1          equ	4013	;# 
   904   000FAE                     RCREG           equ	4014	;# 
   905   000FAE                     RCREG1          equ	4014	;# 
   906   000FAF                     SPBRG           equ	4015	;# 
   907   000FAF                     SPBRG1          equ	4015	;# 
   908   000FB1                     T3CON           equ	4017	;# 
   909   000FB2                     TMR3            equ	4018	;# 
   910   000FB2                     TMR3L           equ	4018	;# 
   911   000FB3                     TMR3H           equ	4019	;# 
   912   000FBA                     CCP2CON         equ	4026	;# 
   913   000FBB                     CCPR2           equ	4027	;# 
   914   000FBB                     CCPR2L          equ	4027	;# 
   915   000FBC                     CCPR2H          equ	4028	;# 
   916   000FBD                     CCP1CON         equ	4029	;# 
   917   000FBE                     CCPR1           equ	4030	;# 
   918   000FBE                     CCPR1L          equ	4030	;# 
   919   000FBF                     CCPR1H          equ	4031	;# 
   920   000FC1                     ADCON1          equ	4033	;# 
   921   000FC2                     ADCON0          equ	4034	;# 
   922   000FC3                     ADRES           equ	4035	;# 
   923   000FC3                     ADRESL          equ	4035	;# 
   924   000FC4                     ADRESH          equ	4036	;# 
   925   000FC5                     SSPCON2         equ	4037	;# 
   926   000FC6                     SSPCON1         equ	4038	;# 
   927   000FC7                     SSPSTAT         equ	4039	;# 
   928   000FC8                     SSPADD          equ	4040	;# 
   929   000FC9                     SSPBUF          equ	4041	;# 
   930   000FCA                     T2CON           equ	4042	;# 
   931   000FCB                     PR2             equ	4043	;# 
   932   000FCB                     MEMCON          equ	4043	;# 
   933   000FCC                     TMR2            equ	4044	;# 
   934   000FCD                     T1CON           equ	4045	;# 
   935   000FCE                     TMR1            equ	4046	;# 
   936   000FCE                     TMR1L           equ	4046	;# 
   937   000FCF                     TMR1H           equ	4047	;# 
   938   000FD0                     RCON            equ	4048	;# 
   939   000FD1                     WDTCON          equ	4049	;# 
   940   000FD2                     LVDCON          equ	4050	;# 
   941   000FD3                     OSCCON          equ	4051	;# 
   942   000FD5                     T0CON           equ	4053	;# 
   943   000FD6                     TMR0            equ	4054	;# 
   944   000FD6                     TMR0L           equ	4054	;# 
   945   000FD7                     TMR0H           equ	4055	;# 
   946   000FD8                     STATUS          equ	4056	;# 
   947   000FD9                     FSR2            equ	4057	;# 
   948   000FD9                     FSR2L           equ	4057	;# 
   949   000FDA                     FSR2H           equ	4058	;# 
   950   000FDB                     PLUSW2          equ	4059	;# 
   951   000FDC                     PREINC2         equ	4060	;# 
   952   000FDD                     POSTDEC2        equ	4061	;# 
   953   000FDE                     POSTINC2        equ	4062	;# 
   954   000FDF                     INDF2           equ	4063	;# 
   955   000FE0                     BSR             equ	4064	;# 
   956   000FE1                     FSR1            equ	4065	;# 
   957   000FE1                     FSR1L           equ	4065	;# 
   958   000FE2                     FSR1H           equ	4066	;# 
   959   000FE3                     PLUSW1          equ	4067	;# 
   960   000FE4                     PREINC1         equ	4068	;# 
   961   000FE5                     POSTDEC1        equ	4069	;# 
   962   000FE6                     POSTINC1        equ	4070	;# 
   963   000FE7                     INDF1           equ	4071	;# 
   964   000FE8                     WREG            equ	4072	;# 
   965   000FE9                     FSR0            equ	4073	;# 
   966   000FE9                     FSR0L           equ	4073	;# 
   967   000FEA                     FSR0H           equ	4074	;# 
   968   000FEB                     PLUSW0          equ	4075	;# 
   969   000FEC                     PREINC0         equ	4076	;# 
   970   000FED                     POSTDEC0        equ	4077	;# 
   971   000FEE                     POSTINC0        equ	4078	;# 
   972   000FEF                     INDF0           equ	4079	;# 
   973   000FF0                     INTCON3         equ	4080	;# 
   974   000FF1                     INTCON2         equ	4081	;# 
   975   000FF2                     INTCON          equ	4082	;# 
   976   000FF2                     INTCON1         equ	4082	;# 
   977   000FF3                     PROD            equ	4083	;# 
   978   000FF3                     PRODL           equ	4083	;# 
   979   000FF4                     PRODH           equ	4084	;# 
   980   000FF5                     TABLAT          equ	4085	;# 
   981   000FF6                     TBLPTR          equ	4086	;# 
   982   000FF6                     TBLPTRL         equ	4086	;# 
   983   000FF7                     TBLPTRH         equ	4087	;# 
   984   000FF8                     TBLPTRU         equ	4088	;# 
   985   000FF9                     PCLAT           equ	4089	;# 
   986   000FF9                     PC              equ	4089	;# 
   987   000FF9                     PCL             equ	4089	;# 
   988   000FFA                     PCLATH          equ	4090	;# 
   989   000FFB                     PCLATU          equ	4091	;# 
   990   000FFC                     STKPTR          equ	4092	;# 
   991   000FFD                     TOS             equ	4093	;# 
   992   000FFD                     TOSL            equ	4093	;# 
   993   000FFE                     TOSH            equ	4094	;# 
   994   000FFF                     TOSU            equ	4095	;# 
   995   000F80                     PORTA           equ	3968	;# 
   996   000F81                     PORTB           equ	3969	;# 
   997   000F82                     PORTC           equ	3970	;# 
   998   000F83                     PORTD           equ	3971	;# 
   999   000F84                     PORTE           equ	3972	;# 
  1000   000F89                     LATA            equ	3977	;# 
  1001   000F8A                     LATB            equ	3978	;# 
  1002   000F8B                     LATC            equ	3979	;# 
  1003   000F8C                     LATD            equ	3980	;# 
  1004   000F8D                     LATE            equ	3981	;# 
  1005   000F92                     TRISA           equ	3986	;# 
  1006   000F92                     DDRA            equ	3986	;# 
  1007   000F93                     TRISB           equ	3987	;# 
  1008   000F93                     DDRB            equ	3987	;# 
  1009   000F94                     TRISC           equ	3988	;# 
  1010   000F94                     DDRC            equ	3988	;# 
  1011   000F95                     TRISD           equ	3989	;# 
  1012   000F95                     DDRD            equ	3989	;# 
  1013   000F96                     TRISE           equ	3990	;# 
  1014   000F96                     DDRE            equ	3990	;# 
  1015   000F9D                     PIE1            equ	3997	;# 
  1016   000F9E                     PIR1            equ	3998	;# 
  1017   000F9F                     IPR1            equ	3999	;# 
  1018   000FA0                     PIE2            equ	4000	;# 
  1019   000FA1                     PIR2            equ	4001	;# 
  1020   000FA2                     IPR2            equ	4002	;# 
  1021   000FA6                     EECON1          equ	4006	;# 
  1022   000FA7                     EECON2          equ	4007	;# 
  1023   000FA8                     EEDATA          equ	4008	;# 
  1024   000FA9                     EEADR           equ	4009	;# 
  1025   000FAB                     RCSTA           equ	4011	;# 
  1026   000FAB                     RCSTA1          equ	4011	;# 
  1027   000FAC                     TXSTA           equ	4012	;# 
  1028   000FAC                     TXSTA1          equ	4012	;# 
  1029   000FAD                     TXREG           equ	4013	;# 
  1030   000FAD                     TXREG1          equ	4013	;# 
  1031   000FAE                     RCREG           equ	4014	;# 
  1032   000FAE                     RCREG1          equ	4014	;# 
  1033   000FAF                     SPBRG           equ	4015	;# 
  1034   000FAF                     SPBRG1          equ	4015	;# 
  1035   000FB1                     T3CON           equ	4017	;# 
  1036   000FB2                     TMR3            equ	4018	;# 
  1037   000FB2                     TMR3L           equ	4018	;# 
  1038   000FB3                     TMR3H           equ	4019	;# 
  1039   000FBA                     CCP2CON         equ	4026	;# 
  1040   000FBB                     CCPR2           equ	4027	;# 
  1041   000FBB                     CCPR2L          equ	4027	;# 
  1042   000FBC                     CCPR2H          equ	4028	;# 
  1043   000FBD                     CCP1CON         equ	4029	;# 
  1044   000FBE                     CCPR1           equ	4030	;# 
  1045   000FBE                     CCPR1L          equ	4030	;# 
  1046   000FBF                     CCPR1H          equ	4031	;# 
  1047   000FC1                     ADCON1          equ	4033	;# 
  1048   000FC2                     ADCON0          equ	4034	;# 
  1049   000FC3                     ADRES           equ	4035	;# 
  1050   000FC3                     ADRESL          equ	4035	;# 
  1051   000FC4                     ADRESH          equ	4036	;# 
  1052   000FC5                     SSPCON2         equ	4037	;# 
  1053   000FC6                     SSPCON1         equ	4038	;# 
  1054   000FC7                     SSPSTAT         equ	4039	;# 
  1055   000FC8                     SSPADD          equ	4040	;# 
  1056   000FC9                     SSPBUF          equ	4041	;# 
  1057   000FCA                     T2CON           equ	4042	;# 
  1058   000FCB                     PR2             equ	4043	;# 
  1059   000FCB                     MEMCON          equ	4043	;# 
  1060   000FCC                     TMR2            equ	4044	;# 
  1061   000FCD                     T1CON           equ	4045	;# 
  1062   000FCE                     TMR1            equ	4046	;# 
  1063   000FCE                     TMR1L           equ	4046	;# 
  1064   000FCF                     TMR1H           equ	4047	;# 
  1065   000FD0                     RCON            equ	4048	;# 
  1066   000FD1                     WDTCON          equ	4049	;# 
  1067   000FD2                     LVDCON          equ	4050	;# 
  1068   000FD3                     OSCCON          equ	4051	;# 
  1069   000FD5                     T0CON           equ	4053	;# 
  1070   000FD6                     TMR0            equ	4054	;# 
  1071   000FD6                     TMR0L           equ	4054	;# 
  1072   000FD7                     TMR0H           equ	4055	;# 
  1073   000FD8                     STATUS          equ	4056	;# 
  1074   000FD9                     FSR2            equ	4057	;# 
  1075   000FD9                     FSR2L           equ	4057	;# 
  1076   000FDA                     FSR2H           equ	4058	;# 
  1077   000FDB                     PLUSW2          equ	4059	;# 
  1078   000FDC                     PREINC2         equ	4060	;# 
  1079   000FDD                     POSTDEC2        equ	4061	;# 
  1080   000FDE                     POSTINC2        equ	4062	;# 
  1081   000FDF                     INDF2           equ	4063	;# 
  1082   000FE0                     BSR             equ	4064	;# 
  1083   000FE1                     FSR1            equ	4065	;# 
  1084   000FE1                     FSR1L           equ	4065	;# 
  1085   000FE2                     FSR1H           equ	4066	;# 
  1086   000FE3                     PLUSW1          equ	4067	;# 
  1087   000FE4                     PREINC1         equ	4068	;# 
  1088   000FE5                     POSTDEC1        equ	4069	;# 
  1089   000FE6                     POSTINC1        equ	4070	;# 
  1090   000FE7                     INDF1           equ	4071	;# 
  1091   000FE8                     WREG            equ	4072	;# 
  1092   000FE9                     FSR0            equ	4073	;# 
  1093   000FE9                     FSR0L           equ	4073	;# 
  1094   000FEA                     FSR0H           equ	4074	;# 
  1095   000FEB                     PLUSW0          equ	4075	;# 
  1096   000FEC                     PREINC0         equ	4076	;# 
  1097   000FED                     POSTDEC0        equ	4077	;# 
  1098   000FEE                     POSTINC0        equ	4078	;# 
  1099   000FEF                     INDF0           equ	4079	;# 
  1100   000FF0                     INTCON3         equ	4080	;# 
  1101   000FF1                     INTCON2         equ	4081	;# 
  1102   000FF2                     INTCON          equ	4082	;# 
  1103   000FF2                     INTCON1         equ	4082	;# 
  1104   000FF3                     PROD            equ	4083	;# 
  1105   000FF3                     PRODL           equ	4083	;# 
  1106   000FF4                     PRODH           equ	4084	;# 
  1107   000FF5                     TABLAT          equ	4085	;# 
  1108   000FF6                     TBLPTR          equ	4086	;# 
  1109   000FF6                     TBLPTRL         equ	4086	;# 
  1110   000FF7                     TBLPTRH         equ	4087	;# 
  1111   000FF8                     TBLPTRU         equ	4088	;# 
  1112   000FF9                     PCLAT           equ	4089	;# 
  1113   000FF9                     PC              equ	4089	;# 
  1114   000FF9                     PCL             equ	4089	;# 
  1115   000FFA                     PCLATH          equ	4090	;# 
  1116   000FFB                     PCLATU          equ	4091	;# 
  1117   000FFC                     STKPTR          equ	4092	;# 
  1118   000FFD                     TOS             equ	4093	;# 
  1119   000FFD                     TOSL            equ	4093	;# 
  1120   000FFE                     TOSH            equ	4094	;# 
  1121   000FFF                     TOSU            equ	4095	;# 
  1122   000F80                     PORTA           equ	3968	;# 
  1123   000F81                     PORTB           equ	3969	;# 
  1124   000F82                     PORTC           equ	3970	;# 
  1125   000F83                     PORTD           equ	3971	;# 
  1126   000F84                     PORTE           equ	3972	;# 
  1127   000F89                     LATA            equ	3977	;# 
  1128   000F8A                     LATB            equ	3978	;# 
  1129   000F8B                     LATC            equ	3979	;# 
  1130   000F8C                     LATD            equ	3980	;# 
  1131   000F8D                     LATE            equ	3981	;# 
  1132   000F92                     TRISA           equ	3986	;# 
  1133   000F92                     DDRA            equ	3986	;# 
  1134   000F93                     TRISB           equ	3987	;# 
  1135   000F93                     DDRB            equ	3987	;# 
  1136   000F94                     TRISC           equ	3988	;# 
  1137   000F94                     DDRC            equ	3988	;# 
  1138   000F95                     TRISD           equ	3989	;# 
  1139   000F95                     DDRD            equ	3989	;# 
  1140   000F96                     TRISE           equ	3990	;# 
  1141   000F96                     DDRE            equ	3990	;# 
  1142   000F9D                     PIE1            equ	3997	;# 
  1143   000F9E                     PIR1            equ	3998	;# 
  1144   000F9F                     IPR1            equ	3999	;# 
  1145   000FA0                     PIE2            equ	4000	;# 
  1146   000FA1                     PIR2            equ	4001	;# 
  1147   000FA2                     IPR2            equ	4002	;# 
  1148   000FA6                     EECON1          equ	4006	;# 
  1149   000FA7                     EECON2          equ	4007	;# 
  1150   000FA8                     EEDATA          equ	4008	;# 
  1151   000FA9                     EEADR           equ	4009	;# 
  1152   000FAB                     RCSTA           equ	4011	;# 
  1153   000FAB                     RCSTA1          equ	4011	;# 
  1154   000FAC                     TXSTA           equ	4012	;# 
  1155   000FAC                     TXSTA1          equ	4012	;# 
  1156   000FAD                     TXREG           equ	4013	;# 
  1157   000FAD                     TXREG1          equ	4013	;# 
  1158   000FAE                     RCREG           equ	4014	;# 
  1159   000FAE                     RCREG1          equ	4014	;# 
  1160   000FAF                     SPBRG           equ	4015	;# 
  1161   000FAF                     SPBRG1          equ	4015	;# 
  1162   000FB1                     T3CON           equ	4017	;# 
  1163   000FB2                     TMR3            equ	4018	;# 
  1164   000FB2                     TMR3L           equ	4018	;# 
  1165   000FB3                     TMR3H           equ	4019	;# 
  1166   000FBA                     CCP2CON         equ	4026	;# 
  1167   000FBB                     CCPR2           equ	4027	;# 
  1168   000FBB                     CCPR2L          equ	4027	;# 
  1169   000FBC                     CCPR2H          equ	4028	;# 
  1170   000FBD                     CCP1CON         equ	4029	;# 
  1171   000FBE                     CCPR1           equ	4030	;# 
  1172   000FBE                     CCPR1L          equ	4030	;# 
  1173   000FBF                     CCPR1H          equ	4031	;# 
  1174   000FC1                     ADCON1          equ	4033	;# 
  1175   000FC2                     ADCON0          equ	4034	;# 
  1176   000FC3                     ADRES           equ	4035	;# 
  1177   000FC3                     ADRESL          equ	4035	;# 
  1178   000FC4                     ADRESH          equ	4036	;# 
  1179   000FC5                     SSPCON2         equ	4037	;# 
  1180   000FC6                     SSPCON1         equ	4038	;# 
  1181   000FC7                     SSPSTAT         equ	4039	;# 
  1182   000FC8                     SSPADD          equ	4040	;# 
  1183   000FC9                     SSPBUF          equ	4041	;# 
  1184   000FCA                     T2CON           equ	4042	;# 
  1185   000FCB                     PR2             equ	4043	;# 
  1186   000FCB                     MEMCON          equ	4043	;# 
  1187   000FCC                     TMR2            equ	4044	;# 
  1188   000FCD                     T1CON           equ	4045	;# 
  1189   000FCE                     TMR1            equ	4046	;# 
  1190   000FCE                     TMR1L           equ	4046	;# 
  1191   000FCF                     TMR1H           equ	4047	;# 
  1192   000FD0                     RCON            equ	4048	;# 
  1193   000FD1                     WDTCON          equ	4049	;# 
  1194   000FD2                     LVDCON          equ	4050	;# 
  1195   000FD3                     OSCCON          equ	4051	;# 
  1196   000FD5                     T0CON           equ	4053	;# 
  1197   000FD6                     TMR0            equ	4054	;# 
  1198   000FD6                     TMR0L           equ	4054	;# 
  1199   000FD7                     TMR0H           equ	4055	;# 
  1200   000FD8                     STATUS          equ	4056	;# 
  1201   000FD9                     FSR2            equ	4057	;# 
  1202   000FD9                     FSR2L           equ	4057	;# 
  1203   000FDA                     FSR2H           equ	4058	;# 
  1204   000FDB                     PLUSW2          equ	4059	;# 
  1205   000FDC                     PREINC2         equ	4060	;# 
  1206   000FDD                     POSTDEC2        equ	4061	;# 
  1207   000FDE                     POSTINC2        equ	4062	;# 
  1208   000FDF                     INDF2           equ	4063	;# 
  1209   000FE0                     BSR             equ	4064	;# 
  1210   000FE1                     FSR1            equ	4065	;# 
  1211   000FE1                     FSR1L           equ	4065	;# 
  1212   000FE2                     FSR1H           equ	4066	;# 
  1213   000FE3                     PLUSW1          equ	4067	;# 
  1214   000FE4                     PREINC1         equ	4068	;# 
  1215   000FE5                     POSTDEC1        equ	4069	;# 
  1216   000FE6                     POSTINC1        equ	4070	;# 
  1217   000FE7                     INDF1           equ	4071	;# 
  1218   000FE8                     WREG            equ	4072	;# 
  1219   000FE9                     FSR0            equ	4073	;# 
  1220   000FE9                     FSR0L           equ	4073	;# 
  1221   000FEA                     FSR0H           equ	4074	;# 
  1222   000FEB                     PLUSW0          equ	4075	;# 
  1223   000FEC                     PREINC0         equ	4076	;# 
  1224   000FED                     POSTDEC0        equ	4077	;# 
  1225   000FEE                     POSTINC0        equ	4078	;# 
  1226   000FEF                     INDF0           equ	4079	;# 
  1227   000FF0                     INTCON3         equ	4080	;# 
  1228   000FF1                     INTCON2         equ	4081	;# 
  1229   000FF2                     INTCON          equ	4082	;# 
  1230   000FF2                     INTCON1         equ	4082	;# 
  1231   000FF3                     PROD            equ	4083	;# 
  1232   000FF3                     PRODL           equ	4083	;# 
  1233   000FF4                     PRODH           equ	4084	;# 
  1234   000FF5                     TABLAT          equ	4085	;# 
  1235   000FF6                     TBLPTR          equ	4086	;# 
  1236   000FF6                     TBLPTRL         equ	4086	;# 
  1237   000FF7                     TBLPTRH         equ	4087	;# 
  1238   000FF8                     TBLPTRU         equ	4088	;# 
  1239   000FF9                     PCLAT           equ	4089	;# 
  1240   000FF9                     PC              equ	4089	;# 
  1241   000FF9                     PCL             equ	4089	;# 
  1242   000FFA                     PCLATH          equ	4090	;# 
  1243   000FFB                     PCLATU          equ	4091	;# 
  1244   000FFC                     STKPTR          equ	4092	;# 
  1245   000FFD                     TOS             equ	4093	;# 
  1246   000FFD                     TOSL            equ	4093	;# 
  1247   000FFE                     TOSH            equ	4094	;# 
  1248   000FFF                     TOSU            equ	4095	;# 
  1249   000F80                     PORTA           equ	3968	;# 
  1250   000F81                     PORTB           equ	3969	;# 
  1251   000F82                     PORTC           equ	3970	;# 
  1252   000F83                     PORTD           equ	3971	;# 
  1253   000F84                     PORTE           equ	3972	;# 
  1254   000F89                     LATA            equ	3977	;# 
  1255   000F8A                     LATB            equ	3978	;# 
  1256   000F8B                     LATC            equ	3979	;# 
  1257   000F8C                     LATD            equ	3980	;# 
  1258   000F8D                     LATE            equ	3981	;# 
  1259   000F92                     TRISA           equ	3986	;# 
  1260   000F92                     DDRA            equ	3986	;# 
  1261   000F93                     TRISB           equ	3987	;# 
  1262   000F93                     DDRB            equ	3987	;# 
  1263   000F94                     TRISC           equ	3988	;# 
  1264   000F94                     DDRC            equ	3988	;# 
  1265   000F95                     TRISD           equ	3989	;# 
  1266   000F95                     DDRD            equ	3989	;# 
  1267   000F96                     TRISE           equ	3990	;# 
  1268   000F96                     DDRE            equ	3990	;# 
  1269   000F9D                     PIE1            equ	3997	;# 
  1270   000F9E                     PIR1            equ	3998	;# 
  1271   000F9F                     IPR1            equ	3999	;# 
  1272   000FA0                     PIE2            equ	4000	;# 
  1273   000FA1                     PIR2            equ	4001	;# 
  1274   000FA2                     IPR2            equ	4002	;# 
  1275   000FA6                     EECON1          equ	4006	;# 
  1276   000FA7                     EECON2          equ	4007	;# 
  1277   000FA8                     EEDATA          equ	4008	;# 
  1278   000FA9                     EEADR           equ	4009	;# 
  1279   000FAB                     RCSTA           equ	4011	;# 
  1280   000FAB                     RCSTA1          equ	4011	;# 
  1281   000FAC                     TXSTA           equ	4012	;# 
  1282   000FAC                     TXSTA1          equ	4012	;# 
  1283   000FAD                     TXREG           equ	4013	;# 
  1284   000FAD                     TXREG1          equ	4013	;# 
  1285   000FAE                     RCREG           equ	4014	;# 
  1286   000FAE                     RCREG1          equ	4014	;# 
  1287   000FAF                     SPBRG           equ	4015	;# 
  1288   000FAF                     SPBRG1          equ	4015	;# 
  1289   000FB1                     T3CON           equ	4017	;# 
  1290   000FB2                     TMR3            equ	4018	;# 
  1291   000FB2                     TMR3L           equ	4018	;# 
  1292   000FB3                     TMR3H           equ	4019	;# 
  1293   000FBA                     CCP2CON         equ	4026	;# 
  1294   000FBB                     CCPR2           equ	4027	;# 
  1295   000FBB                     CCPR2L          equ	4027	;# 
  1296   000FBC                     CCPR2H          equ	4028	;# 
  1297   000FBD                     CCP1CON         equ	4029	;# 
  1298   000FBE                     CCPR1           equ	4030	;# 
  1299   000FBE                     CCPR1L          equ	4030	;# 
  1300   000FBF                     CCPR1H          equ	4031	;# 
  1301   000FC1                     ADCON1          equ	4033	;# 
  1302   000FC2                     ADCON0          equ	4034	;# 
  1303   000FC3                     ADRES           equ	4035	;# 
  1304   000FC3                     ADRESL          equ	4035	;# 
  1305   000FC4                     ADRESH          equ	4036	;# 
  1306   000FC5                     SSPCON2         equ	4037	;# 
  1307   000FC6                     SSPCON1         equ	4038	;# 
  1308   000FC7                     SSPSTAT         equ	4039	;# 
  1309   000FC8                     SSPADD          equ	4040	;# 
  1310   000FC9                     SSPBUF          equ	4041	;# 
  1311   000FCA                     T2CON           equ	4042	;# 
  1312   000FCB                     PR2             equ	4043	;# 
  1313   000FCB                     MEMCON          equ	4043	;# 
  1314   000FCC                     TMR2            equ	4044	;# 
  1315   000FCD                     T1CON           equ	4045	;# 
  1316   000FCE                     TMR1            equ	4046	;# 
  1317   000FCE                     TMR1L           equ	4046	;# 
  1318   000FCF                     TMR1H           equ	4047	;# 
  1319   000FD0                     RCON            equ	4048	;# 
  1320   000FD1                     WDTCON          equ	4049	;# 
  1321   000FD2                     LVDCON          equ	4050	;# 
  1322   000FD3                     OSCCON          equ	4051	;# 
  1323   000FD5                     T0CON           equ	4053	;# 
  1324   000FD6                     TMR0            equ	4054	;# 
  1325   000FD6                     TMR0L           equ	4054	;# 
  1326   000FD7                     TMR0H           equ	4055	;# 
  1327   000FD8                     STATUS          equ	4056	;# 
  1328   000FD9                     FSR2            equ	4057	;# 
  1329   000FD9                     FSR2L           equ	4057	;# 
  1330   000FDA                     FSR2H           equ	4058	;# 
  1331   000FDB                     PLUSW2          equ	4059	;# 
  1332   000FDC                     PREINC2         equ	4060	;# 
  1333   000FDD                     POSTDEC2        equ	4061	;# 
  1334   000FDE                     POSTINC2        equ	4062	;# 
  1335   000FDF                     INDF2           equ	4063	;# 
  1336   000FE0                     BSR             equ	4064	;# 
  1337   000FE1                     FSR1            equ	4065	;# 
  1338   000FE1                     FSR1L           equ	4065	;# 
  1339   000FE2                     FSR1H           equ	4066	;# 
  1340   000FE3                     PLUSW1          equ	4067	;# 
  1341   000FE4                     PREINC1         equ	4068	;# 
  1342   000FE5                     POSTDEC1        equ	4069	;# 
  1343   000FE6                     POSTINC1        equ	4070	;# 
  1344   000FE7                     INDF1           equ	4071	;# 
  1345   000FE8                     WREG            equ	4072	;# 
  1346   000FE9                     FSR0            equ	4073	;# 
  1347   000FE9                     FSR0L           equ	4073	;# 
  1348   000FEA                     FSR0H           equ	4074	;# 
  1349   000FEB                     PLUSW0          equ	4075	;# 
  1350   000FEC                     PREINC0         equ	4076	;# 
  1351   000FED                     POSTDEC0        equ	4077	;# 
  1352   000FEE                     POSTINC0        equ	4078	;# 
  1353   000FEF                     INDF0           equ	4079	;# 
  1354   000FF0                     INTCON3         equ	4080	;# 
  1355   000FF1                     INTCON2         equ	4081	;# 
  1356   000FF2                     INTCON          equ	4082	;# 
  1357   000FF2                     INTCON1         equ	4082	;# 
  1358   000FF3                     PROD            equ	4083	;# 
  1359   000FF3                     PRODL           equ	4083	;# 
  1360   000FF4                     PRODH           equ	4084	;# 
  1361   000FF5                     TABLAT          equ	4085	;# 
  1362   000FF6                     TBLPTR          equ	4086	;# 
  1363   000FF6                     TBLPTRL         equ	4086	;# 
  1364   000FF7                     TBLPTRH         equ	4087	;# 
  1365   000FF8                     TBLPTRU         equ	4088	;# 
  1366   000FF9                     PCLAT           equ	4089	;# 
  1367   000FF9                     PC              equ	4089	;# 
  1368   000FF9                     PCL             equ	4089	;# 
  1369   000FFA                     PCLATH          equ	4090	;# 
  1370   000FFB                     PCLATU          equ	4091	;# 
  1371   000FFC                     STKPTR          equ	4092	;# 
  1372   000FFD                     TOS             equ	4093	;# 
  1373   000FFD                     TOSL            equ	4093	;# 
  1374   000FFE                     TOSH            equ	4094	;# 
  1375   000FFF                     TOSU            equ	4095	;# 
  1376                           
  1377                           	psect	idataCOMRAM
  1378   000F50                     __pidataCOMRAM:
  1379                           	callstack 0
  1380                           
  1381                           ;initializer for __PORT_registers
  1382   000F50  80                 	db	128
  1383   000F51  0F                 	db	15
  1384   000F52  81                 	db	129
  1385   000F53  0F                 	db	15
  1386   000F54  82                 	db	130
  1387   000F55  0F                 	db	15
  1388   000F56  83                 	db	131
  1389   000F57  0F                 	db	15
  1390   000F58  84                 	db	132
  1391   000F59  0F                 	db	15
  1392                           
  1393                           ;initializer for __LAT_registers
  1394   000F5A  89                 	db	137
  1395   000F5B  0F                 	db	15
  1396   000F5C  8A                 	db	138
  1397   000F5D  0F                 	db	15
  1398   000F5E  8B                 	db	139
  1399   000F5F  0F                 	db	15
  1400   000F60  8C                 	db	140
  1401   000F61  0F                 	db	15
  1402   000F62  8D                 	db	141
  1403   000F63  0F                 	db	15
  1404                           
  1405                           ;initializer for __TRIS_registers
  1406   000F64  92                 	db	146
  1407   000F65  0F                 	db	15
  1408   000F66  93                 	db	147
  1409   000F67  0F                 	db	15
  1410   000F68  94                 	db	148
  1411   000F69  0F                 	db	15
  1412   000F6A  95                 	db	149
  1413   000F6B  0F                 	db	15
  1414   000F6C  96                 	db	150
  1415   000F6D  0F                 	db	15
  1416                           
  1417                           ;initializer for _keypad1
  1418   000F6E  21                 	db	33
  1419   000F6F  19                 	db	25
  1420   000F70  11                 	db	17
  1421   000F71  09                 	db	9
  1422   000F72  2B                 	db	43
  1423   000F73  23                 	db	35
  1424   000F74  1B                 	db	27
  1425   000F75  13                 	db	19
  1426   000F76  00                 	db	0
  1427                           
  1428                           ;initializer for _segment1
  1429   000F77  00                 	db	0
  1430   000F78  08                 	db	8
  1431   000F79  10                 	db	16
  1432   000F7A  18                 	db	24
  1433   000F7B  00                 	db	0
  1434   000F7C  01                 	db	1
  1435                           
  1436                           ;initializer for _led_arr
  1437   000F7D  00                 	db	0
  1438   000F7E  08                 	db	8
  1439   000F7F  10                 	db	16
  1440   000F80  18                 	db	24
  1441                           
  1442                           ;initializer for _btn2
  1443   000F81  4C                 	db	76
  1444   000F82  01                 	db	1
  1445   000F83  00                 	db	0
  1446                           
  1447                           ;initializer for _btn1
  1448   000F84  E0                 	db	224
  1449   000F85  01                 	db	1
  1450   000F86  01                 	db	1
  1451                           
  1452                           ;initializer for _motor2
  1453   000F87  7C                 	db	124
  1454   000F88  4A                 	db	74
  1455                           
  1456                           ;initializer for _motor1
  1457   000F89  08                 	db	8
  1458   000F8A  10                 	db	16
  1459                           
  1460                           ;initializer for _i
  1461   000F8B  5A                 	db	90
  1462                           
  1463                           ;initializer for _seg_units_en
  1464   000F8C  8B                 	db	139
  1465                           
  1466                           ;initializer for _testing
  1467   000F8D  8B                 	db	139
  1468                           
  1469                           ;initializer for _LED2
  1470   000F8E  08                 	db	8
  1471                           
  1472                           ;initializer for _LED1
  1473   000F8F  0B                 	db	11
  1474                           
  1475                           ;initializer for _relay1
  1476   000F90  08                 	db	8
  1477                           
  1478                           ;initializer for _LCD1
  1479   000F91  93                 	db	147
  1480   000F92  9B                 	db	155
  1481   000F93  01                 	db	1
  1482   000F94  A2                 	db	162
  1483   000F95  AA                 	db	170
  1484   000F96  B2                 	db	178
  1485   000F97  BA                 	db	186
  1486   000F98  A3                 	db	163
  1487   000F99  AB                 	db	171
  1488   000F9A  B3                 	db	179
  1489   000F9B  BB                 	db	187
  1490                           
  1491                           	psect	smallconst
  1492   000600                     __psmallconst:
  1493                           	callstack 0
  1494   000600  00                 	db	0
  1495   000601                     _keypad_elements:
  1496                           	callstack 0
  1497   000601  31                 	db	49
  1498   000602  32                 	db	50
  1499   000603  33                 	db	51
  1500   000604  41                 	db	65
  1501   000605  34                 	db	52
  1502   000606  35                 	db	53
  1503   000607  36                 	db	54
  1504   000608  42                 	db	66
  1505   000609  37                 	db	55
  1506   00060A  38                 	db	56
  1507   00060B  39                 	db	57
  1508   00060C  43                 	db	67
  1509   00060D  2A                 	db	42
  1510   00060E  30                 	db	48
  1511   00060F  23                 	db	35
  1512   000610  44                 	db	68
  1513   000611                     __end_of_keypad_elements:
  1514                           	callstack 0
  1515   000F84                     _PORTE          set	3972
  1516   000F83                     _PORTD          set	3971
  1517   000F82                     _PORTC          set	3970
  1518   000F81                     _PORTB          set	3969
  1519   000F80                     _PORTA          set	3968
  1520   000F8D                     _LATE           set	3981
  1521   000F8C                     _LATD           set	3980
  1522   000F8B                     _LATC           set	3979
  1523   000F8A                     _LATB           set	3978
  1524   000F89                     _LATA           set	3977
  1525   000F96                     _TRISE          set	3990
  1526   000F95                     _TRISD          set	3989
  1527   000F94                     _TRISC          set	3988
  1528   000F93                     _TRISB          set	3987
  1529   000F92                     _TRISA          set	3986
  1530   000611                     STR_1:
  1531   000611  25                 	db	37
  1532   000612  69                 	db	105	;'i'
  1533   000613  00                 	db	0
  1534   000611                     STR_2           equ	STR_1
  1535   000611                     STR_3           equ	STR_1
  1536   000614  00                 	db	0	; dummy byte at the end
  1537   000600                     __smallconst    set	__psmallconst
  1538   000600                     __mediumconst   set	__psmallconst
  1539   000002                     __activetblptr  equ	2
  1540                           
  1541                           ; #config settings
  1542                           
  1543                           	psect	cinit
  1544   00102C                     __pcinit:
  1545                           	callstack 0
  1546   00102C                     start_initialization:
  1547                           	callstack 0
  1548   00102C                     __initialization:
  1549                           	callstack 0
  1550                           
  1551                           ; Initialize objects allocated to COMRAM (76 bytes)
  1552                           ; load TBLPTR registers with __pidataCOMRAM
  1553   00102C  0E50               	movlw	low __pidataCOMRAM
  1554   00102E  6EF6               	movwf	tblptrl,c
  1555   001030  0E0F               	movlw	high __pidataCOMRAM
  1556   001032  6EF7               	movwf	tblptrh,c
  1557   001034  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1558   001036  6EF8               	movwf	tblptru,c
  1559   001038  EE00  F001         	lfsr	0,__pdataCOMRAM
  1560   00103C  EE10 F04C          	lfsr	1,76
  1561   001040                     copy_data0:
  1562   001040  0009               	tblrd		*+
  1563   001042  CFF5 FFEE          	movff	tablat,postinc0
  1564   001046  50E5               	movf	postdec1,w,c
  1565   001048  50E1               	movf	fsr1l,w,c
  1566   00104A  E1FA               	bnz	copy_data0
  1567                           
  1568                           ; Clear objects allocated to COMRAM (12 bytes)
  1569   00104C  EE00  F06A         	lfsr	0,__pbssCOMRAM
  1570   001050  0E0C               	movlw	12
  1571   001052                     clear_0:
  1572   001052  6AEE               	clrf	postinc0,c
  1573   001054  06E8               	decf	wreg,f,c
  1574   001056  E1FD               	bnz	clear_0
  1575   001058                     end_of_initialization:
  1576                           	callstack 0
  1577   001058                     __end_of__initialization:
  1578                           	callstack 0
  1579   001058  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1580   00105A  6EF8               	movwf	tblptru,c
  1581   00105C  0100               	movlb	0
  1582   00105E  EF31  F008         	goto	_main	;jump to C main() function
  1583                           
  1584                           	psect	bssCOMRAM
  1585   00006A                     __pbssCOMRAM:
  1586                           	callstack 0
  1587   00006A                     _errno:
  1588                           	callstack 0
  1589   00006A                     	ds	2
  1590   00006C                     _prev:
  1591                           	callstack 0
  1592   00006C                     	ds	1
  1593   00006D                     _knum:
  1594                           	callstack 0
  1595   00006D                     	ds	1
  1596   00006E                     _j:
  1597                           	callstack 0
  1598   00006E                     	ds	1
  1599   00006F                     relay_turn_off@F2875:
  1600                           	callstack 0
  1601   00006F                     	ds	1
  1602   000070                     relay_turn_on@F2870:
  1603                           	callstack 0
  1604   000070                     	ds	1
  1605   000071                     relay_initialize@F2865:
  1606                           	callstack 0
  1607   000071                     	ds	1
  1608   000072                     LED_toggle@F2885:
  1609                           	callstack 0
  1610   000072                     	ds	1
  1611   000073                     LED_off@F2880:
  1612                           	callstack 0
  1613   000073                     	ds	1
  1614   000074                     LED_on@F2875:
  1615                           	callstack 0
  1616   000074                     	ds	1
  1617   000075                     LED_initialize@F2870:
  1618                           	callstack 0
  1619   000075                     	ds	1
  1620                           
  1621                           	psect	dataCOMRAM
  1622   000001                     __pdataCOMRAM:
  1623                           	callstack 0
  1624   000001                     __PORT_registers:
  1625                           	callstack 0
  1626   000001                     	ds	10
  1627   00000B                     __LAT_registers:
  1628                           	callstack 0
  1629   00000B                     	ds	10
  1630   000015                     __TRIS_registers:
  1631                           	callstack 0
  1632   000015                     	ds	10
  1633   00001F                     _keypad1:
  1634                           	callstack 0
  1635   00001F                     	ds	9
  1636   000028                     _segment1:
  1637                           	callstack 0
  1638   000028                     	ds	6
  1639   00002E                     _led_arr:
  1640                           	callstack 0
  1641   00002E                     	ds	4
  1642   000032                     _btn2:
  1643                           	callstack 0
  1644   000032                     	ds	3
  1645   000035                     _btn1:
  1646                           	callstack 0
  1647   000035                     	ds	3
  1648   000038                     _motor2:
  1649                           	callstack 0
  1650   000038                     	ds	2
  1651   00003A                     _motor1:
  1652                           	callstack 0
  1653   00003A                     	ds	2
  1654   00003C                     _i:
  1655                           	callstack 0
  1656   00003C                     	ds	1
  1657   00003D                     _seg_units_en:
  1658                           	callstack 0
  1659   00003D                     	ds	1
  1660   00003E                     _testing:
  1661                           	callstack 0
  1662   00003E                     	ds	1
  1663   00003F                     _LED2:
  1664                           	callstack 0
  1665   00003F                     	ds	1
  1666   000040                     _LED1:
  1667                           	callstack 0
  1668   000040                     	ds	1
  1669   000041                     _relay1:
  1670                           	callstack 0
  1671   000041                     	ds	1
  1672   000042                     _LCD1:
  1673                           	callstack 0
  1674   000042                     	ds	11
  1675                           
  1676                           	psect	cstackCOMRAM
  1677   00004D                     __pcstackCOMRAM:
  1678                           	callstack 0
  1679   00004D                     GPIO_check_access@_pin_config:
  1680                           	callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x0
  1683   00004D                     	ds	1
  1684   00004E                     ??_GPIO_check_access:
  1685                           
  1686                           ; 1 bytes @ 0x1
  1687   00004E                     	ds	1
  1688   00004F                     GPIO_check_access@ret:
  1689                           	callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x2
  1692   00004F                     	ds	1
  1693   000050                     lcd_check_access@lcd:
  1694                           	callstack 0
  1695   000050                     GPIO_pin_direction_initialize@_pin_config:
  1696                           	callstack 0
  1697   000050                     GPIO_pin_write_logic@_pin_config:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x3
  1701   000050                     	ds	1
  1702   000051                     GPIO_pin_write_logic@logic:
  1703                           	callstack 0
  1704   000051                     ??_GPIO_pin_direction_initialize:
  1705   000051                     
  1706                           ; 1 bytes @ 0x4
  1707   000051                     	ds	1
  1708   000052                     lcd_check_access@ret:
  1709                           	callstack 0
  1710   000052                     ??_GPIO_pin_write_logic:
  1711                           
  1712                           ; 1 bytes @ 0x5
  1713   000052                     	ds	1
  1714   000053                     lcd_check_access@i:
  1715                           	callstack 0
  1716                           
  1717                           ; 1 bytes @ 0x6
  1718   000053                     	ds	3
  1719   000056                     GPIO_pin_direction_initialize@ret:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x9
  1723   000056                     	ds	1
  1724   000057                     GPIO_pin_write_logic@ret:
  1725                           	callstack 0
  1726                           
  1727                           ; 1 bytes @ 0xA
  1728   000057                     	ds	1
  1729   000058                     lcd_send_4bits@lcd:
  1730                           	callstack 0
  1731   000058                     lcd_send_8bits@lcd:
  1732                           	callstack 0
  1733   000058                     lcd_send_en@lcd:
  1734                           	callstack 0
  1735   000058                     GPIO_pin_initialize@_pin_config:
  1736                           	callstack 0
  1737                           
  1738                           ; 1 bytes @ 0xB
  1739   000058                     	ds	1
  1740   000059                     lcd_send_4bits@val:
  1741                           	callstack 0
  1742   000059                     lcd_send_8bits@val:
  1743                           	callstack 0
  1744   000059                     lcd_send_en@ret:
  1745                           	callstack 0
  1746   000059                     GPIO_pin_initialize@ret:
  1747                           	callstack 0
  1748   000059                     
  1749                           ; 1 bytes @ 0xC
  1750   000059                     	ds	1
  1751   00005A                     ??_lcd_send_4bits:
  1752   00005A                     ??_lcd_send_8bits:
  1753                           
  1754                           ; 1 bytes @ 0xD
  1755   00005A                     	ds	2
  1756   00005C                     lcd_send_4bits@ret:
  1757                           	callstack 0
  1758   00005C                     lcd_send_8bits@ret:
  1759                           	callstack 0
  1760                           
  1761                           ; 1 bytes @ 0xF
  1762   00005C                     	ds	1
  1763   00005D                     lcd_send_4bits@i:
  1764                           	callstack 0
  1765   00005D                     lcd_send_8bits@i:
  1766                           	callstack 0
  1767                           
  1768                           ; 1 bytes @ 0x10
  1769   00005D                     	ds	1
  1770   00005E                     lcd_send_command@lcd:
  1771                           	callstack 0
  1772   00005E                     lcd_send_char_data@lcd:
  1773                           	callstack 0
  1774                           
  1775                           ; 1 bytes @ 0x11
  1776   00005E                     	ds	1
  1777   00005F                     lcd_send_command@command:
  1778                           	callstack 0
  1779   00005F                     lcd_send_char_data@data:
  1780                           	callstack 0
  1781                           
  1782                           ; 1 bytes @ 0x12
  1783   00005F                     	ds	1
  1784   000060                     lcd_send_command@ret:
  1785                           	callstack 0
  1786   000060                     lcd_send_char_data@ret:
  1787                           	callstack 0
  1788   000060                     
  1789                           ; 1 bytes @ 0x13
  1790   000060                     	ds	1
  1791   000061                     lcd_initialize@lcd:
  1792                           	callstack 0
  1793   000061                     lcd_set_cursor@lcd:
  1794                           	callstack 0
  1795                           
  1796                           ; 1 bytes @ 0x14
  1797   000061                     	ds	1
  1798   000062                     lcd_set_cursor@row:
  1799                           	callstack 0
  1800   000062                     ??_lcd_initialize:
  1801                           
  1802                           ; 1 bytes @ 0x15
  1803   000062                     	ds	1
  1804   000063                     lcd_initialize@ret:
  1805                           	callstack 0
  1806   000063                     lcd_set_cursor@col:
  1807                           	callstack 0
  1808                           
  1809                           ; 1 bytes @ 0x16
  1810   000063                     	ds	1
  1811   000064                     lcd_initialize@i:
  1812                           	callstack 0
  1813   000064                     lcd_set_cursor@ret:
  1814                           	callstack 0
  1815   000064                     
  1816                           ; 1 bytes @ 0x17
  1817   000064                     	ds	1
  1818   000065                     lcd_send_char_data_position@lcd:
  1819                           	callstack 0
  1820   000065                     ecu_init@ret:
  1821                           	callstack 0
  1822   000065                     
  1823                           ; 1 bytes @ 0x18
  1824   000065                     	ds	1
  1825   000066                     lcd_send_char_data_position@row:
  1826                           	callstack 0
  1827   000066                     
  1828                           ; 1 bytes @ 0x19
  1829   000066                     	ds	1
  1830   000067                     lcd_send_char_data_position@col:
  1831                           	callstack 0
  1832                           
  1833                           ; 1 bytes @ 0x1A
  1834   000067                     	ds	1
  1835   000068                     lcd_send_char_data_position@data:
  1836                           	callstack 0
  1837                           
  1838                           ; 1 bytes @ 0x1B
  1839   000068                     	ds	1
  1840   000069                     lcd_send_char_data_position@ret:
  1841                           	callstack 0
  1842   000069                     
  1843                           ; 1 bytes @ 0x1C
  1844   000069                     	ds	1
  1845   00006A                     
  1846                           ; 1 bytes @ 0x1D
  1847 ;;
  1848 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1849 ;;
  1850 ;; *************** function _main *****************
  1851 ;; Defined at:
  1852 ;;		line 23 in file "application.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  ret             1    0        unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2  580[None  ] int 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1866 ;;      Params:         0       0       0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0
  1869 ;;      Totals:         0       0       0       0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels required when called: 7
  1872 ;; This function calls:
  1873 ;;		_application_initialize
  1874 ;;		_lcd_send_char_data_position
  1875 ;; This function is called by:
  1876 ;;		Startup code after reset
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text0
  1881   001062                     __ptext0:
  1882                           	callstack 0
  1883   001062                     _main:
  1884                           	callstack 24
  1885   001062  FFFF               	dw	65535	; assembler added errata NOP
  1886                           
  1887                           ;application.c: 25:     application_initialize();
  1888   001064  EC4C  F008         	call	_application_initialize	;wreg free
  1889   001068  0E42               	movlw	low _LCD1
  1890   00106A  6E65               	movwf	lcd_send_char_data_position@lcd^0,c
  1891   00106C  0E01               	movlw	1
  1892   00106E  6E66               	movwf	lcd_send_char_data_position@row^0,c
  1893   001070  0E04               	movlw	4
  1894   001072  6E67               	movwf	lcd_send_char_data_position@col^0,c
  1895   001074  0E41               	movlw	65
  1896   001076  6E68               	movwf	lcd_send_char_data_position@data^0,c
  1897   001078  ECF3  F007         	call	_lcd_send_char_data_position	;wreg free
  1898   00107C                     l581:
  1899   00107C  FFFF               	dw	65535	; assembler added errata NOP
  1900   00107E  EF3E  F008         	goto	l581
  1901   001082  EFFE  F01F         	goto	start
  1902   001086                     __end_of_main:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _lcd_send_char_data_position *****************
  1906 ;; Defined at:
  1907 ;;		line 139 in file "ECU_layer/LCD/ecu_LCD.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  lcd             1   24[COMRAM] PTR const struct .
  1910 ;;		 -> LCD1(11), 
  1911 ;;  row             1   25[COMRAM] unsigned char 
  1912 ;;  col             1   26[COMRAM] unsigned char 
  1913 ;;  data            1   27[COMRAM] unsigned char 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  ret             1   28[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      unsigned char 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1925 ;;      Params:         4       0       0       0       0       0       0
  1926 ;;      Locals:         1       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0
  1928 ;;      Totals:         5       0       0       0       0       0       0
  1929 ;;Total ram usage:        5 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 5
  1932 ;; This function calls:
  1933 ;;		_lcd_send_char_data
  1934 ;;		_lcd_set_cursor
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;;		_lcd_send_custom_char
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text1
  1942   000FE6                     __ptext1:
  1943                           	callstack 0
  1944   000FE6                     _lcd_send_char_data_position:
  1945                           	callstack 0
  1946   000FE6  FFFF               	dw	65535	; assembler added errata NOP
  1947   000FE8                     
  1948                           ;ECU_layer/LCD/ecu_LCD.c: 141:  if(((void*)0) == lcd)
  1949   000FE8  5065               	movf	lcd_send_char_data_position@lcd^0,w,c
  1950   000FEA  A4D8               	btfss	status,2,c
  1951   000FEC  EFFA  F007         	goto	u2141
  1952   000FF0  EFFD  F007         	goto	u2140
  1953   000FF4                     u2141:
  1954   000FF4  FFFF               	dw	65535	; assembler added errata NOP
  1955   000FF6  EF01  F008         	goto	l2666
  1956   000FFA                     u2140:
  1957   000FFA  FFFF               	dw	65535	; assembler added errata NOP
  1958   000FFC                     
  1959                           ;ECU_layer/LCD/ecu_LCD.c: 142:   ret = (STD_ReturnType)(0x00);
  1960   000FFC  6A69               	clrf	lcd_send_char_data_position@ret^0,c
  1961   000FFE  EF12  F008         	goto	l2668
  1962   001002                     l2666:
  1963   001002  FFFF               	dw	65535	; assembler added errata NOP
  1964                           
  1965                           ;ECU_layer/LCD/ecu_LCD.c: 144:   ret = lcd_set_cursor(lcd, row, col);
  1966   001004  C065  F061         	movff	lcd_send_char_data_position@lcd,lcd_set_cursor@lcd
  1967   001008  C066  F062         	movff	lcd_send_char_data_position@row,lcd_set_cursor@row
  1968   00100C  C067  F063         	movff	lcd_send_char_data_position@col,lcd_set_cursor@col
  1969   001010  EC52  F007         	call	_lcd_set_cursor	;wreg free
  1970   001014  6E69               	movwf	lcd_send_char_data_position@ret^0,c
  1971                           
  1972                           ;ECU_layer/LCD/ecu_LCD.c: 145:   ret = lcd_send_char_data(lcd, data);
  1973   001016  C065  F05E         	movff	lcd_send_char_data_position@lcd,lcd_send_char_data@lcd
  1974   00101A  C068  F05F         	movff	lcd_send_char_data_position@data,lcd_send_char_data@data
  1975   00101E  EC2F  F006         	call	_lcd_send_char_data	;wreg free
  1976   001022  6E69               	movwf	lcd_send_char_data_position@ret^0,c
  1977   001024                     l2668:
  1978   001024  FFFF               	dw	65535	; assembler added errata NOP
  1979                           
  1980                           ;ECU_layer/LCD/ecu_LCD.c: 147:  return ret;
  1981   001026  5069               	movf	lcd_send_char_data_position@ret^0,w,c
  1982   001028  0012               	return		;funcret
  1983   00102A  FFFF               	dw	65535	; errata NOP
  1984   00102C                     __end_of_lcd_send_char_data_position:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _lcd_set_cursor *****************
  1988 ;; Defined at:
  1989 ;;		line 300 in file "ECU_layer/LCD/ecu_LCD.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  lcd             1   20[COMRAM] PTR const struct .
  1992 ;;		 -> LCD1(11), 
  1993 ;;  row             1   21[COMRAM] unsigned char 
  1994 ;;  col             1   22[COMRAM] unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  ret             1   23[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      unsigned char 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2006 ;;      Params:         3       0       0       0       0       0       0
  2007 ;;      Locals:         1       0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0
  2009 ;;      Totals:         4       0       0       0       0       0       0
  2010 ;;Total ram usage:        4 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 4
  2013 ;; This function calls:
  2014 ;;		_lcd_send_command
  2015 ;; This function is called by:
  2016 ;;		_lcd_send_char_data_position
  2017 ;;		_lcd_send_string_position
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text2
  2022   000EA4                     __ptext2:
  2023                           	callstack 0
  2024   000EA4                     _lcd_set_cursor:
  2025                           	callstack 0
  2026   000EA4  FFFF               	dw	65535	; assembler added errata NOP
  2027   000EA6                     
  2028                           ;ECU_layer/LCD/ecu_LCD.c: 301:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2029   000EA6  0E01               	movlw	1
  2030   000EA8  6E64               	movwf	lcd_set_cursor@ret^0,c
  2031   000EAA                     
  2032                           ;ECU_layer/LCD/ecu_LCD.c: 302:  col--;
  2033   000EAA  0663               	decf	lcd_set_cursor@col^0,f,c
  2034                           
  2035                           ;ECU_layer/LCD/ecu_LCD.c: 303:  switch(row){
  2036   000EAC  EF70  F007         	goto	l2624
  2037   000EB0                     l2620:
  2038   000EB0  FFFF               	dw	65535	; assembler added errata NOP
  2039   000EB2  C061  F05E         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  2040   000EB6  5062               	movf	lcd_set_cursor@row^0,w,c
  2041   000EB8  0F80               	addlw	128
  2042   000EBA  6E5F               	movwf	lcd_send_command@command^0,c
  2043   000EBC  EC7F  F006         	call	_lcd_send_command	;wreg free
  2044   000EC0  EF7C  F007         	goto	l2626
  2045   000EC4                     l2622:
  2046   000EC4  FFFF               	dw	65535	; assembler added errata NOP
  2047   000EC6  C061  F05E         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  2048   000ECA  5062               	movf	lcd_set_cursor@row^0,w,c
  2049   000ECC  0FA8               	addlw	168
  2050   000ECE  6E5F               	movwf	lcd_send_command@command^0,c
  2051   000ED0  EC7F  F006         	call	_lcd_send_command	;wreg free
  2052   000ED4  EF7C  F007         	goto	l2626
  2053   000ED8                     l287:
  2054   000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2055   000EDA  6A64               	clrf	lcd_set_cursor@ret^0,c
  2056                           
  2057                           ;ECU_layer/LCD/ecu_LCD.c: 307:  }
  2058   000EDC  EF7C  F007         	goto	l2626
  2059   000EE0                     l2624:
  2060   000EE0  FFFF               	dw	65535	; assembler added errata NOP
  2061   000EE2  5062               	movf	lcd_set_cursor@row^0,w,c
  2062                           
  2063                           ; Switch size 1, requested type "simple"
  2064                           ; Number of cases is 2, Range of values is 1 to 2
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte            7     4 (average)
  2068                           ;	Chosen strategy is simple_byte
  2069   000EE4  0A01               	xorlw	1	; case 1
  2070   000EE6  B4D8               	btfsc	status,2,c
  2071   000EE8  EF58  F007         	goto	l2620
  2072   000EEC  0A03               	xorlw	3	; case 2
  2073   000EEE  B4D8               	btfsc	status,2,c
  2074   000EF0  EF62  F007         	goto	l2622
  2075   000EF4  EF6C  F007         	goto	l287
  2076   000EF8                     l2626:
  2077   000EF8  FFFF               	dw	65535	; assembler added errata NOP
  2078                           
  2079                           ;ECU_layer/LCD/ecu_LCD.c: 308:  return ret;
  2080   000EFA  5064               	movf	lcd_set_cursor@ret^0,w,c
  2081   000EFC  0012               	return		;funcret
  2082   000EFE  FFFF               	dw	65535	; errata NOP
  2083   000F00                     __end_of_lcd_set_cursor:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _lcd_send_char_data *****************
  2087 ;; Defined at:
  2088 ;;		line 116 in file "ECU_layer/LCD/ecu_LCD.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  lcd             1   17[COMRAM] PTR const struct .
  2091 ;;		 -> LCD1(11), 
  2092 ;;  data            1   18[COMRAM] unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  ret             1   19[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      unsigned char 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         2       0       0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0
  2107 ;;      Totals:         3       0       0       0       0       0       0
  2108 ;;Total ram usage:        3 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 3
  2111 ;; This function calls:
  2112 ;;		_GPIO_pin_write_logic
  2113 ;;		_lcd_send_4bits
  2114 ;;		_lcd_send_8bits
  2115 ;;		_lcd_send_en
  2116 ;; This function is called by:
  2117 ;;		_lcd_send_char_data_position
  2118 ;;		_lcd_send_string
  2119 ;;		_lcd_send_string_position
  2120 ;;		_lcd_send_custom_char
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text3
  2125   000C5E                     __ptext3:
  2126                           	callstack 0
  2127   000C5E                     _lcd_send_char_data:
  2128                           	callstack 0
  2129   000C5E  FFFF               	dw	65535	; assembler added errata NOP
  2130   000C60                     
  2131                           ;ECU_layer/LCD/ecu_LCD.c: 118:  if(((void*)0) == lcd)
  2132   000C60  505E               	movf	lcd_send_char_data@lcd^0,w,c
  2133   000C62  A4D8               	btfss	status,2,c
  2134   000C64  EF36  F006         	goto	u2071
  2135   000C68  EF39  F006         	goto	u2070
  2136   000C6C                     u2071:
  2137   000C6C  FFFF               	dw	65535	; assembler added errata NOP
  2138   000C6E  EF3D  F006         	goto	l2604
  2139   000C72                     u2070:
  2140   000C72  FFFF               	dw	65535	; assembler added errata NOP
  2141   000C74                     
  2142                           ;ECU_layer/LCD/ecu_LCD.c: 119:   ret = (STD_ReturnType)(0x00);
  2143   000C74  6A60               	clrf	lcd_send_char_data@ret^0,c
  2144   000C76  EF7B  F006         	goto	l2612
  2145   000C7A                     l2604:
  2146   000C7A  FFFF               	dw	65535	; assembler added errata NOP
  2147   000C7C  C05E  F050         	movff	lcd_send_char_data@lcd,GPIO_pin_write_logic@_pin_config
  2148   000C80  0E01               	movlw	1
  2149   000C82  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  2150   000C84  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2151   000C88                     
  2152                           ;ECU_layer/LCD/ecu_LCD.c: 122:   if(lcd -> bit_mode == 0){
  2153   000C88  505E               	movf	lcd_send_char_data@lcd^0,w,c
  2154   000C8A  6ED9               	movwf	fsr2l,c
  2155   000C8C  6ADA               	clrf	fsr2h,c
  2156   000C8E  0E02               	movlw	2
  2157   000C90  26D9               	addwf	fsr2l,f,c
  2158   000C92  50DF               	movf	indf2,w,c
  2159   000C94  A4D8               	btfss	status,2,c
  2160   000C96  EF4F  F006         	goto	u2081
  2161   000C9A  EF52  F006         	goto	u2080
  2162   000C9E                     u2081:
  2163   000C9E  FFFF               	dw	65535	; assembler added errata NOP
  2164   000CA0  EF6E  F006         	goto	l2610
  2165   000CA4                     u2080:
  2166   000CA4  FFFF               	dw	65535	; assembler added errata NOP
  2167   000CA6                     
  2168                           ;ECU_layer/LCD/ecu_LCD.c: 123:    ret = lcd_send_4bits(lcd,data >> 4);
  2169   000CA6  C05E  F058         	movff	lcd_send_char_data@lcd,lcd_send_4bits@lcd
  2170   000CAA  385F               	swapf	lcd_send_char_data@data^0,w,c
  2171   000CAC  0B0F               	andlw	15
  2172   000CAE  6E59               	movwf	lcd_send_4bits@val^0,c
  2173   000CB0  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2174   000CB4  6E60               	movwf	lcd_send_char_data@ret^0,c
  2175                           
  2176                           ;ECU_layer/LCD/ecu_LCD.c: 124:    ret = lcd_send_en(lcd);
  2177   000CB6  C05E  F058         	movff	lcd_send_char_data@lcd,lcd_send_en@lcd
  2178   000CBA  ECCE  F007         	call	_lcd_send_en	;wreg free
  2179   000CBE  6E60               	movwf	lcd_send_char_data@ret^0,c
  2180                           
  2181                           ;ECU_layer/LCD/ecu_LCD.c: 125:    ret = lcd_send_4bits(lcd,data);
  2182   000CC0  C05E  F058         	movff	lcd_send_char_data@lcd,lcd_send_4bits@lcd
  2183   000CC4  C05F  F059         	movff	lcd_send_char_data@data,lcd_send_4bits@val
  2184   000CC8  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2185   000CCC  6E60               	movwf	lcd_send_char_data@ret^0,c
  2186                           
  2187                           ;ECU_layer/LCD/ecu_LCD.c: 126:    ret = lcd_send_en(lcd);
  2188   000CCE  C05E  F058         	movff	lcd_send_char_data@lcd,lcd_send_en@lcd
  2189   000CD2  ECCE  F007         	call	_lcd_send_en	;wreg free
  2190   000CD6  6E60               	movwf	lcd_send_char_data@ret^0,c
  2191                           
  2192                           ;ECU_layer/LCD/ecu_LCD.c: 127:   }
  2193   000CD8  EF7B  F006         	goto	l2612
  2194   000CDC                     l2610:
  2195   000CDC  FFFF               	dw	65535	; assembler added errata NOP
  2196                           
  2197                           ;ECU_layer/LCD/ecu_LCD.c: 129:    ret = lcd_send_8bits(lcd,data);
  2198   000CDE  C05E  F058         	movff	lcd_send_char_data@lcd,lcd_send_8bits@lcd
  2199   000CE2  C05F  F059         	movff	lcd_send_char_data@data,lcd_send_8bits@val
  2200   000CE6  ECCA  F006         	call	_lcd_send_8bits	;wreg free
  2201   000CEA  6E60               	movwf	lcd_send_char_data@ret^0,c
  2202                           
  2203                           ;ECU_layer/LCD/ecu_LCD.c: 130:    ret = lcd_send_en(lcd);
  2204   000CEC  C05E  F058         	movff	lcd_send_char_data@lcd,lcd_send_en@lcd
  2205   000CF0  ECCE  F007         	call	_lcd_send_en	;wreg free
  2206   000CF4  6E60               	movwf	lcd_send_char_data@ret^0,c
  2207   000CF6                     l2612:
  2208   000CF6  FFFF               	dw	65535	; assembler added errata NOP
  2209                           
  2210                           ;ECU_layer/LCD/ecu_LCD.c: 133:  return ret;
  2211   000CF8  5060               	movf	lcd_send_char_data@ret^0,w,c
  2212   000CFA  0012               	return		;funcret
  2213   000CFC  FFFF               	dw	65535	; errata NOP
  2214   000CFE                     __end_of_lcd_send_char_data:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _application_initialize *****************
  2218 ;; Defined at:
  2219 ;;		line 35 in file "application.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  ret             1    0        unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         0       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 6
  2240 ;; This function calls:
  2241 ;;		_ecu_init
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text4
  2248   001098                     __ptext4:
  2249                           	callstack 0
  2250   001098                     _application_initialize:
  2251                           	callstack 0
  2252   001098  FFFF               	dw	65535	; assembler added errata NOP
  2253   00109A  EC43  F008         	call	_ecu_init	;wreg free
  2254   00109E  0012               	return		;funcret
  2255   0010A0  FFFF               	dw	65535	; errata NOP
  2256   0010A2                     __end_of_application_initialize:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _ecu_init *****************
  2260 ;; Defined at:
  2261 ;;		line 138 in file "ECU_layer/ecu_init.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  ret             1   24[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      unsigned char 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         0       0       0       0       0       0       0
  2276 ;;      Locals:         1       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0
  2278 ;;      Totals:         1       0       0       0       0       0       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 5
  2282 ;; This function calls:
  2283 ;;		_lcd_initialize
  2284 ;; This function is called by:
  2285 ;;		_application_initialize
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text5
  2290   001086                     __ptext5:
  2291                           	callstack 0
  2292   001086                     _ecu_init:
  2293                           	callstack 0
  2294   001086  FFFF               	dw	65535	; assembler added errata NOP
  2295   001088                     
  2296                           ;ECU_layer/ecu_init.c: 140:     ret = lcd_initialize(&LCD1);
  2297   001088  0E42               	movlw	low _LCD1
  2298   00108A  6E61               	movwf	lcd_initialize@lcd^0,c
  2299   00108C  EC0B  F003         	call	_lcd_initialize	;wreg free
  2300   001090  6E65               	movwf	ecu_init@ret^0,c
  2301   001092                     
  2302                           ;ECU_layer/ecu_init.c: 141:     return ret;
  2303   001092  5065               	movf	ecu_init@ret^0,w,c
  2304   001094  0012               	return		;funcret
  2305   001096  FFFF               	dw	65535	; errata NOP
  2306   001098                     __end_of_ecu_init:
  2307                           	callstack 0
  2308                           
  2309 ;; *************** function _lcd_initialize *****************
  2310 ;; Defined at:
  2311 ;;		line 48 in file "ECU_layer/LCD/ecu_LCD.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  lcd             1   20[COMRAM] PTR const struct .
  2314 ;;		 -> LCD1(11), 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  i               1   23[COMRAM] unsigned char 
  2317 ;;  ret             1   22[COMRAM] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      unsigned char 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2327 ;;      Params:         1       0       0       0       0       0       0
  2328 ;;      Locals:         2       0       0       0       0       0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0
  2330 ;;      Totals:         4       0       0       0       0       0       0
  2331 ;;Total ram usage:        4 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 4
  2334 ;; This function calls:
  2335 ;;		_GPIO_pin_initialize
  2336 ;;		_lcd_check_access
  2337 ;;		_lcd_send_command
  2338 ;; This function is called by:
  2339 ;;		_ecu_init
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text6
  2344   000616                     __ptext6:
  2345                           	callstack 0
  2346   000616                     _lcd_initialize:
  2347                           	callstack 0
  2348   000616  FFFF               	dw	65535	; assembler added errata NOP
  2349   000618                     
  2350                           ;ECU_layer/LCD/ecu_LCD.c: 50:  uint8 i;;ECU_layer/LCD/ecu_LCD.c: 51:  if(((void*)0) == l
      +                          cd || (lcd -> bit_mode != 0 && lcd -> bit_mode != 1) || ((STD_ReturnType)(0x00) == lcd_c
      +                          heck_access(lcd)) )
  2351   000618  5061               	movf	lcd_initialize@lcd^0,w,c
  2352   00061A  B4D8               	btfsc	status,2,c
  2353   00061C  EF12  F003         	goto	u2001
  2354   000620  EF15  F003         	goto	u2000
  2355   000624                     u2001:
  2356   000624  FFFF               	dw	65535	; assembler added errata NOP
  2357   000626  EF41  F003         	goto	l192
  2358   00062A                     u2000:
  2359   00062A  FFFF               	dw	65535	; assembler added errata NOP
  2360   00062C  5061               	movf	lcd_initialize@lcd^0,w,c
  2361   00062E  6ED9               	movwf	fsr2l,c
  2362   000630  6ADA               	clrf	fsr2h,c
  2363   000632  0E02               	movlw	2
  2364   000634  26D9               	addwf	fsr2l,f,c
  2365   000636  50DF               	movf	indf2,w,c
  2366   000638  B4D8               	btfsc	status,2,c
  2367   00063A  EF21  F003         	goto	u2011
  2368   00063E  EF24  F003         	goto	u2010
  2369   000642                     u2011:
  2370   000642  FFFF               	dw	65535	; assembler added errata NOP
  2371   000644  EF33  F003         	goto	l2532
  2372   000648                     u2010:
  2373   000648  FFFF               	dw	65535	; assembler added errata NOP
  2374   00064A  5061               	movf	lcd_initialize@lcd^0,w,c
  2375   00064C  6ED9               	movwf	fsr2l,c
  2376   00064E  6ADA               	clrf	fsr2h,c
  2377   000650  0E02               	movlw	2
  2378   000652  26D9               	addwf	fsr2l,f,c
  2379   000654  04DE               	decf	postinc2,w,c
  2380   000656  A4D8               	btfss	status,2,c
  2381   000658  EF30  F003         	goto	u2021
  2382   00065C  EF33  F003         	goto	u2020
  2383   000660                     u2021:
  2384   000660  FFFF               	dw	65535	; assembler added errata NOP
  2385   000662  EF41  F003         	goto	l192
  2386   000666                     u2020:
  2387   000666                     l2532:
  2388   000666  FFFF               	dw	65535	; assembler added errata NOP
  2389   000668  C061  F050         	movff	lcd_initialize@lcd,lcd_check_access@lcd
  2390   00066C  EC8A  F004         	call	_lcd_check_access	;wreg free
  2391   000670  0900               	iorlw	0
  2392   000672  A4D8               	btfss	status,2,c
  2393   000674  EF3E  F003         	goto	u2031
  2394   000678  EF41  F003         	goto	u2030
  2395   00067C                     u2031:
  2396   00067C  FFFF               	dw	65535	; assembler added errata NOP
  2397   00067E  EF45  F003         	goto	l2534
  2398   000682                     u2030:
  2399   000682                     l192:
  2400   000682  FFFF               	dw	65535	; assembler added errata NOP
  2401                           
  2402                           ;ECU_layer/LCD/ecu_LCD.c: 52:   ret = (STD_ReturnType)(0x00);
  2403   000684  6A63               	clrf	lcd_initialize@ret^0,c
  2404   000686  EFF4  F003         	goto	l2596
  2405   00068A                     l2534:
  2406   00068A  FFFF               	dw	65535	; assembler added errata NOP
  2407                           
  2408                           ;ECU_layer/LCD/ecu_LCD.c: 54:   ret = GPIO_pin_initialize(&(lcd -> lcd_rs));
  2409   00068C  C061  F058         	movff	lcd_initialize@lcd,GPIO_pin_initialize@_pin_config
  2410   000690  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2411   000694  6E63               	movwf	lcd_initialize@ret^0,c
  2412                           
  2413                           ;ECU_layer/LCD/ecu_LCD.c: 55:   ret = GPIO_pin_initialize(&(lcd -> lcd_en));
  2414   000696  2861               	incf	lcd_initialize@lcd^0,w,c
  2415   000698  6E58               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2416   00069A  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2417   00069E  6E63               	movwf	lcd_initialize@ret^0,c
  2418   0006A0                     
  2419                           ;ECU_layer/LCD/ecu_LCD.c: 56:   if((lcd -> bit_mode) == 0){
  2420   0006A0  5061               	movf	lcd_initialize@lcd^0,w,c
  2421   0006A2  6ED9               	movwf	fsr2l,c
  2422   0006A4  6ADA               	clrf	fsr2h,c
  2423   0006A6  0E02               	movlw	2
  2424   0006A8  26D9               	addwf	fsr2l,f,c
  2425   0006AA  50DF               	movf	indf2,w,c
  2426   0006AC  A4D8               	btfss	status,2,c
  2427   0006AE  EF5B  F003         	goto	u2041
  2428   0006B2  EF5E  F003         	goto	u2040
  2429   0006B6                     u2041:
  2430   0006B6  FFFF               	dw	65535	; assembler added errata NOP
  2431   0006B8  EFB6  F003         	goto	l196
  2432   0006BC                     u2040:
  2433   0006BC  FFFF               	dw	65535	; assembler added errata NOP
  2434   0006BE                     
  2435                           ;ECU_layer/LCD/ecu_LCD.c: 57:    for(i=0;i<4;i++){
  2436   0006BE  6A64               	clrf	lcd_initialize@i^0,c
  2437   0006C0                     l2544:
  2438   0006C0  FFFF               	dw	65535	; assembler added errata NOP
  2439   0006C2  5061               	movf	lcd_initialize@lcd^0,w,c
  2440   0006C4  2464               	addwf	lcd_initialize@i^0,w,c
  2441   0006C6  0F07               	addlw	7
  2442   0006C8  6E58               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2443   0006CA  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2444   0006CE                     
  2445                           ;ECU_layer/LCD/ecu_LCD.c: 59:             }
  2446   0006CE  2A64               	incf	lcd_initialize@i^0,f,c
  2447   0006D0  0E03               	movlw	3
  2448   0006D2  6464               	cpfsgt	lcd_initialize@i^0,c
  2449   0006D4  EF6E  F003         	goto	u2051
  2450   0006D8  EF71  F003         	goto	u2050
  2451   0006DC                     u2051:
  2452   0006DC  FFFF               	dw	65535	; assembler added errata NOP
  2453   0006DE  EF60  F003         	goto	l2544
  2454   0006E2                     u2050:
  2455   0006E2  FFFF               	dw	65535	; assembler added errata NOP
  2456   0006E4                     
  2457                           ;ECU_layer/LCD/ecu_LCD.c: 60:    _delay((unsigned long)((50)*(8000000/4000.0)));
  2458   0006E4  0E62               	movlw	98
  2459   0006E6  6E62               	movwf	??_lcd_initialize^0,c
  2460   0006E8  0E76               	movlw	118
  2461   0006EA                     u2897:
  2462   0006EA  FFFF               	dw	65535	; errata NOP
  2463   0006EC  2EE8               	decfsz	wreg,f,c
  2464   0006EE  D7FD               	bra	u2897
  2465   0006F0  2E62               	decfsz	??_lcd_initialize^0,f,c
  2466   0006F2  D7FB               	bra	u2897
  2467   0006F4  D000               	nop2	
  2468   0006F6  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2469   0006FA  0E28               	movlw	40
  2470   0006FC  6E5F               	movwf	lcd_send_command@command^0,c
  2471   0006FE  EC7F  F006         	call	_lcd_send_command	;wreg free
  2472   000702                     
  2473                           ;ECU_layer/LCD/ecu_LCD.c: 62:    _delay((unsigned long)((5)*(8000000/4000.0)));
  2474   000702  0E0A               	movlw	10
  2475   000704  6E62               	movwf	??_lcd_initialize^0,c
  2476   000706  0EBE               	movlw	190
  2477   000708                     u2907:
  2478   000708  FFFF               	dw	65535	; errata NOP
  2479   00070A  2EE8               	decfsz	wreg,f,c
  2480   00070C  D7FD               	bra	u2907
  2481   00070E  2E62               	decfsz	??_lcd_initialize^0,f,c
  2482   000710  D7FB               	bra	u2907
  2483   000712  D000               	nop2	
  2484   000714  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2485   000718  0E28               	movlw	40
  2486   00071A  6E5F               	movwf	lcd_send_command@command^0,c
  2487   00071C  EC7F  F006         	call	_lcd_send_command	;wreg free
  2488   000720                     
  2489                           ;ECU_layer/LCD/ecu_LCD.c: 64:    _delay((unsigned long)((150)*(8000000/4000000.0)));
  2490   000720  0E4B               	movlw	75
  2491   000722                     u2917:
  2492   000722  FFFF               	dw	65535	; errata NOP
  2493   000724  2EE8               	decfsz	wreg,f,c
  2494   000726  D7FD               	bra	u2917
  2495   000728  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2496   00072C  0E28               	movlw	40
  2497   00072E  6E5F               	movwf	lcd_send_command@command^0,c
  2498   000730  EC7F  F006         	call	_lcd_send_command	;wreg free
  2499   000734                     l2560:
  2500   000734  FFFF               	dw	65535	; assembler added errata NOP
  2501   000736  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2502   00073A  0E01               	movlw	1
  2503   00073C  6E5F               	movwf	lcd_send_command@command^0,c
  2504   00073E  EC7F  F006         	call	_lcd_send_command	;wreg free
  2505   000742  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2506   000746  0E02               	movlw	2
  2507   000748  6E5F               	movwf	lcd_send_command@command^0,c
  2508   00074A  EC7F  F006         	call	_lcd_send_command	;wreg free
  2509   00074E  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2510   000752  0E06               	movlw	6
  2511   000754  6E5F               	movwf	lcd_send_command@command^0,c
  2512   000756  EC7F  F006         	call	_lcd_send_command	;wreg free
  2513   00075A                     
  2514                           ;ECU_layer/LCD/ecu_LCD.c: 69:    ret =lcd_send_command(lcd,0x80);
  2515   00075A  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2516   00075E  0E80               	movlw	128
  2517   000760  6E5F               	movwf	lcd_send_command@command^0,c
  2518   000762  EC7F  F006         	call	_lcd_send_command	;wreg free
  2519   000766  6E63               	movwf	lcd_initialize@ret^0,c
  2520                           
  2521                           ;ECU_layer/LCD/ecu_LCD.c: 70:         }
  2522   000768  EFF4  F003         	goto	l2596
  2523   00076C                     l196:
  2524   00076C  FFFF               	dw	65535	; assembler added errata NOP
  2525                           
  2526                           ;ECU_layer/LCD/ecu_LCD.c: 72:    for(i=0;i<8;i++){
  2527   00076E  6A64               	clrf	lcd_initialize@i^0,c
  2528   000770                     l2572:
  2529   000770  FFFF               	dw	65535	; assembler added errata NOP
  2530   000772  5061               	movf	lcd_initialize@lcd^0,w,c
  2531   000774  2464               	addwf	lcd_initialize@i^0,w,c
  2532   000776  0F03               	addlw	3
  2533   000778  6E58               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2534   00077A  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2535   00077E                     
  2536                           ;ECU_layer/LCD/ecu_LCD.c: 74:             }
  2537   00077E  2A64               	incf	lcd_initialize@i^0,f,c
  2538   000780  0E07               	movlw	7
  2539   000782  6464               	cpfsgt	lcd_initialize@i^0,c
  2540   000784  EFC6  F003         	goto	u2061
  2541   000788  EFC9  F003         	goto	u2060
  2542   00078C                     u2061:
  2543   00078C  FFFF               	dw	65535	; assembler added errata NOP
  2544   00078E  EFB8  F003         	goto	l2572
  2545   000792                     u2060:
  2546   000792  FFFF               	dw	65535	; assembler added errata NOP
  2547   000794                     
  2548                           ;ECU_layer/LCD/ecu_LCD.c: 75:    _delay((unsigned long)((50)*(8000000/4000.0)));
  2549   000794  0E62               	movlw	98
  2550   000796  6E62               	movwf	??_lcd_initialize^0,c
  2551   000798  0E76               	movlw	118
  2552   00079A                     u2927:
  2553   00079A  FFFF               	dw	65535	; errata NOP
  2554   00079C  2EE8               	decfsz	wreg,f,c
  2555   00079E  D7FD               	bra	u2927
  2556   0007A0  2E62               	decfsz	??_lcd_initialize^0,f,c
  2557   0007A2  D7FB               	bra	u2927
  2558   0007A4  D000               	nop2	
  2559   0007A6  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2560   0007AA  0E38               	movlw	56
  2561   0007AC  6E5F               	movwf	lcd_send_command@command^0,c
  2562   0007AE  EC7F  F006         	call	_lcd_send_command	;wreg free
  2563   0007B2                     
  2564                           ;ECU_layer/LCD/ecu_LCD.c: 77:    _delay((unsigned long)((5)*(8000000/4000.0)));
  2565   0007B2  0E0A               	movlw	10
  2566   0007B4  6E62               	movwf	??_lcd_initialize^0,c
  2567   0007B6  0EBE               	movlw	190
  2568   0007B8                     u2937:
  2569   0007B8  FFFF               	dw	65535	; errata NOP
  2570   0007BA  2EE8               	decfsz	wreg,f,c
  2571   0007BC  D7FD               	bra	u2937
  2572   0007BE  2E62               	decfsz	??_lcd_initialize^0,f,c
  2573   0007C0  D7FB               	bra	u2937
  2574   0007C2  D000               	nop2	
  2575   0007C4  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2576   0007C8  0E38               	movlw	56
  2577   0007CA  6E5F               	movwf	lcd_send_command@command^0,c
  2578   0007CC  EC7F  F006         	call	_lcd_send_command	;wreg free
  2579   0007D0                     
  2580                           ;ECU_layer/LCD/ecu_LCD.c: 79:    _delay((unsigned long)((150)*(8000000/4000000.0)));
  2581   0007D0  0E4B               	movlw	75
  2582   0007D2                     u2947:
  2583   0007D2  FFFF               	dw	65535	; errata NOP
  2584   0007D4  2EE8               	decfsz	wreg,f,c
  2585   0007D6  D7FD               	bra	u2947
  2586   0007D8  C061  F05E         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2587   0007DC  0E38               	movlw	56
  2588   0007DE  6E5F               	movwf	lcd_send_command@command^0,c
  2589   0007E0  EC7F  F006         	call	_lcd_send_command	;wreg free
  2590   0007E4  EF9A  F003         	goto	l2560
  2591   0007E8                     l2596:
  2592   0007E8  FFFF               	dw	65535	; assembler added errata NOP
  2593                           
  2594                           ;ECU_layer/LCD/ecu_LCD.c: 87:  return ret;
  2595   0007EA  5063               	movf	lcd_initialize@ret^0,w,c
  2596   0007EC  0012               	return		;funcret
  2597   0007EE  FFFF               	dw	65535	; errata NOP
  2598   0007F0                     __end_of_lcd_initialize:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _lcd_send_command *****************
  2602 ;; Defined at:
  2603 ;;		line 94 in file "ECU_layer/LCD/ecu_LCD.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  lcd             1   17[COMRAM] PTR const struct .
  2606 ;;		 -> LCD1(11), 
  2607 ;;  command         1   18[COMRAM] unsigned char 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  ret             1   19[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      unsigned char 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2619 ;;      Params:         2       0       0       0       0       0       0
  2620 ;;      Locals:         1       0       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0
  2622 ;;      Totals:         3       0       0       0       0       0       0
  2623 ;;Total ram usage:        3 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 3
  2626 ;; This function calls:
  2627 ;;		_GPIO_pin_write_logic
  2628 ;;		_lcd_send_4bits
  2629 ;;		_lcd_send_8bits
  2630 ;;		_lcd_send_en
  2631 ;; This function is called by:
  2632 ;;		_lcd_initialize
  2633 ;;		_lcd_set_cursor
  2634 ;;		_lcd_send_custom_char
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text7
  2639   000CFE                     __ptext7:
  2640                           	callstack 0
  2641   000CFE                     _lcd_send_command:
  2642                           	callstack 0
  2643   000CFE  FFFF               	dw	65535	; assembler added errata NOP
  2644   000D00                     
  2645                           ;ECU_layer/LCD/ecu_LCD.c: 96:  if(((void*)0) == lcd)
  2646   000D00  505E               	movf	lcd_send_command@lcd^0,w,c
  2647   000D02  A4D8               	btfss	status,2,c
  2648   000D04  EF86  F006         	goto	u1981
  2649   000D08  EF89  F006         	goto	u1980
  2650   000D0C                     u1981:
  2651   000D0C  FFFF               	dw	65535	; assembler added errata NOP
  2652   000D0E  EF8D  F006         	goto	l2514
  2653   000D12                     u1980:
  2654   000D12  FFFF               	dw	65535	; assembler added errata NOP
  2655   000D14                     
  2656                           ;ECU_layer/LCD/ecu_LCD.c: 97:   ret = (STD_ReturnType)(0x00);
  2657   000D14  6A60               	clrf	lcd_send_command@ret^0,c
  2658   000D16  EFC6  F006         	goto	l2522
  2659   000D1A                     l2514:
  2660   000D1A  FFFF               	dw	65535	; assembler added errata NOP
  2661   000D1C  C05E  F050         	movff	lcd_send_command@lcd,GPIO_pin_write_logic@_pin_config
  2662   000D20  0E00               	movlw	0
  2663   000D22  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  2664   000D24  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2665   000D28                     
  2666                           ;ECU_layer/LCD/ecu_LCD.c: 100:   if((lcd -> bit_mode) == 0){
  2667   000D28  505E               	movf	lcd_send_command@lcd^0,w,c
  2668   000D2A  6ED9               	movwf	fsr2l,c
  2669   000D2C  6ADA               	clrf	fsr2h,c
  2670   000D2E  0E02               	movlw	2
  2671   000D30  26D9               	addwf	fsr2l,f,c
  2672   000D32  50DF               	movf	indf2,w,c
  2673   000D34  A4D8               	btfss	status,2,c
  2674   000D36  EF9F  F006         	goto	u1991
  2675   000D3A  EFA2  F006         	goto	u1990
  2676   000D3E                     u1991:
  2677   000D3E  FFFF               	dw	65535	; assembler added errata NOP
  2678   000D40  EFB9  F006         	goto	l2520
  2679   000D44                     u1990:
  2680   000D44  FFFF               	dw	65535	; assembler added errata NOP
  2681   000D46                     
  2682                           ;ECU_layer/LCD/ecu_LCD.c: 101:    ret = lcd_send_4bits(lcd,command >> 4);
  2683   000D46  C05E  F058         	movff	lcd_send_command@lcd,lcd_send_4bits@lcd
  2684   000D4A  385F               	swapf	lcd_send_command@command^0,w,c
  2685   000D4C  0B0F               	andlw	15
  2686   000D4E  6E59               	movwf	lcd_send_4bits@val^0,c
  2687   000D50  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2688   000D54  6E60               	movwf	lcd_send_command@ret^0,c
  2689                           
  2690                           ;ECU_layer/LCD/ecu_LCD.c: 102:    ret = lcd_send_en(lcd);
  2691   000D56  C05E  F058         	movff	lcd_send_command@lcd,lcd_send_en@lcd
  2692   000D5A  ECCE  F007         	call	_lcd_send_en	;wreg free
  2693   000D5E  6E60               	movwf	lcd_send_command@ret^0,c
  2694                           
  2695                           ;ECU_layer/LCD/ecu_LCD.c: 103:    ret = lcd_send_4bits(lcd,command);
  2696   000D60  C05E  F058         	movff	lcd_send_command@lcd,lcd_send_4bits@lcd
  2697   000D64  C05F  F059         	movff	lcd_send_command@command,lcd_send_4bits@val
  2698   000D68  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2699   000D6C  6E60               	movwf	lcd_send_command@ret^0,c
  2700                           
  2701                           ;ECU_layer/LCD/ecu_LCD.c: 104:   }
  2702   000D6E  EFC6  F006         	goto	l2522
  2703   000D72                     l2520:
  2704   000D72  FFFF               	dw	65535	; assembler added errata NOP
  2705                           
  2706                           ;ECU_layer/LCD/ecu_LCD.c: 106:    ret = lcd_send_8bits(lcd,command);
  2707   000D74  C05E  F058         	movff	lcd_send_command@lcd,lcd_send_8bits@lcd
  2708   000D78  C05F  F059         	movff	lcd_send_command@command,lcd_send_8bits@val
  2709   000D7C  ECCA  F006         	call	_lcd_send_8bits	;wreg free
  2710   000D80  6E60               	movwf	lcd_send_command@ret^0,c
  2711                           
  2712                           ;ECU_layer/LCD/ecu_LCD.c: 107:    ret = lcd_send_en(lcd);
  2713   000D82  C05E  F058         	movff	lcd_send_command@lcd,lcd_send_en@lcd
  2714   000D86  ECCE  F007         	call	_lcd_send_en	;wreg free
  2715   000D8A  6E60               	movwf	lcd_send_command@ret^0,c
  2716   000D8C                     l2522:
  2717   000D8C  FFFF               	dw	65535	; assembler added errata NOP
  2718                           
  2719                           ;ECU_layer/LCD/ecu_LCD.c: 110:  return ret;
  2720   000D8E  5060               	movf	lcd_send_command@ret^0,w,c
  2721   000D90  0012               	return		;funcret
  2722   000D92  FFFF               	dw	65535	; errata NOP
  2723   000D94                     __end_of_lcd_send_command:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _lcd_send_en *****************
  2727 ;; Defined at:
  2728 ;;		line 285 in file "ECU_layer/LCD/ecu_LCD.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  lcd             1   11[COMRAM] PTR const struct .
  2731 ;;		 -> LCD1(11), 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  ret             1   12[COMRAM] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      unsigned char 
  2736 ;; Registers used:
  2737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         1       0       0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0
  2746 ;;      Totals:         2       0       0       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 2
  2750 ;; This function calls:
  2751 ;;		_GPIO_pin_write_logic
  2752 ;; This function is called by:
  2753 ;;		_lcd_send_command
  2754 ;;		_lcd_send_char_data
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text8
  2759   000F9C                     __ptext8:
  2760                           	callstack 0
  2761   000F9C                     _lcd_send_en:
  2762                           	callstack 0
  2763   000F9C  FFFF               	dw	65535	; assembler added errata NOP
  2764   000F9E                     
  2765                           ;ECU_layer/LCD/ecu_LCD.c: 287:  if (((void*)0) == lcd)
  2766   000F9E  5058               	movf	lcd_send_en@lcd^0,w,c
  2767   000FA0  A4D8               	btfss	status,2,c
  2768   000FA2  EFD5  F007         	goto	u1841
  2769   000FA6  EFD8  F007         	goto	u1840
  2770   000FAA                     u1841:
  2771   000FAA  FFFF               	dw	65535	; assembler added errata NOP
  2772   000FAC  EFDC  F007         	goto	l2410
  2773   000FB0                     u1840:
  2774   000FB0  FFFF               	dw	65535	; assembler added errata NOP
  2775   000FB2                     
  2776                           ;ECU_layer/LCD/ecu_LCD.c: 288:   ret = (STD_ReturnType)(0x00);
  2777   000FB2  6A59               	clrf	lcd_send_en@ret^0,c
  2778   000FB4  EFEF  F007         	goto	l2416
  2779   000FB8                     l2410:
  2780   000FB8  FFFF               	dw	65535	; assembler added errata NOP
  2781   000FBA  2858               	incf	lcd_send_en@lcd^0,w,c
  2782   000FBC  6E50               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2783   000FBE  0E01               	movlw	1
  2784   000FC0  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  2785   000FC2  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2786   000FC6                     
  2787                           ;ECU_layer/LCD/ecu_LCD.c: 291:   _delay((unsigned long)((15)*(8000000/4000000.0)));
  2788   000FC6  0E07               	movlw	7
  2789   000FC8                     u2957:
  2790   000FC8  FFFF               	dw	65535	; errata NOP
  2791   000FCA  2EE8               	decfsz	wreg,f,c
  2792   000FCC  D7FD               	bra	u2957
  2793   000FCE  D000               	nop2	
  2794   000FD0                     
  2795                           ;ECU_layer/LCD/ecu_LCD.c: 292:   ret = GPIO_pin_write_logic(&(lcd -> lcd_en), GPIO_LOW);
  2796   000FD0  2858               	incf	lcd_send_en@lcd^0,w,c
  2797   000FD2  6E50               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2798   000FD4  0E00               	movlw	0
  2799   000FD6  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  2800   000FD8  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2801   000FDC  6E59               	movwf	lcd_send_en@ret^0,c
  2802   000FDE                     l2416:
  2803   000FDE  FFFF               	dw	65535	; assembler added errata NOP
  2804                           
  2805                           ;ECU_layer/LCD/ecu_LCD.c: 294:  return ret;
  2806   000FE0  5059               	movf	lcd_send_en@ret^0,w,c
  2807   000FE2  0012               	return		;funcret
  2808   000FE4  FFFF               	dw	65535	; errata NOP
  2809   000FE6                     __end_of_lcd_send_en:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _lcd_send_8bits *****************
  2813 ;; Defined at:
  2814 ;;		line 266 in file "ECU_layer/LCD/ecu_LCD.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  lcd             1   11[COMRAM] PTR const struct .
  2817 ;;		 -> LCD1(11), 
  2818 ;;  val             1   12[COMRAM] unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  i               1   16[COMRAM] unsigned char 
  2821 ;;  ret             1   15[COMRAM] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      unsigned char 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2831 ;;      Params:         2       0       0       0       0       0       0
  2832 ;;      Locals:         2       0       0       0       0       0       0
  2833 ;;      Temps:          2       0       0       0       0       0       0
  2834 ;;      Totals:         6       0       0       0       0       0       0
  2835 ;;Total ram usage:        6 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 2
  2838 ;; This function calls:
  2839 ;;		_GPIO_pin_write_logic
  2840 ;; This function is called by:
  2841 ;;		_lcd_send_command
  2842 ;;		_lcd_send_char_data
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text9
  2847   000D94                     __ptext9:
  2848                           	callstack 0
  2849   000D94                     _lcd_send_8bits:
  2850                           	callstack 0
  2851   000D94  FFFF               	dw	65535	; assembler added errata NOP
  2852   000D96                     
  2853                           ;ECU_layer/LCD/ecu_LCD.c: 269:  if (((void*)0) == lcd)
  2854   000D96  5058               	movf	lcd_send_8bits@lcd^0,w,c
  2855   000D98  A4D8               	btfss	status,2,c
  2856   000D9A  EFD1  F006         	goto	u1851
  2857   000D9E  EFD4  F006         	goto	u1850
  2858   000DA2                     u1851:
  2859   000DA2  FFFF               	dw	65535	; assembler added errata NOP
  2860   000DA4  EFD8  F006         	goto	l270
  2861   000DA8                     u1850:
  2862   000DA8  FFFF               	dw	65535	; assembler added errata NOP
  2863   000DAA                     
  2864                           ;ECU_layer/LCD/ecu_LCD.c: 270:   ret = (STD_ReturnType)(0x00);
  2865   000DAA  6A5C               	clrf	lcd_send_8bits@ret^0,c
  2866   000DAC  EF0A  F007         	goto	l2440
  2867   000DB0                     l270:
  2868   000DB0  FFFF               	dw	65535	; assembler added errata NOP
  2869                           
  2870                           ;ECU_layer/LCD/ecu_LCD.c: 272:   for(i=0;i<8;i++){
  2871   000DB2  6A5D               	clrf	lcd_send_8bits@i^0,c
  2872   000DB4                     l2430:
  2873   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  2874                           
  2875                           ;ECU_layer/LCD/ecu_LCD.c: 273:    ret = GPIO_pin_write_logic(&(lcd -> lcd_data[i]), (val
      +                           >> i) & ((uint8) 0x01));
  2876   000DB6  5058               	movf	lcd_send_8bits@lcd^0,w,c
  2877   000DB8  245D               	addwf	lcd_send_8bits@i^0,w,c
  2878   000DBA  0F03               	addlw	3
  2879   000DBC  6E50               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2880   000DBE  C05D  F05A         	movff	lcd_send_8bits@i,??_lcd_send_8bits
  2881   000DC2  C059  F05B         	movff	lcd_send_8bits@val,??_lcd_send_8bits+1
  2882   000DC6  2A5A               	incf	??_lcd_send_8bits^0,f,c
  2883   000DC8  EFE9  F006         	goto	u1864
  2884   000DCC                     u1865:
  2885   000DCC  FFFF               	dw	65535	; assembler added errata NOP
  2886   000DCE  90D8               	bcf	status,0,c
  2887   000DD0  325B               	rrcf	(??_lcd_send_8bits+1)^0,f,c
  2888   000DD2                     u1864:
  2889   000DD2  FFFF               	dw	65535	; assembler added errata NOP
  2890   000DD4  2E5A               	decfsz	??_lcd_send_8bits^0,f,c
  2891   000DD6  EFE6  F006         	goto	u1865
  2892   000DDA  505B               	movf	(??_lcd_send_8bits+1)^0,w,c
  2893   000DDC  0B01               	andlw	1
  2894   000DDE  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  2895   000DE0  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2896   000DE4  6E5C               	movwf	lcd_send_8bits@ret^0,c
  2897   000DE6                     
  2898                           ;ECU_layer/LCD/ecu_LCD.c: 274:             if(ret==(STD_ReturnType)(0x00)){
  2899   000DE6  505C               	movf	lcd_send_8bits@ret^0,w,c
  2900   000DE8  A4D8               	btfss	status,2,c
  2901   000DEA  EFF9  F006         	goto	u1871
  2902   000DEE  EFFC  F006         	goto	u1870
  2903   000DF2                     u1871:
  2904   000DF2  FFFF               	dw	65535	; assembler added errata NOP
  2905   000DF4  EFFF  F006         	goto	l2436
  2906   000DF8                     u1870:
  2907   000DF8  FFFF               	dw	65535	; assembler added errata NOP
  2908   000DFA  EF0A  F007         	goto	l2440
  2909   000DFE                     l2436:
  2910   000DFE  FFFF               	dw	65535	; assembler added errata NOP
  2911                           
  2912                           ;ECU_layer/LCD/ecu_LCD.c: 277:         }
  2913   000E00  2A5D               	incf	lcd_send_8bits@i^0,f,c
  2914   000E02  0E07               	movlw	7
  2915   000E04  645D               	cpfsgt	lcd_send_8bits@i^0,c
  2916   000E06  EF07  F007         	goto	u1881
  2917   000E0A  EF0A  F007         	goto	u1880
  2918   000E0E                     u1881:
  2919   000E0E  FFFF               	dw	65535	; assembler added errata NOP
  2920   000E10  EFDA  F006         	goto	l2430
  2921   000E14                     u1880:
  2922   000E14                     l2440:
  2923   000E14  FFFF               	dw	65535	; assembler added errata NOP
  2924                           
  2925                           ;ECU_layer/LCD/ecu_LCD.c: 279:  return ret;
  2926   000E16  505C               	movf	lcd_send_8bits@ret^0,w,c
  2927   000E18  0012               	return		;funcret
  2928   000E1A  FFFF               	dw	65535	; errata NOP
  2929   000E1C                     __end_of_lcd_send_8bits:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _lcd_send_4bits *****************
  2933 ;; Defined at:
  2934 ;;		line 247 in file "ECU_layer/LCD/ecu_LCD.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  lcd             1   11[COMRAM] PTR const struct .
  2937 ;;		 -> LCD1(11), 
  2938 ;;  val             1   12[COMRAM] unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  i               1   16[COMRAM] unsigned char 
  2941 ;;  ret             1   15[COMRAM] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      unsigned char 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2951 ;;      Params:         2       0       0       0       0       0       0
  2952 ;;      Locals:         2       0       0       0       0       0       0
  2953 ;;      Temps:          2       0       0       0       0       0       0
  2954 ;;      Totals:         6       0       0       0       0       0       0
  2955 ;;Total ram usage:        6 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 2
  2958 ;; This function calls:
  2959 ;;		_GPIO_pin_write_logic
  2960 ;; This function is called by:
  2961 ;;		_lcd_send_command
  2962 ;;		_lcd_send_char_data
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text10
  2967   000E1C                     __ptext10:
  2968                           	callstack 0
  2969   000E1C                     _lcd_send_4bits:
  2970                           	callstack 0
  2971   000E1C  FFFF               	dw	65535	; assembler added errata NOP
  2972   000E1E                     
  2973                           ;ECU_layer/LCD/ecu_LCD.c: 250:  if (((void*)0) == lcd)
  2974   000E1E  5058               	movf	lcd_send_4bits@lcd^0,w,c
  2975   000E20  A4D8               	btfss	status,2,c
  2976   000E22  EF15  F007         	goto	u1801
  2977   000E26  EF18  F007         	goto	u1800
  2978   000E2A                     u1801:
  2979   000E2A  FFFF               	dw	65535	; assembler added errata NOP
  2980   000E2C  EF1C  F007         	goto	l262
  2981   000E30                     u1800:
  2982   000E30  FFFF               	dw	65535	; assembler added errata NOP
  2983   000E32                     
  2984                           ;ECU_layer/LCD/ecu_LCD.c: 251:   ret = (STD_ReturnType)(0x00);
  2985   000E32  6A5C               	clrf	lcd_send_4bits@ret^0,c
  2986   000E34  EF4E  F007         	goto	l2402
  2987   000E38                     l262:
  2988   000E38  FFFF               	dw	65535	; assembler added errata NOP
  2989                           
  2990                           ;ECU_layer/LCD/ecu_LCD.c: 253:   for(i=0;i<4;i++){
  2991   000E3A  6A5D               	clrf	lcd_send_4bits@i^0,c
  2992   000E3C                     l2392:
  2993   000E3C  FFFF               	dw	65535	; assembler added errata NOP
  2994                           
  2995                           ;ECU_layer/LCD/ecu_LCD.c: 254:    ret = GPIO_pin_write_logic(&(lcd -> lcd_data[i+4]), (v
      +                          al >> i) & (uint8) 0x01);
  2996   000E3E  5058               	movf	lcd_send_4bits@lcd^0,w,c
  2997   000E40  245D               	addwf	lcd_send_4bits@i^0,w,c
  2998   000E42  0F07               	addlw	7
  2999   000E44  6E50               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  3000   000E46  C05D  F05A         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  3001   000E4A  C059  F05B         	movff	lcd_send_4bits@val,??_lcd_send_4bits+1
  3002   000E4E  2A5A               	incf	??_lcd_send_4bits^0,f,c
  3003   000E50  EF2D  F007         	goto	u1814
  3004   000E54                     u1815:
  3005   000E54  FFFF               	dw	65535	; assembler added errata NOP
  3006   000E56  90D8               	bcf	status,0,c
  3007   000E58  325B               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3008   000E5A                     u1814:
  3009   000E5A  FFFF               	dw	65535	; assembler added errata NOP
  3010   000E5C  2E5A               	decfsz	??_lcd_send_4bits^0,f,c
  3011   000E5E  EF2A  F007         	goto	u1815
  3012   000E62  505B               	movf	(??_lcd_send_4bits+1)^0,w,c
  3013   000E64  0B01               	andlw	1
  3014   000E66  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  3015   000E68  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  3016   000E6C  6E5C               	movwf	lcd_send_4bits@ret^0,c
  3017   000E6E                     
  3018                           ;ECU_layer/LCD/ecu_LCD.c: 255:             if(ret==(STD_ReturnType)(0x00)){
  3019   000E6E  505C               	movf	lcd_send_4bits@ret^0,w,c
  3020   000E70  A4D8               	btfss	status,2,c
  3021   000E72  EF3D  F007         	goto	u1821
  3022   000E76  EF40  F007         	goto	u1820
  3023   000E7A                     u1821:
  3024   000E7A  FFFF               	dw	65535	; assembler added errata NOP
  3025   000E7C  EF43  F007         	goto	l2398
  3026   000E80                     u1820:
  3027   000E80  FFFF               	dw	65535	; assembler added errata NOP
  3028   000E82  EF4E  F007         	goto	l2402
  3029   000E86                     l2398:
  3030   000E86  FFFF               	dw	65535	; assembler added errata NOP
  3031                           
  3032                           ;ECU_layer/LCD/ecu_LCD.c: 258:         }
  3033   000E88  2A5D               	incf	lcd_send_4bits@i^0,f,c
  3034   000E8A  0E03               	movlw	3
  3035   000E8C  645D               	cpfsgt	lcd_send_4bits@i^0,c
  3036   000E8E  EF4B  F007         	goto	u1831
  3037   000E92  EF4E  F007         	goto	u1830
  3038   000E96                     u1831:
  3039   000E96  FFFF               	dw	65535	; assembler added errata NOP
  3040   000E98  EF1E  F007         	goto	l2392
  3041   000E9C                     u1830:
  3042   000E9C                     l2402:
  3043   000E9C  FFFF               	dw	65535	; assembler added errata NOP
  3044                           
  3045                           ;ECU_layer/LCD/ecu_LCD.c: 260:  return ret;
  3046   000E9E  505C               	movf	lcd_send_4bits@ret^0,w,c
  3047   000EA0  0012               	return		;funcret
  3048   000EA2  FFFF               	dw	65535	; errata NOP
  3049   000EA4                     __end_of_lcd_send_4bits:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _lcd_check_access *****************
  3053 ;; Defined at:
  3054 ;;		line 13 in file "ECU_layer/LCD/ecu_LCD.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  lcd             1    3[COMRAM] PTR const struct .
  3057 ;;		 -> LCD1(11), 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  i               1    6[COMRAM] unsigned char 
  3060 ;;  ret             1    5[COMRAM] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      unsigned char 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3070 ;;      Params:         1       0       0       0       0       0       0
  3071 ;;      Locals:         2       0       0       0       0       0       0
  3072 ;;      Temps:          1       0       0       0       0       0       0
  3073 ;;      Totals:         4       0       0       0       0       0       0
  3074 ;;Total ram usage:        4 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 1
  3077 ;; This function calls:
  3078 ;;		_GPIO_check_access
  3079 ;; This function is called by:
  3080 ;;		_lcd_initialize
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text11
  3085   000914                     __ptext11:
  3086                           	callstack 0
  3087   000914                     _lcd_check_access:
  3088                           	callstack 0
  3089   000914  FFFF               	dw	65535	; assembler added errata NOP
  3090   000916                     
  3091                           ;ECU_layer/LCD/ecu_LCD.c: 15:  uint8 i;;ECU_layer/LCD/ecu_LCD.c: 16:  if(((STD_ReturnTyp
      +                          e)(0x00) == GPIO_check_access(&(lcd -> lcd_rs))) || ((STD_ReturnType)(0x00) == GPIO_chec
      +                          k_access(&(lcd -> lcd_en)))){
  3092   000916  C050  F04D         	movff	lcd_check_access@lcd,GPIO_check_access@_pin_config
  3093   00091A  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3094   00091E  0900               	iorlw	0
  3095   000920  B4D8               	btfsc	status,2,c
  3096   000922  EF95  F004         	goto	u1901
  3097   000926  EF98  F004         	goto	u1900
  3098   00092A                     u1901:
  3099   00092A  FFFF               	dw	65535	; assembler added errata NOP
  3100   00092C  EFA6  F004         	goto	l173
  3101   000930                     u1900:
  3102   000930  FFFF               	dw	65535	; assembler added errata NOP
  3103   000932  2850               	incf	lcd_check_access@lcd^0,w,c
  3104   000934  6E4D               	movwf	GPIO_check_access@_pin_config^0,c
  3105   000936  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3106   00093A  0900               	iorlw	0
  3107   00093C  A4D8               	btfss	status,2,c
  3108   00093E  EFA3  F004         	goto	u1911
  3109   000942  EFA6  F004         	goto	u1910
  3110   000946                     u1911:
  3111   000946  FFFF               	dw	65535	; assembler added errata NOP
  3112   000948  EFAA  F004         	goto	l2462
  3113   00094C                     u1910:
  3114   00094C                     l173:
  3115   00094C  FFFF               	dw	65535	; assembler added errata NOP
  3116                           
  3117                           ;ECU_layer/LCD/ecu_LCD.c: 17:   ret = (STD_ReturnType)(0x00);
  3118   00094E  6A52               	clrf	lcd_check_access@ret^0,c
  3119                           
  3120                           ;ECU_layer/LCD/ecu_LCD.c: 18:  }
  3121   000950  EF15  F005         	goto	l174
  3122   000954                     l2462:
  3123   000954  FFFF               	dw	65535	; assembler added errata NOP
  3124                           
  3125                           ;ECU_layer/LCD/ecu_LCD.c: 20:   if(lcd -> bit_mode == 0){
  3126   000956  5050               	movf	lcd_check_access@lcd^0,w,c
  3127   000958  6ED9               	movwf	fsr2l,c
  3128   00095A  6ADA               	clrf	fsr2h,c
  3129   00095C  0E02               	movlw	2
  3130   00095E  26D9               	addwf	fsr2l,f,c
  3131   000960  50DF               	movf	indf2,w,c
  3132   000962  A4D8               	btfss	status,2,c
  3133   000964  EFB6  F004         	goto	u1921
  3134   000968  EFB9  F004         	goto	u1920
  3135   00096C                     u1921:
  3136   00096C  FFFF               	dw	65535	; assembler added errata NOP
  3137   00096E  EFDF  F004         	goto	l2484
  3138   000972                     u1920:
  3139   000972  FFFF               	dw	65535	; assembler added errata NOP
  3140   000974                     
  3141                           ;ECU_layer/LCD/ecu_LCD.c: 21:    for(i=0;i<4;i++){
  3142   000974  6A53               	clrf	lcd_check_access@i^0,c
  3143   000976                     l2470:
  3144   000976  FFFF               	dw	65535	; assembler added errata NOP
  3145                           
  3146                           ;ECU_layer/LCD/ecu_LCD.c: 22:     ret = GPIO_check_access(&(lcd -> lcd_data[i+4]));
  3147   000978  5050               	movf	lcd_check_access@lcd^0,w,c
  3148   00097A  2453               	addwf	lcd_check_access@i^0,w,c
  3149   00097C  0F07               	addlw	7
  3150   00097E  6E4D               	movwf	GPIO_check_access@_pin_config^0,c
  3151   000980  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3152   000984  6E52               	movwf	lcd_check_access@ret^0,c
  3153   000986                     
  3154                           ;ECU_layer/LCD/ecu_LCD.c: 23:     if (ret == (STD_ReturnType)(0x00)){
  3155   000986  5052               	movf	lcd_check_access@ret^0,w,c
  3156   000988  A4D8               	btfss	status,2,c
  3157   00098A  EFC9  F004         	goto	u1931
  3158   00098E  EFCC  F004         	goto	u1930
  3159   000992                     u1931:
  3160   000992  FFFF               	dw	65535	; assembler added errata NOP
  3161   000994  EFD1  F004         	goto	l2480
  3162   000998                     u1930:
  3163   000998  FFFF               	dw	65535	; assembler added errata NOP
  3164   00099A                     l2474:
  3165   00099A  FFFF               	dw	65535	; assembler added errata NOP
  3166                           
  3167                           ;ECU_layer/LCD/ecu_LCD.c: 24:      return (STD_ReturnType)(0x00);
  3168   00099C  0E00               	movlw	0
  3169   00099E  EF17  F005         	goto	l179
  3170   0009A2                     l2480:
  3171   0009A2  FFFF               	dw	65535	; assembler added errata NOP
  3172                           
  3173                           ;ECU_layer/LCD/ecu_LCD.c: 27:    }
  3174   0009A4  2A53               	incf	lcd_check_access@i^0,f,c
  3175   0009A6  0E03               	movlw	3
  3176   0009A8  6453               	cpfsgt	lcd_check_access@i^0,c
  3177   0009AA  EFD9  F004         	goto	u1941
  3178   0009AE  EFDC  F004         	goto	u1940
  3179   0009B2                     u1941:
  3180   0009B2  FFFF               	dw	65535	; assembler added errata NOP
  3181   0009B4  EFBB  F004         	goto	l2470
  3182   0009B8                     u1940:
  3183   0009B8  FFFF               	dw	65535	; assembler added errata NOP
  3184   0009BA  EF15  F005         	goto	l174
  3185   0009BE                     l2484:
  3186   0009BE  FFFF               	dw	65535	; assembler added errata NOP
  3187   0009C0  5050               	movf	lcd_check_access@lcd^0,w,c
  3188   0009C2  6ED9               	movwf	fsr2l,c
  3189   0009C4  6ADA               	clrf	fsr2h,c
  3190   0009C6  0E02               	movlw	2
  3191   0009C8  26D9               	addwf	fsr2l,f,c
  3192   0009CA  04DE               	decf	postinc2,w,c
  3193   0009CC  A4D8               	btfss	status,2,c
  3194   0009CE  EFEB  F004         	goto	u1951
  3195   0009D2  EFEE  F004         	goto	u1950
  3196   0009D6                     u1951:
  3197   0009D6  FFFF               	dw	65535	; assembler added errata NOP
  3198   0009D8  EF12  F005         	goto	l2506
  3199   0009DC                     u1950:
  3200   0009DC  FFFF               	dw	65535	; assembler added errata NOP
  3201   0009DE                     
  3202                           ;ECU_layer/LCD/ecu_LCD.c: 30:    for(i=0;i<8;i++){
  3203   0009DE  6A53               	clrf	lcd_check_access@i^0,c
  3204   0009E0                     l2492:
  3205   0009E0  FFFF               	dw	65535	; assembler added errata NOP
  3206                           
  3207                           ;ECU_layer/LCD/ecu_LCD.c: 31:     ret = GPIO_check_access(&(lcd -> lcd_data[i]));
  3208   0009E2  5050               	movf	lcd_check_access@lcd^0,w,c
  3209   0009E4  2453               	addwf	lcd_check_access@i^0,w,c
  3210   0009E6  0F03               	addlw	3
  3211   0009E8  6E4D               	movwf	GPIO_check_access@_pin_config^0,c
  3212   0009EA  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3213   0009EE  6E52               	movwf	lcd_check_access@ret^0,c
  3214   0009F0                     
  3215                           ;ECU_layer/LCD/ecu_LCD.c: 32:     if (ret == (STD_ReturnType)(0x00)){
  3216   0009F0  5052               	movf	lcd_check_access@ret^0,w,c
  3217   0009F2  A4D8               	btfss	status,2,c
  3218   0009F4  EFFE  F004         	goto	u1961
  3219   0009F8  EF01  F005         	goto	u1960
  3220   0009FC                     u1961:
  3221   0009FC  FFFF               	dw	65535	; assembler added errata NOP
  3222   0009FE  EF04  F005         	goto	l2502
  3223   000A02                     u1960:
  3224   000A02  FFFF               	dw	65535	; assembler added errata NOP
  3225   000A04  EFCD  F004         	goto	l2474
  3226   000A08                     l2502:
  3227   000A08  FFFF               	dw	65535	; assembler added errata NOP
  3228                           
  3229                           ;ECU_layer/LCD/ecu_LCD.c: 36:    }
  3230   000A0A  2A53               	incf	lcd_check_access@i^0,f,c
  3231   000A0C  0E07               	movlw	7
  3232   000A0E  6453               	cpfsgt	lcd_check_access@i^0,c
  3233   000A10  EF0C  F005         	goto	u1971
  3234   000A14  EF0F  F005         	goto	u1970
  3235   000A18                     u1971:
  3236   000A18  FFFF               	dw	65535	; assembler added errata NOP
  3237   000A1A  EFF0  F004         	goto	l2492
  3238   000A1E                     u1970:
  3239   000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3240   000A20  EF15  F005         	goto	l174
  3241   000A24                     l2506:
  3242   000A24  FFFF               	dw	65535	; assembler added errata NOP
  3243                           
  3244                           ;ECU_layer/LCD/ecu_LCD.c: 39:    ret = (STD_ReturnType)(0x01);
  3245   000A26  0E01               	movlw	1
  3246   000A28  6E52               	movwf	lcd_check_access@ret^0,c
  3247   000A2A                     l174:
  3248   000A2A  FFFF               	dw	65535	; assembler added errata NOP
  3249                           
  3250                           ;ECU_layer/LCD/ecu_LCD.c: 41:  return ret;
  3251   000A2C  5052               	movf	lcd_check_access@ret^0,w,c
  3252   000A2E                     l179:
  3253   000A2E  FFFF               	dw	65535	; assembler added errata NOP
  3254   000A30  0012               	return		;funcret
  3255   000A32  FFFF               	dw	65535	; errata NOP
  3256   000A34                     __end_of_lcd_check_access:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _GPIO_pin_initialize *****************
  3260 ;; Defined at:
  3261 ;;		line 29 in file "MCAL_layer/GPIO/hal_gpio.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  _pin_config     1   11[COMRAM] PTR const struct .
  3264 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_initialize@lpin(1), LED_initialize@pin_local(1), 
  3265 ;;		 -> keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize
      +@lpin(4), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  ret             1   12[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3277 ;;      Params:         1       0       0       0       0       0       0
  3278 ;;      Locals:         1       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0
  3280 ;;      Totals:         2       0       0       0       0       0       0
  3281 ;;Total ram usage:        2 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 2
  3284 ;; This function calls:
  3285 ;;		_GPIO_check_access
  3286 ;;		_GPIO_pin_direction_initialize
  3287 ;;		_GPIO_pin_write_logic
  3288 ;; This function is called by:
  3289 ;;		_lcd_initialize
  3290 ;;		_seven_segment_initialize
  3291 ;;		_dc_motor_initialize
  3292 ;;		_keypad_initialize
  3293 ;;		_LED_initialize
  3294 ;;		_relay_initialize
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text12
  3299   000F00                     __ptext12:
  3300                           	callstack 0
  3301   000F00                     _GPIO_pin_initialize:
  3302                           	callstack 0
  3303   000F00  FFFF               	dw	65535	; assembler added errata NOP
  3304   000F02                     
  3305                           ;MCAL_layer/GPIO/hal_gpio.c: 31:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3306   000F02  C058  F04D         	movff	GPIO_pin_initialize@_pin_config,GPIO_check_access@_pin_config
  3307   000F06  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3308   000F0A  0900               	iorlw	0
  3309   000F0C  A4D8               	btfss	status,2,c
  3310   000F0E  EF8B  F007         	goto	u1891
  3311   000F12  EF8E  F007         	goto	u1890
  3312   000F16                     u1891:
  3313   000F16  FFFF               	dw	65535	; assembler added errata NOP
  3314   000F18  EF92  F007         	goto	l2450
  3315   000F1C                     u1890:
  3316   000F1C  FFFF               	dw	65535	; assembler added errata NOP
  3317   000F1E                     
  3318                           ;MCAL_layer/GPIO/hal_gpio.c: 32:   ret = (STD_ReturnType)(0x00);
  3319   000F1E  6A59               	clrf	GPIO_pin_initialize@ret^0,c
  3320                           
  3321                           ;MCAL_layer/GPIO/hal_gpio.c: 33:  }
  3322   000F20  EFA4  F007         	goto	l2452
  3323   000F24                     l2450:
  3324   000F24  FFFF               	dw	65535	; assembler added errata NOP
  3325                           
  3326                           ;MCAL_layer/GPIO/hal_gpio.c: 35:   ret = GPIO_pin_direction_initialize(_pin_config);
  3327   000F26  C058  F050         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_direction_initialize@_pin_config
  3328   000F2A  EC1A  F005         	call	_GPIO_pin_direction_initialize	;wreg free
  3329   000F2E  6E59               	movwf	GPIO_pin_initialize@ret^0,c
  3330                           
  3331                           ;MCAL_layer/GPIO/hal_gpio.c: 36:   ret = GPIO_pin_write_logic(_pin_config, _pin_config -
      +                          > logic);
  3332   000F30  C058  F050         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_write_logic@_pin_config
  3333   000F34  5058               	movf	GPIO_pin_initialize@_pin_config^0,w,c
  3334   000F36  6ED9               	movwf	fsr2l,c
  3335   000F38  6ADA               	clrf	fsr2h,c
  3336   000F3A  0E00               	movlw	0
  3337   000F3C  BEDF               	btfsc	indf2,7,c
  3338   000F3E  0E01               	movlw	1
  3339   000F40  6E51               	movwf	GPIO_pin_write_logic@logic^0,c
  3340   000F42  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  3341   000F46  6E59               	movwf	GPIO_pin_initialize@ret^0,c
  3342   000F48                     l2452:
  3343   000F48  FFFF               	dw	65535	; assembler added errata NOP
  3344                           
  3345                           ;MCAL_layer/GPIO/hal_gpio.c: 38:     return ret;
  3346   000F4A  5059               	movf	GPIO_pin_initialize@ret^0,w,c
  3347   000F4C  0012               	return		;funcret
  3348   000F4E  FFFF               	dw	65535	; errata NOP
  3349   000F50                     __end_of_GPIO_pin_initialize:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _GPIO_pin_write_logic *****************
  3353 ;; Defined at:
  3354 ;;		line 77 in file "MCAL_layer/GPIO/hal_gpio.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  _pin_config     1    3[COMRAM] PTR const struct .
  3357 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_turn_off@lpin(1), relay_turn_on@lpin(1), 
  3358 ;;		 -> relay_initialize@lpin(1), LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), 
  3359 ;;		 -> keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), 
  3360 ;;		 -> dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin
      +1(1), 
  3361 ;;		 -> dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_write_number@lpin(4), seven_segment_in
      +itialize@lpin(4), 
  3362 ;;  logic           1    4[COMRAM] enum E2776
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  ret             1   10[COMRAM] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      unsigned char 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3374 ;;      Params:         2       0       0       0       0       0       0
  3375 ;;      Locals:         1       0       0       0       0       0       0
  3376 ;;      Temps:          5       0       0       0       0       0       0
  3377 ;;      Totals:         8       0       0       0       0       0       0
  3378 ;;Total ram usage:        8 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 1
  3381 ;; This function calls:
  3382 ;;		_GPIO_check_access
  3383 ;; This function is called by:
  3384 ;;		_lcd_send_command
  3385 ;;		_lcd_send_char_data
  3386 ;;		_lcd_send_4bits
  3387 ;;		_lcd_send_8bits
  3388 ;;		_lcd_send_en
  3389 ;;		_GPIO_pin_initialize
  3390 ;;		_seven_segment_write_number
  3391 ;;		_seven_segment_write_2digit_number
  3392 ;;		_dc_motor_turn_right
  3393 ;;		_dc_motor_turn_left
  3394 ;;		_dc_motor_stop
  3395 ;;		_keypad_read_number
  3396 ;;		_LED_on
  3397 ;;		_LED_off
  3398 ;;		_relay_turn_on
  3399 ;;		_relay_turn_off
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text13
  3404   000B4C                     __ptext13:
  3405                           	callstack 0
  3406   000B4C                     _GPIO_pin_write_logic:
  3407                           	callstack 0
  3408   000B4C  FFFF               	dw	65535	; assembler added errata NOP
  3409   000B4E                     
  3410                           ;MCAL_layer/GPIO/hal_gpio.c: 79:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3411   000B4E  0E01               	movlw	1
  3412   000B50  6E57               	movwf	GPIO_pin_write_logic@ret^0,c
  3413   000B52                     
  3414                           ;MCAL_layer/GPIO/hal_gpio.c: 80:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3415   000B52  C050  F04D         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  3416   000B56  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3417   000B5A  0900               	iorlw	0
  3418   000B5C  A4D8               	btfss	status,2,c
  3419   000B5E  EFB3  F005         	goto	u1731
  3420   000B62  EFB6  F005         	goto	u1730
  3421   000B66                     u1731:
  3422   000B66  FFFF               	dw	65535	; assembler added errata NOP
  3423   000B68  EF14  F006         	goto	l2356
  3424   000B6C                     u1730:
  3425   000B6C  FFFF               	dw	65535	; assembler added errata NOP
  3426   000B6E                     l2350:
  3427   000B6E  FFFF               	dw	65535	; assembler added errata NOP
  3428                           
  3429                           ;MCAL_layer/GPIO/hal_gpio.c: 81:   ret = (STD_ReturnType)(0x00);
  3430   000B70  6A57               	clrf	GPIO_pin_write_logic@ret^0,c
  3431                           
  3432                           ;MCAL_layer/GPIO/hal_gpio.c: 82:  }
  3433   000B72  EF2B  F006         	goto	l2358
  3434   000B76                     l2352:
  3435   000B76  FFFF               	dw	65535	; assembler added errata NOP
  3436                           
  3437                           ;MCAL_layer/GPIO/hal_gpio.c: 86:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _pi
      +                          n_config -> pin));
  3438   000B78  5050               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3439   000B7A  6ED9               	movwf	fsr2l,c
  3440   000B7C  6ADA               	clrf	fsr2h,c
  3441   000B7E  30DF               	rrcf	223,w,c
  3442   000B80  32E8               	rrcf	wreg,f,c
  3443   000B82  32E8               	rrcf	wreg,f,c
  3444   000B84  0B07               	andlw	7
  3445   000B86  6E52               	movwf	??_GPIO_pin_write_logic^0,c
  3446   000B88  0E01               	movlw	1
  3447   000B8A  6E53               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  3448   000B8C  2A52               	incf	??_GPIO_pin_write_logic^0,f,c
  3449   000B8E  EFCC  F005         	goto	u1744
  3450   000B92                     u1745:
  3451   000B92  FFFF               	dw	65535	; assembler added errata NOP
  3452   000B94  90D8               	bcf	status,0,c
  3453   000B96  3653               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  3454   000B98                     u1744:
  3455   000B98  FFFF               	dw	65535	; assembler added errata NOP
  3456   000B9A  2E52               	decfsz	??_GPIO_pin_write_logic^0,f,c
  3457   000B9C  EFC9  F005         	goto	u1745
  3458   000BA0  5053               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  3459   000BA2  0AFF               	xorlw	255
  3460   000BA4  6E54               	movwf	(??_GPIO_pin_write_logic+2)^0,c
  3461   000BA6  5050               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3462   000BA8  6ED9               	movwf	fsr2l,c
  3463   000BAA  6ADA               	clrf	fsr2h,c
  3464   000BAC  50DF               	movf	223,w,c
  3465   000BAE  0B07               	andlw	7
  3466   000BB0  0D02               	mullw	2
  3467   000BB2  50F3               	movf	243,w,c
  3468   000BB4  0F0B               	addlw	low __LAT_registers
  3469   000BB6  6ED9               	movwf	fsr2l,c
  3470   000BB8  6ADA               	clrf	fsr2h,c
  3471   000BBA  CFDE F055          	movff	postinc2,??_GPIO_pin_write_logic+3
  3472   000BBE  CFDD F056          	movff	postdec2,??_GPIO_pin_write_logic+4
  3473   000BC2  C055  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  3474   000BC6  C056  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  3475   000BCA  5054               	movf	(??_GPIO_pin_write_logic+2)^0,w,c
  3476   000BCC  16DF               	andwf	indf2,f,c
  3477                           
  3478                           ;MCAL_layer/GPIO/hal_gpio.c: 87:    break;
  3479   000BCE  EF2B  F006         	goto	l2358
  3480   000BD2                     l2354:
  3481   000BD2  FFFF               	dw	65535	; assembler added errata NOP
  3482                           
  3483                           ;MCAL_layer/GPIO/hal_gpio.c: 89:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pin
      +                          _config -> pin));
  3484   000BD4  5050               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3485   000BD6  6ED9               	movwf	fsr2l,c
  3486   000BD8  6ADA               	clrf	fsr2h,c
  3487   000BDA  30DF               	rrcf	223,w,c
  3488   000BDC  32E8               	rrcf	wreg,f,c
  3489   000BDE  32E8               	rrcf	wreg,f,c
  3490   000BE0  0B07               	andlw	7
  3491   000BE2  6E52               	movwf	??_GPIO_pin_write_logic^0,c
  3492   000BE4  0E01               	movlw	1
  3493   000BE6  6E53               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  3494   000BE8  2A52               	incf	??_GPIO_pin_write_logic^0,f,c
  3495   000BEA  EFFA  F005         	goto	u1754
  3496   000BEE                     u1755:
  3497   000BEE  FFFF               	dw	65535	; assembler added errata NOP
  3498   000BF0  90D8               	bcf	status,0,c
  3499   000BF2  3653               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  3500   000BF4                     u1754:
  3501   000BF4  FFFF               	dw	65535	; assembler added errata NOP
  3502   000BF6  2E52               	decfsz	??_GPIO_pin_write_logic^0,f,c
  3503   000BF8  EFF7  F005         	goto	u1755
  3504   000BFC  5050               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3505   000BFE  6ED9               	movwf	fsr2l,c
  3506   000C00  6ADA               	clrf	fsr2h,c
  3507   000C02  50DF               	movf	223,w,c
  3508   000C04  0B07               	andlw	7
  3509   000C06  0D02               	mullw	2
  3510   000C08  50F3               	movf	243,w,c
  3511   000C0A  0F0B               	addlw	low __LAT_registers
  3512   000C0C  6ED9               	movwf	fsr2l,c
  3513   000C0E  6ADA               	clrf	fsr2h,c
  3514   000C10  CFDE F054          	movff	postinc2,??_GPIO_pin_write_logic+2
  3515   000C14  CFDD F055          	movff	postdec2,??_GPIO_pin_write_logic+3
  3516   000C18  C054  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  3517   000C1C  C055  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  3518   000C20  5053               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  3519   000C22  12DF               	iorwf	indf2,f,c
  3520                           
  3521                           ;MCAL_layer/GPIO/hal_gpio.c: 90:    break;
  3522   000C24  EF2B  F006         	goto	l2358
  3523   000C28                     l2356:
  3524   000C28  FFFF               	dw	65535	; assembler added errata NOP
  3525   000C2A  5051               	movf	GPIO_pin_write_logic@logic^0,w,c
  3526   000C2C  6E52               	movwf	??_GPIO_pin_write_logic^0,c
  3527   000C2E  6A53               	clrf	(??_GPIO_pin_write_logic+1)^0,c
  3528                           
  3529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3530                           ; Switch size 1, requested type "simple"
  3531                           ; Number of cases is 1, Range of values is 0 to 0
  3532                           ; switch strategies available:
  3533                           ; Name         Instructions Cycles
  3534                           ; simple_byte            4     3 (average)
  3535                           ;	Chosen strategy is simple_byte
  3536   000C30  5053               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  3537   000C32  0A00               	xorlw	0	; case 0
  3538   000C34  B4D8               	btfsc	status,2,c
  3539   000C36  EF1F  F006         	goto	l3166
  3540   000C3A  EFB7  F005         	goto	l2350
  3541   000C3E                     l3166:
  3542   000C3E  FFFF               	dw	65535	; assembler added errata NOP
  3543                           
  3544                           ; Switch size 1, requested type "simple"
  3545                           ; Number of cases is 2, Range of values is 0 to 1
  3546                           ; switch strategies available:
  3547                           ; Name         Instructions Cycles
  3548                           ; simple_byte            7     4 (average)
  3549                           ;	Chosen strategy is simple_byte
  3550   000C40  5052               	movf	??_GPIO_pin_write_logic^0,w,c
  3551   000C42  0A00               	xorlw	0	; case 0
  3552   000C44  B4D8               	btfsc	status,2,c
  3553   000C46  EFBB  F005         	goto	l2352
  3554   000C4A  0A01               	xorlw	1	; case 1
  3555   000C4C  B4D8               	btfsc	status,2,c
  3556   000C4E  EFE9  F005         	goto	l2354
  3557   000C52  EFB7  F005         	goto	l2350
  3558   000C56                     l2358:
  3559   000C56  FFFF               	dw	65535	; assembler added errata NOP
  3560                           
  3561                           ;MCAL_layer/GPIO/hal_gpio.c: 95:  return ret;
  3562   000C58  5057               	movf	GPIO_pin_write_logic@ret^0,w,c
  3563   000C5A  0012               	return		;funcret
  3564   000C5C  FFFF               	dw	65535	; errata NOP
  3565   000C5E                     __end_of_GPIO_pin_write_logic:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _GPIO_pin_direction_initialize *****************
  3569 ;; Defined at:
  3570 ;;		line 42 in file "MCAL_layer/GPIO/hal_gpio.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  _pin_config     1    3[COMRAM] PTR const struct .
  3573 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_initialize@lpin(1), LED_initialize@pin_local(1), 
  3574 ;;		 -> keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(
      +1), 
  3575 ;;		 -> seven_segment_initialize@lpin(4), 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  ret             1    9[COMRAM] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      unsigned char 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         1       0       0       0       0       0       0
  3588 ;;      Locals:         1       0       0       0       0       0       0
  3589 ;;      Temps:          5       0       0       0       0       0       0
  3590 ;;      Totals:         7       0       0       0       0       0       0
  3591 ;;Total ram usage:        7 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 1
  3594 ;; This function calls:
  3595 ;;		_GPIO_check_access
  3596 ;; This function is called by:
  3597 ;;		_GPIO_pin_initialize
  3598 ;;		_keypad_initialize
  3599 ;;		_btn_initialize
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text14
  3604   000A34                     __ptext14:
  3605                           	callstack 0
  3606   000A34                     _GPIO_pin_direction_initialize:
  3607                           	callstack 0
  3608   000A34  FFFF               	dw	65535	; assembler added errata NOP
  3609   000A36                     
  3610                           ;MCAL_layer/GPIO/hal_gpio.c: 43:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3611   000A36  0E01               	movlw	1
  3612   000A38  6E56               	movwf	GPIO_pin_direction_initialize@ret^0,c
  3613   000A3A                     
  3614                           ;MCAL_layer/GPIO/hal_gpio.c: 44:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3615   000A3A  C050  F04D         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  3616   000A3E  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3617   000A42  0900               	iorlw	0
  3618   000A44  A4D8               	btfss	status,2,c
  3619   000A46  EF27  F005         	goto	u1761
  3620   000A4A  EF2A  F005         	goto	u1760
  3621   000A4E                     u1761:
  3622   000A4E  FFFF               	dw	65535	; assembler added errata NOP
  3623   000A50  EF88  F005         	goto	l2376
  3624   000A54                     u1760:
  3625   000A54  FFFF               	dw	65535	; assembler added errata NOP
  3626   000A56                     l2370:
  3627   000A56  FFFF               	dw	65535	; assembler added errata NOP
  3628                           
  3629                           ;MCAL_layer/GPIO/hal_gpio.c: 45:   ret = (STD_ReturnType)(0x00);
  3630   000A58  6A56               	clrf	GPIO_pin_direction_initialize@ret^0,c
  3631                           
  3632                           ;MCAL_layer/GPIO/hal_gpio.c: 46:  }
  3633   000A5A  EFA2  F005         	goto	l2378
  3634   000A5E                     l2372:
  3635   000A5E  FFFF               	dw	65535	; assembler added errata NOP
  3636                           
  3637                           ;MCAL_layer/GPIO/hal_gpio.c: 50:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3638   000A60  5050               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3639   000A62  6ED9               	movwf	fsr2l,c
  3640   000A64  6ADA               	clrf	fsr2h,c
  3641   000A66  30DF               	rrcf	223,w,c
  3642   000A68  32E8               	rrcf	wreg,f,c
  3643   000A6A  32E8               	rrcf	wreg,f,c
  3644   000A6C  0B07               	andlw	7
  3645   000A6E  6E51               	movwf	??_GPIO_pin_direction_initialize^0,c
  3646   000A70  0E01               	movlw	1
  3647   000A72  6E52               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  3648   000A74  2A51               	incf	??_GPIO_pin_direction_initialize^0,f,c
  3649   000A76  EF40  F005         	goto	u1774
  3650   000A7A                     u1775:
  3651   000A7A  FFFF               	dw	65535	; assembler added errata NOP
  3652   000A7C  90D8               	bcf	status,0,c
  3653   000A7E  3652               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  3654   000A80                     u1774:
  3655   000A80  FFFF               	dw	65535	; assembler added errata NOP
  3656   000A82  2E51               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  3657   000A84  EF3D  F005         	goto	u1775
  3658   000A88  5052               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  3659   000A8A  0AFF               	xorlw	255
  3660   000A8C  6E53               	movwf	(??_GPIO_pin_direction_initialize+2)^0,c
  3661   000A8E  5050               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3662   000A90  6ED9               	movwf	fsr2l,c
  3663   000A92  6ADA               	clrf	fsr2h,c
  3664   000A94  50DF               	movf	223,w,c
  3665   000A96  0B07               	andlw	7
  3666   000A98  0D02               	mullw	2
  3667   000A9A  50F3               	movf	243,w,c
  3668   000A9C  0F15               	addlw	low __TRIS_registers
  3669   000A9E  6ED9               	movwf	fsr2l,c
  3670   000AA0  6ADA               	clrf	fsr2h,c
  3671   000AA2  CFDE F054          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  3672   000AA6  CFDD F055          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  3673   000AAA  C054  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  3674   000AAE  C055  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  3675   000AB2  5053               	movf	(??_GPIO_pin_direction_initialize+2)^0,w,c
  3676   000AB4  16DF               	andwf	indf2,f,c
  3677                           
  3678                           ;MCAL_layer/GPIO/hal_gpio.c: 51:     break;
  3679   000AB6  EFA2  F005         	goto	l2378
  3680   000ABA                     l2374:
  3681   000ABA  FFFF               	dw	65535	; assembler added errata NOP
  3682                           
  3683                           ;MCAL_layer/GPIO/hal_gpio.c: 53:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  3684   000ABC  5050               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3685   000ABE  6ED9               	movwf	fsr2l,c
  3686   000AC0  6ADA               	clrf	fsr2h,c
  3687   000AC2  30DF               	rrcf	223,w,c
  3688   000AC4  32E8               	rrcf	wreg,f,c
  3689   000AC6  32E8               	rrcf	wreg,f,c
  3690   000AC8  0B07               	andlw	7
  3691   000ACA  6E51               	movwf	??_GPIO_pin_direction_initialize^0,c
  3692   000ACC  0E01               	movlw	1
  3693   000ACE  6E52               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  3694   000AD0  2A51               	incf	??_GPIO_pin_direction_initialize^0,f,c
  3695   000AD2  EF6E  F005         	goto	u1784
  3696   000AD6                     u1785:
  3697   000AD6  FFFF               	dw	65535	; assembler added errata NOP
  3698   000AD8  90D8               	bcf	status,0,c
  3699   000ADA  3652               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  3700   000ADC                     u1784:
  3701   000ADC  FFFF               	dw	65535	; assembler added errata NOP
  3702   000ADE  2E51               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  3703   000AE0  EF6B  F005         	goto	u1785
  3704   000AE4  5050               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3705   000AE6  6ED9               	movwf	fsr2l,c
  3706   000AE8  6ADA               	clrf	fsr2h,c
  3707   000AEA  50DF               	movf	223,w,c
  3708   000AEC  0B07               	andlw	7
  3709   000AEE  0D02               	mullw	2
  3710   000AF0  50F3               	movf	243,w,c
  3711   000AF2  0F15               	addlw	low __TRIS_registers
  3712   000AF4  6ED9               	movwf	fsr2l,c
  3713   000AF6  6ADA               	clrf	fsr2h,c
  3714   000AF8  CFDE F053          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  3715   000AFC  CFDD F054          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  3716   000B00  C053  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  3717   000B04  C054  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  3718   000B08  5052               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  3719   000B0A  12DF               	iorwf	indf2,f,c
  3720                           
  3721                           ;MCAL_layer/GPIO/hal_gpio.c: 54:     break;
  3722   000B0C  EFA2  F005         	goto	l2378
  3723   000B10                     l2376:
  3724   000B10  FFFF               	dw	65535	; assembler added errata NOP
  3725   000B12  5050               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3726   000B14  6ED9               	movwf	fsr2l,c
  3727   000B16  6ADA               	clrf	fsr2h,c
  3728   000B18  BCDF               	btfsc	indf2,6,c
  3729   000B1A  EF91  F005         	goto	u1791
  3730   000B1E  EF95  F005         	goto	u1790
  3731   000B22                     u1791:
  3732   000B22  FFFF               	dw	65535	; assembler added errata NOP
  3733   000B24  0E01               	movlw	1
  3734   000B26  EF97  F005         	goto	u1796
  3735   000B2A                     u1790:
  3736   000B2A  FFFF               	dw	65535	; assembler added errata NOP
  3737   000B2C  0E00               	movlw	0
  3738   000B2E                     u1796:
  3739   000B2E  FFFF               	dw	65535	; assembler added errata NOP
  3740                           
  3741                           ; Switch size 1, requested type "simple"
  3742                           ; Number of cases is 2, Range of values is 0 to 1
  3743                           ; switch strategies available:
  3744                           ; Name         Instructions Cycles
  3745                           ; simple_byte            7     4 (average)
  3746                           ;	Chosen strategy is simple_byte
  3747   000B30  0A00               	xorlw	0	; case 0
  3748   000B32  B4D8               	btfsc	status,2,c
  3749   000B34  EF2F  F005         	goto	l2372
  3750   000B38  0A01               	xorlw	1	; case 1
  3751   000B3A  B4D8               	btfsc	status,2,c
  3752   000B3C  EF5D  F005         	goto	l2374
  3753   000B40  EF2B  F005         	goto	l2370
  3754   000B44                     l2378:
  3755   000B44  FFFF               	dw	65535	; assembler added errata NOP
  3756                           
  3757                           ;MCAL_layer/GPIO/hal_gpio.c: 59:  return ret;
  3758   000B46  5056               	movf	GPIO_pin_direction_initialize@ret^0,w,c
  3759   000B48  0012               	return		;funcret
  3760   000B4A  FFFF               	dw	65535	; errata NOP
  3761   000B4C                     __end_of_GPIO_pin_direction_initialize:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _GPIO_check_access *****************
  3765 ;; Defined at:
  3766 ;;		line 16 in file "MCAL_layer/GPIO/hal_gpio.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  3769 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_turn_off@lpin(1), relay_turn_on@lpin(1), 
  3770 ;;		 -> relay_initialize@lpin(1), LED_toggle@pin_local(1), LED_off@pin_local(1), LED_on@pin_local(1), 
  3771 ;;		 -> LED_initialize@pin_local(1), keypad_read_number@lpinc(4), keypad_read_number@lpinr(4), keypad_initialize@lpinc(4
      +), 
  3772 ;;		 -> keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), 
  3773 ;;		 -> dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpi
      +n2(1), 
  3774 ;;		 -> dc_motor_initialize@lpin1(1), seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  ret             1    2[COMRAM] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      unsigned char 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3786 ;;      Params:         1       0       0       0       0       0       0
  3787 ;;      Locals:         1       0       0       0       0       0       0
  3788 ;;      Temps:          1       0       0       0       0       0       0
  3789 ;;      Totals:         3       0       0       0       0       0       0
  3790 ;;Total ram usage:        3 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_lcd_check_access
  3796 ;;		_GPIO_pin_initialize
  3797 ;;		_GPIO_pin_direction_initialize
  3798 ;;		_GPIO_pin_write_logic
  3799 ;;		_seven_segment_initialize
  3800 ;;		_dc_motor_initialize
  3801 ;;		_LED_initialize
  3802 ;;		_LED_on
  3803 ;;		_LED_off
  3804 ;;		_LED_toggle
  3805 ;;		_btn_initialize
  3806 ;;		_btn_read_state
  3807 ;;		_relay_initialize
  3808 ;;		_relay_turn_on
  3809 ;;		_relay_turn_off
  3810 ;;		_GPIO_pin_get_direction_status
  3811 ;;		_GPIO_pin_read_logic
  3812 ;;		_GPIO_pin_toggle_logic
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text15
  3817   0007F0                     __ptext15:
  3818                           	callstack 0
  3819   0007F0                     _GPIO_check_access:
  3820                           	callstack 0
  3821   0007F0  FFFF               	dw	65535	; assembler added errata NOP
  3822   0007F2                     
  3823                           ;MCAL_layer/GPIO/hal_gpio.c: 17:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3824   0007F2  0E01               	movlw	1
  3825   0007F4  6E4F               	movwf	GPIO_check_access@ret^0,c
  3826                           
  3827                           ;MCAL_layer/GPIO/hal_gpio.c: 18:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  3828   0007F6  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3829   0007F8  B4D8               	btfsc	status,2,c
  3830   0007FA  EF01  F004         	goto	u1641
  3831   0007FE  EF04  F004         	goto	u1640
  3832   000802                     u1641:
  3833   000802  FFFF               	dw	65535	; assembler added errata NOP
  3834   000804  EF84  F004         	goto	l467
  3835   000808                     u1640:
  3836   000808  FFFF               	dw	65535	; assembler added errata NOP
  3837   00080A  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3838   00080C  6ED9               	movwf	fsr2l,c
  3839   00080E  6ADA               	clrf	fsr2h,c
  3840   000810  50DF               	movf	223,w,c
  3841   000812  0B07               	andlw	7
  3842   000814  0900               	iorlw	0
  3843   000816  A4D8               	btfss	status,2,c
  3844   000818  EF10  F004         	goto	u1651
  3845   00081C  EF13  F004         	goto	u1650
  3846   000820                     u1651:
  3847   000820  FFFF               	dw	65535	; assembler added errata NOP
  3848   000822  EF24  F004         	goto	l2330
  3849   000826                     u1650:
  3850   000826  FFFF               	dw	65535	; assembler added errata NOP
  3851   000828  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3852   00082A  6ED9               	movwf	fsr2l,c
  3853   00082C  6ADA               	clrf	fsr2h,c
  3854   00082E  30DF               	rrcf	223,w,c
  3855   000830  32E8               	rrcf	wreg,f,c
  3856   000832  32E8               	rrcf	wreg,f,c
  3857   000834  0B07               	andlw	7
  3858   000836  0A07               	xorlw	7
  3859   000838  B4D8               	btfsc	status,2,c
  3860   00083A  EF21  F004         	goto	u1661
  3861   00083E  EF24  F004         	goto	u1660
  3862   000842                     u1661:
  3863   000842  FFFF               	dw	65535	; assembler added errata NOP
  3864   000844  EF84  F004         	goto	l467
  3865   000848                     u1660:
  3866   000848                     l2330:
  3867   000848  FFFF               	dw	65535	; assembler added errata NOP
  3868   00084A  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3869   00084C  6ED9               	movwf	fsr2l,c
  3870   00084E  6ADA               	clrf	fsr2h,c
  3871   000850  50DF               	movf	223,w,c
  3872   000852  0B07               	andlw	7
  3873   000854  06E8               	decf	wreg,f,c
  3874   000856  B4D8               	btfsc	status,2,c
  3875   000858  EF30  F004         	goto	u1671
  3876   00085C  EF33  F004         	goto	u1670
  3877   000860                     u1671:
  3878   000860  FFFF               	dw	65535	; assembler added errata NOP
  3879   000862  EF51  F004         	goto	l2336
  3880   000866                     u1670:
  3881   000866  FFFF               	dw	65535	; assembler added errata NOP
  3882   000868  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3883   00086A  6ED9               	movwf	fsr2l,c
  3884   00086C  6ADA               	clrf	fsr2h,c
  3885   00086E  50DF               	movf	223,w,c
  3886   000870  0B07               	andlw	7
  3887   000872  0A02               	xorlw	2
  3888   000874  B4D8               	btfsc	status,2,c
  3889   000876  EF3F  F004         	goto	u1681
  3890   00087A  EF42  F004         	goto	u1680
  3891   00087E                     u1681:
  3892   00087E  FFFF               	dw	65535	; assembler added errata NOP
  3893   000880  EF51  F004         	goto	l2336
  3894   000884                     u1680:
  3895   000884  FFFF               	dw	65535	; assembler added errata NOP
  3896   000886  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3897   000888  6ED9               	movwf	fsr2l,c
  3898   00088A  6ADA               	clrf	fsr2h,c
  3899   00088C  50DF               	movf	223,w,c
  3900   00088E  0B07               	andlw	7
  3901   000890  0A03               	xorlw	3
  3902   000892  A4D8               	btfss	status,2,c
  3903   000894  EF4E  F004         	goto	u1691
  3904   000898  EF51  F004         	goto	u1690
  3905   00089C                     u1691:
  3906   00089C  FFFF               	dw	65535	; assembler added errata NOP
  3907   00089E  EF63  F004         	goto	l2338
  3908   0008A2                     u1690:
  3909   0008A2                     l2336:
  3910   0008A2  FFFF               	dw	65535	; assembler added errata NOP
  3911   0008A4  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3912   0008A6  6ED9               	movwf	fsr2l,c
  3913   0008A8  6ADA               	clrf	fsr2h,c
  3914   0008AA  30DF               	rrcf	223,w,c
  3915   0008AC  32E8               	rrcf	wreg,f,c
  3916   0008AE  32E8               	rrcf	wreg,f,c
  3917   0008B0  0B07               	andlw	7
  3918   0008B2  6E4E               	movwf	??_GPIO_check_access^0,c
  3919   0008B4  0E08               	movlw	8
  3920   0008B6  604E               	cpfslt	??_GPIO_check_access^0,c
  3921   0008B8  EF60  F004         	goto	u1701
  3922   0008BC  EF63  F004         	goto	u1700
  3923   0008C0                     u1701:
  3924   0008C0  FFFF               	dw	65535	; assembler added errata NOP
  3925   0008C2  EF84  F004         	goto	l467
  3926   0008C6                     u1700:
  3927   0008C6                     l2338:
  3928   0008C6  FFFF               	dw	65535	; assembler added errata NOP
  3929   0008C8  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3930   0008CA  6ED9               	movwf	fsr2l,c
  3931   0008CC  6ADA               	clrf	fsr2h,c
  3932   0008CE  50DF               	movf	223,w,c
  3933   0008D0  0B07               	andlw	7
  3934   0008D2  0A04               	xorlw	4
  3935   0008D4  A4D8               	btfss	status,2,c
  3936   0008D6  EF6F  F004         	goto	u1711
  3937   0008DA  EF72  F004         	goto	u1710
  3938   0008DE                     u1711:
  3939   0008DE  FFFF               	dw	65535	; assembler added errata NOP
  3940   0008E0  EF86  F004         	goto	l2342
  3941   0008E4                     u1710:
  3942   0008E4  FFFF               	dw	65535	; assembler added errata NOP
  3943   0008E6  504D               	movf	GPIO_check_access@_pin_config^0,w,c
  3944   0008E8  6ED9               	movwf	fsr2l,c
  3945   0008EA  6ADA               	clrf	fsr2h,c
  3946   0008EC  30DF               	rrcf	223,w,c
  3947   0008EE  32E8               	rrcf	wreg,f,c
  3948   0008F0  32E8               	rrcf	wreg,f,c
  3949   0008F2  0B07               	andlw	7
  3950   0008F4  6E4E               	movwf	??_GPIO_check_access^0,c
  3951   0008F6  0E02               	movlw	2
  3952   0008F8  644E               	cpfsgt	??_GPIO_check_access^0,c
  3953   0008FA  EF81  F004         	goto	u1721
  3954   0008FE  EF84  F004         	goto	u1720
  3955   000902                     u1721:
  3956   000902  FFFF               	dw	65535	; assembler added errata NOP
  3957   000904  EF86  F004         	goto	l2342
  3958   000908                     u1720:
  3959   000908                     l467:
  3960   000908  FFFF               	dw	65535	; assembler added errata NOP
  3961                           
  3962                           ;MCAL_layer/GPIO/hal_gpio.c: 21:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 22:   ret = (STD_ReturnType)(0x00);
  3963   00090A  6A4F               	clrf	GPIO_check_access@ret^0,c
  3964   00090C                     l2342:
  3965   00090C  FFFF               	dw	65535	; assembler added errata NOP
  3966                           
  3967                           ;MCAL_layer/GPIO/hal_gpio.c: 25:  return ret;
  3968   00090E  504F               	movf	GPIO_check_access@ret^0,w,c
  3969   000910  0012               	return		;funcret
  3970   000912  FFFF               	dw	65535	; errata NOP
  3971   000914                     __end_of_GPIO_check_access:
  3972                           	callstack 0
  3973                           
  3974                           	psect	rparam
  3975   000001                     ___rparam_used  equ	1
  3976   000000                     ___param_bank   equ	0
  3977   000000                     __Lparam        equ	__Lrparam
  3978   000000                     __Hparam        equ	__Hrparam
  3979                           
  3980                           	psect	config
  3981                           
  3982                           ; Padding undefined space
  3983   300000                     	org	3145728
  3984   300000  FF                 	db	255
  3985                           
  3986                           ;Config register CONFIG1H @ 0x300001
  3987                           ;	Oscillator Selection bits
  3988                           ;	OSC = HS, HS oscillator
  3989                           ;	Oscillator System Clock Switch Enable bit
  3990                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  3991   300001                     	org	3145729
  3992   300001  22                 	db	34
  3993                           
  3994                           ;Config register CONFIG2L @ 0x300002
  3995                           ;	Power-up Timer Enable bit
  3996                           ;	PWRT = OFF, PWRT disabled
  3997                           ;	Brown-out Reset Enable bit
  3998                           ;	BOR = OFF, Brown-out Reset disabled
  3999                           ;	Brown-out Reset Voltage bits
  4000                           ;	BORV = 20, VBOR set to 2.0V
  4001   300002                     	org	3145730
  4002   300002  0D                 	db	13
  4003                           
  4004                           ;Config register CONFIG2H @ 0x300003
  4005                           ;	Watchdog Timer Enable bit
  4006                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4007                           ;	Watchdog Timer Postscale Select bits
  4008                           ;	WDTPS = 128, 1:128
  4009   300003                     	org	3145731
  4010   300003  0E                 	db	14
  4011                           
  4012                           ; Padding undefined space
  4013   300004                     	org	3145732
  4014   300004  FF                 	db	255
  4015                           
  4016                           ;Config register CONFIG3H @ 0x300005
  4017                           ;	CCP2 Mux bit
  4018                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  4019   300005                     	org	3145733
  4020   300005  01                 	db	1
  4021                           
  4022                           ;Config register CONFIG4L @ 0x300006
  4023                           ;	Stack Full/Underflow Reset Enable bit
  4024                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  4025                           ;	Low Voltage ICSP Enable bit
  4026                           ;	LVP = OFF, Low Voltage ICSP disabled
  4027                           ;	Background Debugger Enable bit
  4028                           ;	DEBUG = 0x1, unprogrammed default
  4029   300006                     	org	3145734
  4030   300006  81                 	db	129
  4031                           
  4032                           ; Padding undefined space
  4033   300007                     	org	3145735
  4034   300007  FF                 	db	255
  4035                           
  4036                           ;Config register CONFIG5L @ 0x300008
  4037                           ;	Code Protection bit
  4038                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4039                           ;	Code Protection bit
  4040                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4041                           ;	Code Protection bit
  4042                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4043                           ;	Code Protection bit
  4044                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4045   300008                     	org	3145736
  4046   300008  0F                 	db	15
  4047                           
  4048                           ;Config register CONFIG5H @ 0x300009
  4049                           ;	Boot Block Code Protection bit
  4050                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4051                           ;	Data EEPROM Code Protection bit
  4052                           ;	CPD = OFF, Data EEPROM not code protected
  4053   300009                     	org	3145737
  4054   300009  C0                 	db	192
  4055                           
  4056                           ;Config register CONFIG6L @ 0x30000A
  4057                           ;	Write Protection bit
  4058                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4059                           ;	Write Protection bit
  4060                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4061                           ;	Write Protection bit
  4062                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4063                           ;	Write Protection bit
  4064                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4065   30000A                     	org	3145738
  4066   30000A  0F                 	db	15
  4067                           
  4068                           ;Config register CONFIG6H @ 0x30000B
  4069                           ;	Configuration Register Write Protection bit
  4070                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4071                           ;	Boot Block Write Protection bit
  4072                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4073                           ;	Data EEPROM Write Protection bit
  4074                           ;	WRTD = OFF, Data EEPROM not write protected
  4075   30000B                     	org	3145739
  4076   30000B  E0                 	db	224
  4077                           
  4078                           ;Config register CONFIG7L @ 0x30000C
  4079                           ;	Table Read Protection bit
  4080                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4081                           ;	Table Read Protection bit
  4082                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4083                           ;	Table Read Protection bit
  4084                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4085                           ;	Table Read Protection bit
  4086                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4087   30000C                     	org	3145740
  4088   30000C  0F                 	db	15
  4089                           
  4090                           ;Config register CONFIG7H @ 0x30000D
  4091                           ;	Boot Block Table Read Protection bit
  4092                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4093   30000D                     	org	3145741
  4094   30000D  40                 	db	64
  4095                           tosu	equ	0xFFF
  4096                           tosh	equ	0xFFE
  4097                           tosl	equ	0xFFD
  4098                           stkptr	equ	0xFFC
  4099                           pclatu	equ	0xFFB
  4100                           pclath	equ	0xFFA
  4101                           pcl	equ	0xFF9
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           indf0	equ	0xFEF
  4109                           postinc0	equ	0xFEE
  4110                           postdec0	equ	0xFED
  4111                           preinc0	equ	0xFEC
  4112                           plusw0	equ	0xFEB
  4113                           fsr0h	equ	0xFEA
  4114                           fsr0l	equ	0xFE9
  4115                           wreg	equ	0xFE8
  4116                           indf1	equ	0xFE7
  4117                           postinc1	equ	0xFE6
  4118                           postdec1	equ	0xFE5
  4119                           preinc1	equ	0xFE4
  4120                           plusw1	equ	0xFE3
  4121                           fsr1h	equ	0xFE2
  4122                           fsr1l	equ	0xFE1
  4123                           bsr	equ	0xFE0
  4124                           indf2	equ	0xFDF
  4125                           postinc2	equ	0xFDE
  4126                           postdec2	equ	0xFDD
  4127                           preinc2	equ	0xFDC
  4128                           plusw2	equ	0xFDB
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        76
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     29     117
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), 
		 -> LCD1(COMRAM[11]), LCD1$lcd_data(COMRAM[8]), LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(COMRAM[1]), LED_toggle@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), 
		 -> relay_turn_on@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), 
		 -> LCD1(COMRAM[11]), LCD1$lcd_data(COMRAM[8]), LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinr(COMRAM[4]), LCD1(COMRAM[11]), 
		 -> LCD1$lcd_data(COMRAM[8]), LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LCD1(COMRAM[11]), LCD1$lcd_data(COMRAM[8]), 
		 -> LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), 
		 -> relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    lcd_check_access@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_initialize@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_8bits@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_char_data@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_char_data_position@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_command@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_en@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_set_cursor@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    S1436$buffer	PTR unsigned char  size(2) Largest target is 0

    S1436$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_send_char_data_position
    _lcd_send_char_data_position->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_send_char_data->_lcd_send_4bits
    _lcd_send_char_data->_lcd_send_8bits
    _application_initialize->_ecu_init
    _ecu_init->_lcd_initialize
    _lcd_initialize->_lcd_send_command
    _lcd_send_command->_lcd_send_4bits
    _lcd_send_command->_lcd_send_8bits
    _lcd_send_en->_GPIO_pin_write_logic
    _lcd_send_8bits->_GPIO_pin_write_logic
    _lcd_send_4bits->_GPIO_pin_write_logic
    _lcd_check_access->_GPIO_check_access
    _GPIO_pin_initialize->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _GPIO_pin_direction_initialize->_GPIO_check_access

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10757
             _application_initialize
        _lcd_send_char_data_position
 ---------------------------------------------------------------------------------
 (1) _lcd_send_char_data_position                          5     1      4    5590
                                             24 COMRAM     5     1      4
                 _lcd_send_char_data
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     1      3    2784
                                             20 COMRAM     4     1      3
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data                                   3     1      2    2640
                                             17 COMRAM     3     1      2
               _GPIO_pin_write_logic
                     _lcd_send_4bits
                     _lcd_send_8bits
                        _lcd_send_en
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    5165
                           _ecu_init
 ---------------------------------------------------------------------------------
 (2) _ecu_init                                             1     1      0    5163
                                             24 COMRAM     1     1      0
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_initialize                                       4     3      1    5139
                                             20 COMRAM     4     3      1
                _GPIO_pin_initialize
                   _lcd_check_access
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     3     1      2    2643
                                             17 COMRAM     3     1      2
               _GPIO_pin_write_logic
                     _lcd_send_4bits
                     _lcd_send_8bits
                        _lcd_send_en
 ---------------------------------------------------------------------------------
 (4) _lcd_send_en                                          2     1      1     552
                                             11 COMRAM     2     1      1
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_8bits                                       6     4      2     663
                                             11 COMRAM     6     4      2
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2     667
                                             11 COMRAM     6     4      2
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_check_access                                     4     3      1     584
                                              3 COMRAM     4     3      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (4) _GPIO_pin_initialize                                  2     1      1    1227
                                             11 COMRAM     2     1      1
                  _GPIO_check_access
      _GPIO_pin_direction_initialize
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_write_logic                                 8     6      2     455
                                              3 COMRAM     8     6      2
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_direction_initialize                        7     6      1     404
                                              3 COMRAM     7     6      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (6) _GPIO_check_access                                    3     2      1     244
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_init
       _lcd_initialize
         _GPIO_pin_initialize
           _GPIO_check_access
           _GPIO_pin_direction_initialize
             _GPIO_check_access
           _GPIO_pin_write_logic
             _GPIO_check_access
         _lcd_check_access
           _GPIO_check_access
         _lcd_send_command
           _GPIO_pin_write_logic
           _lcd_send_4bits
             _GPIO_pin_write_logic
           _lcd_send_8bits
             _GPIO_pin_write_logic
           _lcd_send_en
             _GPIO_pin_write_logic
   _lcd_send_char_data_position
     _lcd_send_char_data
       _GPIO_pin_write_logic
       _lcd_send_4bits
       _lcd_send_8bits
       _lcd_send_en
     _lcd_set_cursor
       _lcd_send_command

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     29     117     92.1%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     117      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Mar 23 00:38:23 2025

                                                         ?_lcd_send_en 0058  
                                                                    _i 003C  
                                                                    _j 006E  
                                                      ?_lcd_send_4bits 0058  
                                                      ?_lcd_send_8bits 0058  
                                                      LED_toggle@F2885 0072  
                                                                  l202 07EC  
                                                                  l221 1028  
                                                                  l216 0CFA  
                                                                  l209 0D90  
                                                                  l173 094C  
                                                                  l174 0A2A  
                                                                  l262 0E38  
                                                                  l270 0DB0  
                                                                  l422 1094  
                                                                  l280 0FE2  
                                                                  l192 0682  
                                                                  l507 0C5A  
                                                                  l179 0A2E  
                                                                  l267 0EA0  
                                                                  l275 0E18  
                                                                  l196 076C  
                                                                  l287 0ED8  
                                                                  l480 0F4C  
                                                                  l288 0EFC  
                                                                  l490 0B48  
                                                                  l475 0910  
                                                                  l467 0908  
                                                                  l581 107C  
                                                                  l582 107E  
                                                                  l587 109E  
                                                     _lcd_check_access 0914  
                                                                  wreg 0FE8  
                                                relay_initialize@F2865 0071  
                                           __end_of_lcd_send_char_data 0CFE  
                                                      ?_lcd_set_cursor 0061  
                                                                 l2400 0E8A  
                                                                 l2330 0848  
                                                                 l2402 0E9C  
                                                                 l2410 0FB8  
                                                                 l2340 08E6  
                                                                 l2332 0868  
                                                                 l2324 07F2  
                                                                 l2420 0D96  
                                                                 l2412 0FC6  
                                                                 l2342 090C  
                                                                 l2334 0886  
                                                                 l2326 080A  
                                                                 l2350 0B6E  
                                                                 l2502 0A08  
                                                                 l2430 0DB4  
                                                                 l2422 0D96  
                                                                 l2414 0FD0  
                                                                 l2406 0F9E  
                                                                 l2510 0D00  
                                                                 l2336 08A2  
                                                                 l2328 0828  
                                                                 l2352 0B76  
                                                                 l2504 0A0C  
                                                                 l2432 0DE6  
                                                                 l2440 0E14  
                                                                 l2424 0DAA  
                                                                 l2416 0FDE  
                                                                 l2408 0FB2  
                                                                 l2520 0D72  
                                                                 l2512 0D14  
                                                                 l2600 0C60  
                                                                 l3160 1068  
                                                                 l2338 08C6  
                                                                 l2370 0A56  
                                                                 l2354 0BD2  
                                                                 l2346 0B4E  
                                                                 l2450 0F24  
                                                                 l2506 0A24  
                                                                 l2522 0D8C  
                                                                 l2514 0D1A  
                                                                 l2530 064A  
                                                                 l2610 0CDC  
                                                                 l2602 0C74  
                                                                 l2372 0A5E  
                                                                 l2356 0C28  
                                                                 l2348 0B52  
                                                                 l2452 0F48  
                                                                 l2444 0F02  
                                                                 l2460 0932  
                                                                 l2436 0DFE  
                                                                 l2516 0D28  
                                                                 l2532 0666  
                                                                 l2612 0CF6  
                                                                 l2604 0C7A  
                                                                 l2620 0EB0  
                                                                 l3156 1062  
                                                                 l2374 0ABA  
                                                                 l2366 0A36  
                                                                 l3166 0C3E  
                                                                 l2358 0C56  
                                                                 l2446 0F02  
                                                                 l2470 0976  
                                                                 l2462 0954  
                                                                 l2382 0E1E  
                                                                 l2438 0E02  
                                                                 l2518 0D46  
                                                                 l2550 06E4  
                                                                 l2534 068A  
                                                                 l2526 0618  
                                                                 l2630 1088  
                                                                 l2606 0C88  
                                                                 l2622 0EC4  
                                                                 l3158 1062  
                                                                 l2376 0B10  
                                                                 l2368 0A3A  
                                                                 l2448 0F1E  
                                                                 l2480 09A2  
                                                                 l2472 0986  
                                                                 l2464 0974  
                                                                 l2456 0916  
                                                                 l2392 0E3C  
                                                                 l2384 0E1E  
                                                                 l2560 0734  
                                                                 l2552 06F6  
                                                                 l2544 06C0  
                                                                 l2536 06A0  
                                                                 l2528 062C  
                                                                 l2632 1088  
                                                                 l2608 0CA6  
                                                                 l2624 0EE0  
                                                                 l2616 0EA6  
                                                                 l2378 0B44  
                                                                 l2482 09A6  
                                                                 l2474 099A  
                                                                 l2458 0916  
                                                                 l2394 0E6E  
                                                                 l2386 0E32  
                                                                 l2562 0742  
                                                                 l2554 0702  
                                                                 l2546 06CE  
                                                                 l2538 06BE  
                                                                 l2634 1092  
                                                                 l2626 0EF8  
                                                                 l2618 0EAA  
                                                                 l2492 09E0  
                                                                 l2484 09BE  
                                                                 l2580 07A6  
                                                                 l2572 0770  
                                                                 l2564 074E  
                                                                 l2556 0720  
                                                                 l2548 06D0  
                                                                 l2494 09F0  
                                                                 l2486 09DE  
                                                                 l2398 0E86  
                                                                 l2582 07B2  
                                                                 l2574 077E  
                                                                 l2566 075A  
                                                                 l2558 0728  
                                                                 l2662 0FE8  
                                                                 l2584 07D0  
                                                                 l2576 0780  
                                                                 l2672 109A  
                                                                 l2664 0FFC  
                                                                 l2586 07D8  
                                                                 l2578 0794  
                                                                 l2674 109A  
                                                                 l2666 1002  
                                                                 l2596 07E8  
                                                                 l2668 1024  
                                                                 STR_1 0611  
                                                                 _LCD1 0042  
                                                                 _LED1 0040  
                                                                 _LED2 003F  
                                                                 u2000 062A  
                                                                 u2001 0624  
                                                                 u2010 0648  
                                                                 u2011 0642  
                                                                 u2020 0666  
                                                                 u2021 0660  
                                                                 u2030 0682  
                                                                 u2031 067C  
                                                                 u2040 06BC  
                                                                 u2041 06B6  
                                                                 u2050 06E2  
                                                                 u2051 06DC  
                                                                 u2060 0792  
                                                                 u2140 0FFA  
                                                                 u2061 078C  
                                                                 u2141 0FF4  
                                                                 _LATA 0F89  
                                                                 u2070 0C72  
                                                                 _LATB 0F8A  
                                                                 u2071 0C6C  
                                                                 _LATC 0F8B  
                                                                 u2080 0CA4  
                                                                 _LATD 0F8C  
                                                                 u2081 0C9E  
                                                                 _LATE 0F8D  
                                                                 u1700 08C6  
                                                                 u1701 08C0  
                                                                 u1710 08E4  
                                                                 u1711 08DE  
                                                                 u1720 0908  
                                                                 u1640 0808  
                                                                 u1800 0E30  
                                                                 u1721 0902  
                                                                 u1641 0802  
                                                                 u1801 0E2A  
                                                                 u1650 0826  
                                                                 u1730 0B6C  
                                                                 u1651 0820  
                                                                 u1731 0B66  
                                                                 u1660 0848  
                                                                 u1900 0930  
                                                                 u1820 0E80  
                                                                 u1661 0842  
                                                                 u1901 092A  
                                                                 u1821 0E7A  
                                                                 u1670 0866  
                                                                 u1910 094C  
                                                                 u1830 0E9C  
                                                                 u1814 0E5A  
                                                                 u1671 0860  
                                                                 u1911 0946  
                                                                 u1831 0E96  
                                                                 u1815 0E54  
                                                                 u1680 0884  
                                                                 u1760 0A54  
                                                                 u1744 0B98  
                                                                 u1920 0972  
                                                                 u1840 0FB0  
                                                                 u1681 087E  
                                                                 u1761 0A4E  
                                                                 u1745 0B92  
                                                                 u1921 096C  
                                                                 u1841 0FAA  
                                                                 u1690 08A2  
                                                                 u1754 0BF4  
                                                                 u1930 0998  
                                                                 u1850 0DA8  
                                                                 u1691 089C  
                                                                 u1755 0BEE  
                                                                 u1931 0992  
                                                                 u1851 0DA2  
                                                                 u1940 09B8  
                                                                 u1941 09B2  
                                                                 u1790 0B2A  
                                                                 u1774 0A80  
                                                                 u1950 09DC  
                                                                 u1870 0DF8  
                                                                 u1791 0B22  
                                                                 u1775 0A7A  
                                                                 u1951 09D6  
                                                                 u1871 0DF2  
                                                                 u1784 0ADC  
                                                                 u1960 0A02  
                                                                 u1880 0E14  
                                                                 u1864 0DD2  
                                                                 u1785 0AD6  
                                                                 u1961 09FC  
                                                                 u1881 0E0E  
                                                                 u1865 0DCC  
                                                                 u1890 0F1C  
                                                                 u1970 0A1E  
                                                                 u1891 0F16  
                                                                 u1971 0A18  
                                                                 u2907 0708  
                                                                 u1796 0B2E  
                                                                 u1980 0D12  
                                                                 u1981 0D0C  
                                                                 u2917 0722  
                                                                 u1990 0D44  
                                                                 u1991 0D3E  
                                                                 u2927 079A  
                                                                 u2937 07B8  
                                                                 u2947 07D2  
                                                                 u2957 0FC8  
                                                                 u2897 06EA  
                                                                 _btn1 0035  
                                                                 _btn2 0032  
                                                                 _main 1062  
                                                                 _knum 006D  
                                                                 _prev 006C  
                                                                 fsr2h 0FDA  
                                                                 indf2 0FDF  
                                                                 fsr1l 0FE1  
                                                                 fsr2l 0FD9  
                                                                 prodl 0FF3  
                                                                 start 3FFC  
                                                 _GPIO_pin_write_logic 0B4C  
                                                         ___param_bank 0000  
                                                                ?_main 004D  
                                             ??_application_initialize 0066  
                                                       __LAT_registers 000B  
                                                    ?_lcd_send_command 005E  
                                                  relay_turn_off@F2875 006F  
                                                                _PORTA 0F80  
                                                                _PORTB 0F81  
                                                                _PORTC 0F82  
                                                                _PORTD 0F83  
                                                                _PORTE 0F84  
                                                                _TRISA 0F92  
                                                                _TRISB 0F93  
                                                                _TRISC 0F94  
                                                                _TRISD 0F95  
                                                                _TRISE 0F96  
                                                    lcd_initialize@lcd 0061  
                                                    lcd_initialize@ret 0063  
                                                   ??_lcd_send_command 0060  
                                                                _errno 006A  
                                                                tablat 0FF5  
                                                                status 0FD8  
                                                ?_GPIO_pin_write_logic 0050  
                                                      __initialization 102C  
                                                          LED_on@F2875 0074  
                                                         __end_of_main 1086  
                                                               ??_main 006A  
                                                        __activetblptr 0002  
                                                     __end_of_ecu_init 1098  
                                                               clear_0 1052  
                                                               _relay1 0041  
                                                               _motor1 003A  
                                                               _motor2 0038  
                                                               isa$std 0001  
                                                         __pdataCOMRAM 0001  
                                                         __mediumconst 0600  
                                                               tblptrh 0FF7  
                                                               tblptrl 0FF6  
                                                               tblptru 0FF8  
                                                     ??_lcd_initialize 0062  
                                                           __accesstop 0080  
                                              __end_of__initialization 1058  
                                               ??_GPIO_pin_write_logic 0052  
                                                        ___rparam_used 0001  
                                             __end_of_lcd_check_access 0A34  
                                                     ??_lcd_send_4bits 005A  
                                                     ??_lcd_send_8bits 005A  
                                                       __pcstackCOMRAM 004D  
                                      ??_GPIO_pin_direction_initialize 0051  
                                  __end_of_lcd_send_char_data_position 102C  
                                          _lcd_send_char_data_position 0FE6  
                             GPIO_pin_direction_initialize@_pin_config 0050  
                                                     ??_lcd_set_cursor 0064  
                                                      __PORT_registers 0001  
                                                         LED_off@F2880 0073  
                                                lcd_send_char_data@lcd 005E  
                                                lcd_send_char_data@ret 0060  
                                               _application_initialize 1098  
                                                   _lcd_send_char_data 0C5E  
                                                       lcd_send_en@lcd 0058  
                                                       lcd_send_en@ret 0059  
                                                  ?_lcd_send_char_data 005E  
                                                            ?_ecu_init 004D  
                                                 ??_lcd_send_char_data 0060  
                                                              __Hparam 0000  
                                                  _GPIO_pin_initialize 0F00  
                                                              __Lparam 0000  
                                                         __psmallconst 0600  
                                                              __pcinit 102C  
                                                              __ramtop 0600  
                                                              __ptext0 1062  
                                                              __ptext1 0FE6  
                                                              __ptext2 0EA4  
                                                              __ptext3 0C5E  
                                                              __ptext4 1098  
                                                              __ptext5 1086  
                                                              __ptext6 0616  
                                                              __ptext7 0CFE  
                                                              __ptext8 0F9C  
                                                              __ptext9 0D94  
                                                              _led_arr 002E  
                                __end_of_GPIO_pin_direction_initialize 0B4C  
                                        _GPIO_pin_direction_initialize 0A34  
                                                              _keypad1 001F  
                                                    lcd_check_access@i 0053  
                                                 ?_GPIO_pin_initialize 0058  
                                                      _keypad_elements 0601  
                                                           ??_ecu_init 0065  
                                                              _testing 003E  
                                                 end_of_initialization 1058  
                                                    lcd_send_4bits@lcd 0058  
                                                    lcd_send_4bits@ret 005C  
                                                    lcd_send_4bits@val 0059  
                                                        __Lmediumconst 0000  
                                                    lcd_send_8bits@lcd 0058  
                                                    lcd_send_8bits@ret 005C  
                                                    lcd_send_8bits@val 0059  
                                                              postdec1 0FE5  
                                                              postdec2 0FDD  
                                                              postinc0 0FEE  
                                                              postinc2 0FDE  
                                                ??_GPIO_pin_initialize 0059  
                                                      lcd_initialize@i 0064  
                                              GPIO_pin_write_logic@ret 0057  
                                                    ?_lcd_check_access 0050  
                                                   relay_turn_on@F2870 0070  
                                                        ??_lcd_send_en 0059  
                                                   ??_lcd_check_access 0051  
                                              __end_of_keypad_elements 0611  
                                                        __pidataCOMRAM 0F50  
                                      lcd_send_char_data_position@data 0068  
                                                  start_initialization 102C  
                                                 GPIO_check_access@ret 004F  
                                       ?_GPIO_pin_direction_initialize 0050  
                                              ?_application_initialize 004D  
                                                     _lcd_send_command 0CFE  
                                                      lcd_send_4bits@i 005D  
                                                      lcd_send_8bits@i 005D  
                                                  __end_of_lcd_send_en 0FE6  
                                                          __pbssCOMRAM 006A  
                                               lcd_send_char_data@data 005F  
                                       __end_of_application_initialize 10A2  
                                               GPIO_pin_initialize@ret 0059  
                                      GPIO_pin_write_logic@_pin_config 0050  
                                                  lcd_send_command@lcd 005E  
                                                  LED_initialize@F2870 0075  
                                                  lcd_send_command@ret 0060  
                                                          __smallconst 0600  
                                                  lcd_check_access@lcd 0050  
                                                  lcd_check_access@ret 0052  
                                            GPIO_pin_write_logic@logic 0051  
                                                      __TRIS_registers 0015  
                                                          _lcd_send_en 0F9C  
                                     GPIO_pin_direction_initialize@ret 0056  
                                                            copy_data0 1040  
                                                         _seg_units_en 003D  
                                                             __Hrparam 0000  
                                                             __Lrparam 0000  
                                          __end_of_GPIO_pin_initialize 0F50  
                                                    _GPIO_check_access 07F0  
                                         ?_lcd_send_char_data_position 0065  
                                                   ?_GPIO_check_access 004D  
                                             __end_of_lcd_send_command 0D94  
                                       GPIO_pin_initialize@_pin_config 0058  
                                                             _ecu_init 1086  
                                                  ??_GPIO_check_access 004E  
                                                             __ptext10 0E1C  
                                                             __ptext11 0914  
                                                             __ptext12 0F00  
                                                             __ptext13 0B4C  
                                                             __ptext14 0A34  
                                                             __ptext15 07F0  
                                                       _lcd_initialize 0616  
                                                             _segment1 0028  
                                                             isa$xinst 0000  
                                            __end_of_GPIO_check_access 0914  
                                                       _lcd_send_4bits 0E1C  
                                                       _lcd_send_8bits 0D94  
                                         __end_of_GPIO_pin_write_logic 0C5E  
                                        ??_lcd_send_char_data_position 0069  
                                              lcd_send_command@command 005F  
                                                       _lcd_set_cursor 0EA4  
                                                    lcd_set_cursor@col 0063  
                                                    lcd_set_cursor@lcd 0061  
                                                    lcd_set_cursor@ret 0064  
                                                    lcd_set_cursor@row 0062  
                                               __end_of_lcd_initialize 07F0  
                                                          ecu_init@ret 0065  
                                               __end_of_lcd_send_4bits 0EA4  
                                               __end_of_lcd_send_8bits 0E1C  
                                               __end_of_lcd_set_cursor 0F00  
                                       lcd_send_char_data_position@col 0067  
                                       lcd_send_char_data_position@lcd 0065  
                                       lcd_send_char_data_position@ret 0069  
                                       lcd_send_char_data_position@row 0066  
                                         GPIO_check_access@_pin_config 004D  
                                                      ?_lcd_initialize 0061  
