

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Apr 25 14:26:10 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 17/01/2025 GMT
    41                           ; 
    42                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F452 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000FE0                     bsr             equ	4064
    75   000FE9                     fsr0            equ	4073
    76   000FEA                     fsr0h           equ	4074
    77   000FE9                     fsr0l           equ	4073
    78   000FE1                     fsr1            equ	4065
    79   000FE2                     fsr1h           equ	4066
    80   000FE1                     fsr1l           equ	4065
    81   000FD9                     fsr2            equ	4057
    82   000FDA                     fsr2h           equ	4058
    83   000FD9                     fsr2l           equ	4057
    84   000FEF                     indf0           equ	4079
    85   000FE7                     indf1           equ	4071
    86   000FDF                     indf2           equ	4063
    87   000FF2                     intcon          equ	4082
    88   000000                     nvmcon          equ	0
    89   000FF9                     pcl             equ	4089
    90   000FFA                     pclath          equ	4090
    91   000FFB                     pclatu          equ	4091
    92   000FEB                     plusw0          equ	4075
    93   000FE3                     plusw1          equ	4067
    94   000FDB                     plusw2          equ	4059
    95   000FED                     postdec0        equ	4077
    96   000FE5                     postdec1        equ	4069
    97   000FDD                     postdec2        equ	4061
    98   000FEE                     postinc0        equ	4078
    99   000FE6                     postinc1        equ	4070
   100   000FDE                     postinc2        equ	4062
   101   000FEC                     preinc0         equ	4076
   102   000FE4                     preinc1         equ	4068
   103   000FDC                     preinc2         equ	4060
   104   000FF3                     prod            equ	4083
   105   000FF4                     prodh           equ	4084
   106   000FF3                     prodl           equ	4083
   107   000FD8                     status          equ	4056
   108   000FF5                     tablat          equ	4085
   109   000FF6                     tblptr          equ	4086
   110   000FF7                     tblptrh         equ	4087
   111   000FF6                     tblptrl         equ	4086
   112   000FF8                     tblptru         equ	4088
   113   000FFD                     tosl            equ	4093
   114   000FE8                     wreg            equ	4072
   115   000F80                     PORTA           equ	3968	;# 
   116   000F81                     PORTB           equ	3969	;# 
   117   000F82                     PORTC           equ	3970	;# 
   118   000F83                     PORTD           equ	3971	;# 
   119   000F84                     PORTE           equ	3972	;# 
   120   000F89                     LATA            equ	3977	;# 
   121   000F8A                     LATB            equ	3978	;# 
   122   000F8B                     LATC            equ	3979	;# 
   123   000F8C                     LATD            equ	3980	;# 
   124   000F8D                     LATE            equ	3981	;# 
   125   000F92                     TRISA           equ	3986	;# 
   126   000F92                     DDRA            equ	3986	;# 
   127   000F93                     TRISB           equ	3987	;# 
   128   000F93                     DDRB            equ	3987	;# 
   129   000F94                     TRISC           equ	3988	;# 
   130   000F94                     DDRC            equ	3988	;# 
   131   000F95                     TRISD           equ	3989	;# 
   132   000F95                     DDRD            equ	3989	;# 
   133   000F96                     TRISE           equ	3990	;# 
   134   000F96                     DDRE            equ	3990	;# 
   135   000F9D                     PIE1            equ	3997	;# 
   136   000F9E                     PIR1            equ	3998	;# 
   137   000F9F                     IPR1            equ	3999	;# 
   138   000FA0                     PIE2            equ	4000	;# 
   139   000FA1                     PIR2            equ	4001	;# 
   140   000FA2                     IPR2            equ	4002	;# 
   141   000FA6                     EECON1          equ	4006	;# 
   142   000FA7                     EECON2          equ	4007	;# 
   143   000FA8                     EEDATA          equ	4008	;# 
   144   000FA9                     EEADR           equ	4009	;# 
   145   000FAB                     RCSTA           equ	4011	;# 
   146   000FAB                     RCSTA1          equ	4011	;# 
   147   000FAC                     TXSTA           equ	4012	;# 
   148   000FAC                     TXSTA1          equ	4012	;# 
   149   000FAD                     TXREG           equ	4013	;# 
   150   000FAD                     TXREG1          equ	4013	;# 
   151   000FAE                     RCREG           equ	4014	;# 
   152   000FAE                     RCREG1          equ	4014	;# 
   153   000FAF                     SPBRG           equ	4015	;# 
   154   000FAF                     SPBRG1          equ	4015	;# 
   155   000FB1                     T3CON           equ	4017	;# 
   156   000FB2                     TMR3            equ	4018	;# 
   157   000FB2                     TMR3L           equ	4018	;# 
   158   000FB3                     TMR3H           equ	4019	;# 
   159   000FBA                     CCP2CON         equ	4026	;# 
   160   000FBB                     CCPR2           equ	4027	;# 
   161   000FBB                     CCPR2L          equ	4027	;# 
   162   000FBC                     CCPR2H          equ	4028	;# 
   163   000FBD                     CCP1CON         equ	4029	;# 
   164   000FBE                     CCPR1           equ	4030	;# 
   165   000FBE                     CCPR1L          equ	4030	;# 
   166   000FBF                     CCPR1H          equ	4031	;# 
   167   000FC1                     ADCON1          equ	4033	;# 
   168   000FC2                     ADCON0          equ	4034	;# 
   169   000FC3                     ADRES           equ	4035	;# 
   170   000FC3                     ADRESL          equ	4035	;# 
   171   000FC4                     ADRESH          equ	4036	;# 
   172   000FC5                     SSPCON2         equ	4037	;# 
   173   000FC6                     SSPCON1         equ	4038	;# 
   174   000FC7                     SSPSTAT         equ	4039	;# 
   175   000FC8                     SSPADD          equ	4040	;# 
   176   000FC9                     SSPBUF          equ	4041	;# 
   177   000FCA                     T2CON           equ	4042	;# 
   178   000FCB                     PR2             equ	4043	;# 
   179   000FCB                     MEMCON          equ	4043	;# 
   180   000FCC                     TMR2            equ	4044	;# 
   181   000FCD                     T1CON           equ	4045	;# 
   182   000FCE                     TMR1            equ	4046	;# 
   183   000FCE                     TMR1L           equ	4046	;# 
   184   000FCF                     TMR1H           equ	4047	;# 
   185   000FD0                     RCON            equ	4048	;# 
   186   000FD1                     WDTCON          equ	4049	;# 
   187   000FD2                     LVDCON          equ	4050	;# 
   188   000FD3                     OSCCON          equ	4051	;# 
   189   000FD5                     T0CON           equ	4053	;# 
   190   000FD6                     TMR0            equ	4054	;# 
   191   000FD6                     TMR0L           equ	4054	;# 
   192   000FD7                     TMR0H           equ	4055	;# 
   193   000FD8                     STATUS          equ	4056	;# 
   194   000FD9                     FSR2            equ	4057	;# 
   195   000FD9                     FSR2L           equ	4057	;# 
   196   000FDA                     FSR2H           equ	4058	;# 
   197   000FDB                     PLUSW2          equ	4059	;# 
   198   000FDC                     PREINC2         equ	4060	;# 
   199   000FDD                     POSTDEC2        equ	4061	;# 
   200   000FDE                     POSTINC2        equ	4062	;# 
   201   000FDF                     INDF2           equ	4063	;# 
   202   000FE0                     BSR             equ	4064	;# 
   203   000FE1                     FSR1            equ	4065	;# 
   204   000FE1                     FSR1L           equ	4065	;# 
   205   000FE2                     FSR1H           equ	4066	;# 
   206   000FE3                     PLUSW1          equ	4067	;# 
   207   000FE4                     PREINC1         equ	4068	;# 
   208   000FE5                     POSTDEC1        equ	4069	;# 
   209   000FE6                     POSTINC1        equ	4070	;# 
   210   000FE7                     INDF1           equ	4071	;# 
   211   000FE8                     WREG            equ	4072	;# 
   212   000FE9                     FSR0            equ	4073	;# 
   213   000FE9                     FSR0L           equ	4073	;# 
   214   000FEA                     FSR0H           equ	4074	;# 
   215   000FEB                     PLUSW0          equ	4075	;# 
   216   000FEC                     PREINC0         equ	4076	;# 
   217   000FED                     POSTDEC0        equ	4077	;# 
   218   000FEE                     POSTINC0        equ	4078	;# 
   219   000FEF                     INDF0           equ	4079	;# 
   220   000FF0                     INTCON3         equ	4080	;# 
   221   000FF1                     INTCON2         equ	4081	;# 
   222   000FF2                     INTCON          equ	4082	;# 
   223   000FF2                     INTCON1         equ	4082	;# 
   224   000FF3                     PROD            equ	4083	;# 
   225   000FF3                     PRODL           equ	4083	;# 
   226   000FF4                     PRODH           equ	4084	;# 
   227   000FF5                     TABLAT          equ	4085	;# 
   228   000FF6                     TBLPTR          equ	4086	;# 
   229   000FF6                     TBLPTRL         equ	4086	;# 
   230   000FF7                     TBLPTRH         equ	4087	;# 
   231   000FF8                     TBLPTRU         equ	4088	;# 
   232   000FF9                     PCLAT           equ	4089	;# 
   233   000FF9                     PC              equ	4089	;# 
   234   000FF9                     PCL             equ	4089	;# 
   235   000FFA                     PCLATH          equ	4090	;# 
   236   000FFB                     PCLATU          equ	4091	;# 
   237   000FFC                     STKPTR          equ	4092	;# 
   238   000FFD                     TOS             equ	4093	;# 
   239   000FFD                     TOSL            equ	4093	;# 
   240   000FFE                     TOSH            equ	4094	;# 
   241   000FFF                     TOSU            equ	4095	;# 
   242   000F80                     PORTA           equ	3968	;# 
   243   000F81                     PORTB           equ	3969	;# 
   244   000F82                     PORTC           equ	3970	;# 
   245   000F83                     PORTD           equ	3971	;# 
   246   000F84                     PORTE           equ	3972	;# 
   247   000F89                     LATA            equ	3977	;# 
   248   000F8A                     LATB            equ	3978	;# 
   249   000F8B                     LATC            equ	3979	;# 
   250   000F8C                     LATD            equ	3980	;# 
   251   000F8D                     LATE            equ	3981	;# 
   252   000F92                     TRISA           equ	3986	;# 
   253   000F92                     DDRA            equ	3986	;# 
   254   000F93                     TRISB           equ	3987	;# 
   255   000F93                     DDRB            equ	3987	;# 
   256   000F94                     TRISC           equ	3988	;# 
   257   000F94                     DDRC            equ	3988	;# 
   258   000F95                     TRISD           equ	3989	;# 
   259   000F95                     DDRD            equ	3989	;# 
   260   000F96                     TRISE           equ	3990	;# 
   261   000F96                     DDRE            equ	3990	;# 
   262   000F9D                     PIE1            equ	3997	;# 
   263   000F9E                     PIR1            equ	3998	;# 
   264   000F9F                     IPR1            equ	3999	;# 
   265   000FA0                     PIE2            equ	4000	;# 
   266   000FA1                     PIR2            equ	4001	;# 
   267   000FA2                     IPR2            equ	4002	;# 
   268   000FA6                     EECON1          equ	4006	;# 
   269   000FA7                     EECON2          equ	4007	;# 
   270   000FA8                     EEDATA          equ	4008	;# 
   271   000FA9                     EEADR           equ	4009	;# 
   272   000FAB                     RCSTA           equ	4011	;# 
   273   000FAB                     RCSTA1          equ	4011	;# 
   274   000FAC                     TXSTA           equ	4012	;# 
   275   000FAC                     TXSTA1          equ	4012	;# 
   276   000FAD                     TXREG           equ	4013	;# 
   277   000FAD                     TXREG1          equ	4013	;# 
   278   000FAE                     RCREG           equ	4014	;# 
   279   000FAE                     RCREG1          equ	4014	;# 
   280   000FAF                     SPBRG           equ	4015	;# 
   281   000FAF                     SPBRG1          equ	4015	;# 
   282   000FB1                     T3CON           equ	4017	;# 
   283   000FB2                     TMR3            equ	4018	;# 
   284   000FB2                     TMR3L           equ	4018	;# 
   285   000FB3                     TMR3H           equ	4019	;# 
   286   000FBA                     CCP2CON         equ	4026	;# 
   287   000FBB                     CCPR2           equ	4027	;# 
   288   000FBB                     CCPR2L          equ	4027	;# 
   289   000FBC                     CCPR2H          equ	4028	;# 
   290   000FBD                     CCP1CON         equ	4029	;# 
   291   000FBE                     CCPR1           equ	4030	;# 
   292   000FBE                     CCPR1L          equ	4030	;# 
   293   000FBF                     CCPR1H          equ	4031	;# 
   294   000FC1                     ADCON1          equ	4033	;# 
   295   000FC2                     ADCON0          equ	4034	;# 
   296   000FC3                     ADRES           equ	4035	;# 
   297   000FC3                     ADRESL          equ	4035	;# 
   298   000FC4                     ADRESH          equ	4036	;# 
   299   000FC5                     SSPCON2         equ	4037	;# 
   300   000FC6                     SSPCON1         equ	4038	;# 
   301   000FC7                     SSPSTAT         equ	4039	;# 
   302   000FC8                     SSPADD          equ	4040	;# 
   303   000FC9                     SSPBUF          equ	4041	;# 
   304   000FCA                     T2CON           equ	4042	;# 
   305   000FCB                     PR2             equ	4043	;# 
   306   000FCB                     MEMCON          equ	4043	;# 
   307   000FCC                     TMR2            equ	4044	;# 
   308   000FCD                     T1CON           equ	4045	;# 
   309   000FCE                     TMR1            equ	4046	;# 
   310   000FCE                     TMR1L           equ	4046	;# 
   311   000FCF                     TMR1H           equ	4047	;# 
   312   000FD0                     RCON            equ	4048	;# 
   313   000FD1                     WDTCON          equ	4049	;# 
   314   000FD2                     LVDCON          equ	4050	;# 
   315   000FD3                     OSCCON          equ	4051	;# 
   316   000FD5                     T0CON           equ	4053	;# 
   317   000FD6                     TMR0            equ	4054	;# 
   318   000FD6                     TMR0L           equ	4054	;# 
   319   000FD7                     TMR0H           equ	4055	;# 
   320   000FD8                     STATUS          equ	4056	;# 
   321   000FD9                     FSR2            equ	4057	;# 
   322   000FD9                     FSR2L           equ	4057	;# 
   323   000FDA                     FSR2H           equ	4058	;# 
   324   000FDB                     PLUSW2          equ	4059	;# 
   325   000FDC                     PREINC2         equ	4060	;# 
   326   000FDD                     POSTDEC2        equ	4061	;# 
   327   000FDE                     POSTINC2        equ	4062	;# 
   328   000FDF                     INDF2           equ	4063	;# 
   329   000FE0                     BSR             equ	4064	;# 
   330   000FE1                     FSR1            equ	4065	;# 
   331   000FE1                     FSR1L           equ	4065	;# 
   332   000FE2                     FSR1H           equ	4066	;# 
   333   000FE3                     PLUSW1          equ	4067	;# 
   334   000FE4                     PREINC1         equ	4068	;# 
   335   000FE5                     POSTDEC1        equ	4069	;# 
   336   000FE6                     POSTINC1        equ	4070	;# 
   337   000FE7                     INDF1           equ	4071	;# 
   338   000FE8                     WREG            equ	4072	;# 
   339   000FE9                     FSR0            equ	4073	;# 
   340   000FE9                     FSR0L           equ	4073	;# 
   341   000FEA                     FSR0H           equ	4074	;# 
   342   000FEB                     PLUSW0          equ	4075	;# 
   343   000FEC                     PREINC0         equ	4076	;# 
   344   000FED                     POSTDEC0        equ	4077	;# 
   345   000FEE                     POSTINC0        equ	4078	;# 
   346   000FEF                     INDF0           equ	4079	;# 
   347   000FF0                     INTCON3         equ	4080	;# 
   348   000FF1                     INTCON2         equ	4081	;# 
   349   000FF2                     INTCON          equ	4082	;# 
   350   000FF2                     INTCON1         equ	4082	;# 
   351   000FF3                     PROD            equ	4083	;# 
   352   000FF3                     PRODL           equ	4083	;# 
   353   000FF4                     PRODH           equ	4084	;# 
   354   000FF5                     TABLAT          equ	4085	;# 
   355   000FF6                     TBLPTR          equ	4086	;# 
   356   000FF6                     TBLPTRL         equ	4086	;# 
   357   000FF7                     TBLPTRH         equ	4087	;# 
   358   000FF8                     TBLPTRU         equ	4088	;# 
   359   000FF9                     PCLAT           equ	4089	;# 
   360   000FF9                     PC              equ	4089	;# 
   361   000FF9                     PCL             equ	4089	;# 
   362   000FFA                     PCLATH          equ	4090	;# 
   363   000FFB                     PCLATU          equ	4091	;# 
   364   000FFC                     STKPTR          equ	4092	;# 
   365   000FFD                     TOS             equ	4093	;# 
   366   000FFD                     TOSL            equ	4093	;# 
   367   000FFE                     TOSH            equ	4094	;# 
   368   000FFF                     TOSU            equ	4095	;# 
   369   000F80                     PORTA           equ	3968	;# 
   370   000F81                     PORTB           equ	3969	;# 
   371   000F82                     PORTC           equ	3970	;# 
   372   000F83                     PORTD           equ	3971	;# 
   373   000F84                     PORTE           equ	3972	;# 
   374   000F89                     LATA            equ	3977	;# 
   375   000F8A                     LATB            equ	3978	;# 
   376   000F8B                     LATC            equ	3979	;# 
   377   000F8C                     LATD            equ	3980	;# 
   378   000F8D                     LATE            equ	3981	;# 
   379   000F92                     TRISA           equ	3986	;# 
   380   000F92                     DDRA            equ	3986	;# 
   381   000F93                     TRISB           equ	3987	;# 
   382   000F93                     DDRB            equ	3987	;# 
   383   000F94                     TRISC           equ	3988	;# 
   384   000F94                     DDRC            equ	3988	;# 
   385   000F95                     TRISD           equ	3989	;# 
   386   000F95                     DDRD            equ	3989	;# 
   387   000F96                     TRISE           equ	3990	;# 
   388   000F96                     DDRE            equ	3990	;# 
   389   000F9D                     PIE1            equ	3997	;# 
   390   000F9E                     PIR1            equ	3998	;# 
   391   000F9F                     IPR1            equ	3999	;# 
   392   000FA0                     PIE2            equ	4000	;# 
   393   000FA1                     PIR2            equ	4001	;# 
   394   000FA2                     IPR2            equ	4002	;# 
   395   000FA6                     EECON1          equ	4006	;# 
   396   000FA7                     EECON2          equ	4007	;# 
   397   000FA8                     EEDATA          equ	4008	;# 
   398   000FA9                     EEADR           equ	4009	;# 
   399   000FAB                     RCSTA           equ	4011	;# 
   400   000FAB                     RCSTA1          equ	4011	;# 
   401   000FAC                     TXSTA           equ	4012	;# 
   402   000FAC                     TXSTA1          equ	4012	;# 
   403   000FAD                     TXREG           equ	4013	;# 
   404   000FAD                     TXREG1          equ	4013	;# 
   405   000FAE                     RCREG           equ	4014	;# 
   406   000FAE                     RCREG1          equ	4014	;# 
   407   000FAF                     SPBRG           equ	4015	;# 
   408   000FAF                     SPBRG1          equ	4015	;# 
   409   000FB1                     T3CON           equ	4017	;# 
   410   000FB2                     TMR3            equ	4018	;# 
   411   000FB2                     TMR3L           equ	4018	;# 
   412   000FB3                     TMR3H           equ	4019	;# 
   413   000FBA                     CCP2CON         equ	4026	;# 
   414   000FBB                     CCPR2           equ	4027	;# 
   415   000FBB                     CCPR2L          equ	4027	;# 
   416   000FBC                     CCPR2H          equ	4028	;# 
   417   000FBD                     CCP1CON         equ	4029	;# 
   418   000FBE                     CCPR1           equ	4030	;# 
   419   000FBE                     CCPR1L          equ	4030	;# 
   420   000FBF                     CCPR1H          equ	4031	;# 
   421   000FC1                     ADCON1          equ	4033	;# 
   422   000FC2                     ADCON0          equ	4034	;# 
   423   000FC3                     ADRES           equ	4035	;# 
   424   000FC3                     ADRESL          equ	4035	;# 
   425   000FC4                     ADRESH          equ	4036	;# 
   426   000FC5                     SSPCON2         equ	4037	;# 
   427   000FC6                     SSPCON1         equ	4038	;# 
   428   000FC7                     SSPSTAT         equ	4039	;# 
   429   000FC8                     SSPADD          equ	4040	;# 
   430   000FC9                     SSPBUF          equ	4041	;# 
   431   000FCA                     T2CON           equ	4042	;# 
   432   000FCB                     PR2             equ	4043	;# 
   433   000FCB                     MEMCON          equ	4043	;# 
   434   000FCC                     TMR2            equ	4044	;# 
   435   000FCD                     T1CON           equ	4045	;# 
   436   000FCE                     TMR1            equ	4046	;# 
   437   000FCE                     TMR1L           equ	4046	;# 
   438   000FCF                     TMR1H           equ	4047	;# 
   439   000FD0                     RCON            equ	4048	;# 
   440   000FD1                     WDTCON          equ	4049	;# 
   441   000FD2                     LVDCON          equ	4050	;# 
   442   000FD3                     OSCCON          equ	4051	;# 
   443   000FD5                     T0CON           equ	4053	;# 
   444   000FD6                     TMR0            equ	4054	;# 
   445   000FD6                     TMR0L           equ	4054	;# 
   446   000FD7                     TMR0H           equ	4055	;# 
   447   000FD8                     STATUS          equ	4056	;# 
   448   000FD9                     FSR2            equ	4057	;# 
   449   000FD9                     FSR2L           equ	4057	;# 
   450   000FDA                     FSR2H           equ	4058	;# 
   451   000FDB                     PLUSW2          equ	4059	;# 
   452   000FDC                     PREINC2         equ	4060	;# 
   453   000FDD                     POSTDEC2        equ	4061	;# 
   454   000FDE                     POSTINC2        equ	4062	;# 
   455   000FDF                     INDF2           equ	4063	;# 
   456   000FE0                     BSR             equ	4064	;# 
   457   000FE1                     FSR1            equ	4065	;# 
   458   000FE1                     FSR1L           equ	4065	;# 
   459   000FE2                     FSR1H           equ	4066	;# 
   460   000FE3                     PLUSW1          equ	4067	;# 
   461   000FE4                     PREINC1         equ	4068	;# 
   462   000FE5                     POSTDEC1        equ	4069	;# 
   463   000FE6                     POSTINC1        equ	4070	;# 
   464   000FE7                     INDF1           equ	4071	;# 
   465   000FE8                     WREG            equ	4072	;# 
   466   000FE9                     FSR0            equ	4073	;# 
   467   000FE9                     FSR0L           equ	4073	;# 
   468   000FEA                     FSR0H           equ	4074	;# 
   469   000FEB                     PLUSW0          equ	4075	;# 
   470   000FEC                     PREINC0         equ	4076	;# 
   471   000FED                     POSTDEC0        equ	4077	;# 
   472   000FEE                     POSTINC0        equ	4078	;# 
   473   000FEF                     INDF0           equ	4079	;# 
   474   000FF0                     INTCON3         equ	4080	;# 
   475   000FF1                     INTCON2         equ	4081	;# 
   476   000FF2                     INTCON          equ	4082	;# 
   477   000FF2                     INTCON1         equ	4082	;# 
   478   000FF3                     PROD            equ	4083	;# 
   479   000FF3                     PRODL           equ	4083	;# 
   480   000FF4                     PRODH           equ	4084	;# 
   481   000FF5                     TABLAT          equ	4085	;# 
   482   000FF6                     TBLPTR          equ	4086	;# 
   483   000FF6                     TBLPTRL         equ	4086	;# 
   484   000FF7                     TBLPTRH         equ	4087	;# 
   485   000FF8                     TBLPTRU         equ	4088	;# 
   486   000FF9                     PCLAT           equ	4089	;# 
   487   000FF9                     PC              equ	4089	;# 
   488   000FF9                     PCL             equ	4089	;# 
   489   000FFA                     PCLATH          equ	4090	;# 
   490   000FFB                     PCLATU          equ	4091	;# 
   491   000FFC                     STKPTR          equ	4092	;# 
   492   000FFD                     TOS             equ	4093	;# 
   493   000FFD                     TOSL            equ	4093	;# 
   494   000FFE                     TOSH            equ	4094	;# 
   495   000FFF                     TOSU            equ	4095	;# 
   496   000F80                     PORTA           equ	3968	;# 
   497   000F81                     PORTB           equ	3969	;# 
   498   000F82                     PORTC           equ	3970	;# 
   499   000F83                     PORTD           equ	3971	;# 
   500   000F84                     PORTE           equ	3972	;# 
   501   000F89                     LATA            equ	3977	;# 
   502   000F8A                     LATB            equ	3978	;# 
   503   000F8B                     LATC            equ	3979	;# 
   504   000F8C                     LATD            equ	3980	;# 
   505   000F8D                     LATE            equ	3981	;# 
   506   000F92                     TRISA           equ	3986	;# 
   507   000F92                     DDRA            equ	3986	;# 
   508   000F93                     TRISB           equ	3987	;# 
   509   000F93                     DDRB            equ	3987	;# 
   510   000F94                     TRISC           equ	3988	;# 
   511   000F94                     DDRC            equ	3988	;# 
   512   000F95                     TRISD           equ	3989	;# 
   513   000F95                     DDRD            equ	3989	;# 
   514   000F96                     TRISE           equ	3990	;# 
   515   000F96                     DDRE            equ	3990	;# 
   516   000F9D                     PIE1            equ	3997	;# 
   517   000F9E                     PIR1            equ	3998	;# 
   518   000F9F                     IPR1            equ	3999	;# 
   519   000FA0                     PIE2            equ	4000	;# 
   520   000FA1                     PIR2            equ	4001	;# 
   521   000FA2                     IPR2            equ	4002	;# 
   522   000FA6                     EECON1          equ	4006	;# 
   523   000FA7                     EECON2          equ	4007	;# 
   524   000FA8                     EEDATA          equ	4008	;# 
   525   000FA9                     EEADR           equ	4009	;# 
   526   000FAB                     RCSTA           equ	4011	;# 
   527   000FAB                     RCSTA1          equ	4011	;# 
   528   000FAC                     TXSTA           equ	4012	;# 
   529   000FAC                     TXSTA1          equ	4012	;# 
   530   000FAD                     TXREG           equ	4013	;# 
   531   000FAD                     TXREG1          equ	4013	;# 
   532   000FAE                     RCREG           equ	4014	;# 
   533   000FAE                     RCREG1          equ	4014	;# 
   534   000FAF                     SPBRG           equ	4015	;# 
   535   000FAF                     SPBRG1          equ	4015	;# 
   536   000FB1                     T3CON           equ	4017	;# 
   537   000FB2                     TMR3            equ	4018	;# 
   538   000FB2                     TMR3L           equ	4018	;# 
   539   000FB3                     TMR3H           equ	4019	;# 
   540   000FBA                     CCP2CON         equ	4026	;# 
   541   000FBB                     CCPR2           equ	4027	;# 
   542   000FBB                     CCPR2L          equ	4027	;# 
   543   000FBC                     CCPR2H          equ	4028	;# 
   544   000FBD                     CCP1CON         equ	4029	;# 
   545   000FBE                     CCPR1           equ	4030	;# 
   546   000FBE                     CCPR1L          equ	4030	;# 
   547   000FBF                     CCPR1H          equ	4031	;# 
   548   000FC1                     ADCON1          equ	4033	;# 
   549   000FC2                     ADCON0          equ	4034	;# 
   550   000FC3                     ADRES           equ	4035	;# 
   551   000FC3                     ADRESL          equ	4035	;# 
   552   000FC4                     ADRESH          equ	4036	;# 
   553   000FC5                     SSPCON2         equ	4037	;# 
   554   000FC6                     SSPCON1         equ	4038	;# 
   555   000FC7                     SSPSTAT         equ	4039	;# 
   556   000FC8                     SSPADD          equ	4040	;# 
   557   000FC9                     SSPBUF          equ	4041	;# 
   558   000FCA                     T2CON           equ	4042	;# 
   559   000FCB                     PR2             equ	4043	;# 
   560   000FCB                     MEMCON          equ	4043	;# 
   561   000FCC                     TMR2            equ	4044	;# 
   562   000FCD                     T1CON           equ	4045	;# 
   563   000FCE                     TMR1            equ	4046	;# 
   564   000FCE                     TMR1L           equ	4046	;# 
   565   000FCF                     TMR1H           equ	4047	;# 
   566   000FD0                     RCON            equ	4048	;# 
   567   000FD1                     WDTCON          equ	4049	;# 
   568   000FD2                     LVDCON          equ	4050	;# 
   569   000FD3                     OSCCON          equ	4051	;# 
   570   000FD5                     T0CON           equ	4053	;# 
   571   000FD6                     TMR0            equ	4054	;# 
   572   000FD6                     TMR0L           equ	4054	;# 
   573   000FD7                     TMR0H           equ	4055	;# 
   574   000FD8                     STATUS          equ	4056	;# 
   575   000FD9                     FSR2            equ	4057	;# 
   576   000FD9                     FSR2L           equ	4057	;# 
   577   000FDA                     FSR2H           equ	4058	;# 
   578   000FDB                     PLUSW2          equ	4059	;# 
   579   000FDC                     PREINC2         equ	4060	;# 
   580   000FDD                     POSTDEC2        equ	4061	;# 
   581   000FDE                     POSTINC2        equ	4062	;# 
   582   000FDF                     INDF2           equ	4063	;# 
   583   000FE0                     BSR             equ	4064	;# 
   584   000FE1                     FSR1            equ	4065	;# 
   585   000FE1                     FSR1L           equ	4065	;# 
   586   000FE2                     FSR1H           equ	4066	;# 
   587   000FE3                     PLUSW1          equ	4067	;# 
   588   000FE4                     PREINC1         equ	4068	;# 
   589   000FE5                     POSTDEC1        equ	4069	;# 
   590   000FE6                     POSTINC1        equ	4070	;# 
   591   000FE7                     INDF1           equ	4071	;# 
   592   000FE8                     WREG            equ	4072	;# 
   593   000FE9                     FSR0            equ	4073	;# 
   594   000FE9                     FSR0L           equ	4073	;# 
   595   000FEA                     FSR0H           equ	4074	;# 
   596   000FEB                     PLUSW0          equ	4075	;# 
   597   000FEC                     PREINC0         equ	4076	;# 
   598   000FED                     POSTDEC0        equ	4077	;# 
   599   000FEE                     POSTINC0        equ	4078	;# 
   600   000FEF                     INDF0           equ	4079	;# 
   601   000FF0                     INTCON3         equ	4080	;# 
   602   000FF1                     INTCON2         equ	4081	;# 
   603   000FF2                     INTCON          equ	4082	;# 
   604   000FF2                     INTCON1         equ	4082	;# 
   605   000FF3                     PROD            equ	4083	;# 
   606   000FF3                     PRODL           equ	4083	;# 
   607   000FF4                     PRODH           equ	4084	;# 
   608   000FF5                     TABLAT          equ	4085	;# 
   609   000FF6                     TBLPTR          equ	4086	;# 
   610   000FF6                     TBLPTRL         equ	4086	;# 
   611   000FF7                     TBLPTRH         equ	4087	;# 
   612   000FF8                     TBLPTRU         equ	4088	;# 
   613   000FF9                     PCLAT           equ	4089	;# 
   614   000FF9                     PC              equ	4089	;# 
   615   000FF9                     PCL             equ	4089	;# 
   616   000FFA                     PCLATH          equ	4090	;# 
   617   000FFB                     PCLATU          equ	4091	;# 
   618   000FFC                     STKPTR          equ	4092	;# 
   619   000FFD                     TOS             equ	4093	;# 
   620   000FFD                     TOSL            equ	4093	;# 
   621   000FFE                     TOSH            equ	4094	;# 
   622   000FFF                     TOSU            equ	4095	;# 
   623   000F80                     PORTA           equ	3968	;# 
   624   000F81                     PORTB           equ	3969	;# 
   625   000F82                     PORTC           equ	3970	;# 
   626   000F83                     PORTD           equ	3971	;# 
   627   000F84                     PORTE           equ	3972	;# 
   628   000F89                     LATA            equ	3977	;# 
   629   000F8A                     LATB            equ	3978	;# 
   630   000F8B                     LATC            equ	3979	;# 
   631   000F8C                     LATD            equ	3980	;# 
   632   000F8D                     LATE            equ	3981	;# 
   633   000F92                     TRISA           equ	3986	;# 
   634   000F92                     DDRA            equ	3986	;# 
   635   000F93                     TRISB           equ	3987	;# 
   636   000F93                     DDRB            equ	3987	;# 
   637   000F94                     TRISC           equ	3988	;# 
   638   000F94                     DDRC            equ	3988	;# 
   639   000F95                     TRISD           equ	3989	;# 
   640   000F95                     DDRD            equ	3989	;# 
   641   000F96                     TRISE           equ	3990	;# 
   642   000F96                     DDRE            equ	3990	;# 
   643   000F9D                     PIE1            equ	3997	;# 
   644   000F9E                     PIR1            equ	3998	;# 
   645   000F9F                     IPR1            equ	3999	;# 
   646   000FA0                     PIE2            equ	4000	;# 
   647   000FA1                     PIR2            equ	4001	;# 
   648   000FA2                     IPR2            equ	4002	;# 
   649   000FA6                     EECON1          equ	4006	;# 
   650   000FA7                     EECON2          equ	4007	;# 
   651   000FA8                     EEDATA          equ	4008	;# 
   652   000FA9                     EEADR           equ	4009	;# 
   653   000FAB                     RCSTA           equ	4011	;# 
   654   000FAB                     RCSTA1          equ	4011	;# 
   655   000FAC                     TXSTA           equ	4012	;# 
   656   000FAC                     TXSTA1          equ	4012	;# 
   657   000FAD                     TXREG           equ	4013	;# 
   658   000FAD                     TXREG1          equ	4013	;# 
   659   000FAE                     RCREG           equ	4014	;# 
   660   000FAE                     RCREG1          equ	4014	;# 
   661   000FAF                     SPBRG           equ	4015	;# 
   662   000FAF                     SPBRG1          equ	4015	;# 
   663   000FB1                     T3CON           equ	4017	;# 
   664   000FB2                     TMR3            equ	4018	;# 
   665   000FB2                     TMR3L           equ	4018	;# 
   666   000FB3                     TMR3H           equ	4019	;# 
   667   000FBA                     CCP2CON         equ	4026	;# 
   668   000FBB                     CCPR2           equ	4027	;# 
   669   000FBB                     CCPR2L          equ	4027	;# 
   670   000FBC                     CCPR2H          equ	4028	;# 
   671   000FBD                     CCP1CON         equ	4029	;# 
   672   000FBE                     CCPR1           equ	4030	;# 
   673   000FBE                     CCPR1L          equ	4030	;# 
   674   000FBF                     CCPR1H          equ	4031	;# 
   675   000FC1                     ADCON1          equ	4033	;# 
   676   000FC2                     ADCON0          equ	4034	;# 
   677   000FC3                     ADRES           equ	4035	;# 
   678   000FC3                     ADRESL          equ	4035	;# 
   679   000FC4                     ADRESH          equ	4036	;# 
   680   000FC5                     SSPCON2         equ	4037	;# 
   681   000FC6                     SSPCON1         equ	4038	;# 
   682   000FC7                     SSPSTAT         equ	4039	;# 
   683   000FC8                     SSPADD          equ	4040	;# 
   684   000FC9                     SSPBUF          equ	4041	;# 
   685   000FCA                     T2CON           equ	4042	;# 
   686   000FCB                     PR2             equ	4043	;# 
   687   000FCB                     MEMCON          equ	4043	;# 
   688   000FCC                     TMR2            equ	4044	;# 
   689   000FCD                     T1CON           equ	4045	;# 
   690   000FCE                     TMR1            equ	4046	;# 
   691   000FCE                     TMR1L           equ	4046	;# 
   692   000FCF                     TMR1H           equ	4047	;# 
   693   000FD0                     RCON            equ	4048	;# 
   694   000FD1                     WDTCON          equ	4049	;# 
   695   000FD2                     LVDCON          equ	4050	;# 
   696   000FD3                     OSCCON          equ	4051	;# 
   697   000FD5                     T0CON           equ	4053	;# 
   698   000FD6                     TMR0            equ	4054	;# 
   699   000FD6                     TMR0L           equ	4054	;# 
   700   000FD7                     TMR0H           equ	4055	;# 
   701   000FD8                     STATUS          equ	4056	;# 
   702   000FD9                     FSR2            equ	4057	;# 
   703   000FD9                     FSR2L           equ	4057	;# 
   704   000FDA                     FSR2H           equ	4058	;# 
   705   000FDB                     PLUSW2          equ	4059	;# 
   706   000FDC                     PREINC2         equ	4060	;# 
   707   000FDD                     POSTDEC2        equ	4061	;# 
   708   000FDE                     POSTINC2        equ	4062	;# 
   709   000FDF                     INDF2           equ	4063	;# 
   710   000FE0                     BSR             equ	4064	;# 
   711   000FE1                     FSR1            equ	4065	;# 
   712   000FE1                     FSR1L           equ	4065	;# 
   713   000FE2                     FSR1H           equ	4066	;# 
   714   000FE3                     PLUSW1          equ	4067	;# 
   715   000FE4                     PREINC1         equ	4068	;# 
   716   000FE5                     POSTDEC1        equ	4069	;# 
   717   000FE6                     POSTINC1        equ	4070	;# 
   718   000FE7                     INDF1           equ	4071	;# 
   719   000FE8                     WREG            equ	4072	;# 
   720   000FE9                     FSR0            equ	4073	;# 
   721   000FE9                     FSR0L           equ	4073	;# 
   722   000FEA                     FSR0H           equ	4074	;# 
   723   000FEB                     PLUSW0          equ	4075	;# 
   724   000FEC                     PREINC0         equ	4076	;# 
   725   000FED                     POSTDEC0        equ	4077	;# 
   726   000FEE                     POSTINC0        equ	4078	;# 
   727   000FEF                     INDF0           equ	4079	;# 
   728   000FF0                     INTCON3         equ	4080	;# 
   729   000FF1                     INTCON2         equ	4081	;# 
   730   000FF2                     INTCON          equ	4082	;# 
   731   000FF2                     INTCON1         equ	4082	;# 
   732   000FF3                     PROD            equ	4083	;# 
   733   000FF3                     PRODL           equ	4083	;# 
   734   000FF4                     PRODH           equ	4084	;# 
   735   000FF5                     TABLAT          equ	4085	;# 
   736   000FF6                     TBLPTR          equ	4086	;# 
   737   000FF6                     TBLPTRL         equ	4086	;# 
   738   000FF7                     TBLPTRH         equ	4087	;# 
   739   000FF8                     TBLPTRU         equ	4088	;# 
   740   000FF9                     PCLAT           equ	4089	;# 
   741   000FF9                     PC              equ	4089	;# 
   742   000FF9                     PCL             equ	4089	;# 
   743   000FFA                     PCLATH          equ	4090	;# 
   744   000FFB                     PCLATU          equ	4091	;# 
   745   000FFC                     STKPTR          equ	4092	;# 
   746   000FFD                     TOS             equ	4093	;# 
   747   000FFD                     TOSL            equ	4093	;# 
   748   000FFE                     TOSH            equ	4094	;# 
   749   000FFF                     TOSU            equ	4095	;# 
   750   000F80                     PORTA           equ	3968	;# 
   751   000F81                     PORTB           equ	3969	;# 
   752   000F82                     PORTC           equ	3970	;# 
   753   000F83                     PORTD           equ	3971	;# 
   754   000F84                     PORTE           equ	3972	;# 
   755   000F89                     LATA            equ	3977	;# 
   756   000F8A                     LATB            equ	3978	;# 
   757   000F8B                     LATC            equ	3979	;# 
   758   000F8C                     LATD            equ	3980	;# 
   759   000F8D                     LATE            equ	3981	;# 
   760   000F92                     TRISA           equ	3986	;# 
   761   000F92                     DDRA            equ	3986	;# 
   762   000F93                     TRISB           equ	3987	;# 
   763   000F93                     DDRB            equ	3987	;# 
   764   000F94                     TRISC           equ	3988	;# 
   765   000F94                     DDRC            equ	3988	;# 
   766   000F95                     TRISD           equ	3989	;# 
   767   000F95                     DDRD            equ	3989	;# 
   768   000F96                     TRISE           equ	3990	;# 
   769   000F96                     DDRE            equ	3990	;# 
   770   000F9D                     PIE1            equ	3997	;# 
   771   000F9E                     PIR1            equ	3998	;# 
   772   000F9F                     IPR1            equ	3999	;# 
   773   000FA0                     PIE2            equ	4000	;# 
   774   000FA1                     PIR2            equ	4001	;# 
   775   000FA2                     IPR2            equ	4002	;# 
   776   000FA6                     EECON1          equ	4006	;# 
   777   000FA7                     EECON2          equ	4007	;# 
   778   000FA8                     EEDATA          equ	4008	;# 
   779   000FA9                     EEADR           equ	4009	;# 
   780   000FAB                     RCSTA           equ	4011	;# 
   781   000FAB                     RCSTA1          equ	4011	;# 
   782   000FAC                     TXSTA           equ	4012	;# 
   783   000FAC                     TXSTA1          equ	4012	;# 
   784   000FAD                     TXREG           equ	4013	;# 
   785   000FAD                     TXREG1          equ	4013	;# 
   786   000FAE                     RCREG           equ	4014	;# 
   787   000FAE                     RCREG1          equ	4014	;# 
   788   000FAF                     SPBRG           equ	4015	;# 
   789   000FAF                     SPBRG1          equ	4015	;# 
   790   000FB1                     T3CON           equ	4017	;# 
   791   000FB2                     TMR3            equ	4018	;# 
   792   000FB2                     TMR3L           equ	4018	;# 
   793   000FB3                     TMR3H           equ	4019	;# 
   794   000FBA                     CCP2CON         equ	4026	;# 
   795   000FBB                     CCPR2           equ	4027	;# 
   796   000FBB                     CCPR2L          equ	4027	;# 
   797   000FBC                     CCPR2H          equ	4028	;# 
   798   000FBD                     CCP1CON         equ	4029	;# 
   799   000FBE                     CCPR1           equ	4030	;# 
   800   000FBE                     CCPR1L          equ	4030	;# 
   801   000FBF                     CCPR1H          equ	4031	;# 
   802   000FC1                     ADCON1          equ	4033	;# 
   803   000FC2                     ADCON0          equ	4034	;# 
   804   000FC3                     ADRES           equ	4035	;# 
   805   000FC3                     ADRESL          equ	4035	;# 
   806   000FC4                     ADRESH          equ	4036	;# 
   807   000FC5                     SSPCON2         equ	4037	;# 
   808   000FC6                     SSPCON1         equ	4038	;# 
   809   000FC7                     SSPSTAT         equ	4039	;# 
   810   000FC8                     SSPADD          equ	4040	;# 
   811   000FC9                     SSPBUF          equ	4041	;# 
   812   000FCA                     T2CON           equ	4042	;# 
   813   000FCB                     PR2             equ	4043	;# 
   814   000FCB                     MEMCON          equ	4043	;# 
   815   000FCC                     TMR2            equ	4044	;# 
   816   000FCD                     T1CON           equ	4045	;# 
   817   000FCE                     TMR1            equ	4046	;# 
   818   000FCE                     TMR1L           equ	4046	;# 
   819   000FCF                     TMR1H           equ	4047	;# 
   820   000FD0                     RCON            equ	4048	;# 
   821   000FD1                     WDTCON          equ	4049	;# 
   822   000FD2                     LVDCON          equ	4050	;# 
   823   000FD3                     OSCCON          equ	4051	;# 
   824   000FD5                     T0CON           equ	4053	;# 
   825   000FD6                     TMR0            equ	4054	;# 
   826   000FD6                     TMR0L           equ	4054	;# 
   827   000FD7                     TMR0H           equ	4055	;# 
   828   000FD8                     STATUS          equ	4056	;# 
   829   000FD9                     FSR2            equ	4057	;# 
   830   000FD9                     FSR2L           equ	4057	;# 
   831   000FDA                     FSR2H           equ	4058	;# 
   832   000FDB                     PLUSW2          equ	4059	;# 
   833   000FDC                     PREINC2         equ	4060	;# 
   834   000FDD                     POSTDEC2        equ	4061	;# 
   835   000FDE                     POSTINC2        equ	4062	;# 
   836   000FDF                     INDF2           equ	4063	;# 
   837   000FE0                     BSR             equ	4064	;# 
   838   000FE1                     FSR1            equ	4065	;# 
   839   000FE1                     FSR1L           equ	4065	;# 
   840   000FE2                     FSR1H           equ	4066	;# 
   841   000FE3                     PLUSW1          equ	4067	;# 
   842   000FE4                     PREINC1         equ	4068	;# 
   843   000FE5                     POSTDEC1        equ	4069	;# 
   844   000FE6                     POSTINC1        equ	4070	;# 
   845   000FE7                     INDF1           equ	4071	;# 
   846   000FE8                     WREG            equ	4072	;# 
   847   000FE9                     FSR0            equ	4073	;# 
   848   000FE9                     FSR0L           equ	4073	;# 
   849   000FEA                     FSR0H           equ	4074	;# 
   850   000FEB                     PLUSW0          equ	4075	;# 
   851   000FEC                     PREINC0         equ	4076	;# 
   852   000FED                     POSTDEC0        equ	4077	;# 
   853   000FEE                     POSTINC0        equ	4078	;# 
   854   000FEF                     INDF0           equ	4079	;# 
   855   000FF0                     INTCON3         equ	4080	;# 
   856   000FF1                     INTCON2         equ	4081	;# 
   857   000FF2                     INTCON          equ	4082	;# 
   858   000FF2                     INTCON1         equ	4082	;# 
   859   000FF3                     PROD            equ	4083	;# 
   860   000FF3                     PRODL           equ	4083	;# 
   861   000FF4                     PRODH           equ	4084	;# 
   862   000FF5                     TABLAT          equ	4085	;# 
   863   000FF6                     TBLPTR          equ	4086	;# 
   864   000FF6                     TBLPTRL         equ	4086	;# 
   865   000FF7                     TBLPTRH         equ	4087	;# 
   866   000FF8                     TBLPTRU         equ	4088	;# 
   867   000FF9                     PCLAT           equ	4089	;# 
   868   000FF9                     PC              equ	4089	;# 
   869   000FF9                     PCL             equ	4089	;# 
   870   000FFA                     PCLATH          equ	4090	;# 
   871   000FFB                     PCLATU          equ	4091	;# 
   872   000FFC                     STKPTR          equ	4092	;# 
   873   000FFD                     TOS             equ	4093	;# 
   874   000FFD                     TOSL            equ	4093	;# 
   875   000FFE                     TOSH            equ	4094	;# 
   876   000FFF                     TOSU            equ	4095	;# 
   877   000F80                     PORTA           equ	3968	;# 
   878   000F81                     PORTB           equ	3969	;# 
   879   000F82                     PORTC           equ	3970	;# 
   880   000F83                     PORTD           equ	3971	;# 
   881   000F84                     PORTE           equ	3972	;# 
   882   000F89                     LATA            equ	3977	;# 
   883   000F8A                     LATB            equ	3978	;# 
   884   000F8B                     LATC            equ	3979	;# 
   885   000F8C                     LATD            equ	3980	;# 
   886   000F8D                     LATE            equ	3981	;# 
   887   000F92                     TRISA           equ	3986	;# 
   888   000F92                     DDRA            equ	3986	;# 
   889   000F93                     TRISB           equ	3987	;# 
   890   000F93                     DDRB            equ	3987	;# 
   891   000F94                     TRISC           equ	3988	;# 
   892   000F94                     DDRC            equ	3988	;# 
   893   000F95                     TRISD           equ	3989	;# 
   894   000F95                     DDRD            equ	3989	;# 
   895   000F96                     TRISE           equ	3990	;# 
   896   000F96                     DDRE            equ	3990	;# 
   897   000F9D                     PIE1            equ	3997	;# 
   898   000F9E                     PIR1            equ	3998	;# 
   899   000F9F                     IPR1            equ	3999	;# 
   900   000FA0                     PIE2            equ	4000	;# 
   901   000FA1                     PIR2            equ	4001	;# 
   902   000FA2                     IPR2            equ	4002	;# 
   903   000FA6                     EECON1          equ	4006	;# 
   904   000FA7                     EECON2          equ	4007	;# 
   905   000FA8                     EEDATA          equ	4008	;# 
   906   000FA9                     EEADR           equ	4009	;# 
   907   000FAB                     RCSTA           equ	4011	;# 
   908   000FAB                     RCSTA1          equ	4011	;# 
   909   000FAC                     TXSTA           equ	4012	;# 
   910   000FAC                     TXSTA1          equ	4012	;# 
   911   000FAD                     TXREG           equ	4013	;# 
   912   000FAD                     TXREG1          equ	4013	;# 
   913   000FAE                     RCREG           equ	4014	;# 
   914   000FAE                     RCREG1          equ	4014	;# 
   915   000FAF                     SPBRG           equ	4015	;# 
   916   000FAF                     SPBRG1          equ	4015	;# 
   917   000FB1                     T3CON           equ	4017	;# 
   918   000FB2                     TMR3            equ	4018	;# 
   919   000FB2                     TMR3L           equ	4018	;# 
   920   000FB3                     TMR3H           equ	4019	;# 
   921   000FBA                     CCP2CON         equ	4026	;# 
   922   000FBB                     CCPR2           equ	4027	;# 
   923   000FBB                     CCPR2L          equ	4027	;# 
   924   000FBC                     CCPR2H          equ	4028	;# 
   925   000FBD                     CCP1CON         equ	4029	;# 
   926   000FBE                     CCPR1           equ	4030	;# 
   927   000FBE                     CCPR1L          equ	4030	;# 
   928   000FBF                     CCPR1H          equ	4031	;# 
   929   000FC1                     ADCON1          equ	4033	;# 
   930   000FC2                     ADCON0          equ	4034	;# 
   931   000FC3                     ADRES           equ	4035	;# 
   932   000FC3                     ADRESL          equ	4035	;# 
   933   000FC4                     ADRESH          equ	4036	;# 
   934   000FC5                     SSPCON2         equ	4037	;# 
   935   000FC6                     SSPCON1         equ	4038	;# 
   936   000FC7                     SSPSTAT         equ	4039	;# 
   937   000FC8                     SSPADD          equ	4040	;# 
   938   000FC9                     SSPBUF          equ	4041	;# 
   939   000FCA                     T2CON           equ	4042	;# 
   940   000FCB                     PR2             equ	4043	;# 
   941   000FCB                     MEMCON          equ	4043	;# 
   942   000FCC                     TMR2            equ	4044	;# 
   943   000FCD                     T1CON           equ	4045	;# 
   944   000FCE                     TMR1            equ	4046	;# 
   945   000FCE                     TMR1L           equ	4046	;# 
   946   000FCF                     TMR1H           equ	4047	;# 
   947   000FD0                     RCON            equ	4048	;# 
   948   000FD1                     WDTCON          equ	4049	;# 
   949   000FD2                     LVDCON          equ	4050	;# 
   950   000FD3                     OSCCON          equ	4051	;# 
   951   000FD5                     T0CON           equ	4053	;# 
   952   000FD6                     TMR0            equ	4054	;# 
   953   000FD6                     TMR0L           equ	4054	;# 
   954   000FD7                     TMR0H           equ	4055	;# 
   955   000FD8                     STATUS          equ	4056	;# 
   956   000FD9                     FSR2            equ	4057	;# 
   957   000FD9                     FSR2L           equ	4057	;# 
   958   000FDA                     FSR2H           equ	4058	;# 
   959   000FDB                     PLUSW2          equ	4059	;# 
   960   000FDC                     PREINC2         equ	4060	;# 
   961   000FDD                     POSTDEC2        equ	4061	;# 
   962   000FDE                     POSTINC2        equ	4062	;# 
   963   000FDF                     INDF2           equ	4063	;# 
   964   000FE0                     BSR             equ	4064	;# 
   965   000FE1                     FSR1            equ	4065	;# 
   966   000FE1                     FSR1L           equ	4065	;# 
   967   000FE2                     FSR1H           equ	4066	;# 
   968   000FE3                     PLUSW1          equ	4067	;# 
   969   000FE4                     PREINC1         equ	4068	;# 
   970   000FE5                     POSTDEC1        equ	4069	;# 
   971   000FE6                     POSTINC1        equ	4070	;# 
   972   000FE7                     INDF1           equ	4071	;# 
   973   000FE8                     WREG            equ	4072	;# 
   974   000FE9                     FSR0            equ	4073	;# 
   975   000FE9                     FSR0L           equ	4073	;# 
   976   000FEA                     FSR0H           equ	4074	;# 
   977   000FEB                     PLUSW0          equ	4075	;# 
   978   000FEC                     PREINC0         equ	4076	;# 
   979   000FED                     POSTDEC0        equ	4077	;# 
   980   000FEE                     POSTINC0        equ	4078	;# 
   981   000FEF                     INDF0           equ	4079	;# 
   982   000FF0                     INTCON3         equ	4080	;# 
   983   000FF1                     INTCON2         equ	4081	;# 
   984   000FF2                     INTCON          equ	4082	;# 
   985   000FF2                     INTCON1         equ	4082	;# 
   986   000FF3                     PROD            equ	4083	;# 
   987   000FF3                     PRODL           equ	4083	;# 
   988   000FF4                     PRODH           equ	4084	;# 
   989   000FF5                     TABLAT          equ	4085	;# 
   990   000FF6                     TBLPTR          equ	4086	;# 
   991   000FF6                     TBLPTRL         equ	4086	;# 
   992   000FF7                     TBLPTRH         equ	4087	;# 
   993   000FF8                     TBLPTRU         equ	4088	;# 
   994   000FF9                     PCLAT           equ	4089	;# 
   995   000FF9                     PC              equ	4089	;# 
   996   000FF9                     PCL             equ	4089	;# 
   997   000FFA                     PCLATH          equ	4090	;# 
   998   000FFB                     PCLATU          equ	4091	;# 
   999   000FFC                     STKPTR          equ	4092	;# 
  1000   000FFD                     TOS             equ	4093	;# 
  1001   000FFD                     TOSL            equ	4093	;# 
  1002   000FFE                     TOSH            equ	4094	;# 
  1003   000FFF                     TOSU            equ	4095	;# 
  1004   000F80                     PORTA           equ	3968	;# 
  1005   000F81                     PORTB           equ	3969	;# 
  1006   000F82                     PORTC           equ	3970	;# 
  1007   000F83                     PORTD           equ	3971	;# 
  1008   000F84                     PORTE           equ	3972	;# 
  1009   000F89                     LATA            equ	3977	;# 
  1010   000F8A                     LATB            equ	3978	;# 
  1011   000F8B                     LATC            equ	3979	;# 
  1012   000F8C                     LATD            equ	3980	;# 
  1013   000F8D                     LATE            equ	3981	;# 
  1014   000F92                     TRISA           equ	3986	;# 
  1015   000F92                     DDRA            equ	3986	;# 
  1016   000F93                     TRISB           equ	3987	;# 
  1017   000F93                     DDRB            equ	3987	;# 
  1018   000F94                     TRISC           equ	3988	;# 
  1019   000F94                     DDRC            equ	3988	;# 
  1020   000F95                     TRISD           equ	3989	;# 
  1021   000F95                     DDRD            equ	3989	;# 
  1022   000F96                     TRISE           equ	3990	;# 
  1023   000F96                     DDRE            equ	3990	;# 
  1024   000F9D                     PIE1            equ	3997	;# 
  1025   000F9E                     PIR1            equ	3998	;# 
  1026   000F9F                     IPR1            equ	3999	;# 
  1027   000FA0                     PIE2            equ	4000	;# 
  1028   000FA1                     PIR2            equ	4001	;# 
  1029   000FA2                     IPR2            equ	4002	;# 
  1030   000FA6                     EECON1          equ	4006	;# 
  1031   000FA7                     EECON2          equ	4007	;# 
  1032   000FA8                     EEDATA          equ	4008	;# 
  1033   000FA9                     EEADR           equ	4009	;# 
  1034   000FAB                     RCSTA           equ	4011	;# 
  1035   000FAB                     RCSTA1          equ	4011	;# 
  1036   000FAC                     TXSTA           equ	4012	;# 
  1037   000FAC                     TXSTA1          equ	4012	;# 
  1038   000FAD                     TXREG           equ	4013	;# 
  1039   000FAD                     TXREG1          equ	4013	;# 
  1040   000FAE                     RCREG           equ	4014	;# 
  1041   000FAE                     RCREG1          equ	4014	;# 
  1042   000FAF                     SPBRG           equ	4015	;# 
  1043   000FAF                     SPBRG1          equ	4015	;# 
  1044   000FB1                     T3CON           equ	4017	;# 
  1045   000FB2                     TMR3            equ	4018	;# 
  1046   000FB2                     TMR3L           equ	4018	;# 
  1047   000FB3                     TMR3H           equ	4019	;# 
  1048   000FBA                     CCP2CON         equ	4026	;# 
  1049   000FBB                     CCPR2           equ	4027	;# 
  1050   000FBB                     CCPR2L          equ	4027	;# 
  1051   000FBC                     CCPR2H          equ	4028	;# 
  1052   000FBD                     CCP1CON         equ	4029	;# 
  1053   000FBE                     CCPR1           equ	4030	;# 
  1054   000FBE                     CCPR1L          equ	4030	;# 
  1055   000FBF                     CCPR1H          equ	4031	;# 
  1056   000FC1                     ADCON1          equ	4033	;# 
  1057   000FC2                     ADCON0          equ	4034	;# 
  1058   000FC3                     ADRES           equ	4035	;# 
  1059   000FC3                     ADRESL          equ	4035	;# 
  1060   000FC4                     ADRESH          equ	4036	;# 
  1061   000FC5                     SSPCON2         equ	4037	;# 
  1062   000FC6                     SSPCON1         equ	4038	;# 
  1063   000FC7                     SSPSTAT         equ	4039	;# 
  1064   000FC8                     SSPADD          equ	4040	;# 
  1065   000FC9                     SSPBUF          equ	4041	;# 
  1066   000FCA                     T2CON           equ	4042	;# 
  1067   000FCB                     PR2             equ	4043	;# 
  1068   000FCB                     MEMCON          equ	4043	;# 
  1069   000FCC                     TMR2            equ	4044	;# 
  1070   000FCD                     T1CON           equ	4045	;# 
  1071   000FCE                     TMR1            equ	4046	;# 
  1072   000FCE                     TMR1L           equ	4046	;# 
  1073   000FCF                     TMR1H           equ	4047	;# 
  1074   000FD0                     RCON            equ	4048	;# 
  1075   000FD1                     WDTCON          equ	4049	;# 
  1076   000FD2                     LVDCON          equ	4050	;# 
  1077   000FD3                     OSCCON          equ	4051	;# 
  1078   000FD5                     T0CON           equ	4053	;# 
  1079   000FD6                     TMR0            equ	4054	;# 
  1080   000FD6                     TMR0L           equ	4054	;# 
  1081   000FD7                     TMR0H           equ	4055	;# 
  1082   000FD8                     STATUS          equ	4056	;# 
  1083   000FD9                     FSR2            equ	4057	;# 
  1084   000FD9                     FSR2L           equ	4057	;# 
  1085   000FDA                     FSR2H           equ	4058	;# 
  1086   000FDB                     PLUSW2          equ	4059	;# 
  1087   000FDC                     PREINC2         equ	4060	;# 
  1088   000FDD                     POSTDEC2        equ	4061	;# 
  1089   000FDE                     POSTINC2        equ	4062	;# 
  1090   000FDF                     INDF2           equ	4063	;# 
  1091   000FE0                     BSR             equ	4064	;# 
  1092   000FE1                     FSR1            equ	4065	;# 
  1093   000FE1                     FSR1L           equ	4065	;# 
  1094   000FE2                     FSR1H           equ	4066	;# 
  1095   000FE3                     PLUSW1          equ	4067	;# 
  1096   000FE4                     PREINC1         equ	4068	;# 
  1097   000FE5                     POSTDEC1        equ	4069	;# 
  1098   000FE6                     POSTINC1        equ	4070	;# 
  1099   000FE7                     INDF1           equ	4071	;# 
  1100   000FE8                     WREG            equ	4072	;# 
  1101   000FE9                     FSR0            equ	4073	;# 
  1102   000FE9                     FSR0L           equ	4073	;# 
  1103   000FEA                     FSR0H           equ	4074	;# 
  1104   000FEB                     PLUSW0          equ	4075	;# 
  1105   000FEC                     PREINC0         equ	4076	;# 
  1106   000FED                     POSTDEC0        equ	4077	;# 
  1107   000FEE                     POSTINC0        equ	4078	;# 
  1108   000FEF                     INDF0           equ	4079	;# 
  1109   000FF0                     INTCON3         equ	4080	;# 
  1110   000FF1                     INTCON2         equ	4081	;# 
  1111   000FF2                     INTCON          equ	4082	;# 
  1112   000FF2                     INTCON1         equ	4082	;# 
  1113   000FF3                     PROD            equ	4083	;# 
  1114   000FF3                     PRODL           equ	4083	;# 
  1115   000FF4                     PRODH           equ	4084	;# 
  1116   000FF5                     TABLAT          equ	4085	;# 
  1117   000FF6                     TBLPTR          equ	4086	;# 
  1118   000FF6                     TBLPTRL         equ	4086	;# 
  1119   000FF7                     TBLPTRH         equ	4087	;# 
  1120   000FF8                     TBLPTRU         equ	4088	;# 
  1121   000FF9                     PCLAT           equ	4089	;# 
  1122   000FF9                     PC              equ	4089	;# 
  1123   000FF9                     PCL             equ	4089	;# 
  1124   000FFA                     PCLATH          equ	4090	;# 
  1125   000FFB                     PCLATU          equ	4091	;# 
  1126   000FFC                     STKPTR          equ	4092	;# 
  1127   000FFD                     TOS             equ	4093	;# 
  1128   000FFD                     TOSL            equ	4093	;# 
  1129   000FFE                     TOSH            equ	4094	;# 
  1130   000FFF                     TOSU            equ	4095	;# 
  1131   000F80                     PORTA           equ	3968	;# 
  1132   000F81                     PORTB           equ	3969	;# 
  1133   000F82                     PORTC           equ	3970	;# 
  1134   000F83                     PORTD           equ	3971	;# 
  1135   000F84                     PORTE           equ	3972	;# 
  1136   000F89                     LATA            equ	3977	;# 
  1137   000F8A                     LATB            equ	3978	;# 
  1138   000F8B                     LATC            equ	3979	;# 
  1139   000F8C                     LATD            equ	3980	;# 
  1140   000F8D                     LATE            equ	3981	;# 
  1141   000F92                     TRISA           equ	3986	;# 
  1142   000F92                     DDRA            equ	3986	;# 
  1143   000F93                     TRISB           equ	3987	;# 
  1144   000F93                     DDRB            equ	3987	;# 
  1145   000F94                     TRISC           equ	3988	;# 
  1146   000F94                     DDRC            equ	3988	;# 
  1147   000F95                     TRISD           equ	3989	;# 
  1148   000F95                     DDRD            equ	3989	;# 
  1149   000F96                     TRISE           equ	3990	;# 
  1150   000F96                     DDRE            equ	3990	;# 
  1151   000F9D                     PIE1            equ	3997	;# 
  1152   000F9E                     PIR1            equ	3998	;# 
  1153   000F9F                     IPR1            equ	3999	;# 
  1154   000FA0                     PIE2            equ	4000	;# 
  1155   000FA1                     PIR2            equ	4001	;# 
  1156   000FA2                     IPR2            equ	4002	;# 
  1157   000FA6                     EECON1          equ	4006	;# 
  1158   000FA7                     EECON2          equ	4007	;# 
  1159   000FA8                     EEDATA          equ	4008	;# 
  1160   000FA9                     EEADR           equ	4009	;# 
  1161   000FAB                     RCSTA           equ	4011	;# 
  1162   000FAB                     RCSTA1          equ	4011	;# 
  1163   000FAC                     TXSTA           equ	4012	;# 
  1164   000FAC                     TXSTA1          equ	4012	;# 
  1165   000FAD                     TXREG           equ	4013	;# 
  1166   000FAD                     TXREG1          equ	4013	;# 
  1167   000FAE                     RCREG           equ	4014	;# 
  1168   000FAE                     RCREG1          equ	4014	;# 
  1169   000FAF                     SPBRG           equ	4015	;# 
  1170   000FAF                     SPBRG1          equ	4015	;# 
  1171   000FB1                     T3CON           equ	4017	;# 
  1172   000FB2                     TMR3            equ	4018	;# 
  1173   000FB2                     TMR3L           equ	4018	;# 
  1174   000FB3                     TMR3H           equ	4019	;# 
  1175   000FBA                     CCP2CON         equ	4026	;# 
  1176   000FBB                     CCPR2           equ	4027	;# 
  1177   000FBB                     CCPR2L          equ	4027	;# 
  1178   000FBC                     CCPR2H          equ	4028	;# 
  1179   000FBD                     CCP1CON         equ	4029	;# 
  1180   000FBE                     CCPR1           equ	4030	;# 
  1181   000FBE                     CCPR1L          equ	4030	;# 
  1182   000FBF                     CCPR1H          equ	4031	;# 
  1183   000FC1                     ADCON1          equ	4033	;# 
  1184   000FC2                     ADCON0          equ	4034	;# 
  1185   000FC3                     ADRES           equ	4035	;# 
  1186   000FC3                     ADRESL          equ	4035	;# 
  1187   000FC4                     ADRESH          equ	4036	;# 
  1188   000FC5                     SSPCON2         equ	4037	;# 
  1189   000FC6                     SSPCON1         equ	4038	;# 
  1190   000FC7                     SSPSTAT         equ	4039	;# 
  1191   000FC8                     SSPADD          equ	4040	;# 
  1192   000FC9                     SSPBUF          equ	4041	;# 
  1193   000FCA                     T2CON           equ	4042	;# 
  1194   000FCB                     PR2             equ	4043	;# 
  1195   000FCB                     MEMCON          equ	4043	;# 
  1196   000FCC                     TMR2            equ	4044	;# 
  1197   000FCD                     T1CON           equ	4045	;# 
  1198   000FCE                     TMR1            equ	4046	;# 
  1199   000FCE                     TMR1L           equ	4046	;# 
  1200   000FCF                     TMR1H           equ	4047	;# 
  1201   000FD0                     RCON            equ	4048	;# 
  1202   000FD1                     WDTCON          equ	4049	;# 
  1203   000FD2                     LVDCON          equ	4050	;# 
  1204   000FD3                     OSCCON          equ	4051	;# 
  1205   000FD5                     T0CON           equ	4053	;# 
  1206   000FD6                     TMR0            equ	4054	;# 
  1207   000FD6                     TMR0L           equ	4054	;# 
  1208   000FD7                     TMR0H           equ	4055	;# 
  1209   000FD8                     STATUS          equ	4056	;# 
  1210   000FD9                     FSR2            equ	4057	;# 
  1211   000FD9                     FSR2L           equ	4057	;# 
  1212   000FDA                     FSR2H           equ	4058	;# 
  1213   000FDB                     PLUSW2          equ	4059	;# 
  1214   000FDC                     PREINC2         equ	4060	;# 
  1215   000FDD                     POSTDEC2        equ	4061	;# 
  1216   000FDE                     POSTINC2        equ	4062	;# 
  1217   000FDF                     INDF2           equ	4063	;# 
  1218   000FE0                     BSR             equ	4064	;# 
  1219   000FE1                     FSR1            equ	4065	;# 
  1220   000FE1                     FSR1L           equ	4065	;# 
  1221   000FE2                     FSR1H           equ	4066	;# 
  1222   000FE3                     PLUSW1          equ	4067	;# 
  1223   000FE4                     PREINC1         equ	4068	;# 
  1224   000FE5                     POSTDEC1        equ	4069	;# 
  1225   000FE6                     POSTINC1        equ	4070	;# 
  1226   000FE7                     INDF1           equ	4071	;# 
  1227   000FE8                     WREG            equ	4072	;# 
  1228   000FE9                     FSR0            equ	4073	;# 
  1229   000FE9                     FSR0L           equ	4073	;# 
  1230   000FEA                     FSR0H           equ	4074	;# 
  1231   000FEB                     PLUSW0          equ	4075	;# 
  1232   000FEC                     PREINC0         equ	4076	;# 
  1233   000FED                     POSTDEC0        equ	4077	;# 
  1234   000FEE                     POSTINC0        equ	4078	;# 
  1235   000FEF                     INDF0           equ	4079	;# 
  1236   000FF0                     INTCON3         equ	4080	;# 
  1237   000FF1                     INTCON2         equ	4081	;# 
  1238   000FF2                     INTCON          equ	4082	;# 
  1239   000FF2                     INTCON1         equ	4082	;# 
  1240   000FF3                     PROD            equ	4083	;# 
  1241   000FF3                     PRODL           equ	4083	;# 
  1242   000FF4                     PRODH           equ	4084	;# 
  1243   000FF5                     TABLAT          equ	4085	;# 
  1244   000FF6                     TBLPTR          equ	4086	;# 
  1245   000FF6                     TBLPTRL         equ	4086	;# 
  1246   000FF7                     TBLPTRH         equ	4087	;# 
  1247   000FF8                     TBLPTRU         equ	4088	;# 
  1248   000FF9                     PCLAT           equ	4089	;# 
  1249   000FF9                     PC              equ	4089	;# 
  1250   000FF9                     PCL             equ	4089	;# 
  1251   000FFA                     PCLATH          equ	4090	;# 
  1252   000FFB                     PCLATU          equ	4091	;# 
  1253   000FFC                     STKPTR          equ	4092	;# 
  1254   000FFD                     TOS             equ	4093	;# 
  1255   000FFD                     TOSL            equ	4093	;# 
  1256   000FFE                     TOSH            equ	4094	;# 
  1257   000FFF                     TOSU            equ	4095	;# 
  1258   000F80                     PORTA           equ	3968	;# 
  1259   000F81                     PORTB           equ	3969	;# 
  1260   000F82                     PORTC           equ	3970	;# 
  1261   000F83                     PORTD           equ	3971	;# 
  1262   000F84                     PORTE           equ	3972	;# 
  1263   000F89                     LATA            equ	3977	;# 
  1264   000F8A                     LATB            equ	3978	;# 
  1265   000F8B                     LATC            equ	3979	;# 
  1266   000F8C                     LATD            equ	3980	;# 
  1267   000F8D                     LATE            equ	3981	;# 
  1268   000F92                     TRISA           equ	3986	;# 
  1269   000F92                     DDRA            equ	3986	;# 
  1270   000F93                     TRISB           equ	3987	;# 
  1271   000F93                     DDRB            equ	3987	;# 
  1272   000F94                     TRISC           equ	3988	;# 
  1273   000F94                     DDRC            equ	3988	;# 
  1274   000F95                     TRISD           equ	3989	;# 
  1275   000F95                     DDRD            equ	3989	;# 
  1276   000F96                     TRISE           equ	3990	;# 
  1277   000F96                     DDRE            equ	3990	;# 
  1278   000F9D                     PIE1            equ	3997	;# 
  1279   000F9E                     PIR1            equ	3998	;# 
  1280   000F9F                     IPR1            equ	3999	;# 
  1281   000FA0                     PIE2            equ	4000	;# 
  1282   000FA1                     PIR2            equ	4001	;# 
  1283   000FA2                     IPR2            equ	4002	;# 
  1284   000FA6                     EECON1          equ	4006	;# 
  1285   000FA7                     EECON2          equ	4007	;# 
  1286   000FA8                     EEDATA          equ	4008	;# 
  1287   000FA9                     EEADR           equ	4009	;# 
  1288   000FAB                     RCSTA           equ	4011	;# 
  1289   000FAB                     RCSTA1          equ	4011	;# 
  1290   000FAC                     TXSTA           equ	4012	;# 
  1291   000FAC                     TXSTA1          equ	4012	;# 
  1292   000FAD                     TXREG           equ	4013	;# 
  1293   000FAD                     TXREG1          equ	4013	;# 
  1294   000FAE                     RCREG           equ	4014	;# 
  1295   000FAE                     RCREG1          equ	4014	;# 
  1296   000FAF                     SPBRG           equ	4015	;# 
  1297   000FAF                     SPBRG1          equ	4015	;# 
  1298   000FB1                     T3CON           equ	4017	;# 
  1299   000FB2                     TMR3            equ	4018	;# 
  1300   000FB2                     TMR3L           equ	4018	;# 
  1301   000FB3                     TMR3H           equ	4019	;# 
  1302   000FBA                     CCP2CON         equ	4026	;# 
  1303   000FBB                     CCPR2           equ	4027	;# 
  1304   000FBB                     CCPR2L          equ	4027	;# 
  1305   000FBC                     CCPR2H          equ	4028	;# 
  1306   000FBD                     CCP1CON         equ	4029	;# 
  1307   000FBE                     CCPR1           equ	4030	;# 
  1308   000FBE                     CCPR1L          equ	4030	;# 
  1309   000FBF                     CCPR1H          equ	4031	;# 
  1310   000FC1                     ADCON1          equ	4033	;# 
  1311   000FC2                     ADCON0          equ	4034	;# 
  1312   000FC3                     ADRES           equ	4035	;# 
  1313   000FC3                     ADRESL          equ	4035	;# 
  1314   000FC4                     ADRESH          equ	4036	;# 
  1315   000FC5                     SSPCON2         equ	4037	;# 
  1316   000FC6                     SSPCON1         equ	4038	;# 
  1317   000FC7                     SSPSTAT         equ	4039	;# 
  1318   000FC8                     SSPADD          equ	4040	;# 
  1319   000FC9                     SSPBUF          equ	4041	;# 
  1320   000FCA                     T2CON           equ	4042	;# 
  1321   000FCB                     PR2             equ	4043	;# 
  1322   000FCB                     MEMCON          equ	4043	;# 
  1323   000FCC                     TMR2            equ	4044	;# 
  1324   000FCD                     T1CON           equ	4045	;# 
  1325   000FCE                     TMR1            equ	4046	;# 
  1326   000FCE                     TMR1L           equ	4046	;# 
  1327   000FCF                     TMR1H           equ	4047	;# 
  1328   000FD0                     RCON            equ	4048	;# 
  1329   000FD1                     WDTCON          equ	4049	;# 
  1330   000FD2                     LVDCON          equ	4050	;# 
  1331   000FD3                     OSCCON          equ	4051	;# 
  1332   000FD5                     T0CON           equ	4053	;# 
  1333   000FD6                     TMR0            equ	4054	;# 
  1334   000FD6                     TMR0L           equ	4054	;# 
  1335   000FD7                     TMR0H           equ	4055	;# 
  1336   000FD8                     STATUS          equ	4056	;# 
  1337   000FD9                     FSR2            equ	4057	;# 
  1338   000FD9                     FSR2L           equ	4057	;# 
  1339   000FDA                     FSR2H           equ	4058	;# 
  1340   000FDB                     PLUSW2          equ	4059	;# 
  1341   000FDC                     PREINC2         equ	4060	;# 
  1342   000FDD                     POSTDEC2        equ	4061	;# 
  1343   000FDE                     POSTINC2        equ	4062	;# 
  1344   000FDF                     INDF2           equ	4063	;# 
  1345   000FE0                     BSR             equ	4064	;# 
  1346   000FE1                     FSR1            equ	4065	;# 
  1347   000FE1                     FSR1L           equ	4065	;# 
  1348   000FE2                     FSR1H           equ	4066	;# 
  1349   000FE3                     PLUSW1          equ	4067	;# 
  1350   000FE4                     PREINC1         equ	4068	;# 
  1351   000FE5                     POSTDEC1        equ	4069	;# 
  1352   000FE6                     POSTINC1        equ	4070	;# 
  1353   000FE7                     INDF1           equ	4071	;# 
  1354   000FE8                     WREG            equ	4072	;# 
  1355   000FE9                     FSR0            equ	4073	;# 
  1356   000FE9                     FSR0L           equ	4073	;# 
  1357   000FEA                     FSR0H           equ	4074	;# 
  1358   000FEB                     PLUSW0          equ	4075	;# 
  1359   000FEC                     PREINC0         equ	4076	;# 
  1360   000FED                     POSTDEC0        equ	4077	;# 
  1361   000FEE                     POSTINC0        equ	4078	;# 
  1362   000FEF                     INDF0           equ	4079	;# 
  1363   000FF0                     INTCON3         equ	4080	;# 
  1364   000FF1                     INTCON2         equ	4081	;# 
  1365   000FF2                     INTCON          equ	4082	;# 
  1366   000FF2                     INTCON1         equ	4082	;# 
  1367   000FF3                     PROD            equ	4083	;# 
  1368   000FF3                     PRODL           equ	4083	;# 
  1369   000FF4                     PRODH           equ	4084	;# 
  1370   000FF5                     TABLAT          equ	4085	;# 
  1371   000FF6                     TBLPTR          equ	4086	;# 
  1372   000FF6                     TBLPTRL         equ	4086	;# 
  1373   000FF7                     TBLPTRH         equ	4087	;# 
  1374   000FF8                     TBLPTRU         equ	4088	;# 
  1375   000FF9                     PCLAT           equ	4089	;# 
  1376   000FF9                     PC              equ	4089	;# 
  1377   000FF9                     PCL             equ	4089	;# 
  1378   000FFA                     PCLATH          equ	4090	;# 
  1379   000FFB                     PCLATU          equ	4091	;# 
  1380   000FFC                     STKPTR          equ	4092	;# 
  1381   000FFD                     TOS             equ	4093	;# 
  1382   000FFD                     TOSL            equ	4093	;# 
  1383   000FFE                     TOSH            equ	4094	;# 
  1384   000FFF                     TOSU            equ	4095	;# 
  1385   000F80                     PORTA           equ	3968	;# 
  1386   000F81                     PORTB           equ	3969	;# 
  1387   000F82                     PORTC           equ	3970	;# 
  1388   000F83                     PORTD           equ	3971	;# 
  1389   000F84                     PORTE           equ	3972	;# 
  1390   000F89                     LATA            equ	3977	;# 
  1391   000F8A                     LATB            equ	3978	;# 
  1392   000F8B                     LATC            equ	3979	;# 
  1393   000F8C                     LATD            equ	3980	;# 
  1394   000F8D                     LATE            equ	3981	;# 
  1395   000F92                     TRISA           equ	3986	;# 
  1396   000F92                     DDRA            equ	3986	;# 
  1397   000F93                     TRISB           equ	3987	;# 
  1398   000F93                     DDRB            equ	3987	;# 
  1399   000F94                     TRISC           equ	3988	;# 
  1400   000F94                     DDRC            equ	3988	;# 
  1401   000F95                     TRISD           equ	3989	;# 
  1402   000F95                     DDRD            equ	3989	;# 
  1403   000F96                     TRISE           equ	3990	;# 
  1404   000F96                     DDRE            equ	3990	;# 
  1405   000F9D                     PIE1            equ	3997	;# 
  1406   000F9E                     PIR1            equ	3998	;# 
  1407   000F9F                     IPR1            equ	3999	;# 
  1408   000FA0                     PIE2            equ	4000	;# 
  1409   000FA1                     PIR2            equ	4001	;# 
  1410   000FA2                     IPR2            equ	4002	;# 
  1411   000FA6                     EECON1          equ	4006	;# 
  1412   000FA7                     EECON2          equ	4007	;# 
  1413   000FA8                     EEDATA          equ	4008	;# 
  1414   000FA9                     EEADR           equ	4009	;# 
  1415   000FAB                     RCSTA           equ	4011	;# 
  1416   000FAB                     RCSTA1          equ	4011	;# 
  1417   000FAC                     TXSTA           equ	4012	;# 
  1418   000FAC                     TXSTA1          equ	4012	;# 
  1419   000FAD                     TXREG           equ	4013	;# 
  1420   000FAD                     TXREG1          equ	4013	;# 
  1421   000FAE                     RCREG           equ	4014	;# 
  1422   000FAE                     RCREG1          equ	4014	;# 
  1423   000FAF                     SPBRG           equ	4015	;# 
  1424   000FAF                     SPBRG1          equ	4015	;# 
  1425   000FB1                     T3CON           equ	4017	;# 
  1426   000FB2                     TMR3            equ	4018	;# 
  1427   000FB2                     TMR3L           equ	4018	;# 
  1428   000FB3                     TMR3H           equ	4019	;# 
  1429   000FBA                     CCP2CON         equ	4026	;# 
  1430   000FBB                     CCPR2           equ	4027	;# 
  1431   000FBB                     CCPR2L          equ	4027	;# 
  1432   000FBC                     CCPR2H          equ	4028	;# 
  1433   000FBD                     CCP1CON         equ	4029	;# 
  1434   000FBE                     CCPR1           equ	4030	;# 
  1435   000FBE                     CCPR1L          equ	4030	;# 
  1436   000FBF                     CCPR1H          equ	4031	;# 
  1437   000FC1                     ADCON1          equ	4033	;# 
  1438   000FC2                     ADCON0          equ	4034	;# 
  1439   000FC3                     ADRES           equ	4035	;# 
  1440   000FC3                     ADRESL          equ	4035	;# 
  1441   000FC4                     ADRESH          equ	4036	;# 
  1442   000FC5                     SSPCON2         equ	4037	;# 
  1443   000FC6                     SSPCON1         equ	4038	;# 
  1444   000FC7                     SSPSTAT         equ	4039	;# 
  1445   000FC8                     SSPADD          equ	4040	;# 
  1446   000FC9                     SSPBUF          equ	4041	;# 
  1447   000FCA                     T2CON           equ	4042	;# 
  1448   000FCB                     PR2             equ	4043	;# 
  1449   000FCB                     MEMCON          equ	4043	;# 
  1450   000FCC                     TMR2            equ	4044	;# 
  1451   000FCD                     T1CON           equ	4045	;# 
  1452   000FCE                     TMR1            equ	4046	;# 
  1453   000FCE                     TMR1L           equ	4046	;# 
  1454   000FCF                     TMR1H           equ	4047	;# 
  1455   000FD0                     RCON            equ	4048	;# 
  1456   000FD1                     WDTCON          equ	4049	;# 
  1457   000FD2                     LVDCON          equ	4050	;# 
  1458   000FD3                     OSCCON          equ	4051	;# 
  1459   000FD5                     T0CON           equ	4053	;# 
  1460   000FD6                     TMR0            equ	4054	;# 
  1461   000FD6                     TMR0L           equ	4054	;# 
  1462   000FD7                     TMR0H           equ	4055	;# 
  1463   000FD8                     STATUS          equ	4056	;# 
  1464   000FD9                     FSR2            equ	4057	;# 
  1465   000FD9                     FSR2L           equ	4057	;# 
  1466   000FDA                     FSR2H           equ	4058	;# 
  1467   000FDB                     PLUSW2          equ	4059	;# 
  1468   000FDC                     PREINC2         equ	4060	;# 
  1469   000FDD                     POSTDEC2        equ	4061	;# 
  1470   000FDE                     POSTINC2        equ	4062	;# 
  1471   000FDF                     INDF2           equ	4063	;# 
  1472   000FE0                     BSR             equ	4064	;# 
  1473   000FE1                     FSR1            equ	4065	;# 
  1474   000FE1                     FSR1L           equ	4065	;# 
  1475   000FE2                     FSR1H           equ	4066	;# 
  1476   000FE3                     PLUSW1          equ	4067	;# 
  1477   000FE4                     PREINC1         equ	4068	;# 
  1478   000FE5                     POSTDEC1        equ	4069	;# 
  1479   000FE6                     POSTINC1        equ	4070	;# 
  1480   000FE7                     INDF1           equ	4071	;# 
  1481   000FE8                     WREG            equ	4072	;# 
  1482   000FE9                     FSR0            equ	4073	;# 
  1483   000FE9                     FSR0L           equ	4073	;# 
  1484   000FEA                     FSR0H           equ	4074	;# 
  1485   000FEB                     PLUSW0          equ	4075	;# 
  1486   000FEC                     PREINC0         equ	4076	;# 
  1487   000FED                     POSTDEC0        equ	4077	;# 
  1488   000FEE                     POSTINC0        equ	4078	;# 
  1489   000FEF                     INDF0           equ	4079	;# 
  1490   000FF0                     INTCON3         equ	4080	;# 
  1491   000FF1                     INTCON2         equ	4081	;# 
  1492   000FF2                     INTCON          equ	4082	;# 
  1493   000FF2                     INTCON1         equ	4082	;# 
  1494   000FF3                     PROD            equ	4083	;# 
  1495   000FF3                     PRODL           equ	4083	;# 
  1496   000FF4                     PRODH           equ	4084	;# 
  1497   000FF5                     TABLAT          equ	4085	;# 
  1498   000FF6                     TBLPTR          equ	4086	;# 
  1499   000FF6                     TBLPTRL         equ	4086	;# 
  1500   000FF7                     TBLPTRH         equ	4087	;# 
  1501   000FF8                     TBLPTRU         equ	4088	;# 
  1502   000FF9                     PCLAT           equ	4089	;# 
  1503   000FF9                     PC              equ	4089	;# 
  1504   000FF9                     PCL             equ	4089	;# 
  1505   000FFA                     PCLATH          equ	4090	;# 
  1506   000FFB                     PCLATU          equ	4091	;# 
  1507   000FFC                     STKPTR          equ	4092	;# 
  1508   000FFD                     TOS             equ	4093	;# 
  1509   000FFD                     TOSL            equ	4093	;# 
  1510   000FFE                     TOSH            equ	4094	;# 
  1511   000FFF                     TOSU            equ	4095	;# 
  1512   000F80                     PORTA           equ	3968	;# 
  1513   000F81                     PORTB           equ	3969	;# 
  1514   000F82                     PORTC           equ	3970	;# 
  1515   000F83                     PORTD           equ	3971	;# 
  1516   000F84                     PORTE           equ	3972	;# 
  1517   000F89                     LATA            equ	3977	;# 
  1518   000F8A                     LATB            equ	3978	;# 
  1519   000F8B                     LATC            equ	3979	;# 
  1520   000F8C                     LATD            equ	3980	;# 
  1521   000F8D                     LATE            equ	3981	;# 
  1522   000F92                     TRISA           equ	3986	;# 
  1523   000F92                     DDRA            equ	3986	;# 
  1524   000F93                     TRISB           equ	3987	;# 
  1525   000F93                     DDRB            equ	3987	;# 
  1526   000F94                     TRISC           equ	3988	;# 
  1527   000F94                     DDRC            equ	3988	;# 
  1528   000F95                     TRISD           equ	3989	;# 
  1529   000F95                     DDRD            equ	3989	;# 
  1530   000F96                     TRISE           equ	3990	;# 
  1531   000F96                     DDRE            equ	3990	;# 
  1532   000F9D                     PIE1            equ	3997	;# 
  1533   000F9E                     PIR1            equ	3998	;# 
  1534   000F9F                     IPR1            equ	3999	;# 
  1535   000FA0                     PIE2            equ	4000	;# 
  1536   000FA1                     PIR2            equ	4001	;# 
  1537   000FA2                     IPR2            equ	4002	;# 
  1538   000FA6                     EECON1          equ	4006	;# 
  1539   000FA7                     EECON2          equ	4007	;# 
  1540   000FA8                     EEDATA          equ	4008	;# 
  1541   000FA9                     EEADR           equ	4009	;# 
  1542   000FAB                     RCSTA           equ	4011	;# 
  1543   000FAB                     RCSTA1          equ	4011	;# 
  1544   000FAC                     TXSTA           equ	4012	;# 
  1545   000FAC                     TXSTA1          equ	4012	;# 
  1546   000FAD                     TXREG           equ	4013	;# 
  1547   000FAD                     TXREG1          equ	4013	;# 
  1548   000FAE                     RCREG           equ	4014	;# 
  1549   000FAE                     RCREG1          equ	4014	;# 
  1550   000FAF                     SPBRG           equ	4015	;# 
  1551   000FAF                     SPBRG1          equ	4015	;# 
  1552   000FB1                     T3CON           equ	4017	;# 
  1553   000FB2                     TMR3            equ	4018	;# 
  1554   000FB2                     TMR3L           equ	4018	;# 
  1555   000FB3                     TMR3H           equ	4019	;# 
  1556   000FBA                     CCP2CON         equ	4026	;# 
  1557   000FBB                     CCPR2           equ	4027	;# 
  1558   000FBB                     CCPR2L          equ	4027	;# 
  1559   000FBC                     CCPR2H          equ	4028	;# 
  1560   000FBD                     CCP1CON         equ	4029	;# 
  1561   000FBE                     CCPR1           equ	4030	;# 
  1562   000FBE                     CCPR1L          equ	4030	;# 
  1563   000FBF                     CCPR1H          equ	4031	;# 
  1564   000FC1                     ADCON1          equ	4033	;# 
  1565   000FC2                     ADCON0          equ	4034	;# 
  1566   000FC3                     ADRES           equ	4035	;# 
  1567   000FC3                     ADRESL          equ	4035	;# 
  1568   000FC4                     ADRESH          equ	4036	;# 
  1569   000FC5                     SSPCON2         equ	4037	;# 
  1570   000FC6                     SSPCON1         equ	4038	;# 
  1571   000FC7                     SSPSTAT         equ	4039	;# 
  1572   000FC8                     SSPADD          equ	4040	;# 
  1573   000FC9                     SSPBUF          equ	4041	;# 
  1574   000FCA                     T2CON           equ	4042	;# 
  1575   000FCB                     PR2             equ	4043	;# 
  1576   000FCB                     MEMCON          equ	4043	;# 
  1577   000FCC                     TMR2            equ	4044	;# 
  1578   000FCD                     T1CON           equ	4045	;# 
  1579   000FCE                     TMR1            equ	4046	;# 
  1580   000FCE                     TMR1L           equ	4046	;# 
  1581   000FCF                     TMR1H           equ	4047	;# 
  1582   000FD0                     RCON            equ	4048	;# 
  1583   000FD1                     WDTCON          equ	4049	;# 
  1584   000FD2                     LVDCON          equ	4050	;# 
  1585   000FD3                     OSCCON          equ	4051	;# 
  1586   000FD5                     T0CON           equ	4053	;# 
  1587   000FD6                     TMR0            equ	4054	;# 
  1588   000FD6                     TMR0L           equ	4054	;# 
  1589   000FD7                     TMR0H           equ	4055	;# 
  1590   000FD8                     STATUS          equ	4056	;# 
  1591   000FD9                     FSR2            equ	4057	;# 
  1592   000FD9                     FSR2L           equ	4057	;# 
  1593   000FDA                     FSR2H           equ	4058	;# 
  1594   000FDB                     PLUSW2          equ	4059	;# 
  1595   000FDC                     PREINC2         equ	4060	;# 
  1596   000FDD                     POSTDEC2        equ	4061	;# 
  1597   000FDE                     POSTINC2        equ	4062	;# 
  1598   000FDF                     INDF2           equ	4063	;# 
  1599   000FE0                     BSR             equ	4064	;# 
  1600   000FE1                     FSR1            equ	4065	;# 
  1601   000FE1                     FSR1L           equ	4065	;# 
  1602   000FE2                     FSR1H           equ	4066	;# 
  1603   000FE3                     PLUSW1          equ	4067	;# 
  1604   000FE4                     PREINC1         equ	4068	;# 
  1605   000FE5                     POSTDEC1        equ	4069	;# 
  1606   000FE6                     POSTINC1        equ	4070	;# 
  1607   000FE7                     INDF1           equ	4071	;# 
  1608   000FE8                     WREG            equ	4072	;# 
  1609   000FE9                     FSR0            equ	4073	;# 
  1610   000FE9                     FSR0L           equ	4073	;# 
  1611   000FEA                     FSR0H           equ	4074	;# 
  1612   000FEB                     PLUSW0          equ	4075	;# 
  1613   000FEC                     PREINC0         equ	4076	;# 
  1614   000FED                     POSTDEC0        equ	4077	;# 
  1615   000FEE                     POSTINC0        equ	4078	;# 
  1616   000FEF                     INDF0           equ	4079	;# 
  1617   000FF0                     INTCON3         equ	4080	;# 
  1618   000FF1                     INTCON2         equ	4081	;# 
  1619   000FF2                     INTCON          equ	4082	;# 
  1620   000FF2                     INTCON1         equ	4082	;# 
  1621   000FF3                     PROD            equ	4083	;# 
  1622   000FF3                     PRODL           equ	4083	;# 
  1623   000FF4                     PRODH           equ	4084	;# 
  1624   000FF5                     TABLAT          equ	4085	;# 
  1625   000FF6                     TBLPTR          equ	4086	;# 
  1626   000FF6                     TBLPTRL         equ	4086	;# 
  1627   000FF7                     TBLPTRH         equ	4087	;# 
  1628   000FF8                     TBLPTRU         equ	4088	;# 
  1629   000FF9                     PCLAT           equ	4089	;# 
  1630   000FF9                     PC              equ	4089	;# 
  1631   000FF9                     PCL             equ	4089	;# 
  1632   000FFA                     PCLATH          equ	4090	;# 
  1633   000FFB                     PCLATU          equ	4091	;# 
  1634   000FFC                     STKPTR          equ	4092	;# 
  1635   000FFD                     TOS             equ	4093	;# 
  1636   000FFD                     TOSL            equ	4093	;# 
  1637   000FFE                     TOSH            equ	4094	;# 
  1638   000FFF                     TOSU            equ	4095	;# 
  1639   000F80                     PORTA           equ	3968	;# 
  1640   000F81                     PORTB           equ	3969	;# 
  1641   000F82                     PORTC           equ	3970	;# 
  1642   000F83                     PORTD           equ	3971	;# 
  1643   000F84                     PORTE           equ	3972	;# 
  1644   000F89                     LATA            equ	3977	;# 
  1645   000F8A                     LATB            equ	3978	;# 
  1646   000F8B                     LATC            equ	3979	;# 
  1647   000F8C                     LATD            equ	3980	;# 
  1648   000F8D                     LATE            equ	3981	;# 
  1649   000F92                     TRISA           equ	3986	;# 
  1650   000F92                     DDRA            equ	3986	;# 
  1651   000F93                     TRISB           equ	3987	;# 
  1652   000F93                     DDRB            equ	3987	;# 
  1653   000F94                     TRISC           equ	3988	;# 
  1654   000F94                     DDRC            equ	3988	;# 
  1655   000F95                     TRISD           equ	3989	;# 
  1656   000F95                     DDRD            equ	3989	;# 
  1657   000F96                     TRISE           equ	3990	;# 
  1658   000F96                     DDRE            equ	3990	;# 
  1659   000F9D                     PIE1            equ	3997	;# 
  1660   000F9E                     PIR1            equ	3998	;# 
  1661   000F9F                     IPR1            equ	3999	;# 
  1662   000FA0                     PIE2            equ	4000	;# 
  1663   000FA1                     PIR2            equ	4001	;# 
  1664   000FA2                     IPR2            equ	4002	;# 
  1665   000FA6                     EECON1          equ	4006	;# 
  1666   000FA7                     EECON2          equ	4007	;# 
  1667   000FA8                     EEDATA          equ	4008	;# 
  1668   000FA9                     EEADR           equ	4009	;# 
  1669   000FAB                     RCSTA           equ	4011	;# 
  1670   000FAB                     RCSTA1          equ	4011	;# 
  1671   000FAC                     TXSTA           equ	4012	;# 
  1672   000FAC                     TXSTA1          equ	4012	;# 
  1673   000FAD                     TXREG           equ	4013	;# 
  1674   000FAD                     TXREG1          equ	4013	;# 
  1675   000FAE                     RCREG           equ	4014	;# 
  1676   000FAE                     RCREG1          equ	4014	;# 
  1677   000FAF                     SPBRG           equ	4015	;# 
  1678   000FAF                     SPBRG1          equ	4015	;# 
  1679   000FB1                     T3CON           equ	4017	;# 
  1680   000FB2                     TMR3            equ	4018	;# 
  1681   000FB2                     TMR3L           equ	4018	;# 
  1682   000FB3                     TMR3H           equ	4019	;# 
  1683   000FBA                     CCP2CON         equ	4026	;# 
  1684   000FBB                     CCPR2           equ	4027	;# 
  1685   000FBB                     CCPR2L          equ	4027	;# 
  1686   000FBC                     CCPR2H          equ	4028	;# 
  1687   000FBD                     CCP1CON         equ	4029	;# 
  1688   000FBE                     CCPR1           equ	4030	;# 
  1689   000FBE                     CCPR1L          equ	4030	;# 
  1690   000FBF                     CCPR1H          equ	4031	;# 
  1691   000FC1                     ADCON1          equ	4033	;# 
  1692   000FC2                     ADCON0          equ	4034	;# 
  1693   000FC3                     ADRES           equ	4035	;# 
  1694   000FC3                     ADRESL          equ	4035	;# 
  1695   000FC4                     ADRESH          equ	4036	;# 
  1696   000FC5                     SSPCON2         equ	4037	;# 
  1697   000FC6                     SSPCON1         equ	4038	;# 
  1698   000FC7                     SSPSTAT         equ	4039	;# 
  1699   000FC8                     SSPADD          equ	4040	;# 
  1700   000FC9                     SSPBUF          equ	4041	;# 
  1701   000FCA                     T2CON           equ	4042	;# 
  1702   000FCB                     PR2             equ	4043	;# 
  1703   000FCB                     MEMCON          equ	4043	;# 
  1704   000FCC                     TMR2            equ	4044	;# 
  1705   000FCD                     T1CON           equ	4045	;# 
  1706   000FCE                     TMR1            equ	4046	;# 
  1707   000FCE                     TMR1L           equ	4046	;# 
  1708   000FCF                     TMR1H           equ	4047	;# 
  1709   000FD0                     RCON            equ	4048	;# 
  1710   000FD1                     WDTCON          equ	4049	;# 
  1711   000FD2                     LVDCON          equ	4050	;# 
  1712   000FD3                     OSCCON          equ	4051	;# 
  1713   000FD5                     T0CON           equ	4053	;# 
  1714   000FD6                     TMR0            equ	4054	;# 
  1715   000FD6                     TMR0L           equ	4054	;# 
  1716   000FD7                     TMR0H           equ	4055	;# 
  1717   000FD8                     STATUS          equ	4056	;# 
  1718   000FD9                     FSR2            equ	4057	;# 
  1719   000FD9                     FSR2L           equ	4057	;# 
  1720   000FDA                     FSR2H           equ	4058	;# 
  1721   000FDB                     PLUSW2          equ	4059	;# 
  1722   000FDC                     PREINC2         equ	4060	;# 
  1723   000FDD                     POSTDEC2        equ	4061	;# 
  1724   000FDE                     POSTINC2        equ	4062	;# 
  1725   000FDF                     INDF2           equ	4063	;# 
  1726   000FE0                     BSR             equ	4064	;# 
  1727   000FE1                     FSR1            equ	4065	;# 
  1728   000FE1                     FSR1L           equ	4065	;# 
  1729   000FE2                     FSR1H           equ	4066	;# 
  1730   000FE3                     PLUSW1          equ	4067	;# 
  1731   000FE4                     PREINC1         equ	4068	;# 
  1732   000FE5                     POSTDEC1        equ	4069	;# 
  1733   000FE6                     POSTINC1        equ	4070	;# 
  1734   000FE7                     INDF1           equ	4071	;# 
  1735   000FE8                     WREG            equ	4072	;# 
  1736   000FE9                     FSR0            equ	4073	;# 
  1737   000FE9                     FSR0L           equ	4073	;# 
  1738   000FEA                     FSR0H           equ	4074	;# 
  1739   000FEB                     PLUSW0          equ	4075	;# 
  1740   000FEC                     PREINC0         equ	4076	;# 
  1741   000FED                     POSTDEC0        equ	4077	;# 
  1742   000FEE                     POSTINC0        equ	4078	;# 
  1743   000FEF                     INDF0           equ	4079	;# 
  1744   000FF0                     INTCON3         equ	4080	;# 
  1745   000FF1                     INTCON2         equ	4081	;# 
  1746   000FF2                     INTCON          equ	4082	;# 
  1747   000FF2                     INTCON1         equ	4082	;# 
  1748   000FF3                     PROD            equ	4083	;# 
  1749   000FF3                     PRODL           equ	4083	;# 
  1750   000FF4                     PRODH           equ	4084	;# 
  1751   000FF5                     TABLAT          equ	4085	;# 
  1752   000FF6                     TBLPTR          equ	4086	;# 
  1753   000FF6                     TBLPTRL         equ	4086	;# 
  1754   000FF7                     TBLPTRH         equ	4087	;# 
  1755   000FF8                     TBLPTRU         equ	4088	;# 
  1756   000FF9                     PCLAT           equ	4089	;# 
  1757   000FF9                     PC              equ	4089	;# 
  1758   000FF9                     PCL             equ	4089	;# 
  1759   000FFA                     PCLATH          equ	4090	;# 
  1760   000FFB                     PCLATU          equ	4091	;# 
  1761   000FFC                     STKPTR          equ	4092	;# 
  1762   000FFD                     TOS             equ	4093	;# 
  1763   000FFD                     TOSL            equ	4093	;# 
  1764   000FFE                     TOSH            equ	4094	;# 
  1765   000FFF                     TOSU            equ	4095	;# 
  1766                           
  1767                           	psect	idataCOMRAM
  1768   0011D8                     __pidataCOMRAM:
  1769                           	callstack 0
  1770                           
  1771                           ;initializer for _LCD1
  1772   0011D8  93                 	db	147
  1773   0011D9  9B                 	db	155
  1774   0011DA  01                 	db	1
  1775   0011DB  A2                 	db	162
  1776   0011DC  AA                 	db	170
  1777   0011DD  B2                 	db	178
  1778   0011DE  BA                 	db	186
  1779   0011DF  A3                 	db	163
  1780   0011E0  AB                 	db	171
  1781   0011E1  B3                 	db	179
  1782   0011E2  BB                 	db	187
  1783                           
  1784                           ;initializer for __PORT_registers
  1785   0011E3  80                 	db	128
  1786   0011E4  0F                 	db	15
  1787   0011E5  81                 	db	129
  1788   0011E6  0F                 	db	15
  1789   0011E7  82                 	db	130
  1790   0011E8  0F                 	db	15
  1791   0011E9  83                 	db	131
  1792   0011EA  0F                 	db	15
  1793   0011EB  84                 	db	132
  1794   0011EC  0F                 	db	15
  1795                           
  1796                           ;initializer for __LAT_registers
  1797   0011ED  89                 	db	137
  1798   0011EE  0F                 	db	15
  1799   0011EF  8A                 	db	138
  1800   0011F0  0F                 	db	15
  1801   0011F1  8B                 	db	139
  1802   0011F2  0F                 	db	15
  1803   0011F3  8C                 	db	140
  1804   0011F4  0F                 	db	15
  1805   0011F5  8D                 	db	141
  1806   0011F6  0F                 	db	15
  1807                           
  1808                           ;initializer for __TRIS_registers
  1809   0011F7  92                 	db	146
  1810   0011F8  0F                 	db	15
  1811   0011F9  93                 	db	147
  1812   0011FA  0F                 	db	15
  1813   0011FB  94                 	db	148
  1814   0011FC  0F                 	db	15
  1815   0011FD  95                 	db	149
  1816   0011FE  0F                 	db	15
  1817   0011FF  96                 	db	150
  1818   001200  0F                 	db	15
  1819                           
  1820                           ;initializer for _keypad1
  1821   001201  21                 	db	33
  1822   001202  19                 	db	25
  1823   001203  11                 	db	17
  1824   001204  09                 	db	9
  1825   001205  2B                 	db	43
  1826   001206  23                 	db	35
  1827   001207  1B                 	db	27
  1828   001208  13                 	db	19
  1829   001209  00                 	db	0
  1830                           
  1831                           ;initializer for _segment1
  1832   00120A  00                 	db	0
  1833   00120B  08                 	db	8
  1834   00120C  10                 	db	16
  1835   00120D  18                 	db	24
  1836   00120E  00                 	db	0
  1837                           
  1838                           ;initializer for _first_int
  1839   00120F  00                 	db	0
  1840   001210  00                 	db	0
  1841   001211  59                 	db	89
  1842   001212  00                 	db	0
  1843                           
  1844                           ;initializer for _led_arr
  1845   001213  00                 	db	0
  1846   001214  08                 	db	8
  1847   001215  10                 	db	16
  1848   001216  18                 	db	24
  1849                           
  1850                           ;initializer for _btn2
  1851   001217  4C                 	db	76
  1852   001218  01                 	db	1
  1853   001219  00                 	db	0
  1854                           
  1855                           ;initializer for _btn1
  1856   00121A  E0                 	db	224
  1857   00121B  01                 	db	1
  1858   00121C  01                 	db	1
  1859                           
  1860                           ;initializer for _motor2
  1861   00121D  7C                 	db	124
  1862   00121E  4A                 	db	74
  1863                           
  1864                           ;initializer for _motor1
  1865   00121F  08                 	db	8
  1866   001220  10                 	db	16
  1867                           
  1868                           ;initializer for _i
  1869   001221  5A                 	db	90
  1870                           
  1871                           ;initializer for _seg_units_en
  1872   001222  8B                 	db	139
  1873                           
  1874                           ;initializer for _testing
  1875   001223  8B                 	db	139
  1876                           
  1877                           ;initializer for _relay1
  1878   001224  08                 	db	8
  1879                           
  1880                           ;initializer for _second_int
  1881   001225  00                 	db	0
  1882   001226  00                 	db	0
  1883   001227  49                 	db	73
  1884   001228  01                 	db	1
  1885   001229  00                 	db	0
  1886                           
  1887                           ;initializer for _LED_NOK
  1888   00122A  08                 	db	8
  1889                           
  1890                           	psect	smallconst
  1891   000600                     __psmallconst:
  1892                           	callstack 0
  1893   000600  00                 	db	0
  1894   000601                     _keypad_elements:
  1895                           	callstack 0
  1896   000601  31                 	db	49
  1897   000602  32                 	db	50
  1898   000603  33                 	db	51
  1899   000604  41                 	db	65
  1900   000605  34                 	db	52
  1901   000606  35                 	db	53
  1902   000607  36                 	db	54
  1903   000608  42                 	db	66
  1904   000609  37                 	db	55
  1905   00060A  38                 	db	56
  1906   00060B  39                 	db	57
  1907   00060C  43                 	db	67
  1908   00060D  2A                 	db	42
  1909   00060E  30                 	db	48
  1910   00060F  23                 	db	35
  1911   000610  44                 	db	68
  1912   000611                     __end_of_keypad_elements:
  1913                           	callstack 0
  1914   000FF1                     _INTCON2bits    set	4081
  1915   000FD0                     _RCONbits       set	4048
  1916   000FF0                     _INTCON3bits    set	4080
  1917   000FF2                     _INTCONbits     set	4082
  1918   000F84                     _PORTE          set	3972
  1919   000F83                     _PORTD          set	3971
  1920   000F82                     _PORTC          set	3970
  1921   000F81                     _PORTB          set	3969
  1922   000F80                     _PORTA          set	3968
  1923   000F8D                     _LATE           set	3981
  1924   000F8C                     _LATD           set	3980
  1925   000F8B                     _LATC           set	3979
  1926   000F8A                     _LATB           set	3978
  1927   000F89                     _LATA           set	3977
  1928   000F96                     _TRISE          set	3990
  1929   000F95                     _TRISD          set	3989
  1930   000F94                     _TRISC          set	3988
  1931   000F93                     _TRISB          set	3987
  1932   000F92                     _TRISA          set	3986
  1933   000611                     STR_1:
  1934   000611  25                 	db	37
  1935   000612  69                 	db	105	;'i'
  1936   000613  00                 	db	0
  1937   000611                     STR_2           equ	STR_1
  1938   000611                     STR_3           equ	STR_1
  1939   000614  00                 	db	0	; dummy byte at the end
  1940   000600                     __smallconst    set	__psmallconst
  1941   000600                     __mediumconst   set	__psmallconst
  1942   000002                     __activetblptr  equ	2
  1943                           
  1944                           ; #config settings
  1945                           
  1946                           	psect	cinit
  1947   00126A                     __pcinit:
  1948                           	callstack 0
  1949   00126A                     start_initialization:
  1950                           	callstack 0
  1951   00126A                     __initialization:
  1952                           	callstack 0
  1953                           
  1954                           ; Initialize objects allocated to COMRAM (83 bytes)
  1955                           ; load TBLPTR registers with __pidataCOMRAM
  1956   00126A  0ED8               	movlw	low __pidataCOMRAM
  1957   00126C  6EF6               	movwf	tblptrl,c
  1958   00126E  0E11               	movlw	high __pidataCOMRAM
  1959   001270  6EF7               	movwf	tblptrh,c
  1960   001272  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1961   001274  6EF8               	movwf	tblptru,c
  1962   001276  EE00  F001         	lfsr	0,__pdataCOMRAM
  1963   00127A  EE10 F053          	lfsr	1,83
  1964   00127E                     copy_data0:
  1965   00127E  0009               	tblrd		*+
  1966   001280  CFF5 FFEE          	movff	tablat,postinc0
  1967   001284  50E5               	movf	postdec1,w,c
  1968   001286  50E1               	movf	fsr1l,w,c
  1969   001288  E1FA               	bnz	copy_data0
  1970                           
  1971                           ; Clear objects allocated to COMRAM (22 bytes)
  1972   00128A  EE00  F054         	lfsr	0,__pbssCOMRAM
  1973   00128E  0E16               	movlw	22
  1974   001290                     clear_0:
  1975   001290  6AEE               	clrf	postinc0,c
  1976   001292  06E8               	decf	wreg,f,c
  1977   001294  E1FD               	bnz	clear_0
  1978   001296                     end_of_initialization:
  1979                           	callstack 0
  1980   001296                     __end_of__initialization:
  1981                           	callstack 0
  1982   001296  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1983   001298  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1984   00129A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1985   00129C  6EF8               	movwf	tblptru,c
  1986   00129E  0100               	movlb	0
  1987   0012A0  EF16  F009         	goto	_main	;jump to C main() function
  1988                           
  1989                           	psect	bssCOMRAM
  1990   000054                     __pbssCOMRAM:
  1991                           	callstack 0
  1992   000054                     _errno:
  1993                           	callstack 0
  1994   000054                     	ds	2
  1995   000056                     _RB_handler:
  1996                           	callstack 0
  1997   000056                     	ds	2
  1998   000058                     _INT2_handler:
  1999                           	callstack 0
  2000   000058                     	ds	2
  2001   00005A                     _INT1_handler:
  2002                           	callstack 0
  2003   00005A                     	ds	2
  2004   00005C                     _INT0_handler:
  2005                           	callstack 0
  2006   00005C                     	ds	2
  2007   00005E                     _prev:
  2008                           	callstack 0
  2009   00005E                     	ds	1
  2010   00005F                     _knum:
  2011                           	callstack 0
  2012   00005F                     	ds	1
  2013   000060                     _j:
  2014                           	callstack 0
  2015   000060                     	ds	1
  2016   000061                     _Iflag:
  2017                           	callstack 0
  2018   000061                     	ds	1
  2019   000062                     relay_turn_off@F2875:
  2020                           	callstack 0
  2021   000062                     	ds	1
  2022   000063                     relay_turn_on@F2870:
  2023                           	callstack 0
  2024   000063                     	ds	1
  2025   000064                     relay_initialize@F2865:
  2026                           	callstack 0
  2027   000064                     	ds	1
  2028   000065                     LED_toggle@F2885:
  2029                           	callstack 0
  2030   000065                     	ds	1
  2031   000066                     LED_off@F2880:
  2032                           	callstack 0
  2033   000066                     	ds	1
  2034   000067                     LED_on@F2875:
  2035                           	callstack 0
  2036   000067                     	ds	1
  2037   000068                     LED_initialize@F2870:
  2038                           	callstack 0
  2039   000068                     	ds	1
  2040   000069                     _LED_OK:
  2041                           	callstack 0
  2042   000069                     	ds	1
  2043                           
  2044                           	psect	dataCOMRAM
  2045   000001                     __pdataCOMRAM:
  2046                           	callstack 0
  2047   000001                     _LCD1:
  2048                           	callstack 0
  2049   000001                     	ds	11
  2050   00000C                     __PORT_registers:
  2051                           	callstack 0
  2052   00000C                     	ds	10
  2053   000016                     __LAT_registers:
  2054                           	callstack 0
  2055   000016                     	ds	10
  2056   000020                     __TRIS_registers:
  2057                           	callstack 0
  2058   000020                     	ds	10
  2059   00002A                     _keypad1:
  2060                           	callstack 0
  2061   00002A                     	ds	9
  2062   000033                     _segment1:
  2063                           	callstack 0
  2064   000033                     	ds	5
  2065   000038                     _first_int:
  2066                           	callstack 0
  2067   000038                     	ds	4
  2068   00003C                     _led_arr:
  2069                           	callstack 0
  2070   00003C                     	ds	4
  2071   000040                     _btn2:
  2072                           	callstack 0
  2073   000040                     	ds	3
  2074   000043                     _btn1:
  2075                           	callstack 0
  2076   000043                     	ds	3
  2077   000046                     _motor2:
  2078                           	callstack 0
  2079   000046                     	ds	2
  2080   000048                     _motor1:
  2081                           	callstack 0
  2082   000048                     	ds	2
  2083   00004A                     _i:
  2084                           	callstack 0
  2085   00004A                     	ds	1
  2086   00004B                     _seg_units_en:
  2087                           	callstack 0
  2088   00004B                     	ds	1
  2089   00004C                     _testing:
  2090                           	callstack 0
  2091   00004C                     	ds	1
  2092   00004D                     _relay1:
  2093                           	callstack 0
  2094   00004D                     	ds	1
  2095   00004E                     _second_int:
  2096                           	callstack 0
  2097   00004E                     	ds	5
  2098   000053                     _LED_NOK:
  2099                           	callstack 0
  2100   000053                     	ds	1
  2101                           
  2102                           	psect	cstackCOMRAM
  2103   00006A                     __pcstackCOMRAM:
  2104                           	callstack 0
  2105   00006A                     ??_InterruptManagerLow:
  2106   00006A                     
  2107                           ; 1 bytes @ 0x0
  2108   00006A                     	ds	1
  2109   00006B                     GPIO_check_access@_pin_config:
  2110                           	callstack 0
  2111   00006B                     INT_INTx_check_access@lint:
  2112                           	callstack 0
  2113   00006B                     INT_INTx_get_index@lint:
  2114                           	callstack 0
  2115                           
  2116                           ; 1 bytes @ 0x1
  2117   00006B                     	ds	1
  2118   00006C                     INT_INTx_check_access@ret:
  2119                           	callstack 0
  2120   00006C                     INT_INTx_get_index@ind:
  2121                           	callstack 0
  2122   00006C                     ??_GPIO_check_access:
  2123   00006C                     
  2124                           ; 1 bytes @ 0x2
  2125   00006C                     	ds	1
  2126   00006D                     GPIO_check_access@ret:
  2127                           	callstack 0
  2128   00006D                     INT_INTx_enable@lint:
  2129                           	callstack 0
  2130   00006D                     INT_INTx_disable@lint:
  2131                           	callstack 0
  2132   00006D                     INT_INTx_priority_initialize@lint:
  2133                           	callstack 0
  2134   00006D                     INT_INTx_edge_initialize@lint:
  2135                           	callstack 0
  2136   00006D                     INT_INTx_clear_flag@lint:
  2137                           	callstack 0
  2138   00006D                     INT_INTx_set_callback_routine@lint:
  2139                           	callstack 0
  2140                           
  2141                           ; 1 bytes @ 0x3
  2142   00006D                     	ds	1
  2143   00006E                     GPIO_pin_direction_initialize@_pin_config:
  2144                           	callstack 0
  2145   00006E                     GPIO_pin_write_logic@_pin_config:
  2146                           	callstack 0
  2147   00006E                     ??_INT_INTx_disable:
  2148   00006E                     ??_INT_INTx_clear_flag:
  2149   00006E                     ??_INT_INTx_set_callback_routine:
  2150   00006E                     ??_INT_INTx_priority_initialize:
  2151   00006E                     ??_INT_INTx_edge_initialize:
  2152   00006E                     ??_INT_INTx_enable:
  2153                           
  2154                           ; 1 bytes @ 0x4
  2155   00006E                     	ds	1
  2156   00006F                     GPIO_pin_write_logic@logic:
  2157                           	callstack 0
  2158   00006F                     ??_GPIO_pin_direction_initialize:
  2159                           
  2160                           ; 1 bytes @ 0x5
  2161   00006F                     	ds	1
  2162   000070                     INT_INTx_enable@ind:
  2163                           	callstack 0
  2164   000070                     INT_INTx_disable@ind:
  2165                           	callstack 0
  2166   000070                     INT_INTx_priority_initialize@ind:
  2167                           	callstack 0
  2168   000070                     INT_INTx_edge_initialize@ind:
  2169                           	callstack 0
  2170   000070                     INT_INTx_clear_flag@ind:
  2171                           	callstack 0
  2172   000070                     INT_INTx_set_callback_routine@ind:
  2173                           	callstack 0
  2174   000070                     ??_GPIO_pin_write_logic:
  2175                           
  2176                           ; 1 bytes @ 0x6
  2177   000070                     	ds	1
  2178   000071                     INT_INTx_enable@ret:
  2179                           	callstack 0
  2180   000071                     INT_INTx_disable@ret:
  2181                           	callstack 0
  2182   000071                     INT_INTx_priority_initialize@ret:
  2183                           	callstack 0
  2184   000071                     INT_INTx_edge_initialize@ret:
  2185                           	callstack 0
  2186   000071                     INT_INTx_clear_flag@ret:
  2187                           	callstack 0
  2188   000071                     INT_INTx_set_callback_routine@ret:
  2189                           	callstack 0
  2190                           
  2191                           ; 1 bytes @ 0x7
  2192   000071                     	ds	3
  2193   000074                     GPIO_pin_direction_initialize@ret:
  2194                           	callstack 0
  2195                           
  2196                           ; 1 bytes @ 0xA
  2197   000074                     	ds	1
  2198   000075                     GPIO_pin_write_logic@ret:
  2199                           	callstack 0
  2200   000075                     INT_INTx_initialize@lint:
  2201                           	callstack 0
  2202                           
  2203                           ; 1 bytes @ 0xB
  2204   000075                     	ds	1
  2205   000076                     LED_on@led:
  2206                           	callstack 0
  2207   000076                     _INT_INTx_initialize$1300:
  2208                           	callstack 0
  2209   000076                     
  2210                           ; 1 bytes @ 0xC
  2211   000076                     	ds	1
  2212   000077                     INT_INTx_initialize@ret:
  2213                           	callstack 0
  2214   000077                     ??_LED_on:
  2215                           
  2216                           ; 1 bytes @ 0xD
  2217   000077                     	ds	1
  2218   000078                     LED_on@pin_local:
  2219                           	callstack 0
  2220                           
  2221                           ; 1 bytes @ 0xE
  2222   000078                     	ds	1
  2223   000079                     
  2224                           ; 1 bytes @ 0xF
  2225 ;;
  2226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2227 ;;
  2228 ;; *************** function _main *****************
  2229 ;; Defined at:
  2230 ;;		line 36 in file "application.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  ret             1    0        unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  2  839[None  ] int 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2244 ;;      Params:         0       0       0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels required when called: 7
  2250 ;; This function calls:
  2251 ;;		_INT_INTx_initialize
  2252 ;;		_LED_on
  2253 ;; This function is called by:
  2254 ;;		Startup code after reset
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text0
  2259   00122C                     __ptext0:
  2260                           	callstack 0
  2261   00122C                     _main:
  2262                           	callstack 24
  2263   00122C  FFFF               	dw	65535	; assembler added errata NOP
  2264                           
  2265                           ;application.c: 38:     if(INT_INTx_initialize(&second_int))
  2266   00122E  0E4E               	movlw	low _second_int
  2267   001230  6E75               	movwf	INT_INTx_initialize@lint^0,c
  2268   001232  ECCF  F004         	call	_INT_INTx_initialize	;wreg free
  2269   001236  0900               	iorlw	0
  2270   001238  B4D8               	btfsc	status,2,c
  2271   00123A  EF21  F009         	goto	u3731
  2272   00123E  EF24  F009         	goto	u3730
  2273   001242                     u3731:
  2274   001242  FFFF               	dw	65535	; assembler added errata NOP
  2275   001244  EF2B  F009         	goto	l4141
  2276   001248                     u3730:
  2277   001248  FFFF               	dw	65535	; assembler added errata NOP
  2278   00124A                     
  2279                           ;application.c: 39:         LED_on(&LED_OK);
  2280   00124A  0E69               	movlw	low _LED_OK
  2281   00124C  6E76               	movwf	LED_on@led^0,c
  2282   00124E  ECDB  F007         	call	_LED_on	;wreg free
  2283   001252  EF30  F009         	goto	l842
  2284   001256                     l4141:
  2285   001256  FFFF               	dw	65535	; assembler added errata NOP
  2286                           
  2287                           ;application.c: 41:         LED_on(&LED_NOK);
  2288   001258  0E53               	movlw	low _LED_NOK
  2289   00125A  6E76               	movwf	LED_on@led^0,c
  2290   00125C  ECDB  F007         	call	_LED_on	;wreg free
  2291   001260                     l842:
  2292   001260  FFFF               	dw	65535	; assembler added errata NOP
  2293   001262  EF30  F009         	goto	l842
  2294   001266  EF54  F000         	goto	start
  2295   00126A                     __end_of_main:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _LED_on *****************
  2299 ;; Defined at:
  2300 ;;		line 33 in file "ECU_layer/LED/ecu_led.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  led             1   12[COMRAM] PTR struct .
  2303 ;;		 -> LED_NOK(1), LED_OK(1), 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  pin_local       1   14[COMRAM] struct .
  2306 ;;  ret             1    0        unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      unsigned char 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2316 ;;      Params:         1       0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0
  2318 ;;      Temps:          1       0       0       0       0       0       0
  2319 ;;      Totals:         3       0       0       0       0       0       0
  2320 ;;Total ram usage:        3 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 6
  2323 ;; This function calls:
  2324 ;;		_GPIO_check_access
  2325 ;;		_GPIO_pin_write_logic
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text1
  2332   000FB6                     __ptext1:
  2333                           	callstack 0
  2334   000FB6                     _LED_on:
  2335                           	callstack 0
  2336   000FB6  FFFF               	dw	65535	; assembler added errata NOP
  2337   000FB8                     
  2338                           ;ECU_layer/LED/ecu_led.c: 35:  if ( (((void*)0) == led) ){
  2339   000FB8  5076               	movf	LED_on@led^0,w,c
  2340   000FBA  A4D8               	btfss	status,2,c
  2341   000FBC  EFE2  F007         	goto	u2791
  2342   000FC0  EFE5  F007         	goto	u2790
  2343   000FC4                     u2791:
  2344   000FC4  FFFF               	dw	65535	; assembler added errata NOP
  2345   000FC6  EFE9  F007         	goto	l312
  2346   000FCA                     u2790:
  2347   000FCA  FFFF               	dw	65535	; assembler added errata NOP
  2348   000FCC                     l3517:
  2349   000FCC  FFFF               	dw	65535	; assembler added errata NOP
  2350                           
  2351                           ;ECU_layer/LED/ecu_led.c: 37:  }
  2352   000FCE  EF24  F008         	goto	l318
  2353   000FD2                     l312:
  2354   000FD2  FFFF               	dw	65535	; assembler added errata NOP
  2355                           
  2356                           ;ECU_layer/LED/ecu_led.c: 39:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  2357   000FD4  C067  F078         	movff	LED_on@F2875,LED_on@pin_local
  2358   000FD8  5076               	movf	LED_on@led^0,w,c
  2359   000FDA  6ED9               	movwf	fsr2l,c
  2360   000FDC  6ADA               	clrf	fsr2h,c
  2361   000FDE  50DF               	movf	223,w,c
  2362   000FE0  0B07               	andlw	7
  2363   000FE2  6E77               	movwf	??_LED_on^0,c
  2364   000FE4  5078               	movf	LED_on@pin_local^0,w,c
  2365   000FE6  1877               	xorwf	??_LED_on^0,w,c
  2366   000FE8  0BF8               	andlw	-8
  2367   000FEA  1877               	xorwf	??_LED_on^0,w,c
  2368   000FEC  6E78               	movwf	LED_on@pin_local^0,c
  2369   000FEE  5076               	movf	LED_on@led^0,w,c
  2370   000FF0  6ED9               	movwf	fsr2l,c
  2371   000FF2  6ADA               	clrf	fsr2h,c
  2372   000FF4  30DF               	rrcf	223,w,c
  2373   000FF6  32E8               	rrcf	wreg,f,c
  2374   000FF8  32E8               	rrcf	wreg,f,c
  2375   000FFA  0B07               	andlw	7
  2376   000FFC  6E77               	movwf	??_LED_on^0,c
  2377   000FFE  4677               	rlncf	??_LED_on^0,f,c
  2378   001000  4677               	rlncf	??_LED_on^0,f,c
  2379   001002  4677               	rlncf	??_LED_on^0,f,c
  2380   001004  5078               	movf	LED_on@pin_local^0,w,c
  2381   001006  1877               	xorwf	??_LED_on^0,w,c
  2382   001008  0BC7               	andlw	-57
  2383   00100A  1877               	xorwf	??_LED_on^0,w,c
  2384   00100C  6E78               	movwf	LED_on@pin_local^0,c
  2385   00100E  9C78               	bcf	LED_on@pin_local^0,6,c
  2386   001010  5076               	movf	LED_on@led^0,w,c
  2387   001012  6ED9               	movwf	fsr2l,c
  2388   001014  6ADA               	clrf	fsr2h,c
  2389   001016  ACDF               	btfss	indf2,6,c
  2390   001018  D002               	bra	u2805
  2391   00101A  8E78               	bsf	LED_on@pin_local^0,7,c
  2392   00101C  D001               	bra	u2807
  2393   00101E                     u2805:
  2394   00101E  9E78               	bcf	LED_on@pin_local^0,7,c
  2395   001020                     u2807:
  2396   001020                     
  2397                           ;ECU_layer/LED/ecu_led.c: 40:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  2398   001020  0E78               	movlw	low LED_on@pin_local
  2399   001022  6E6B               	movwf	GPIO_check_access@_pin_config^0,c
  2400   001024  ECB1  F003         	call	_GPIO_check_access	;wreg free
  2401   001028  06E8               	decf	wreg,f,c
  2402   00102A  A4D8               	btfss	status,2,c
  2403   00102C  EF1A  F008         	goto	u2811
  2404   001030  EF1D  F008         	goto	u2810
  2405   001034                     u2811:
  2406   001034  FFFF               	dw	65535	; assembler added errata NOP
  2407   001036  EFE6  F007         	goto	l3517
  2408   00103A                     u2810:
  2409   00103A  FFFF               	dw	65535	; assembler added errata NOP
  2410   00103C                     
  2411                           ;ECU_layer/LED/ecu_led.c: 41:    GPIO_pin_write_logic(&pin_local, GPIO_HIGH);
  2412   00103C  0E78               	movlw	low LED_on@pin_local
  2413   00103E  6E6E               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2414   001040  0E01               	movlw	1
  2415   001042  6E6F               	movwf	GPIO_pin_write_logic@logic^0,c
  2416   001044  EC59  F005         	call	_GPIO_pin_write_logic	;wreg free
  2417   001048                     l318:
  2418   001048  FFFF               	dw	65535	; assembler added errata NOP
  2419   00104A  0012               	return		;funcret
  2420   00104C  FFFF               	dw	65535	; errata NOP
  2421   00104E                     __end_of_LED_on:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function _GPIO_pin_write_logic *****************
  2425 ;; Defined at:
  2426 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  _pin_config     1    4[COMRAM] PTR const struct .
  2429 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_off@pin_local(1), 
  2430 ;;		 -> LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), 
  2431 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  2432 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  2433 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  2434 ;;  logic           1    5[COMRAM] enum E2776
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  ret             1   11[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2446 ;;      Params:         2       0       0       0       0       0       0
  2447 ;;      Locals:         1       0       0       0       0       0       0
  2448 ;;      Temps:          5       0       0       0       0       0       0
  2449 ;;      Totals:         8       0       0       0       0       0       0
  2450 ;;Total ram usage:        8 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 5
  2453 ;; This function calls:
  2454 ;;		_GPIO_check_access
  2455 ;; This function is called by:
  2456 ;;		_LED_on
  2457 ;;		_seven_segment_write_number
  2458 ;;		_seven_segment_write_2digit_number
  2459 ;;		_dc_motor_turn_right
  2460 ;;		_dc_motor_turn_left
  2461 ;;		_dc_motor_stop
  2462 ;;		_keypad_read_number
  2463 ;;		_lcd_send_command
  2464 ;;		_lcd_send_char_data
  2465 ;;		_lcd_send_4bits
  2466 ;;		_lcd_send_8bits
  2467 ;;		_lcd_send_en
  2468 ;;		_LED_off
  2469 ;;		_relay_turn_on
  2470 ;;		_relay_turn_off
  2471 ;;		_GPIO_pin_initialize
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text2
  2476   000AB2                     __ptext2:
  2477                           	callstack 0
  2478   000AB2                     _GPIO_pin_write_logic:
  2479                           	callstack 0
  2480   000AB2  FFFF               	dw	65535	; assembler added errata NOP
  2481   000AB4                     
  2482                           ;MCAL_layer/GPIO/hal_gpio.c: 98:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2483   000AB4  0E01               	movlw	1
  2484   000AB6  6E75               	movwf	GPIO_pin_write_logic@ret^0,c
  2485   000AB8                     
  2486                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  2487   000AB8  C06E  F06B         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  2488   000ABC  ECB1  F003         	call	_GPIO_check_access	;wreg free
  2489   000AC0  0900               	iorlw	0
  2490   000AC2  A4D8               	btfss	status,2,c
  2491   000AC4  EF66  F005         	goto	u2281
  2492   000AC8  EF69  F005         	goto	u2280
  2493   000ACC                     u2281:
  2494   000ACC  FFFF               	dw	65535	; assembler added errata NOP
  2495   000ACE  EFC7  F005         	goto	l3093
  2496   000AD2                     u2280:
  2497   000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2498   000AD4                     l3087:
  2499   000AD4  FFFF               	dw	65535	; assembler added errata NOP
  2500                           
  2501                           ;MCAL_layer/GPIO/hal_gpio.c: 100:   ret = (STD_ReturnType)(0x00);
  2502   000AD6  6A75               	clrf	GPIO_pin_write_logic@ret^0,c
  2503                           
  2504                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  2505   000AD8  EFDE  F005         	goto	l3095
  2506   000ADC                     l3089:
  2507   000ADC  FFFF               	dw	65535	; assembler added errata NOP
  2508                           
  2509                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  2510   000ADE  506E               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2511   000AE0  6ED9               	movwf	fsr2l,c
  2512   000AE2  6ADA               	clrf	fsr2h,c
  2513   000AE4  30DF               	rrcf	223,w,c
  2514   000AE6  32E8               	rrcf	wreg,f,c
  2515   000AE8  32E8               	rrcf	wreg,f,c
  2516   000AEA  0B07               	andlw	7
  2517   000AEC  6E70               	movwf	??_GPIO_pin_write_logic^0,c
  2518   000AEE  0E01               	movlw	1
  2519   000AF0  6E71               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  2520   000AF2  2A70               	incf	??_GPIO_pin_write_logic^0,f,c
  2521   000AF4  EF7F  F005         	goto	u2294
  2522   000AF8                     u2295:
  2523   000AF8  FFFF               	dw	65535	; assembler added errata NOP
  2524   000AFA  90D8               	bcf	status,0,c
  2525   000AFC  3671               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  2526   000AFE                     u2294:
  2527   000AFE  FFFF               	dw	65535	; assembler added errata NOP
  2528   000B00  2E70               	decfsz	??_GPIO_pin_write_logic^0,f,c
  2529   000B02  EF7C  F005         	goto	u2295
  2530   000B06  5071               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2531   000B08  0AFF               	xorlw	255
  2532   000B0A  6E72               	movwf	(??_GPIO_pin_write_logic+2)^0,c
  2533   000B0C  506E               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2534   000B0E  6ED9               	movwf	fsr2l,c
  2535   000B10  6ADA               	clrf	fsr2h,c
  2536   000B12  50DF               	movf	223,w,c
  2537   000B14  0B07               	andlw	7
  2538   000B16  0D02               	mullw	2
  2539   000B18  50F3               	movf	243,w,c
  2540   000B1A  0F16               	addlw	low __LAT_registers
  2541   000B1C  6ED9               	movwf	fsr2l,c
  2542   000B1E  6ADA               	clrf	fsr2h,c
  2543   000B20  CFDE F073          	movff	postinc2,??_GPIO_pin_write_logic+3
  2544   000B24  CFDD F074          	movff	postdec2,??_GPIO_pin_write_logic+4
  2545   000B28  C073  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  2546   000B2C  C074  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  2547   000B30  5072               	movf	(??_GPIO_pin_write_logic+2)^0,w,c
  2548   000B32  16DF               	andwf	indf2,f,c
  2549                           
  2550                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  2551   000B34  EFDE  F005         	goto	l3095
  2552   000B38                     l3091:
  2553   000B38  FFFF               	dw	65535	; assembler added errata NOP
  2554                           
  2555                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  2556   000B3A  506E               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2557   000B3C  6ED9               	movwf	fsr2l,c
  2558   000B3E  6ADA               	clrf	fsr2h,c
  2559   000B40  30DF               	rrcf	223,w,c
  2560   000B42  32E8               	rrcf	wreg,f,c
  2561   000B44  32E8               	rrcf	wreg,f,c
  2562   000B46  0B07               	andlw	7
  2563   000B48  6E70               	movwf	??_GPIO_pin_write_logic^0,c
  2564   000B4A  0E01               	movlw	1
  2565   000B4C  6E71               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  2566   000B4E  2A70               	incf	??_GPIO_pin_write_logic^0,f,c
  2567   000B50  EFAD  F005         	goto	u2304
  2568   000B54                     u2305:
  2569   000B54  FFFF               	dw	65535	; assembler added errata NOP
  2570   000B56  90D8               	bcf	status,0,c
  2571   000B58  3671               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  2572   000B5A                     u2304:
  2573   000B5A  FFFF               	dw	65535	; assembler added errata NOP
  2574   000B5C  2E70               	decfsz	??_GPIO_pin_write_logic^0,f,c
  2575   000B5E  EFAA  F005         	goto	u2305
  2576   000B62  506E               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2577   000B64  6ED9               	movwf	fsr2l,c
  2578   000B66  6ADA               	clrf	fsr2h,c
  2579   000B68  50DF               	movf	223,w,c
  2580   000B6A  0B07               	andlw	7
  2581   000B6C  0D02               	mullw	2
  2582   000B6E  50F3               	movf	243,w,c
  2583   000B70  0F16               	addlw	low __LAT_registers
  2584   000B72  6ED9               	movwf	fsr2l,c
  2585   000B74  6ADA               	clrf	fsr2h,c
  2586   000B76  CFDE F072          	movff	postinc2,??_GPIO_pin_write_logic+2
  2587   000B7A  CFDD F073          	movff	postdec2,??_GPIO_pin_write_logic+3
  2588   000B7E  C072  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  2589   000B82  C073  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  2590   000B86  5071               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2591   000B88  12DF               	iorwf	indf2,f,c
  2592                           
  2593                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  2594   000B8A  EFDE  F005         	goto	l3095
  2595   000B8E                     l3093:
  2596   000B8E  FFFF               	dw	65535	; assembler added errata NOP
  2597   000B90  506F               	movf	GPIO_pin_write_logic@logic^0,w,c
  2598   000B92  6E70               	movwf	??_GPIO_pin_write_logic^0,c
  2599   000B94  6A71               	clrf	(??_GPIO_pin_write_logic+1)^0,c
  2600                           
  2601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2602                           ; Switch size 1, requested type "simple"
  2603                           ; Number of cases is 1, Range of values is 0 to 0
  2604                           ; switch strategies available:
  2605                           ; Name         Instructions Cycles
  2606                           ; simple_byte            4     3 (average)
  2607                           ;	Chosen strategy is simple_byte
  2608   000B96  5071               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2609   000B98  0A00               	xorlw	0	; case 0
  2610   000B9A  B4D8               	btfsc	status,2,c
  2611   000B9C  EFD2  F005         	goto	l4189
  2612   000BA0  EF6A  F005         	goto	l3087
  2613   000BA4                     l4189:
  2614   000BA4  FFFF               	dw	65535	; assembler added errata NOP
  2615                           
  2616                           ; Switch size 1, requested type "simple"
  2617                           ; Number of cases is 2, Range of values is 0 to 1
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte            7     4 (average)
  2621                           ;	Chosen strategy is simple_byte
  2622   000BA6  5070               	movf	??_GPIO_pin_write_logic^0,w,c
  2623   000BA8  0A00               	xorlw	0	; case 0
  2624   000BAA  B4D8               	btfsc	status,2,c
  2625   000BAC  EF6E  F005         	goto	l3089
  2626   000BB0  0A01               	xorlw	1	; case 1
  2627   000BB2  B4D8               	btfsc	status,2,c
  2628   000BB4  EF9C  F005         	goto	l3091
  2629   000BB8  EF6A  F005         	goto	l3087
  2630   000BBC                     l3095:
  2631   000BBC  FFFF               	dw	65535	; assembler added errata NOP
  2632                           
  2633                           ;MCAL_layer/GPIO/hal_gpio.c: 114:  return ret;
  2634   000BBE  5075               	movf	GPIO_pin_write_logic@ret^0,w,c
  2635   000BC0  0012               	return		;funcret
  2636   000BC2  FFFF               	dw	65535	; errata NOP
  2637   000BC4                     __end_of_GPIO_pin_write_logic:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _INT_INTx_initialize *****************
  2641 ;; Defined at:
  2642 ;;		line 39 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  lint            1   11[COMRAM] PTR const struct .
  2645 ;;		 -> second_int(5), 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  ret             1   13[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      unsigned char 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2657 ;;      Params:         1       0       0       0       0       0       0
  2658 ;;      Locals:         2       0       0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0
  2660 ;;      Totals:         3       0       0       0       0       0       0
  2661 ;;Total ram usage:        3 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 6
  2664 ;; This function calls:
  2665 ;;		_GPIO_pin_direction_initialize
  2666 ;;		_INT_INTx_check_access
  2667 ;;		_INT_INTx_clear_flag
  2668 ;;		_INT_INTx_disable
  2669 ;;		_INT_INTx_edge_initialize
  2670 ;;		_INT_INTx_enable
  2671 ;;		_INT_INTx_priority_initialize
  2672 ;;		_INT_INTx_set_callback_routine
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text3
  2679   00099E                     __ptext3:
  2680                           	callstack 0
  2681   00099E                     _INT_INTx_initialize:
  2682                           	callstack 0
  2683   00099E  FFFF               	dw	65535	; assembler added errata NOP
  2684   0009A0                     
  2685                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 41:  if(((void*)0) == lint || (STD_Retu
      +                          rnType)(0x00) == INT_INTx_check_access(lint))
  2686   0009A0  5075               	movf	INT_INTx_initialize@lint^0,w,c
  2687   0009A2  B4D8               	btfsc	status,2,c
  2688   0009A4  EFD6  F004         	goto	u2841
  2689   0009A8  EFD9  F004         	goto	u2840
  2690   0009AC                     u2841:
  2691   0009AC  FFFF               	dw	65535	; assembler added errata NOP
  2692   0009AE  EFE7  F004         	goto	l624
  2693   0009B2                     u2840:
  2694   0009B2  FFFF               	dw	65535	; assembler added errata NOP
  2695   0009B4  C075  F06B         	movff	INT_INTx_initialize@lint,INT_INTx_check_access@lint
  2696   0009B8  EC27  F007         	call	_INT_INTx_check_access	;wreg free
  2697   0009BC  0900               	iorlw	0
  2698   0009BE  A4D8               	btfss	status,2,c
  2699   0009C0  EFE4  F004         	goto	u2851
  2700   0009C4  EFE7  F004         	goto	u2850
  2701   0009C8                     u2851:
  2702   0009C8  FFFF               	dw	65535	; assembler added errata NOP
  2703   0009CA  EFEB  F004         	goto	l622
  2704   0009CE                     u2850:
  2705   0009CE                     l624:
  2706   0009CE  FFFF               	dw	65535	; assembler added errata NOP
  2707                           
  2708                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 42:   ret = (STD_ReturnType)(0x00);
  2709   0009D0  6A77               	clrf	INT_INTx_initialize@ret^0,c
  2710   0009D2  EF55  F005         	goto	l625
  2711   0009D6                     l622:
  2712   0009D6  FFFF               	dw	65535	; assembler added errata NOP
  2713                           
  2714                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 45:   ret = INT_INTx_disable(lint)&&
  2715   0009D8  6A76               	clrf	_INT_INTx_initialize$1300^0,c
  2716   0009DA  C075  F06D         	movff	INT_INTx_initialize@lint,INT_INTx_disable@lint
  2717   0009DE  EC27  F008         	call	_INT_INTx_disable	;wreg free
  2718   0009E2  0900               	iorlw	0
  2719   0009E4  B4D8               	btfsc	status,2,c
  2720   0009E6  EFF7  F004         	goto	u2861
  2721   0009EA  EFFA  F004         	goto	u2860
  2722   0009EE                     u2861:
  2723   0009EE  FFFF               	dw	65535	; assembler added errata NOP
  2724   0009F0  EF52  F005         	goto	l3565
  2725   0009F4                     u2860:
  2726   0009F4  FFFF               	dw	65535	; assembler added errata NOP
  2727   0009F6  C075  F06D         	movff	INT_INTx_initialize@lint,INT_INTx_clear_flag@lint
  2728   0009FA  EC6D  F008         	call	_INT_INTx_clear_flag	;wreg free
  2729   0009FE  0900               	iorlw	0
  2730   000A00  B4D8               	btfsc	status,2,c
  2731   000A02  EF05  F005         	goto	u2871
  2732   000A06  EF08  F005         	goto	u2870
  2733   000A0A                     u2871:
  2734   000A0A  FFFF               	dw	65535	; assembler added errata NOP
  2735   000A0C  EF52  F005         	goto	l3565
  2736   000A10                     u2870:
  2737   000A10  FFFF               	dw	65535	; assembler added errata NOP
  2738   000A12  5075               	movf	INT_INTx_initialize@lint^0,w,c
  2739   000A14  0F02               	addlw	2
  2740   000A16  6E6E               	movwf	GPIO_pin_direction_initialize@_pin_config^0,c
  2741   000A18  EC43  F004         	call	_GPIO_pin_direction_initialize	;wreg free
  2742   000A1C  0900               	iorlw	0
  2743   000A1E  B4D8               	btfsc	status,2,c
  2744   000A20  EF14  F005         	goto	u2881
  2745   000A24  EF17  F005         	goto	u2880
  2746   000A28                     u2881:
  2747   000A28  FFFF               	dw	65535	; assembler added errata NOP
  2748   000A2A  EF52  F005         	goto	l3565
  2749   000A2E                     u2880:
  2750   000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2751   000A30  C075  F06D         	movff	INT_INTx_initialize@lint,INT_INTx_set_callback_routine@lint
  2752   000A34  ECBE  F006         	call	_INT_INTx_set_callback_routine	;wreg free
  2753   000A38  0900               	iorlw	0
  2754   000A3A  B4D8               	btfsc	status,2,c
  2755   000A3C  EF22  F005         	goto	u2891
  2756   000A40  EF25  F005         	goto	u2890
  2757   000A44                     u2891:
  2758   000A44  FFFF               	dw	65535	; assembler added errata NOP
  2759   000A46  EF52  F005         	goto	l3565
  2760   000A4A                     u2890:
  2761   000A4A  FFFF               	dw	65535	; assembler added errata NOP
  2762   000A4C  C075  F06D         	movff	INT_INTx_initialize@lint,INT_INTx_priority_initialize@lint
  2763   000A50  EC51  F006         	call	_INT_INTx_priority_initialize	;wreg free
  2764   000A54  0900               	iorlw	0
  2765   000A56  B4D8               	btfsc	status,2,c
  2766   000A58  EF30  F005         	goto	u2901
  2767   000A5C  EF33  F005         	goto	u2900
  2768   000A60                     u2901:
  2769   000A60  FFFF               	dw	65535	; assembler added errata NOP
  2770   000A62  EF52  F005         	goto	l3565
  2771   000A66                     u2900:
  2772   000A66  FFFF               	dw	65535	; assembler added errata NOP
  2773   000A68  C075  F06D         	movff	INT_INTx_initialize@lint,INT_INTx_edge_initialize@lint
  2774   000A6C  EC0B  F003         	call	_INT_INTx_edge_initialize	;wreg free
  2775   000A70  0900               	iorlw	0
  2776   000A72  B4D8               	btfsc	status,2,c
  2777   000A74  EF3E  F005         	goto	u2911
  2778   000A78  EF41  F005         	goto	u2910
  2779   000A7C                     u2911:
  2780   000A7C  FFFF               	dw	65535	; assembler added errata NOP
  2781   000A7E  EF52  F005         	goto	l3565
  2782   000A82                     u2910:
  2783   000A82  FFFF               	dw	65535	; assembler added errata NOP
  2784   000A84  C075  F06D         	movff	INT_INTx_initialize@lint,INT_INTx_enable@lint
  2785   000A88  ECE2  F005         	call	_INT_INTx_enable	;wreg free
  2786   000A8C  0900               	iorlw	0
  2787   000A8E  B4D8               	btfsc	status,2,c
  2788   000A90  EF4C  F005         	goto	u2921
  2789   000A94  EF4F  F005         	goto	u2920
  2790   000A98                     u2921:
  2791   000A98  FFFF               	dw	65535	; assembler added errata NOP
  2792   000A9A  EF52  F005         	goto	l3565
  2793   000A9E                     u2920:
  2794   000A9E  FFFF               	dw	65535	; assembler added errata NOP
  2795   000AA0  0E01               	movlw	1
  2796   000AA2  6E76               	movwf	_INT_INTx_initialize$1300^0,c
  2797   000AA4                     l3565:
  2798   000AA4  FFFF               	dw	65535	; assembler added errata NOP
  2799   000AA6  C076  F077         	movff	_INT_INTx_initialize$1300,INT_INTx_initialize@ret
  2800   000AAA                     l625:
  2801   000AAA  FFFF               	dw	65535	; assembler added errata NOP
  2802                           
  2803                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 61:  return ret;
  2804   000AAC  5077               	movf	INT_INTx_initialize@ret^0,w,c
  2805   000AAE  0012               	return		;funcret
  2806   000AB0  FFFF               	dw	65535	; errata NOP
  2807   000AB2                     __end_of_INT_INTx_initialize:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _INT_INTx_set_callback_routine *****************
  2811 ;; Defined at:
  2812 ;;		line 393 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  lint            1    3[COMRAM] PTR const struct .
  2815 ;;		 -> second_int(5), 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  ret             1    7[COMRAM] unsigned char 
  2818 ;;  ind             1    6[COMRAM] enum E2851
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2828 ;;      Params:         1       0       0       0       0       0       0
  2829 ;;      Locals:         2       0       0       0       0       0       0
  2830 ;;      Temps:          2       0       0       0       0       0       0
  2831 ;;      Totals:         5       0       0       0       0       0       0
  2832 ;;Total ram usage:        5 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 5
  2835 ;; This function calls:
  2836 ;;		_INT_INTx_get_index
  2837 ;; This function is called by:
  2838 ;;		_INT_INTx_initialize
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text4
  2843   000D7C                     __ptext4:
  2844                           	callstack 0
  2845   000D7C                     _INT_INTx_set_callback_routine:
  2846                           	callstack 0
  2847   000D7C  FFFF               	dw	65535	; assembler added errata NOP
  2848   000D7E                     
  2849                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 394:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  2850   000D7E  0E01               	movlw	1
  2851   000D80  6E71               	movwf	INT_INTx_set_callback_routine@ret^0,c
  2852   000D82                     
  2853                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 396:  if(((void*)0) == lint)
  2854   000D82  506D               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2855   000D84  A4D8               	btfss	status,2,c
  2856   000D86  EFC7  F006         	goto	u2561
  2857   000D8A  EFCA  F006         	goto	u2560
  2858   000D8E                     u2561:
  2859   000D8E  FFFF               	dw	65535	; assembler added errata NOP
  2860   000D90  EFCF  F006         	goto	l3283
  2861   000D94                     u2560:
  2862   000D94  FFFF               	dw	65535	; assembler added errata NOP
  2863   000D96                     l3281:
  2864   000D96  FFFF               	dw	65535	; assembler added errata NOP
  2865                           
  2866                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 397:   ret = (STD_ReturnType)(0x00);
  2867   000D98  6A71               	clrf	INT_INTx_set_callback_routine@ret^0,c
  2868   000D9A  EF23  F007         	goto	l3299
  2869   000D9E                     l3283:
  2870   000D9E  FFFF               	dw	65535	; assembler added errata NOP
  2871   000DA0  506D               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2872   000DA2  6ED9               	movwf	fsr2l,c
  2873   000DA4  6ADA               	clrf	fsr2h,c
  2874   000DA6  50DE               	movf	postinc2,w,c
  2875   000DA8  10DE               	iorwf	postinc2,w,c
  2876   000DAA  A4D8               	btfss	status,2,c
  2877   000DAC  EFDA  F006         	goto	u2571
  2878   000DB0  EFDD  F006         	goto	u2570
  2879   000DB4                     u2571:
  2880   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  2881   000DB6  EFE0  F006         	goto	l3287
  2882   000DBA                     u2570:
  2883   000DBA  FFFF               	dw	65535	; assembler added errata NOP
  2884   000DBC  EF23  F007         	goto	l3299
  2885   000DC0                     l3287:
  2886   000DC0  FFFF               	dw	65535	; assembler added errata NOP
  2887                           
  2888                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 401:   ind = INT_INTx_get_index(lint);
  2889   000DC2  C06D  F06B         	movff	INT_INTx_set_callback_routine@lint,INT_INTx_get_index@lint
  2890   000DC6  ECB3  F008         	call	_INT_INTx_get_index	;wreg free
  2891   000DCA  6E70               	movwf	INT_INTx_set_callback_routine@ind^0,c
  2892                           
  2893                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 402:   switch(ind){
  2894   000DCC  EF06  F007         	goto	l3297
  2895   000DD0                     l3289:
  2896   000DD0  FFFF               	dw	65535	; assembler added errata NOP
  2897                           
  2898                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 404:     INT0_handler = lint -> ext_int
      +                          errupt_handler;
  2899   000DD2  506D               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2900   000DD4  6ED9               	movwf	fsr2l,c
  2901   000DD6  6ADA               	clrf	fsr2h,c
  2902   000DD8  CFDE F05C          	movff	postinc2,_INT0_handler
  2903   000DDC  CFDD F05D          	movff	postdec2,_INT0_handler+1
  2904                           
  2905                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 405:     break;
  2906   000DE0  EF23  F007         	goto	l3299
  2907   000DE4                     l3291:
  2908   000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2909                           
  2910                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 407:     INT1_handler = lint -> ext_int
      +                          errupt_handler;
  2911   000DE6  506D               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2912   000DE8  6ED9               	movwf	fsr2l,c
  2913   000DEA  6ADA               	clrf	fsr2h,c
  2914   000DEC  CFDE F05A          	movff	postinc2,_INT1_handler
  2915   000DF0  CFDD F05B          	movff	postdec2,_INT1_handler+1
  2916                           
  2917                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 408:     break;
  2918   000DF4  EF23  F007         	goto	l3299
  2919   000DF8                     l3293:
  2920   000DF8  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 410:     INT2_handler = lint -> ext_int
      +                          errupt_handler;
  2923   000DFA  506D               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2924   000DFC  6ED9               	movwf	fsr2l,c
  2925   000DFE  6ADA               	clrf	fsr2h,c
  2926   000E00  CFDE F058          	movff	postinc2,_INT2_handler
  2927   000E04  CFDD F059          	movff	postdec2,_INT2_handler+1
  2928                           
  2929                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 411:     break;
  2930   000E08  EF23  F007         	goto	l3299
  2931   000E0C                     l3297:
  2932   000E0C  FFFF               	dw	65535	; assembler added errata NOP
  2933   000E0E  C070  F06E         	movff	INT_INTx_set_callback_routine@ind,??_INT_INTx_set_callback_routine
  2934   000E12  6A6F               	clrf	(??_INT_INTx_set_callback_routine+1)^0,c
  2935   000E14  BE6E               	btfsc	??_INT_INTx_set_callback_routine^0,7,c
  2936   000E16  066F               	decf	(??_INT_INTx_set_callback_routine+1)^0,f,c
  2937                           
  2938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2939                           ; Switch size 1, requested type "simple"
  2940                           ; Number of cases is 1, Range of values is 0 to 0
  2941                           ; switch strategies available:
  2942                           ; Name         Instructions Cycles
  2943                           ; simple_byte            4     3 (average)
  2944                           ;	Chosen strategy is simple_byte
  2945   000E18  506F               	movf	(??_INT_INTx_set_callback_routine+1)^0,w,c
  2946   000E1A  0A00               	xorlw	0	; case 0
  2947   000E1C  B4D8               	btfsc	status,2,c
  2948   000E1E  EF13  F007         	goto	l4191
  2949   000E22  EFCB  F006         	goto	l3281
  2950   000E26                     l4191:
  2951   000E26  FFFF               	dw	65535	; assembler added errata NOP
  2952                           
  2953                           ; Switch size 1, requested type "simple"
  2954                           ; Number of cases is 3, Range of values is 0 to 2
  2955                           ; switch strategies available:
  2956                           ; Name         Instructions Cycles
  2957                           ; simple_byte           10     6 (average)
  2958                           ;	Chosen strategy is simple_byte
  2959   000E28  506E               	movf	??_INT_INTx_set_callback_routine^0,w,c
  2960   000E2A  0A00               	xorlw	0	; case 0
  2961   000E2C  B4D8               	btfsc	status,2,c
  2962   000E2E  EFE8  F006         	goto	l3289
  2963   000E32  0A01               	xorlw	1	; case 1
  2964   000E34  B4D8               	btfsc	status,2,c
  2965   000E36  EFF2  F006         	goto	l3291
  2966   000E3A  0A03               	xorlw	3	; case 2
  2967   000E3C  B4D8               	btfsc	status,2,c
  2968   000E3E  EFFC  F006         	goto	l3293
  2969   000E42  EFCB  F006         	goto	l3281
  2970   000E46                     l3299:
  2971   000E46  FFFF               	dw	65535	; assembler added errata NOP
  2972                           
  2973                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 417:  return ret;
  2974   000E48  5071               	movf	INT_INTx_set_callback_routine@ret^0,w,c
  2975   000E4A  0012               	return		;funcret
  2976   000E4C  FFFF               	dw	65535	; errata NOP
  2977   000E4E                     __end_of_INT_INTx_set_callback_routine:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _INT_INTx_priority_initialize *****************
  2981 ;; Defined at:
  2982 ;;		line 207 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  lint            1    3[COMRAM] PTR const struct .
  2985 ;;		 -> second_int(5), 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  ret             1    7[COMRAM] unsigned char 
  2988 ;;  ind             1    6[COMRAM] enum E2851
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      unsigned char 
  2991 ;; Registers used:
  2992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2998 ;;      Params:         1       0       0       0       0       0       0
  2999 ;;      Locals:         2       0       0       0       0       0       0
  3000 ;;      Temps:          2       0       0       0       0       0       0
  3001 ;;      Totals:         5       0       0       0       0       0       0
  3002 ;;Total ram usage:        5 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 5
  3005 ;; This function calls:
  3006 ;;		_INT_INTx_get_index
  3007 ;; This function is called by:
  3008 ;;		_INT_INTx_initialize
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text5
  3013   000CA2                     __ptext5:
  3014                           	callstack 0
  3015   000CA2                     _INT_INTx_priority_initialize:
  3016                           	callstack 0
  3017   000CA2  FFFF               	dw	65535	; assembler added errata NOP
  3018   000CA4                     
  3019                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 208:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3020   000CA4  0E01               	movlw	1
  3021   000CA6  6E71               	movwf	INT_INTx_priority_initialize@ret^0,c
  3022   000CA8                     
  3023                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 210:  if(((void*)0) == lint)
  3024   000CA8  506D               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3025   000CAA  A4D8               	btfss	status,2,c
  3026   000CAC  EF5A  F006         	goto	u2581
  3027   000CB0  EF5D  F006         	goto	u2580
  3028   000CB4                     u2581:
  3029   000CB4  FFFF               	dw	65535	; assembler added errata NOP
  3030   000CB6  EF62  F006         	goto	l679
  3031   000CBA                     u2580:
  3032   000CBA  FFFF               	dw	65535	; assembler added errata NOP
  3033   000CBC                     l3311:
  3034   000CBC  FFFF               	dw	65535	; assembler added errata NOP
  3035                           
  3036                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 211:   ret = (STD_ReturnType)(0x00);
  3037   000CBE  6A71               	clrf	INT_INTx_priority_initialize@ret^0,c
  3038   000CC0  EFBA  F006         	goto	l3327
  3039   000CC4                     l679:
  3040   000CC4  FFFF               	dw	65535	; assembler added errata NOP
  3041                           
  3042                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 213:             RCONbits.IPEN=1;
  3043   000CC6  8ED0               	bsf	208,7,c	;volatile
  3044   000CC8                     
  3045                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 214:    ind = INT_INTx_get_index(lint);
  3046   000CC8  C06D  F06B         	movff	INT_INTx_priority_initialize@lint,INT_INTx_get_index@lint
  3047   000CCC  ECB3  F008         	call	_INT_INTx_get_index	;wreg free
  3048   000CD0  6E70               	movwf	INT_INTx_priority_initialize@ind^0,c
  3049                           
  3050                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 215:   switch(ind){
  3051   000CD2  EF9D  F006         	goto	l3325
  3052   000CD6                     l686:
  3053   000CD6  FFFF               	dw	65535	; assembler added errata NOP
  3054                           
  3055                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 221:       INTCON3bits.INT1IP=1;
  3056   000CD8  8CF0               	bsf	240,6,c	;volatile
  3057                           
  3058                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 222:       break;
  3059   000CDA  EFBA  F006         	goto	l3327
  3060   000CDE                     l688:
  3061   000CDE  FFFF               	dw	65535	; assembler added errata NOP
  3062                           
  3063                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 224:       INTCON3bits.INT1IP=0;
  3064   000CE0  9CF0               	bcf	240,6,c	;volatile
  3065                           
  3066                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 225:       break;
  3067   000CE2  EFBA  F006         	goto	l3327
  3068   000CE6                     l3317:
  3069   000CE6  FFFF               	dw	65535	; assembler added errata NOP
  3070   000CE8  506D               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3071   000CEA  6ED9               	movwf	fsr2l,c
  3072   000CEC  6ADA               	clrf	fsr2h,c
  3073   000CEE  0E04               	movlw	4
  3074   000CF0  26D9               	addwf	fsr2l,f,c
  3075   000CF2  50DF               	movf	indf2,w,c
  3076                           
  3077                           ; Switch size 1, requested type "simple"
  3078                           ; Number of cases is 2, Range of values is 0 to 1
  3079                           ; switch strategies available:
  3080                           ; Name         Instructions Cycles
  3081                           ; simple_byte            7     4 (average)
  3082                           ;	Chosen strategy is simple_byte
  3083   000CF4  0A00               	xorlw	0	; case 0
  3084   000CF6  B4D8               	btfsc	status,2,c
  3085   000CF8  EF6F  F006         	goto	l688
  3086   000CFC  0A01               	xorlw	1	; case 1
  3087   000CFE  B4D8               	btfsc	status,2,c
  3088   000D00  EF6B  F006         	goto	l686
  3089   000D04  EF5E  F006         	goto	l3311
  3090   000D08                     l692:
  3091   000D08  FFFF               	dw	65535	; assembler added errata NOP
  3092                           
  3093                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 234:       INTCON3bits.INT2IP=1;
  3094   000D0A  8EF0               	bsf	240,7,c	;volatile
  3095                           
  3096                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 235:       break;
  3097   000D0C  EFBA  F006         	goto	l3327
  3098   000D10                     l694:
  3099   000D10  FFFF               	dw	65535	; assembler added errata NOP
  3100                           
  3101                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 237:       INTCON3bits.INT2IP=0;
  3102   000D12  9EF0               	bcf	240,7,c	;volatile
  3103                           
  3104                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 238:       break;
  3105   000D14  EFBA  F006         	goto	l3327
  3106   000D18                     l3321:
  3107   000D18  FFFF               	dw	65535	; assembler added errata NOP
  3108   000D1A  506D               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3109   000D1C  6ED9               	movwf	fsr2l,c
  3110   000D1E  6ADA               	clrf	fsr2h,c
  3111   000D20  0E04               	movlw	4
  3112   000D22  26D9               	addwf	fsr2l,f,c
  3113   000D24  50DF               	movf	indf2,w,c
  3114                           
  3115                           ; Switch size 1, requested type "simple"
  3116                           ; Number of cases is 2, Range of values is 0 to 1
  3117                           ; switch strategies available:
  3118                           ; Name         Instructions Cycles
  3119                           ; simple_byte            7     4 (average)
  3120                           ;	Chosen strategy is simple_byte
  3121   000D26  0A00               	xorlw	0	; case 0
  3122   000D28  B4D8               	btfsc	status,2,c
  3123   000D2A  EF88  F006         	goto	l694
  3124   000D2E  0A01               	xorlw	1	; case 1
  3125   000D30  B4D8               	btfsc	status,2,c
  3126   000D32  EF84  F006         	goto	l692
  3127   000D36  EF5E  F006         	goto	l3311
  3128   000D3A                     l3325:
  3129   000D3A  FFFF               	dw	65535	; assembler added errata NOP
  3130   000D3C  C070  F06E         	movff	INT_INTx_priority_initialize@ind,??_INT_INTx_priority_initialize
  3131   000D40  6A6F               	clrf	(??_INT_INTx_priority_initialize+1)^0,c
  3132   000D42  BE6E               	btfsc	??_INT_INTx_priority_initialize^0,7,c
  3133   000D44  066F               	decf	(??_INT_INTx_priority_initialize+1)^0,f,c
  3134                           
  3135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3136                           ; Switch size 1, requested type "simple"
  3137                           ; Number of cases is 1, Range of values is 0 to 0
  3138                           ; switch strategies available:
  3139                           ; Name         Instructions Cycles
  3140                           ; simple_byte            4     3 (average)
  3141                           ;	Chosen strategy is simple_byte
  3142   000D46  506F               	movf	(??_INT_INTx_priority_initialize+1)^0,w,c
  3143   000D48  0A00               	xorlw	0	; case 0
  3144   000D4A  B4D8               	btfsc	status,2,c
  3145   000D4C  EFAA  F006         	goto	l4193
  3146   000D50  EF5E  F006         	goto	l3311
  3147   000D54                     l4193:
  3148   000D54  FFFF               	dw	65535	; assembler added errata NOP
  3149                           
  3150                           ; Switch size 1, requested type "simple"
  3151                           ; Number of cases is 3, Range of values is 0 to 2
  3152                           ; switch strategies available:
  3153                           ; Name         Instructions Cycles
  3154                           ; simple_byte           10     6 (average)
  3155                           ;	Chosen strategy is simple_byte
  3156   000D56  506E               	movf	??_INT_INTx_priority_initialize^0,w,c
  3157   000D58  0A00               	xorlw	0	; case 0
  3158   000D5A  B4D8               	btfsc	status,2,c
  3159   000D5C  EFBA  F006         	goto	l3327
  3160   000D60  0A01               	xorlw	1	; case 1
  3161   000D62  B4D8               	btfsc	status,2,c
  3162   000D64  EF73  F006         	goto	l3317
  3163   000D68  0A03               	xorlw	3	; case 2
  3164   000D6A  B4D8               	btfsc	status,2,c
  3165   000D6C  EF8C  F006         	goto	l3321
  3166   000D70  EF5E  F006         	goto	l3311
  3167   000D74                     l3327:
  3168   000D74  FFFF               	dw	65535	; assembler added errata NOP
  3169                           
  3170                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 249:  return ret;
  3171   000D76  5071               	movf	INT_INTx_priority_initialize@ret^0,w,c
  3172   000D78  0012               	return		;funcret
  3173   000D7A  FFFF               	dw	65535	; errata NOP
  3174   000D7C                     __end_of_INT_INTx_priority_initialize:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _INT_INTx_enable *****************
  3178 ;; Defined at:
  3179 ;;		line 68 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  lint            1    3[COMRAM] PTR const struct .
  3182 ;;		 -> second_int(5), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  ret             1    7[COMRAM] unsigned char 
  3185 ;;  ind             1    6[COMRAM] enum E2851
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      unsigned char 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3195 ;;      Params:         1       0       0       0       0       0       0
  3196 ;;      Locals:         2       0       0       0       0       0       0
  3197 ;;      Temps:          2       0       0       0       0       0       0
  3198 ;;      Totals:         5       0       0       0       0       0       0
  3199 ;;Total ram usage:        5 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 5
  3202 ;; This function calls:
  3203 ;;		_INT_INTx_get_index
  3204 ;; This function is called by:
  3205 ;;		_INT_INTx_initialize
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text6
  3210   000BC4                     __ptext6:
  3211                           	callstack 0
  3212   000BC4                     _INT_INTx_enable:
  3213                           	callstack 0
  3214   000BC4  FFFF               	dw	65535	; assembler added errata NOP
  3215   000BC6                     
  3216                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 69:  STD_ReturnType ret = (STD_ReturnTy
      +                          pe)(0x01);
  3217   000BC6  0E01               	movlw	1
  3218   000BC8  6E71               	movwf	INT_INTx_enable@ret^0,c
  3219   000BCA                     
  3220                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 71:  if(((void*)0) == lint)
  3221   000BCA  506D               	movf	INT_INTx_enable@lint^0,w,c
  3222   000BCC  A4D8               	btfss	status,2,c
  3223   000BCE  EFEB  F005         	goto	u2601
  3224   000BD2  EFEE  F005         	goto	u2600
  3225   000BD6                     u2601:
  3226   000BD6  FFFF               	dw	65535	; assembler added errata NOP
  3227   000BD8  EFF3  F005         	goto	l3385
  3228   000BDC                     u2600:
  3229   000BDC  FFFF               	dw	65535	; assembler added errata NOP
  3230   000BDE                     l3383:
  3231   000BDE  FFFF               	dw	65535	; assembler added errata NOP
  3232                           
  3233                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 72:   ret = (STD_ReturnType)(0x00);
  3234   000BE0  6A71               	clrf	INT_INTx_enable@ret^0,c
  3235   000BE2  EF4D  F006         	goto	l3399
  3236   000BE6                     l3385:
  3237   000BE6  FFFF               	dw	65535	; assembler added errata NOP
  3238                           
  3239                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 74:   ind = INT_INTx_get_index(lint);
  3240   000BE8  C06D  F06B         	movff	INT_INTx_enable@lint,INT_INTx_get_index@lint
  3241   000BEC  ECB3  F008         	call	_INT_INTx_get_index	;wreg free
  3242   000BF0  6E70               	movwf	INT_INTx_enable@ind^0,c
  3243                           
  3244                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 75:   switch(ind) {
  3245   000BF2  EF30  F006         	goto	l3397
  3246   000BF6                     l634:
  3247   000BF6  FFFF               	dw	65535	; assembler added errata NOP
  3248                           
  3249                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 77:     INTCONbits.INT0IE=1;
  3250   000BF8  88F2               	bsf	242,4,c	;volatile
  3251                           
  3252                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 79:                                 INT
      +                          CONbits.GIEH=1;
  3253   000BFA  8EF2               	bsf	242,7,c	;volatile
  3254                           
  3255                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 83:     break;
  3256   000BFC  EF4D  F006         	goto	l3399
  3257   000C00                     l636:
  3258   000C00  FFFF               	dw	65535	; assembler added errata NOP
  3259                           
  3260                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 85:     INTCON3bits.INT1IE=1;
  3261   000C02  86F0               	bsf	240,3,c	;volatile
  3262   000C04                     
  3263                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 87:     if (lint -> priority == 1)
  3264   000C04  506D               	movf	INT_INTx_enable@lint^0,w,c
  3265   000C06  6ED9               	movwf	fsr2l,c
  3266   000C08  6ADA               	clrf	fsr2h,c
  3267   000C0A  0E04               	movlw	4
  3268   000C0C  26D9               	addwf	fsr2l,f,c
  3269   000C0E  04DE               	decf	postinc2,w,c
  3270   000C10  A4D8               	btfss	status,2,c
  3271   000C12  EF0D  F006         	goto	u2611
  3272   000C16  EF10  F006         	goto	u2610
  3273   000C1A                     u2611:
  3274   000C1A  FFFF               	dw	65535	; assembler added errata NOP
  3275   000C1C  EF14  F006         	goto	l637
  3276   000C20                     u2610:
  3277   000C20  FFFF               	dw	65535	; assembler added errata NOP
  3278   000C22                     
  3279                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 88:                                    
      +                           INTCONbits.GIEH=1;
  3280   000C22  8EF2               	bsf	242,7,c	;volatile
  3281   000C24  EF4D  F006         	goto	l3399
  3282   000C28                     l637:
  3283   000C28  FFFF               	dw	65535	; assembler added errata NOP
  3284                           
  3285                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 90:                                    
      +                           INTCONbits.GIEL=1;
  3286   000C2A  8CF2               	bsf	242,6,c	;volatile
  3287   000C2C  EF4D  F006         	goto	l3399
  3288   000C30                     l639:
  3289   000C30  FFFF               	dw	65535	; assembler added errata NOP
  3290                           
  3291                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 96:     INTCON3bits.INT2IE=1;
  3292   000C32  88F0               	bsf	240,4,c	;volatile
  3293   000C34                     
  3294                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 98:     if (lint -> priority == 1)
  3295   000C34  506D               	movf	INT_INTx_enable@lint^0,w,c
  3296   000C36  6ED9               	movwf	fsr2l,c
  3297   000C38  6ADA               	clrf	fsr2h,c
  3298   000C3A  0E04               	movlw	4
  3299   000C3C  26D9               	addwf	fsr2l,f,c
  3300   000C3E  04DE               	decf	postinc2,w,c
  3301   000C40  A4D8               	btfss	status,2,c
  3302   000C42  EF25  F006         	goto	u2621
  3303   000C46  EF28  F006         	goto	u2620
  3304   000C4A                     u2621:
  3305   000C4A  FFFF               	dw	65535	; assembler added errata NOP
  3306   000C4C  EF2C  F006         	goto	l640
  3307   000C50                     u2620:
  3308   000C50  FFFF               	dw	65535	; assembler added errata NOP
  3309   000C52                     
  3310                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 99:                                    
      +                           INTCONbits.GIEH=1;
  3311   000C52  8EF2               	bsf	242,7,c	;volatile
  3312   000C54  EF4D  F006         	goto	l3399
  3313   000C58                     l640:
  3314   000C58  FFFF               	dw	65535	; assembler added errata NOP
  3315                           
  3316                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 101:                                   
      +                            INTCONbits.GIEL=1;
  3317   000C5A  8CF2               	bsf	242,6,c	;volatile
  3318   000C5C  EF4D  F006         	goto	l3399
  3319   000C60                     l3397:
  3320   000C60  FFFF               	dw	65535	; assembler added errata NOP
  3321   000C62  C070  F06E         	movff	INT_INTx_enable@ind,??_INT_INTx_enable
  3322   000C66  6A6F               	clrf	(??_INT_INTx_enable+1)^0,c
  3323   000C68  BE6E               	btfsc	??_INT_INTx_enable^0,7,c
  3324   000C6A  066F               	decf	(??_INT_INTx_enable+1)^0,f,c
  3325                           
  3326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3327                           ; Switch size 1, requested type "simple"
  3328                           ; Number of cases is 1, Range of values is 0 to 0
  3329                           ; switch strategies available:
  3330                           ; Name         Instructions Cycles
  3331                           ; simple_byte            4     3 (average)
  3332                           ;	Chosen strategy is simple_byte
  3333   000C6C  506F               	movf	(??_INT_INTx_enable+1)^0,w,c
  3334   000C6E  0A00               	xorlw	0	; case 0
  3335   000C70  B4D8               	btfsc	status,2,c
  3336   000C72  EF3D  F006         	goto	l4195
  3337   000C76  EFEF  F005         	goto	l3383
  3338   000C7A                     l4195:
  3339   000C7A  FFFF               	dw	65535	; assembler added errata NOP
  3340                           
  3341                           ; Switch size 1, requested type "simple"
  3342                           ; Number of cases is 3, Range of values is 0 to 2
  3343                           ; switch strategies available:
  3344                           ; Name         Instructions Cycles
  3345                           ; simple_byte           10     6 (average)
  3346                           ;	Chosen strategy is simple_byte
  3347   000C7C  506E               	movf	??_INT_INTx_enable^0,w,c
  3348   000C7E  0A00               	xorlw	0	; case 0
  3349   000C80  B4D8               	btfsc	status,2,c
  3350   000C82  EFFB  F005         	goto	l634
  3351   000C86  0A01               	xorlw	1	; case 1
  3352   000C88  B4D8               	btfsc	status,2,c
  3353   000C8A  EF00  F006         	goto	l636
  3354   000C8E  0A03               	xorlw	3	; case 2
  3355   000C90  B4D8               	btfsc	status,2,c
  3356   000C92  EF18  F006         	goto	l639
  3357   000C96  EFEF  F005         	goto	l3383
  3358   000C9A                     l3399:
  3359   000C9A  FFFF               	dw	65535	; assembler added errata NOP
  3360                           
  3361                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 111:  return ret;
  3362   000C9C  5071               	movf	INT_INTx_enable@ret^0,w,c
  3363   000C9E  0012               	return		;funcret
  3364   000CA0  FFFF               	dw	65535	; errata NOP
  3365   000CA2                     __end_of_INT_INTx_enable:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _INT_INTx_edge_initialize *****************
  3369 ;; Defined at:
  3370 ;;		line 282 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  lint            1    3[COMRAM] PTR const struct .
  3373 ;;		 -> second_int(5), 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  ret             1    7[COMRAM] unsigned char 
  3376 ;;  ind             1    6[COMRAM] enum E2851
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      unsigned char 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3386 ;;      Params:         1       0       0       0       0       0       0
  3387 ;;      Locals:         2       0       0       0       0       0       0
  3388 ;;      Temps:          2       0       0       0       0       0       0
  3389 ;;      Totals:         5       0       0       0       0       0       0
  3390 ;;Total ram usage:        5 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 5
  3393 ;; This function calls:
  3394 ;;		_INT_INTx_get_index
  3395 ;; This function is called by:
  3396 ;;		_INT_INTx_initialize
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text7
  3401   000616                     __ptext7:
  3402                           	callstack 0
  3403   000616                     _INT_INTx_edge_initialize:
  3404                           	callstack 0
  3405   000616  FFFF               	dw	65535	; assembler added errata NOP
  3406   000618                     
  3407                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 283:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3408   000618  0E01               	movlw	1
  3409   00061A  6E71               	movwf	INT_INTx_edge_initialize@ret^0,c
  3410   00061C                     
  3411                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 285:  if(((void*)0) == lint)
  3412   00061C  506D               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3413   00061E  A4D8               	btfss	status,2,c
  3414   000620  EF14  F003         	goto	u2591
  3415   000624  EF17  F003         	goto	u2590
  3416   000628                     u2591:
  3417   000628  FFFF               	dw	65535	; assembler added errata NOP
  3418   00062A  EF1C  F003         	goto	l3341
  3419   00062E                     u2590:
  3420   00062E  FFFF               	dw	65535	; assembler added errata NOP
  3421   000630                     l3339:
  3422   000630  FFFF               	dw	65535	; assembler added errata NOP
  3423                           
  3424                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 286:   ret = (STD_ReturnType)(0x00);
  3425   000632  6A71               	clrf	INT_INTx_edge_initialize@ret^0,c
  3426   000634  EFAD  F003         	goto	l3359
  3427   000638                     l3341:
  3428   000638  FFFF               	dw	65535	; assembler added errata NOP
  3429                           
  3430                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 288:   ind = INT_INTx_get_index(lint);
  3431   00063A  C06D  F06B         	movff	INT_INTx_edge_initialize@lint,INT_INTx_get_index@lint
  3432   00063E  ECB3  F008         	call	_INT_INTx_get_index	;wreg free
  3433   000642  6E70               	movwf	INT_INTx_edge_initialize@ind^0,c
  3434                           
  3435                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 289:   switch(ind){
  3436   000644  EF90  F003         	goto	l3357
  3437   000648                     l715:
  3438   000648  FFFF               	dw	65535	; assembler added errata NOP
  3439                           
  3440                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 293:       INTCON2bits.INTEDG0=0;
  3441   00064A  9CF1               	bcf	241,6,c	;volatile
  3442                           
  3443                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 294:       break;
  3444   00064C  EFAD  F003         	goto	l3359
  3445   000650                     l717:
  3446   000650  FFFF               	dw	65535	; assembler added errata NOP
  3447                           
  3448                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 296:       INTCON2bits.INTEDG0=1;
  3449   000652  8CF1               	bsf	241,6,c	;volatile
  3450                           
  3451                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 297:       break;
  3452   000654  EFAD  F003         	goto	l3359
  3453   000658                     l3345:
  3454   000658  FFFF               	dw	65535	; assembler added errata NOP
  3455   00065A  506D               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3456   00065C  6ED9               	movwf	fsr2l,c
  3457   00065E  6ADA               	clrf	fsr2h,c
  3458   000660  0E03               	movlw	3
  3459   000662  26D9               	addwf	fsr2l,f,c
  3460   000664  50DF               	movf	indf2,w,c
  3461   000666  6E6E               	movwf	??_INT_INTx_edge_initialize^0,c
  3462   000668  6A6F               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3463                           
  3464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3465                           ; Switch size 1, requested type "simple"
  3466                           ; Number of cases is 1, Range of values is 0 to 0
  3467                           ; switch strategies available:
  3468                           ; Name         Instructions Cycles
  3469                           ; simple_byte            4     3 (average)
  3470                           ;	Chosen strategy is simple_byte
  3471   00066A  506F               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3472   00066C  0A00               	xorlw	0	; case 0
  3473   00066E  B4D8               	btfsc	status,2,c
  3474   000670  EF3C  F003         	goto	l4197
  3475   000674  EF18  F003         	goto	l3339
  3476   000678                     l4197:
  3477   000678  FFFF               	dw	65535	; assembler added errata NOP
  3478                           
  3479                           ; Switch size 1, requested type "simple"
  3480                           ; Number of cases is 2, Range of values is 0 to 1
  3481                           ; switch strategies available:
  3482                           ; Name         Instructions Cycles
  3483                           ; simple_byte            7     4 (average)
  3484                           ;	Chosen strategy is simple_byte
  3485   00067A  506E               	movf	??_INT_INTx_edge_initialize^0,w,c
  3486   00067C  0A00               	xorlw	0	; case 0
  3487   00067E  B4D8               	btfsc	status,2,c
  3488   000680  EF24  F003         	goto	l715
  3489   000684  0A01               	xorlw	1	; case 1
  3490   000686  B4D8               	btfsc	status,2,c
  3491   000688  EF28  F003         	goto	l717
  3492   00068C  EF18  F003         	goto	l3339
  3493   000690                     l722:
  3494   000690  FFFF               	dw	65535	; assembler added errata NOP
  3495                           
  3496                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 306:       INTCON2bits.INTEDG1=0;
  3497   000692  9AF1               	bcf	241,5,c	;volatile
  3498                           
  3499                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 307:       break;
  3500   000694  EFAD  F003         	goto	l3359
  3501   000698                     l724:
  3502   000698  FFFF               	dw	65535	; assembler added errata NOP
  3503                           
  3504                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 309:       INTCON2bits.INTEDG1=1;
  3505   00069A  8AF1               	bsf	241,5,c	;volatile
  3506                           
  3507                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 310:       break;
  3508   00069C  EFAD  F003         	goto	l3359
  3509   0006A0                     l3349:
  3510   0006A0  FFFF               	dw	65535	; assembler added errata NOP
  3511   0006A2  506D               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3512   0006A4  6ED9               	movwf	fsr2l,c
  3513   0006A6  6ADA               	clrf	fsr2h,c
  3514   0006A8  0E03               	movlw	3
  3515   0006AA  26D9               	addwf	fsr2l,f,c
  3516   0006AC  50DF               	movf	indf2,w,c
  3517   0006AE  6E6E               	movwf	??_INT_INTx_edge_initialize^0,c
  3518   0006B0  6A6F               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3519                           
  3520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3521                           ; Switch size 1, requested type "simple"
  3522                           ; Number of cases is 1, Range of values is 0 to 0
  3523                           ; switch strategies available:
  3524                           ; Name         Instructions Cycles
  3525                           ; simple_byte            4     3 (average)
  3526                           ;	Chosen strategy is simple_byte
  3527   0006B2  506F               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3528   0006B4  0A00               	xorlw	0	; case 0
  3529   0006B6  B4D8               	btfsc	status,2,c
  3530   0006B8  EF60  F003         	goto	l4199
  3531   0006BC  EF18  F003         	goto	l3339
  3532   0006C0                     l4199:
  3533   0006C0  FFFF               	dw	65535	; assembler added errata NOP
  3534                           
  3535                           ; Switch size 1, requested type "simple"
  3536                           ; Number of cases is 2, Range of values is 0 to 1
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            7     4 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541   0006C2  506E               	movf	??_INT_INTx_edge_initialize^0,w,c
  3542   0006C4  0A00               	xorlw	0	; case 0
  3543   0006C6  B4D8               	btfsc	status,2,c
  3544   0006C8  EF48  F003         	goto	l722
  3545   0006CC  0A01               	xorlw	1	; case 1
  3546   0006CE  B4D8               	btfsc	status,2,c
  3547   0006D0  EF4C  F003         	goto	l724
  3548   0006D4  EF18  F003         	goto	l3339
  3549   0006D8                     l728:
  3550   0006D8  FFFF               	dw	65535	; assembler added errata NOP
  3551                           
  3552                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 319:       INTCON2bits.INTEDG2=0;
  3553   0006DA  98F1               	bcf	241,4,c	;volatile
  3554                           
  3555                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 320:       break;
  3556   0006DC  EFAD  F003         	goto	l3359
  3557   0006E0                     l730:
  3558   0006E0  FFFF               	dw	65535	; assembler added errata NOP
  3559                           
  3560                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 322:       INTCON2bits.INTEDG2=1;
  3561   0006E2  88F1               	bsf	241,4,c	;volatile
  3562                           
  3563                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 323:       break;
  3564   0006E4  EFAD  F003         	goto	l3359
  3565   0006E8                     l3353:
  3566   0006E8  FFFF               	dw	65535	; assembler added errata NOP
  3567   0006EA  506D               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3568   0006EC  6ED9               	movwf	fsr2l,c
  3569   0006EE  6ADA               	clrf	fsr2h,c
  3570   0006F0  0E03               	movlw	3
  3571   0006F2  26D9               	addwf	fsr2l,f,c
  3572   0006F4  50DF               	movf	indf2,w,c
  3573   0006F6  6E6E               	movwf	??_INT_INTx_edge_initialize^0,c
  3574   0006F8  6A6F               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3575                           
  3576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3577                           ; Switch size 1, requested type "simple"
  3578                           ; Number of cases is 1, Range of values is 0 to 0
  3579                           ; switch strategies available:
  3580                           ; Name         Instructions Cycles
  3581                           ; simple_byte            4     3 (average)
  3582                           ;	Chosen strategy is simple_byte
  3583   0006FA  506F               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3584   0006FC  0A00               	xorlw	0	; case 0
  3585   0006FE  B4D8               	btfsc	status,2,c
  3586   000700  EF84  F003         	goto	l4201
  3587   000704  EF18  F003         	goto	l3339
  3588   000708                     l4201:
  3589   000708  FFFF               	dw	65535	; assembler added errata NOP
  3590                           
  3591                           ; Switch size 1, requested type "simple"
  3592                           ; Number of cases is 2, Range of values is 0 to 1
  3593                           ; switch strategies available:
  3594                           ; Name         Instructions Cycles
  3595                           ; simple_byte            7     4 (average)
  3596                           ;	Chosen strategy is simple_byte
  3597   00070A  506E               	movf	??_INT_INTx_edge_initialize^0,w,c
  3598   00070C  0A00               	xorlw	0	; case 0
  3599   00070E  B4D8               	btfsc	status,2,c
  3600   000710  EF6C  F003         	goto	l728
  3601   000714  0A01               	xorlw	1	; case 1
  3602   000716  B4D8               	btfsc	status,2,c
  3603   000718  EF70  F003         	goto	l730
  3604   00071C  EF18  F003         	goto	l3339
  3605   000720                     l3357:
  3606   000720  FFFF               	dw	65535	; assembler added errata NOP
  3607   000722  C070  F06E         	movff	INT_INTx_edge_initialize@ind,??_INT_INTx_edge_initialize
  3608   000726  6A6F               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3609   000728  BE6E               	btfsc	??_INT_INTx_edge_initialize^0,7,c
  3610   00072A  066F               	decf	(??_INT_INTx_edge_initialize+1)^0,f,c
  3611                           
  3612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3613                           ; Switch size 1, requested type "simple"
  3614                           ; Number of cases is 1, Range of values is 0 to 0
  3615                           ; switch strategies available:
  3616                           ; Name         Instructions Cycles
  3617                           ; simple_byte            4     3 (average)
  3618                           ;	Chosen strategy is simple_byte
  3619   00072C  506F               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3620   00072E  0A00               	xorlw	0	; case 0
  3621   000730  B4D8               	btfsc	status,2,c
  3622   000732  EF9D  F003         	goto	l4203
  3623   000736  EF18  F003         	goto	l3339
  3624   00073A                     l4203:
  3625   00073A  FFFF               	dw	65535	; assembler added errata NOP
  3626                           
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 3, Range of values is 0 to 2
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte           10     6 (average)
  3632                           ;	Chosen strategy is simple_byte
  3633   00073C  506E               	movf	??_INT_INTx_edge_initialize^0,w,c
  3634   00073E  0A00               	xorlw	0	; case 0
  3635   000740  B4D8               	btfsc	status,2,c
  3636   000742  EF2C  F003         	goto	l3345
  3637   000746  0A01               	xorlw	1	; case 1
  3638   000748  B4D8               	btfsc	status,2,c
  3639   00074A  EF50  F003         	goto	l3349
  3640   00074E  0A03               	xorlw	3	; case 2
  3641   000750  B4D8               	btfsc	status,2,c
  3642   000752  EF74  F003         	goto	l3353
  3643   000756  EF18  F003         	goto	l3339
  3644   00075A                     l3359:
  3645   00075A  FFFF               	dw	65535	; assembler added errata NOP
  3646                           
  3647                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 334:  return ret;
  3648   00075C  5071               	movf	INT_INTx_edge_initialize@ret^0,w,c
  3649   00075E  0012               	return		;funcret
  3650   000760  FFFF               	dw	65535	; errata NOP
  3651   000762                     __end_of_INT_INTx_edge_initialize:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _INT_INTx_disable *****************
  3655 ;; Defined at:
  3656 ;;		line 117 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  lint            1    3[COMRAM] PTR const struct .
  3659 ;;		 -> second_int(5), 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  ret             1    7[COMRAM] unsigned char 
  3662 ;;  ind             1    6[COMRAM] enum E2851
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      unsigned char 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3672 ;;      Params:         1       0       0       0       0       0       0
  3673 ;;      Locals:         2       0       0       0       0       0       0
  3674 ;;      Temps:          2       0       0       0       0       0       0
  3675 ;;      Totals:         5       0       0       0       0       0       0
  3676 ;;Total ram usage:        5 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 5
  3679 ;; This function calls:
  3680 ;;		_INT_INTx_get_index
  3681 ;; This function is called by:
  3682 ;;		_INT_INTx_initialize
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text8
  3687   00104E                     __ptext8:
  3688                           	callstack 0
  3689   00104E                     _INT_INTx_disable:
  3690                           	callstack 0
  3691   00104E  FFFF               	dw	65535	; assembler added errata NOP
  3692   001050                     
  3693                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 118:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3694   001050  0E01               	movlw	1
  3695   001052  6E71               	movwf	INT_INTx_disable@ret^0,c
  3696   001054                     
  3697                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 120:  if(((void*)0) == lint)
  3698   001054  506D               	movf	INT_INTx_disable@lint^0,w,c
  3699   001056  A4D8               	btfss	status,2,c
  3700   001058  EF30  F008         	goto	u2541
  3701   00105C  EF33  F008         	goto	u2540
  3702   001060                     u2541:
  3703   001060  FFFF               	dw	65535	; assembler added errata NOP
  3704   001062  EF38  F008         	goto	l3243
  3705   001066                     u2540:
  3706   001066  FFFF               	dw	65535	; assembler added errata NOP
  3707   001068                     l3241:
  3708   001068  FFFF               	dw	65535	; assembler added errata NOP
  3709                           
  3710                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 121:   ret = (STD_ReturnType)(0x00);
  3711   00106A  6A71               	clrf	INT_INTx_disable@ret^0,c
  3712   00106C  EF69  F008         	goto	l3249
  3713   001070                     l3243:
  3714   001070  FFFF               	dw	65535	; assembler added errata NOP
  3715                           
  3716                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 123:   ind = INT_INTx_get_index(lint);
  3717   001072  C06D  F06B         	movff	INT_INTx_disable@lint,INT_INTx_get_index@lint
  3718   001076  ECB3  F008         	call	_INT_INTx_get_index	;wreg free
  3719   00107A  6E70               	movwf	INT_INTx_disable@ind^0,c
  3720                           
  3721                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 124:   switch(ind){
  3722   00107C  EF4C  F008         	goto	l3247
  3723   001080                     l649:
  3724   001080  FFFF               	dw	65535	; assembler added errata NOP
  3725                           
  3726                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 126:     INTCONbits.INT0IE=0;
  3727   001082  98F2               	bcf	242,4,c	;volatile
  3728                           
  3729                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 127:     break;
  3730   001084  EF69  F008         	goto	l3249
  3731   001088                     l651:
  3732   001088  FFFF               	dw	65535	; assembler added errata NOP
  3733                           
  3734                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 129:     INTCON3bits.INT1IE=0;
  3735   00108A  96F0               	bcf	240,3,c	;volatile
  3736                           
  3737                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 130:     break;
  3738   00108C  EF69  F008         	goto	l3249
  3739   001090                     l652:
  3740   001090  FFFF               	dw	65535	; assembler added errata NOP
  3741                           
  3742                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 132:     INTCON3bits.INT2IE=0;
  3743   001092  98F0               	bcf	240,4,c	;volatile
  3744                           
  3745                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 133:     break;
  3746   001094  EF69  F008         	goto	l3249
  3747   001098                     l3247:
  3748   001098  FFFF               	dw	65535	; assembler added errata NOP
  3749   00109A  C070  F06E         	movff	INT_INTx_disable@ind,??_INT_INTx_disable
  3750   00109E  6A6F               	clrf	(??_INT_INTx_disable+1)^0,c
  3751   0010A0  BE6E               	btfsc	??_INT_INTx_disable^0,7,c
  3752   0010A2  066F               	decf	(??_INT_INTx_disable+1)^0,f,c
  3753                           
  3754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3755                           ; Switch size 1, requested type "simple"
  3756                           ; Number of cases is 1, Range of values is 0 to 0
  3757                           ; switch strategies available:
  3758                           ; Name         Instructions Cycles
  3759                           ; simple_byte            4     3 (average)
  3760                           ;	Chosen strategy is simple_byte
  3761   0010A4  506F               	movf	(??_INT_INTx_disable+1)^0,w,c
  3762   0010A6  0A00               	xorlw	0	; case 0
  3763   0010A8  B4D8               	btfsc	status,2,c
  3764   0010AA  EF59  F008         	goto	l4205
  3765   0010AE  EF34  F008         	goto	l3241
  3766   0010B2                     l4205:
  3767   0010B2  FFFF               	dw	65535	; assembler added errata NOP
  3768                           
  3769                           ; Switch size 1, requested type "simple"
  3770                           ; Number of cases is 3, Range of values is 0 to 2
  3771                           ; switch strategies available:
  3772                           ; Name         Instructions Cycles
  3773                           ; simple_byte           10     6 (average)
  3774                           ;	Chosen strategy is simple_byte
  3775   0010B4  506E               	movf	??_INT_INTx_disable^0,w,c
  3776   0010B6  0A00               	xorlw	0	; case 0
  3777   0010B8  B4D8               	btfsc	status,2,c
  3778   0010BA  EF40  F008         	goto	l649
  3779   0010BE  0A01               	xorlw	1	; case 1
  3780   0010C0  B4D8               	btfsc	status,2,c
  3781   0010C2  EF44  F008         	goto	l651
  3782   0010C6  0A03               	xorlw	3	; case 2
  3783   0010C8  B4D8               	btfsc	status,2,c
  3784   0010CA  EF48  F008         	goto	l652
  3785   0010CE  EF34  F008         	goto	l3241
  3786   0010D2                     l3249:
  3787   0010D2  FFFF               	dw	65535	; assembler added errata NOP
  3788                           
  3789                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 139:  return ret;
  3790   0010D4  5071               	movf	INT_INTx_disable@ret^0,w,c
  3791   0010D6  0012               	return		;funcret
  3792   0010D8  FFFF               	dw	65535	; errata NOP
  3793   0010DA                     __end_of_INT_INTx_disable:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _INT_INTx_clear_flag *****************
  3797 ;; Defined at:
  3798 ;;		line 340 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  lint            1    3[COMRAM] PTR const struct .
  3801 ;;		 -> second_int(5), 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  ret             1    7[COMRAM] unsigned char 
  3804 ;;  ind             1    6[COMRAM] enum E2851
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3814 ;;      Params:         1       0       0       0       0       0       0
  3815 ;;      Locals:         2       0       0       0       0       0       0
  3816 ;;      Temps:          2       0       0       0       0       0       0
  3817 ;;      Totals:         5       0       0       0       0       0       0
  3818 ;;Total ram usage:        5 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 5
  3821 ;; This function calls:
  3822 ;;		_INT_INTx_get_index
  3823 ;; This function is called by:
  3824 ;;		_INT_INTx_initialize
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text9
  3829   0010DA                     __ptext9:
  3830                           	callstack 0
  3831   0010DA                     _INT_INTx_clear_flag:
  3832                           	callstack 0
  3833   0010DA  FFFF               	dw	65535	; assembler added errata NOP
  3834   0010DC                     
  3835                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 341:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3836   0010DC  0E01               	movlw	1
  3837   0010DE  6E71               	movwf	INT_INTx_clear_flag@ret^0,c
  3838   0010E0                     
  3839                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 343:  if(((void*)0) == lint)
  3840   0010E0  506D               	movf	INT_INTx_clear_flag@lint^0,w,c
  3841   0010E2  A4D8               	btfss	status,2,c
  3842   0010E4  EF76  F008         	goto	u2551
  3843   0010E8  EF79  F008         	goto	u2550
  3844   0010EC                     u2551:
  3845   0010EC  FFFF               	dw	65535	; assembler added errata NOP
  3846   0010EE  EF7E  F008         	goto	l3263
  3847   0010F2                     u2550:
  3848   0010F2  FFFF               	dw	65535	; assembler added errata NOP
  3849   0010F4                     l3261:
  3850   0010F4  FFFF               	dw	65535	; assembler added errata NOP
  3851                           
  3852                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 344:   ret = (STD_ReturnType)(0x00);
  3853   0010F6  6A71               	clrf	INT_INTx_clear_flag@ret^0,c
  3854   0010F8  EFAF  F008         	goto	l3269
  3855   0010FC                     l3263:
  3856   0010FC  FFFF               	dw	65535	; assembler added errata NOP
  3857                           
  3858                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 346:   ind = INT_INTx_get_index(lint);
  3859   0010FE  C06D  F06B         	movff	INT_INTx_clear_flag@lint,INT_INTx_get_index@lint
  3860   001102  ECB3  F008         	call	_INT_INTx_get_index	;wreg free
  3861   001106  6E70               	movwf	INT_INTx_clear_flag@ind^0,c
  3862                           
  3863                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 347:   switch(ind){
  3864   001108  EF92  F008         	goto	l3267
  3865   00110C                     l739:
  3866   00110C  FFFF               	dw	65535	; assembler added errata NOP
  3867                           
  3868                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 349:     INTCONbits.INT0IF=0;
  3869   00110E  92F2               	bcf	242,1,c	;volatile
  3870                           
  3871                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 350:     break;
  3872   001110  EFAF  F008         	goto	l3269
  3873   001114                     l741:
  3874   001114  FFFF               	dw	65535	; assembler added errata NOP
  3875                           
  3876                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 352:     INTCON3bits.INT1IF=0;
  3877   001116  90F0               	bcf	240,0,c	;volatile
  3878                           
  3879                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 353:     break;
  3880   001118  EFAF  F008         	goto	l3269
  3881   00111C                     l742:
  3882   00111C  FFFF               	dw	65535	; assembler added errata NOP
  3883                           
  3884                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 355:     INTCON3bits.INT2IF=0;
  3885   00111E  92F0               	bcf	240,1,c	;volatile
  3886                           
  3887                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 356:     break;
  3888   001120  EFAF  F008         	goto	l3269
  3889   001124                     l3267:
  3890   001124  FFFF               	dw	65535	; assembler added errata NOP
  3891   001126  C070  F06E         	movff	INT_INTx_clear_flag@ind,??_INT_INTx_clear_flag
  3892   00112A  6A6F               	clrf	(??_INT_INTx_clear_flag+1)^0,c
  3893   00112C  BE6E               	btfsc	??_INT_INTx_clear_flag^0,7,c
  3894   00112E  066F               	decf	(??_INT_INTx_clear_flag+1)^0,f,c
  3895                           
  3896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 1, Range of values is 0 to 0
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte            4     3 (average)
  3902                           ;	Chosen strategy is simple_byte
  3903   001130  506F               	movf	(??_INT_INTx_clear_flag+1)^0,w,c
  3904   001132  0A00               	xorlw	0	; case 0
  3905   001134  B4D8               	btfsc	status,2,c
  3906   001136  EF9F  F008         	goto	l4207
  3907   00113A  EF7A  F008         	goto	l3261
  3908   00113E                     l4207:
  3909   00113E  FFFF               	dw	65535	; assembler added errata NOP
  3910                           
  3911                           ; Switch size 1, requested type "simple"
  3912                           ; Number of cases is 3, Range of values is 0 to 2
  3913                           ; switch strategies available:
  3914                           ; Name         Instructions Cycles
  3915                           ; simple_byte           10     6 (average)
  3916                           ;	Chosen strategy is simple_byte
  3917   001140  506E               	movf	??_INT_INTx_clear_flag^0,w,c
  3918   001142  0A00               	xorlw	0	; case 0
  3919   001144  B4D8               	btfsc	status,2,c
  3920   001146  EF86  F008         	goto	l739
  3921   00114A  0A01               	xorlw	1	; case 1
  3922   00114C  B4D8               	btfsc	status,2,c
  3923   00114E  EF8A  F008         	goto	l741
  3924   001152  0A03               	xorlw	3	; case 2
  3925   001154  B4D8               	btfsc	status,2,c
  3926   001156  EF8E  F008         	goto	l742
  3927   00115A  EF7A  F008         	goto	l3261
  3928   00115E                     l3269:
  3929   00115E  FFFF               	dw	65535	; assembler added errata NOP
  3930                           
  3931                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 362:  return ret;
  3932   001160  5071               	movf	INT_INTx_clear_flag@ret^0,w,c
  3933   001162  0012               	return		;funcret
  3934   001164  FFFF               	dw	65535	; errata NOP
  3935   001166                     __end_of_INT_INTx_clear_flag:
  3936                           	callstack 0
  3937                           
  3938 ;; *************** function _INT_INTx_get_index *****************
  3939 ;; Defined at:
  3940 ;;		line 423 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  lint            1    1[COMRAM] PTR const struct .
  3943 ;;		 -> second_int(5), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  ind             1    2[COMRAM] enum E2851
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      enum E2851
  3948 ;; Registers used:
  3949 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3955 ;;      Params:         1       0       0       0       0       0       0
  3956 ;;      Locals:         1       0       0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0
  3958 ;;      Totals:         2       0       0       0       0       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 4
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_INT_INTx_enable
  3966 ;;		_INT_INTx_disable
  3967 ;;		_INT_INTx_priority_initialize
  3968 ;;		_INT_INTx_edge_initialize
  3969 ;;		_INT_INTx_clear_flag
  3970 ;;		_INT_INTx_set_callback_routine
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text10
  3975   001166                     __ptext10:
  3976                           	callstack 0
  3977   001166                     _INT_INTx_get_index:
  3978                           	callstack 0
  3979   001166  FFFF               	dw	65535	; assembler added errata NOP
  3980   001168                     
  3981                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 425:  if(((void*)0) == lint){
  3982   001168  506B               	movf	INT_INTx_get_index@lint^0,w,c
  3983   00116A  A4D8               	btfss	status,2,c
  3984   00116C  EFBA  F008         	goto	u2271
  3985   001170  EFBD  F008         	goto	u2270
  3986   001174                     u2271:
  3987   001174  FFFF               	dw	65535	; assembler added errata NOP
  3988   001176  EFD0  F008         	goto	l3077
  3989   00117A                     u2270:
  3990   00117A  FFFF               	dw	65535	; assembler added errata NOP
  3991   00117C                     l3069:
  3992   00117C  FFFF               	dw	65535	; assembler added errata NOP
  3993                           
  3994                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 426:   ind = NA;
  3995   00117E  686C               	setf	INT_INTx_get_index@ind^0,c
  3996                           
  3997                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 427:  }
  3998   001180  EFE8  F008         	goto	l3079
  3999   001184                     l775:
  4000   001184  FFFF               	dw	65535	; assembler added errata NOP
  4001                           
  4002                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 431:     ind = INT0_I;
  4003   001186  6A6C               	clrf	INT_INTx_get_index@ind^0,c
  4004                           
  4005                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 432:     break;
  4006   001188  EFE8  F008         	goto	l3079
  4007   00118C                     l3071:
  4008   00118C  FFFF               	dw	65535	; assembler added errata NOP
  4009                           
  4010                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 434:     ind = INT1_I;
  4011   00118E  0E01               	movlw	1
  4012   001190  6E6C               	movwf	INT_INTx_get_index@ind^0,c
  4013                           
  4014                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 435:     break;
  4015   001192  EFE8  F008         	goto	l3079
  4016   001196                     l3073:
  4017   001196  FFFF               	dw	65535	; assembler added errata NOP
  4018                           
  4019                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 437:     ind = INT2_I;
  4020   001198  0E02               	movlw	2
  4021   00119A  6E6C               	movwf	INT_INTx_get_index@ind^0,c
  4022                           
  4023                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 438:     break;
  4024   00119C  EFE8  F008         	goto	l3079
  4025   0011A0                     l3077:
  4026   0011A0  FFFF               	dw	65535	; assembler added errata NOP
  4027   0011A2  506B               	movf	INT_INTx_get_index@lint^0,w,c
  4028   0011A4  6ED9               	movwf	fsr2l,c
  4029   0011A6  6ADA               	clrf	fsr2h,c
  4030   0011A8  0E02               	movlw	2
  4031   0011AA  26D9               	addwf	fsr2l,f,c
  4032   0011AC  30DF               	rrcf	223,w,c
  4033   0011AE  32E8               	rrcf	wreg,f,c
  4034   0011B0  32E8               	rrcf	wreg,f,c
  4035   0011B2  0B07               	andlw	7
  4036                           
  4037                           ; Switch size 1, requested type "simple"
  4038                           ; Number of cases is 3, Range of values is 0 to 2
  4039                           ; switch strategies available:
  4040                           ; Name         Instructions Cycles
  4041                           ; simple_byte           10     6 (average)
  4042                           ;	Chosen strategy is simple_byte
  4043   0011B4  0A00               	xorlw	0	; case 0
  4044   0011B6  B4D8               	btfsc	status,2,c
  4045   0011B8  EFC2  F008         	goto	l775
  4046   0011BC  0A01               	xorlw	1	; case 1
  4047   0011BE  B4D8               	btfsc	status,2,c
  4048   0011C0  EFC6  F008         	goto	l3071
  4049   0011C4  0A03               	xorlw	3	; case 2
  4050   0011C6  B4D8               	btfsc	status,2,c
  4051   0011C8  EFCB  F008         	goto	l3073
  4052   0011CC  EFBE  F008         	goto	l3069
  4053   0011D0                     l3079:
  4054   0011D0  FFFF               	dw	65535	; assembler added errata NOP
  4055                           
  4056                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 444:  return ind;
  4057   0011D2  506C               	movf	INT_INTx_get_index@ind^0,w,c
  4058   0011D4  0012               	return		;funcret
  4059   0011D6  FFFF               	dw	65535	; errata NOP
  4060   0011D8                     __end_of_INT_INTx_get_index:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _INT_INTx_check_access *****************
  4064 ;; Defined at:
  4065 ;;		line 368 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  lint            1    1[COMRAM] PTR const struct .
  4068 ;;		 -> second_int(5), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  ret             1    2[COMRAM] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      unsigned char 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4080 ;;      Params:         1       0       0       0       0       0       0
  4081 ;;      Locals:         1       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0
  4083 ;;      Totals:         2       0       0       0       0       0       0
  4084 ;;Total ram usage:        2 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 4
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_INT_INTx_initialize
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text11
  4095   000E4E                     __ptext11:
  4096                           	callstack 0
  4097   000E4E                     _INT_INTx_check_access:
  4098                           	callstack 0
  4099   000E4E  FFFF               	dw	65535	; assembler added errata NOP
  4100   000E50                     
  4101                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 369:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  4102   000E50  0E01               	movlw	1
  4103   000E52  6E6C               	movwf	INT_INTx_check_access@ret^0,c
  4104                           
  4105                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 370:  if(((void*)0) == lint || (lint ->
      +                           Ipin.port != PORTB_I) || ( (lint -> Ipin.pin != PIN0)
  4106   000E54  506B               	movf	INT_INTx_check_access@lint^0,w,c
  4107   000E56  B4D8               	btfsc	status,2,c
  4108   000E58  EF30  F007         	goto	u2491
  4109   000E5C  EF33  F007         	goto	u2490
  4110   000E60                     u2491:
  4111   000E60  FFFF               	dw	65535	; assembler added errata NOP
  4112   000E62  EF7D  F007         	goto	l749
  4113   000E66                     u2490:
  4114   000E66  FFFF               	dw	65535	; assembler added errata NOP
  4115   000E68  506B               	movf	INT_INTx_check_access@lint^0,w,c
  4116   000E6A  6ED9               	movwf	fsr2l,c
  4117   000E6C  6ADA               	clrf	fsr2h,c
  4118   000E6E  0E02               	movlw	2
  4119   000E70  26D9               	addwf	fsr2l,f,c
  4120   000E72  50DF               	movf	223,w,c
  4121   000E74  0B07               	andlw	7
  4122   000E76  06E8               	decf	wreg,f,c
  4123   000E78  A4D8               	btfss	status,2,c
  4124   000E7A  EF41  F007         	goto	u2501
  4125   000E7E  EF44  F007         	goto	u2500
  4126   000E82                     u2501:
  4127   000E82  FFFF               	dw	65535	; assembler added errata NOP
  4128   000E84  EF7D  F007         	goto	l749
  4129   000E88                     u2500:
  4130   000E88  FFFF               	dw	65535	; assembler added errata NOP
  4131   000E8A  506B               	movf	INT_INTx_check_access@lint^0,w,c
  4132   000E8C  6ED9               	movwf	fsr2l,c
  4133   000E8E  6ADA               	clrf	fsr2h,c
  4134   000E90  0E02               	movlw	2
  4135   000E92  26D9               	addwf	fsr2l,f,c
  4136   000E94  30DF               	rrcf	223,w,c
  4137   000E96  32E8               	rrcf	wreg,f,c
  4138   000E98  32E8               	rrcf	wreg,f,c
  4139   000E9A  0B07               	andlw	7
  4140   000E9C  0900               	iorlw	0
  4141   000E9E  B4D8               	btfsc	status,2,c
  4142   000EA0  EF54  F007         	goto	u2511
  4143   000EA4  EF57  F007         	goto	u2510
  4144   000EA8                     u2511:
  4145   000EA8  FFFF               	dw	65535	; assembler added errata NOP
  4146   000EAA  EF7F  F007         	goto	l3233
  4147   000EAE                     u2510:
  4148   000EAE  FFFF               	dw	65535	; assembler added errata NOP
  4149   000EB0  506B               	movf	INT_INTx_check_access@lint^0,w,c
  4150   000EB2  6ED9               	movwf	fsr2l,c
  4151   000EB4  6ADA               	clrf	fsr2h,c
  4152   000EB6  0E02               	movlw	2
  4153   000EB8  26D9               	addwf	fsr2l,f,c
  4154   000EBA  30DF               	rrcf	223,w,c
  4155   000EBC  32E8               	rrcf	wreg,f,c
  4156   000EBE  32E8               	rrcf	wreg,f,c
  4157   000EC0  0B07               	andlw	7
  4158   000EC2  06E8               	decf	wreg,f,c
  4159   000EC4  B4D8               	btfsc	status,2,c
  4160   000EC6  EF67  F007         	goto	u2521
  4161   000ECA  EF6A  F007         	goto	u2520
  4162   000ECE                     u2521:
  4163   000ECE  FFFF               	dw	65535	; assembler added errata NOP
  4164   000ED0  EF7F  F007         	goto	l3233
  4165   000ED4                     u2520:
  4166   000ED4  FFFF               	dw	65535	; assembler added errata NOP
  4167   000ED6  506B               	movf	INT_INTx_check_access@lint^0,w,c
  4168   000ED8  6ED9               	movwf	fsr2l,c
  4169   000EDA  6ADA               	clrf	fsr2h,c
  4170   000EDC  0E02               	movlw	2
  4171   000EDE  26D9               	addwf	fsr2l,f,c
  4172   000EE0  30DF               	rrcf	223,w,c
  4173   000EE2  32E8               	rrcf	wreg,f,c
  4174   000EE4  32E8               	rrcf	wreg,f,c
  4175   000EE6  0B07               	andlw	7
  4176   000EE8  0A02               	xorlw	2
  4177   000EEA  B4D8               	btfsc	status,2,c
  4178   000EEC  EF7A  F007         	goto	u2531
  4179   000EF0  EF7D  F007         	goto	u2530
  4180   000EF4                     u2531:
  4181   000EF4  FFFF               	dw	65535	; assembler added errata NOP
  4182   000EF6  EF7F  F007         	goto	l3233
  4183   000EFA                     u2530:
  4184   000EFA                     l749:
  4185   000EFA  FFFF               	dw	65535	; assembler added errata NOP
  4186                           
  4187                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 371:   && (lint -> Ipin.pin != PIN1) &&
      +                           (lint -> Ipin.pin != PIN2)) ){;MCAL_layer/Interrupt/mcal_external_interrupt.c: 372:   r
      +                          et = (STD_ReturnType)(0x00);
  4188   000EFC  6A6C               	clrf	INT_INTx_check_access@ret^0,c
  4189   000EFE                     l3233:
  4190   000EFE  FFFF               	dw	65535	; assembler added errata NOP
  4191                           
  4192                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 374:  return ret;
  4193   000F00  506C               	movf	INT_INTx_check_access@ret^0,w,c
  4194   000F02  0012               	return		;funcret
  4195   000F04  FFFF               	dw	65535	; errata NOP
  4196   000F06                     __end_of_INT_INTx_check_access:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _GPIO_pin_direction_initialize *****************
  4200 ;; Defined at:
  4201 ;;		line 54 in file "MCAL_layer/GPIO/hal_gpio.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  _pin_config     1    4[COMRAM] PTR const struct .
  4204 ;;		 -> second_int(5), relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinc(4), 
  4205 ;;		 -> keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize
      +@lpin(4), 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  ret             1   10[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      unsigned char 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4217 ;;      Params:         1       0       0       0       0       0       0
  4218 ;;      Locals:         1       0       0       0       0       0       0
  4219 ;;      Temps:          5       0       0       0       0       0       0
  4220 ;;      Totals:         7       0       0       0       0       0       0
  4221 ;;Total ram usage:        7 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; Hardware stack levels required when called: 5
  4224 ;; This function calls:
  4225 ;;		_GPIO_check_access
  4226 ;; This function is called by:
  4227 ;;		_INT_INTx_initialize
  4228 ;;		_keypad_initialize
  4229 ;;		_btn_initialize
  4230 ;;		_GPIO_pin_initialize
  4231 ;;		_INT_RBx_initialize
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text12
  4236   000886                     __ptext12:
  4237                           	callstack 0
  4238   000886                     _GPIO_pin_direction_initialize:
  4239                           	callstack 0
  4240   000886  FFFF               	dw	65535	; assembler added errata NOP
  4241   000888                     
  4242                           ;MCAL_layer/GPIO/hal_gpio.c: 55:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4243   000888  0E01               	movlw	1
  4244   00088A  6E74               	movwf	GPIO_pin_direction_initialize@ret^0,c
  4245   00088C                     
  4246                           ;MCAL_layer/GPIO/hal_gpio.c: 56:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  4247   00088C  C06E  F06B         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  4248   000890  ECB1  F003         	call	_GPIO_check_access	;wreg free
  4249   000894  0900               	iorlw	0
  4250   000896  A4D8               	btfss	status,2,c
  4251   000898  EF50  F004         	goto	u2311
  4252   00089C  EF53  F004         	goto	u2310
  4253   0008A0                     u2311:
  4254   0008A0  FFFF               	dw	65535	; assembler added errata NOP
  4255   0008A2  EFB1  F004         	goto	l3113
  4256   0008A6                     u2310:
  4257   0008A6  FFFF               	dw	65535	; assembler added errata NOP
  4258   0008A8                     l3107:
  4259   0008A8  FFFF               	dw	65535	; assembler added errata NOP
  4260                           
  4261                           ;MCAL_layer/GPIO/hal_gpio.c: 57:   ret = (STD_ReturnType)(0x00);
  4262   0008AA  6A74               	clrf	GPIO_pin_direction_initialize@ret^0,c
  4263                           
  4264                           ;MCAL_layer/GPIO/hal_gpio.c: 58:  }
  4265   0008AC  EFCB  F004         	goto	l3115
  4266   0008B0                     l3109:
  4267   0008B0  FFFF               	dw	65535	; assembler added errata NOP
  4268                           
  4269                           ;MCAL_layer/GPIO/hal_gpio.c: 62:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  4270   0008B2  506E               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4271   0008B4  6ED9               	movwf	fsr2l,c
  4272   0008B6  6ADA               	clrf	fsr2h,c
  4273   0008B8  30DF               	rrcf	223,w,c
  4274   0008BA  32E8               	rrcf	wreg,f,c
  4275   0008BC  32E8               	rrcf	wreg,f,c
  4276   0008BE  0B07               	andlw	7
  4277   0008C0  6E6F               	movwf	??_GPIO_pin_direction_initialize^0,c
  4278   0008C2  0E01               	movlw	1
  4279   0008C4  6E70               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  4280   0008C6  2A6F               	incf	??_GPIO_pin_direction_initialize^0,f,c
  4281   0008C8  EF69  F004         	goto	u2324
  4282   0008CC                     u2325:
  4283   0008CC  FFFF               	dw	65535	; assembler added errata NOP
  4284   0008CE  90D8               	bcf	status,0,c
  4285   0008D0  3670               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  4286   0008D2                     u2324:
  4287   0008D2  FFFF               	dw	65535	; assembler added errata NOP
  4288   0008D4  2E6F               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  4289   0008D6  EF66  F004         	goto	u2325
  4290   0008DA  5070               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  4291   0008DC  0AFF               	xorlw	255
  4292   0008DE  6E71               	movwf	(??_GPIO_pin_direction_initialize+2)^0,c
  4293   0008E0  506E               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4294   0008E2  6ED9               	movwf	fsr2l,c
  4295   0008E4  6ADA               	clrf	fsr2h,c
  4296   0008E6  50DF               	movf	223,w,c
  4297   0008E8  0B07               	andlw	7
  4298   0008EA  0D02               	mullw	2
  4299   0008EC  50F3               	movf	243,w,c
  4300   0008EE  0F20               	addlw	low __TRIS_registers
  4301   0008F0  6ED9               	movwf	fsr2l,c
  4302   0008F2  6ADA               	clrf	fsr2h,c
  4303   0008F4  CFDE F072          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  4304   0008F8  CFDD F073          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  4305   0008FC  C072  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  4306   000900  C073  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  4307   000904  5071               	movf	(??_GPIO_pin_direction_initialize+2)^0,w,c
  4308   000906  16DF               	andwf	indf2,f,c
  4309                           
  4310                           ;MCAL_layer/GPIO/hal_gpio.c: 63:     break;
  4311   000908  EFCB  F004         	goto	l3115
  4312   00090C                     l3111:
  4313   00090C  FFFF               	dw	65535	; assembler added errata NOP
  4314                           
  4315                           ;MCAL_layer/GPIO/hal_gpio.c: 65:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  4316   00090E  506E               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4317   000910  6ED9               	movwf	fsr2l,c
  4318   000912  6ADA               	clrf	fsr2h,c
  4319   000914  30DF               	rrcf	223,w,c
  4320   000916  32E8               	rrcf	wreg,f,c
  4321   000918  32E8               	rrcf	wreg,f,c
  4322   00091A  0B07               	andlw	7
  4323   00091C  6E6F               	movwf	??_GPIO_pin_direction_initialize^0,c
  4324   00091E  0E01               	movlw	1
  4325   000920  6E70               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  4326   000922  2A6F               	incf	??_GPIO_pin_direction_initialize^0,f,c
  4327   000924  EF97  F004         	goto	u2334
  4328   000928                     u2335:
  4329   000928  FFFF               	dw	65535	; assembler added errata NOP
  4330   00092A  90D8               	bcf	status,0,c
  4331   00092C  3670               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  4332   00092E                     u2334:
  4333   00092E  FFFF               	dw	65535	; assembler added errata NOP
  4334   000930  2E6F               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  4335   000932  EF94  F004         	goto	u2335
  4336   000936  506E               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4337   000938  6ED9               	movwf	fsr2l,c
  4338   00093A  6ADA               	clrf	fsr2h,c
  4339   00093C  50DF               	movf	223,w,c
  4340   00093E  0B07               	andlw	7
  4341   000940  0D02               	mullw	2
  4342   000942  50F3               	movf	243,w,c
  4343   000944  0F20               	addlw	low __TRIS_registers
  4344   000946  6ED9               	movwf	fsr2l,c
  4345   000948  6ADA               	clrf	fsr2h,c
  4346   00094A  CFDE F071          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  4347   00094E  CFDD F072          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  4348   000952  C071  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  4349   000956  C072  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  4350   00095A  5070               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  4351   00095C  12DF               	iorwf	indf2,f,c
  4352                           
  4353                           ;MCAL_layer/GPIO/hal_gpio.c: 66:     break;
  4354   00095E  EFCB  F004         	goto	l3115
  4355   000962                     l3113:
  4356   000962  FFFF               	dw	65535	; assembler added errata NOP
  4357   000964  506E               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4358   000966  6ED9               	movwf	fsr2l,c
  4359   000968  6ADA               	clrf	fsr2h,c
  4360   00096A  BCDF               	btfsc	indf2,6,c
  4361   00096C  EFBA  F004         	goto	u2341
  4362   000970  EFBE  F004         	goto	u2340
  4363   000974                     u2341:
  4364   000974  FFFF               	dw	65535	; assembler added errata NOP
  4365   000976  0E01               	movlw	1
  4366   000978  EFC0  F004         	goto	u2346
  4367   00097C                     u2340:
  4368   00097C  FFFF               	dw	65535	; assembler added errata NOP
  4369   00097E  0E00               	movlw	0
  4370   000980                     u2346:
  4371   000980  FFFF               	dw	65535	; assembler added errata NOP
  4372                           
  4373                           ; Switch size 1, requested type "simple"
  4374                           ; Number of cases is 2, Range of values is 0 to 1
  4375                           ; switch strategies available:
  4376                           ; Name         Instructions Cycles
  4377                           ; simple_byte            7     4 (average)
  4378                           ;	Chosen strategy is simple_byte
  4379   000982  0A00               	xorlw	0	; case 0
  4380   000984  B4D8               	btfsc	status,2,c
  4381   000986  EF58  F004         	goto	l3109
  4382   00098A  0A01               	xorlw	1	; case 1
  4383   00098C  B4D8               	btfsc	status,2,c
  4384   00098E  EF86  F004         	goto	l3111
  4385   000992  EF54  F004         	goto	l3107
  4386   000996                     l3115:
  4387   000996  FFFF               	dw	65535	; assembler added errata NOP
  4388                           
  4389                           ;MCAL_layer/GPIO/hal_gpio.c: 71:  return ret;
  4390   000998  5074               	movf	GPIO_pin_direction_initialize@ret^0,w,c
  4391   00099A  0012               	return		;funcret
  4392   00099C  FFFF               	dw	65535	; errata NOP
  4393   00099E                     __end_of_GPIO_pin_direction_initialize:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _GPIO_check_access *****************
  4397 ;; Defined at:
  4398 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  4401 ;;		 -> second_int(5), relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), 
  4402 ;;		 -> LED_toggle@pin_local(1), LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), 
  4403 ;;		 -> keypad_read_number@lpinc(4), keypad_read_number@lpinr(4), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4)
      +, 
  4404 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  4405 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  4406 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  ret             1    3[COMRAM] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      unsigned char 
  4411 ;; Registers used:
  4412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4418 ;;      Params:         1       0       0       0       0       0       0
  4419 ;;      Locals:         1       0       0       0       0       0       0
  4420 ;;      Temps:          1       0       0       0       0       0       0
  4421 ;;      Totals:         3       0       0       0       0       0       0
  4422 ;;Total ram usage:        3 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 4
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_LED_on
  4429 ;;		_GPIO_pin_direction_initialize
  4430 ;;		_GPIO_pin_write_logic
  4431 ;;		_seven_segment_initialize
  4432 ;;		_dc_motor_initialize
  4433 ;;		_lcd_check_access
  4434 ;;		_LED_initialize
  4435 ;;		_LED_off
  4436 ;;		_LED_toggle
  4437 ;;		_btn_initialize
  4438 ;;		_btn_read_state
  4439 ;;		_relay_initialize
  4440 ;;		_relay_turn_on
  4441 ;;		_relay_turn_off
  4442 ;;		_GPIO_pin_initialize
  4443 ;;		_GPIO_pin_get_direction_status
  4444 ;;		_GPIO_pin_read_logic
  4445 ;;		_GPIO_pin_toggle_logic
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text13
  4450   000762                     __ptext13:
  4451                           	callstack 0
  4452   000762                     _GPIO_check_access:
  4453                           	callstack 0
  4454   000762  FFFF               	dw	65535	; assembler added errata NOP
  4455   000764                     
  4456                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4457   000764  0E01               	movlw	1
  4458   000766  6E6D               	movwf	GPIO_check_access@ret^0,c
  4459                           
  4460                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  4461   000768  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4462   00076A  B4D8               	btfsc	status,2,c
  4463   00076C  EFBA  F003         	goto	u2171
  4464   000770  EFBD  F003         	goto	u2170
  4465   000774                     u2171:
  4466   000774  FFFF               	dw	65535	; assembler added errata NOP
  4467   000776  EF3D  F004         	goto	l474
  4468   00077A                     u2170:
  4469   00077A  FFFF               	dw	65535	; assembler added errata NOP
  4470   00077C  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4471   00077E  6ED9               	movwf	fsr2l,c
  4472   000780  6ADA               	clrf	fsr2h,c
  4473   000782  50DF               	movf	223,w,c
  4474   000784  0B07               	andlw	7
  4475   000786  0900               	iorlw	0
  4476   000788  A4D8               	btfss	status,2,c
  4477   00078A  EFC9  F003         	goto	u2181
  4478   00078E  EFCC  F003         	goto	u2180
  4479   000792                     u2181:
  4480   000792  FFFF               	dw	65535	; assembler added errata NOP
  4481   000794  EFDD  F003         	goto	l3037
  4482   000798                     u2180:
  4483   000798  FFFF               	dw	65535	; assembler added errata NOP
  4484   00079A  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4485   00079C  6ED9               	movwf	fsr2l,c
  4486   00079E  6ADA               	clrf	fsr2h,c
  4487   0007A0  30DF               	rrcf	223,w,c
  4488   0007A2  32E8               	rrcf	wreg,f,c
  4489   0007A4  32E8               	rrcf	wreg,f,c
  4490   0007A6  0B07               	andlw	7
  4491   0007A8  0A07               	xorlw	7
  4492   0007AA  B4D8               	btfsc	status,2,c
  4493   0007AC  EFDA  F003         	goto	u2191
  4494   0007B0  EFDD  F003         	goto	u2190
  4495   0007B4                     u2191:
  4496   0007B4  FFFF               	dw	65535	; assembler added errata NOP
  4497   0007B6  EF3D  F004         	goto	l474
  4498   0007BA                     u2190:
  4499   0007BA                     l3037:
  4500   0007BA  FFFF               	dw	65535	; assembler added errata NOP
  4501   0007BC  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4502   0007BE  6ED9               	movwf	fsr2l,c
  4503   0007C0  6ADA               	clrf	fsr2h,c
  4504   0007C2  50DF               	movf	223,w,c
  4505   0007C4  0B07               	andlw	7
  4506   0007C6  06E8               	decf	wreg,f,c
  4507   0007C8  B4D8               	btfsc	status,2,c
  4508   0007CA  EFE9  F003         	goto	u2201
  4509   0007CE  EFEC  F003         	goto	u2200
  4510   0007D2                     u2201:
  4511   0007D2  FFFF               	dw	65535	; assembler added errata NOP
  4512   0007D4  EF0A  F004         	goto	l3043
  4513   0007D8                     u2200:
  4514   0007D8  FFFF               	dw	65535	; assembler added errata NOP
  4515   0007DA  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4516   0007DC  6ED9               	movwf	fsr2l,c
  4517   0007DE  6ADA               	clrf	fsr2h,c
  4518   0007E0  50DF               	movf	223,w,c
  4519   0007E2  0B07               	andlw	7
  4520   0007E4  0A02               	xorlw	2
  4521   0007E6  B4D8               	btfsc	status,2,c
  4522   0007E8  EFF8  F003         	goto	u2211
  4523   0007EC  EFFB  F003         	goto	u2210
  4524   0007F0                     u2211:
  4525   0007F0  FFFF               	dw	65535	; assembler added errata NOP
  4526   0007F2  EF0A  F004         	goto	l3043
  4527   0007F6                     u2210:
  4528   0007F6  FFFF               	dw	65535	; assembler added errata NOP
  4529   0007F8  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4530   0007FA  6ED9               	movwf	fsr2l,c
  4531   0007FC  6ADA               	clrf	fsr2h,c
  4532   0007FE  50DF               	movf	223,w,c
  4533   000800  0B07               	andlw	7
  4534   000802  0A03               	xorlw	3
  4535   000804  A4D8               	btfss	status,2,c
  4536   000806  EF07  F004         	goto	u2221
  4537   00080A  EF0A  F004         	goto	u2220
  4538   00080E                     u2221:
  4539   00080E  FFFF               	dw	65535	; assembler added errata NOP
  4540   000810  EF1C  F004         	goto	l3045
  4541   000814                     u2220:
  4542   000814                     l3043:
  4543   000814  FFFF               	dw	65535	; assembler added errata NOP
  4544   000816  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4545   000818  6ED9               	movwf	fsr2l,c
  4546   00081A  6ADA               	clrf	fsr2h,c
  4547   00081C  30DF               	rrcf	223,w,c
  4548   00081E  32E8               	rrcf	wreg,f,c
  4549   000820  32E8               	rrcf	wreg,f,c
  4550   000822  0B07               	andlw	7
  4551   000824  6E6C               	movwf	??_GPIO_check_access^0,c
  4552   000826  0E08               	movlw	8
  4553   000828  606C               	cpfslt	??_GPIO_check_access^0,c
  4554   00082A  EF19  F004         	goto	u2231
  4555   00082E  EF1C  F004         	goto	u2230
  4556   000832                     u2231:
  4557   000832  FFFF               	dw	65535	; assembler added errata NOP
  4558   000834  EF3D  F004         	goto	l474
  4559   000838                     u2230:
  4560   000838                     l3045:
  4561   000838  FFFF               	dw	65535	; assembler added errata NOP
  4562   00083A  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4563   00083C  6ED9               	movwf	fsr2l,c
  4564   00083E  6ADA               	clrf	fsr2h,c
  4565   000840  50DF               	movf	223,w,c
  4566   000842  0B07               	andlw	7
  4567   000844  0A04               	xorlw	4
  4568   000846  A4D8               	btfss	status,2,c
  4569   000848  EF28  F004         	goto	u2241
  4570   00084C  EF2B  F004         	goto	u2240
  4571   000850                     u2241:
  4572   000850  FFFF               	dw	65535	; assembler added errata NOP
  4573   000852  EF3F  F004         	goto	l3049
  4574   000856                     u2240:
  4575   000856  FFFF               	dw	65535	; assembler added errata NOP
  4576   000858  506B               	movf	GPIO_check_access@_pin_config^0,w,c
  4577   00085A  6ED9               	movwf	fsr2l,c
  4578   00085C  6ADA               	clrf	fsr2h,c
  4579   00085E  30DF               	rrcf	223,w,c
  4580   000860  32E8               	rrcf	wreg,f,c
  4581   000862  32E8               	rrcf	wreg,f,c
  4582   000864  0B07               	andlw	7
  4583   000866  6E6C               	movwf	??_GPIO_check_access^0,c
  4584   000868  0E02               	movlw	2
  4585   00086A  646C               	cpfsgt	??_GPIO_check_access^0,c
  4586   00086C  EF3A  F004         	goto	u2251
  4587   000870  EF3D  F004         	goto	u2250
  4588   000874                     u2251:
  4589   000874  FFFF               	dw	65535	; assembler added errata NOP
  4590   000876  EF3F  F004         	goto	l3049
  4591   00087A                     u2250:
  4592   00087A                     l474:
  4593   00087A  FFFF               	dw	65535	; assembler added errata NOP
  4594                           
  4595                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  4596   00087C  6A6D               	clrf	GPIO_check_access@ret^0,c
  4597   00087E                     l3049:
  4598   00087E  FFFF               	dw	65535	; assembler added errata NOP
  4599                           
  4600                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  4601   000880  506D               	movf	GPIO_check_access@ret^0,w,c
  4602   000882  0012               	return		;funcret
  4603   000884  FFFF               	dw	65535	; errata NOP
  4604   000886                     __end_of_GPIO_check_access:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function _InterruptManagerLow *****************
  4608 ;; Defined at:
  4609 ;;		line 19 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4623 ;;      Params:         0       0       0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0
  4625 ;;      Temps:          1       0       0       0       0       0       0
  4626 ;;      Totals:         1       0       0       0       0       0       0
  4627 ;;Total ram usage:        1 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 3
  4630 ;; This function calls:
  4631 ;;		_INT0_ISR
  4632 ;;		_INT1_ISR
  4633 ;;		_INT2_ISR
  4634 ;; This function is called by:
  4635 ;;		Interrupt level 1
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	intcodelo
  4640   000018                     __pintcodelo:
  4641                           	callstack 0
  4642   000018                     _InterruptManagerLow:
  4643                           	callstack 0
  4644   000018  FFFF               	dw	65535	; assembler added errata NOP
  4645                           
  4646                           ;incstack = 0
  4647   00001A  8079               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4648   00001C  CFE0 F06A          	movff	bsr,??_InterruptManagerLow
  4649   000020                     
  4650                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 20:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4651   000020  A2F2               	btfss	242,1,c	;volatile
  4652   000022  EF15  F000         	goto	i1u210_21
  4653   000026  EF18  F000         	goto	i1u210_20
  4654   00002A                     i1u210_21:
  4655   00002A  FFFF               	dw	65535	; assembler added errata NOP
  4656   00002C  EF24  F000         	goto	i1l2963
  4657   000030                     i1u210_20:
  4658   000030  FFFF               	dw	65535	; assembler added errata NOP
  4659   000032  A8F2               	btfss	242,4,c	;volatile
  4660   000034  EF1E  F000         	goto	i1u211_21
  4661   000038  EF21  F000         	goto	i1u211_20
  4662   00003C                     i1u211_21:
  4663   00003C  FFFF               	dw	65535	; assembler added errata NOP
  4664   00003E  EF24  F000         	goto	i1l2963
  4665   000042                     i1u211_20:
  4666   000042  FFFF               	dw	65535	; assembler added errata NOP
  4667   000044                     
  4668                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 21:         INT0_ISR();
  4669   000044  EC5A  F009         	call	_INT0_ISR	;wreg free
  4670   000048                     i1l2963:
  4671   000048  FFFF               	dw	65535	; assembler added errata NOP
  4672                           
  4673                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 22:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4674   00004A  A0F0               	btfss	240,0,c	;volatile
  4675   00004C  EF2A  F000         	goto	i1u212_21
  4676   000050  EF2D  F000         	goto	i1u212_20
  4677   000054                     i1u212_21:
  4678   000054  FFFF               	dw	65535	; assembler added errata NOP
  4679   000056  EF39  F000         	goto	i1l2969
  4680   00005A                     i1u212_20:
  4681   00005A  FFFF               	dw	65535	; assembler added errata NOP
  4682   00005C  A6F0               	btfss	240,3,c	;volatile
  4683   00005E  EF33  F000         	goto	i1u213_21
  4684   000062  EF36  F000         	goto	i1u213_20
  4685   000066                     i1u213_21:
  4686   000066  FFFF               	dw	65535	; assembler added errata NOP
  4687   000068  EF39  F000         	goto	i1l2969
  4688   00006C                     i1u213_20:
  4689   00006C  FFFF               	dw	65535	; assembler added errata NOP
  4690   00006E                     
  4691                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 23:         INT1_ISR();
  4692   00006E  EC56  F009         	call	_INT1_ISR	;wreg free
  4693   000072                     i1l2969:
  4694   000072  FFFF               	dw	65535	; assembler added errata NOP
  4695                           
  4696                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 24:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  4697   000074  A2F0               	btfss	240,1,c	;volatile
  4698   000076  EF3F  F000         	goto	i1u214_21
  4699   00007A  EF42  F000         	goto	i1u214_20
  4700   00007E                     i1u214_21:
  4701   00007E  FFFF               	dw	65535	; assembler added errata NOP
  4702   000080  EF4E  F000         	goto	i1l809
  4703   000084                     i1u214_20:
  4704   000084  FFFF               	dw	65535	; assembler added errata NOP
  4705   000086  A8F0               	btfss	240,4,c	;volatile
  4706   000088  EF48  F000         	goto	i1u215_21
  4707   00008C  EF4B  F000         	goto	i1u215_20
  4708   000090                     i1u215_21:
  4709   000090  FFFF               	dw	65535	; assembler added errata NOP
  4710   000092  EF4E  F000         	goto	i1l809
  4711   000096                     i1u215_20:
  4712   000096  FFFF               	dw	65535	; assembler added errata NOP
  4713   000098                     
  4714                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 25:         INT2_ISR();
  4715   000098  EC52  F009         	call	_INT2_ISR	;wreg free
  4716   00009C                     i1l809:
  4717   00009C  FFFF               	dw	65535	; assembler added errata NOP
  4718   00009E  C06A  FFE0         	movff	??_InterruptManagerLow,bsr
  4719   0000A2  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4720   0000A4  0010               	retfie	
  4721   0000A6  FFFF               	dw	65535	; errata NOP
  4722   0000A8                     __end_of_InterruptManagerLow:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _INT2_ISR *****************
  4726 ;; Defined at:
  4727 ;;		line 25 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		None
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4741 ;;      Params:         0       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 2
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_InterruptManagerLow
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text15
  4756   0012A4                     __ptext15:
  4757                           	callstack 0
  4758   0012A4                     _INT2_ISR:
  4759                           	callstack 0
  4760   0012A4  FFFF               	dw	65535	; assembler added errata NOP
  4761   0012A6                     
  4762                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 26:  INTCON3bits.INT2IF=0;
  4763   0012A6  92F0               	bcf	240,1,c	;volatile
  4764   0012A8  0012               	return		;funcret
  4765   0012AA  FFFF               	dw	65535	; errata NOP
  4766   0012AC                     __end_of_INT2_ISR:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _INT1_ISR *****************
  4770 ;; Defined at:
  4771 ;;		line 20 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		None
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4785 ;;      Params:         0       0       0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0
  4788 ;;      Totals:         0       0       0       0       0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 2
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_InterruptManagerLow
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text16
  4800   0012AC                     __ptext16:
  4801                           	callstack 0
  4802   0012AC                     _INT1_ISR:
  4803                           	callstack 0
  4804   0012AC  FFFF               	dw	65535	; assembler added errata NOP
  4805   0012AE                     
  4806                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 21:  INTCON3bits.INT1IF=0;
  4807   0012AE  90F0               	bcf	240,0,c	;volatile
  4808   0012B0  0012               	return		;funcret
  4809   0012B2  FFFF               	dw	65535	; errata NOP
  4810   0012B4                     __end_of_INT1_ISR:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function _INT0_ISR *****************
  4814 ;; Defined at:
  4815 ;;		line 15 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		None
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4829 ;;      Params:         0       0       0       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0
  4832 ;;      Totals:         0       0       0       0       0       0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; Hardware stack levels required when called: 2
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_InterruptManagerLow
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text17
  4844   0012B4                     __ptext17:
  4845                           	callstack 0
  4846   0012B4                     _INT0_ISR:
  4847                           	callstack 0
  4848   0012B4  FFFF               	dw	65535	; assembler added errata NOP
  4849   0012B6                     
  4850                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 16:  INTCONbits.INT0IF=0;
  4851   0012B6  92F2               	bcf	242,1,c	;volatile
  4852   0012B8  0012               	return		;funcret
  4853   0012BA  FFFF               	dw	65535	; errata NOP
  4854   0012BC                     __end_of_INT0_ISR:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _InterruptManager *****************
  4858 ;; Defined at:
  4859 ;;		line 9 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4873 ;;      Params:         0       0       0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0
  4876 ;;      Totals:         0       0       0       0       0       0       0
  4877 ;;Total ram usage:        0 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 1
  4880 ;; This function calls:
  4881 ;;		_RB_ISR
  4882 ;;		i2_INT0_ISR
  4883 ;;		i2_INT1_ISR
  4884 ;;		i2_INT2_ISR
  4885 ;; This function is called by:
  4886 ;;		Interrupt level 2
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	intcode
  4891   000008                     __pintcode:
  4892                           	callstack 0
  4893   000008                     _InterruptManager:
  4894                           	callstack 0
  4895   000008  FFFF               	dw	65535	; assembler added errata NOP
  4896                           
  4897                           ;incstack = 0
  4898   00000A  8279               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4899   00000C  EF83  F007         	goto	int_func
  4900                           
  4901                           	psect	intcode_body
  4902   000F06                     __pintcode_body:
  4903                           	callstack 24
  4904   000F06                     int_func:
  4905                           	callstack 24
  4906   000F06  FFFF               	dw	65535	; errata NOP
  4907   000F08                     
  4908                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 10:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4909   000F08  A2F2               	btfss	242,1,c	;volatile
  4910   000F0A  EF89  F007         	goto	i2u202_41
  4911   000F0E  EF8C  F007         	goto	i2u202_40
  4912   000F12                     i2u202_41:
  4913   000F12  FFFF               	dw	65535	; assembler added errata NOP
  4914   000F14  EF98  F007         	goto	i2l2939
  4915   000F18                     i2u202_40:
  4916   000F18  FFFF               	dw	65535	; assembler added errata NOP
  4917   000F1A  A8F2               	btfss	242,4,c	;volatile
  4918   000F1C  EF92  F007         	goto	i2u203_41
  4919   000F20  EF95  F007         	goto	i2u203_40
  4920   000F24                     i2u203_41:
  4921   000F24  FFFF               	dw	65535	; assembler added errata NOP
  4922   000F26  EF98  F007         	goto	i2l2939
  4923   000F2A                     i2u203_40:
  4924   000F2A  FFFF               	dw	65535	; assembler added errata NOP
  4925   000F2C                     
  4926                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 11:         INT0_ISR();
  4927   000F2C  EC66  F009         	call	i2_INT0_ISR	;wreg free
  4928   000F30                     i2l2939:
  4929   000F30  FFFF               	dw	65535	; assembler added errata NOP
  4930                           
  4931                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 12:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4932   000F32  A0F0               	btfss	240,0,c	;volatile
  4933   000F34  EF9E  F007         	goto	i2u204_41
  4934   000F38  EFA1  F007         	goto	i2u204_40
  4935   000F3C                     i2u204_41:
  4936   000F3C  FFFF               	dw	65535	; assembler added errata NOP
  4937   000F3E  EFAD  F007         	goto	i2l2945
  4938   000F42                     i2u204_40:
  4939   000F42  FFFF               	dw	65535	; assembler added errata NOP
  4940   000F44  A6F0               	btfss	240,3,c	;volatile
  4941   000F46  EFA7  F007         	goto	i2u205_41
  4942   000F4A  EFAA  F007         	goto	i2u205_40
  4943   000F4E                     i2u205_41:
  4944   000F4E  FFFF               	dw	65535	; assembler added errata NOP
  4945   000F50  EFAD  F007         	goto	i2l2945
  4946   000F54                     i2u205_40:
  4947   000F54  FFFF               	dw	65535	; assembler added errata NOP
  4948   000F56                     
  4949                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 13:         INT1_ISR();
  4950   000F56  EC62  F009         	call	i2_INT1_ISR	;wreg free
  4951   000F5A                     i2l2945:
  4952   000F5A  FFFF               	dw	65535	; assembler added errata NOP
  4953                           
  4954                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 14:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  4955   000F5C  A2F0               	btfss	240,1,c	;volatile
  4956   000F5E  EFB3  F007         	goto	i2u206_41
  4957   000F62  EFB6  F007         	goto	i2u206_40
  4958   000F66                     i2u206_41:
  4959   000F66  FFFF               	dw	65535	; assembler added errata NOP
  4960   000F68  EFC2  F007         	goto	i2l2951
  4961   000F6C                     i2u206_40:
  4962   000F6C  FFFF               	dw	65535	; assembler added errata NOP
  4963   000F6E  A8F0               	btfss	240,4,c	;volatile
  4964   000F70  EFBC  F007         	goto	i2u207_41
  4965   000F74  EFBF  F007         	goto	i2u207_40
  4966   000F78                     i2u207_41:
  4967   000F78  FFFF               	dw	65535	; assembler added errata NOP
  4968   000F7A  EFC2  F007         	goto	i2l2951
  4969   000F7E                     i2u207_40:
  4970   000F7E  FFFF               	dw	65535	; assembler added errata NOP
  4971   000F80                     
  4972                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 15:         INT2_ISR();
  4973   000F80  EC5E  F009         	call	i2_INT2_ISR	;wreg free
  4974   000F84                     i2l2951:
  4975   000F84  FFFF               	dw	65535	; assembler added errata NOP
  4976                           
  4977                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 16:  if(INTCONbits.RBIF == 1 && INTCONbi
      +                          ts.RBIE == 1)
  4978   000F86  A0F2               	btfss	242,0,c	;volatile
  4979   000F88  EFC8  F007         	goto	i2u208_41
  4980   000F8C  EFCB  F007         	goto	i2u208_40
  4981   000F90                     i2u208_41:
  4982   000F90  FFFF               	dw	65535	; assembler added errata NOP
  4983   000F92  EFD7  F007         	goto	i2l801
  4984   000F96                     i2u208_40:
  4985   000F96  FFFF               	dw	65535	; assembler added errata NOP
  4986   000F98  A6F2               	btfss	242,3,c	;volatile
  4987   000F9A  EFD1  F007         	goto	i2u209_41
  4988   000F9E  EFD4  F007         	goto	i2u209_40
  4989   000FA2                     i2u209_41:
  4990   000FA2  FFFF               	dw	65535	; assembler added errata NOP
  4991   000FA4  EFD7  F007         	goto	i2l801
  4992   000FA8                     i2u209_40:
  4993   000FA8  FFFF               	dw	65535	; assembler added errata NOP
  4994   000FAA                     
  4995                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 17:   RB_ISR();
  4996   000FAA  EC6A  F009         	call	_RB_ISR	;wreg free
  4997   000FAE                     i2l801:
  4998   000FAE  FFFF               	dw	65535	; assembler added errata NOP
  4999   000FB0  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5000   000FB2  0011               	retfie		f
  5001   000FB4  FFFF               	dw	65535	; errata NOP
  5002   000FB6                     __end_of_InterruptManager:
  5003                           	callstack 0
  5004                           
  5005 ;; *************** function i2_INT2_ISR *****************
  5006 ;; Defined at:
  5007 ;;		line 25 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		None
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5021 ;;      Params:         0       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_InterruptManager
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text19
  5035   0012BC                     __ptext19:
  5036                           	callstack 0
  5037   0012BC                     i2_INT2_ISR:
  5038                           	callstack 0
  5039   0012BC  FFFF               	dw	65535	; assembler added errata NOP
  5040   0012BE                     
  5041                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 26:  INTCON3bits.INT2IF=0;
  5042   0012BE  92F0               	bcf	240,1,c	;volatile
  5043   0012C0  0012               	return		;funcret
  5044   0012C2  FFFF               	dw	65535	; errata NOP
  5045   0012C4                     __end_ofi2_INT2_ISR:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function i2_INT1_ISR *****************
  5049 ;; Defined at:
  5050 ;;		line 20 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		None
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5064 ;;      Params:         0       0       0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0
  5067 ;;      Totals:         0       0       0       0       0       0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_InterruptManager
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text20
  5078   0012C4                     __ptext20:
  5079                           	callstack 0
  5080   0012C4                     i2_INT1_ISR:
  5081                           	callstack 0
  5082   0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5083   0012C6                     
  5084                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 21:  INTCON3bits.INT1IF=0;
  5085   0012C6  90F0               	bcf	240,0,c	;volatile
  5086   0012C8  0012               	return		;funcret
  5087   0012CA  FFFF               	dw	65535	; errata NOP
  5088   0012CC                     __end_ofi2_INT1_ISR:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function i2_INT0_ISR *****************
  5092 ;; Defined at:
  5093 ;;		line 15 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		None
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5107 ;;      Params:         0       0       0       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_InterruptManager
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text21
  5121   0012CC                     __ptext21:
  5122                           	callstack 0
  5123   0012CC                     i2_INT0_ISR:
  5124                           	callstack 0
  5125   0012CC  FFFF               	dw	65535	; assembler added errata NOP
  5126   0012CE                     
  5127                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 16:  INTCONbits.INT0IF=0;
  5128   0012CE  92F2               	bcf	242,1,c	;volatile
  5129   0012D0  0012               	return		;funcret
  5130   0012D2  FFFF               	dw	65535	; errata NOP
  5131   0012D4                     __end_ofi2_INT0_ISR:
  5132                           	callstack 0
  5133                           
  5134 ;; *************** function _RB_ISR *****************
  5135 ;; Defined at:
  5136 ;;		line 30 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		None
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5150 ;;      Params:         0       0       0       0       0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_InterruptManager
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text22
  5164   0012D4                     __ptext22:
  5165                           	callstack 0
  5166   0012D4                     _RB_ISR:
  5167                           	callstack 0
  5168   0012D4  FFFF               	dw	65535	; assembler added errata NOP
  5169   0012D6                     
  5170                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 31:  INTCONbits.RBIF=0;
  5171   0012D6  90F2               	bcf	242,0,c	;volatile
  5172   0012D8  0012               	return		;funcret
  5173   0012DA  FFFF               	dw	65535	; errata NOP
  5174   0012DC                     __end_of_RB_ISR:
  5175                           	callstack 0
  5176                           
  5177                           	psect	rparam
  5178   000001                     ___rparam_used  equ	1
  5179   000000                     ___param_bank   equ	0
  5180   000000                     __Lparam        equ	__Lrparam
  5181   000000                     __Hparam        equ	__Hrparam
  5182                           
  5183                           	psect	temp
  5184   000079                     btemp:
  5185                           	callstack 0
  5186   000079                     	ds	1
  5187   000079                     int$flags       set	btemp
  5188   00007A                     wtemp8          set	btemp+1
  5189   00007A                     ttemp5          set	btemp+1
  5190   00007D                     ttemp6          set	btemp+4
  5191   000081                     ttemp7          set	btemp+8
  5192                           
  5193                           	psect	config
  5194                           
  5195                           ; Padding undefined space
  5196   300000                     	org	3145728
  5197   300000  FF                 	db	255
  5198                           
  5199                           ;Config register CONFIG1H @ 0x300001
  5200                           ;	Oscillator Selection bits
  5201                           ;	OSC = HS, HS oscillator
  5202                           ;	Oscillator System Clock Switch Enable bit
  5203                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  5204   300001                     	org	3145729
  5205   300001  22                 	db	34
  5206                           
  5207                           ;Config register CONFIG2L @ 0x300002
  5208                           ;	Power-up Timer Enable bit
  5209                           ;	PWRT = OFF, PWRT disabled
  5210                           ;	Brown-out Reset Enable bit
  5211                           ;	BOR = OFF, Brown-out Reset disabled
  5212                           ;	Brown-out Reset Voltage bits
  5213                           ;	BORV = 20, VBOR set to 2.0V
  5214   300002                     	org	3145730
  5215   300002  0D                 	db	13
  5216                           
  5217                           ;Config register CONFIG2H @ 0x300003
  5218                           ;	Watchdog Timer Enable bit
  5219                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5220                           ;	Watchdog Timer Postscale Select bits
  5221                           ;	WDTPS = 128, 1:128
  5222   300003                     	org	3145731
  5223   300003  0E                 	db	14
  5224                           
  5225                           ; Padding undefined space
  5226   300004                     	org	3145732
  5227   300004  FF                 	db	255
  5228                           
  5229                           ;Config register CONFIG3H @ 0x300005
  5230                           ;	CCP2 Mux bit
  5231                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  5232   300005                     	org	3145733
  5233   300005  01                 	db	1
  5234                           
  5235                           ;Config register CONFIG4L @ 0x300006
  5236                           ;	Stack Full/Underflow Reset Enable bit
  5237                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  5238                           ;	Low Voltage ICSP Enable bit
  5239                           ;	LVP = OFF, Low Voltage ICSP disabled
  5240                           ;	Background Debugger Enable bit
  5241                           ;	DEBUG = 0x1, unprogrammed default
  5242   300006                     	org	3145734
  5243   300006  81                 	db	129
  5244                           
  5245                           ; Padding undefined space
  5246   300007                     	org	3145735
  5247   300007  FF                 	db	255
  5248                           
  5249                           ;Config register CONFIG5L @ 0x300008
  5250                           ;	Code Protection bit
  5251                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  5252                           ;	Code Protection bit
  5253                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  5254                           ;	Code Protection bit
  5255                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  5256                           ;	Code Protection bit
  5257                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  5258   300008                     	org	3145736
  5259   300008  0F                 	db	15
  5260                           
  5261                           ;Config register CONFIG5H @ 0x300009
  5262                           ;	Boot Block Code Protection bit
  5263                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  5264                           ;	Data EEPROM Code Protection bit
  5265                           ;	CPD = OFF, Data EEPROM not code protected
  5266   300009                     	org	3145737
  5267   300009  C0                 	db	192
  5268                           
  5269                           ;Config register CONFIG6L @ 0x30000A
  5270                           ;	Write Protection bit
  5271                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  5272                           ;	Write Protection bit
  5273                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  5274                           ;	Write Protection bit
  5275                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  5276                           ;	Write Protection bit
  5277                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  5278   30000A                     	org	3145738
  5279   30000A  0F                 	db	15
  5280                           
  5281                           ;Config register CONFIG6H @ 0x30000B
  5282                           ;	Configuration Register Write Protection bit
  5283                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  5284                           ;	Boot Block Write Protection bit
  5285                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  5286                           ;	Data EEPROM Write Protection bit
  5287                           ;	WRTD = OFF, Data EEPROM not write protected
  5288   30000B                     	org	3145739
  5289   30000B  E0                 	db	224
  5290                           
  5291                           ;Config register CONFIG7L @ 0x30000C
  5292                           ;	Table Read Protection bit
  5293                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  5294                           ;	Table Read Protection bit
  5295                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  5296                           ;	Table Read Protection bit
  5297                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  5298                           ;	Table Read Protection bit
  5299                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  5300   30000C                     	org	3145740
  5301   30000C  0F                 	db	15
  5302                           
  5303                           ;Config register CONFIG7H @ 0x30000D
  5304                           ;	Boot Block Table Read Protection bit
  5305                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  5306   30000D                     	org	3145741
  5307   30000D  40                 	db	64
  5308                           tosu	equ	0xFFF
  5309                           tosh	equ	0xFFE
  5310                           tosl	equ	0xFFD
  5311                           stkptr	equ	0xFFC
  5312                           pclatu	equ	0xFFB
  5313                           pclath	equ	0xFFA
  5314                           pcl	equ	0xFF9
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           indf0	equ	0xFEF
  5322                           postinc0	equ	0xFEE
  5323                           postdec0	equ	0xFED
  5324                           preinc0	equ	0xFEC
  5325                           plusw0	equ	0xFEB
  5326                           fsr0h	equ	0xFEA
  5327                           fsr0l	equ	0xFE9
  5328                           wreg	equ	0xFE8
  5329                           indf1	equ	0xFE7
  5330                           postinc1	equ	0xFE6
  5331                           postdec1	equ	0xFE5
  5332                           preinc1	equ	0xFE4
  5333                           plusw1	equ	0xFE3
  5334                           fsr1h	equ	0xFE2
  5335                           fsr1l	equ	0xFE1
  5336                           bsr	equ	0xFE0
  5337                           indf2	equ	0xFDF
  5338                           postinc2	equ	0xFDE
  5339                           postdec2	equ	0xFDD
  5340                           preinc2	equ	0xFDC
  5341                           plusw2	equ	0xFDB
  5342                           fsr2h	equ	0xFDA
  5343                           fsr2l	equ	0xFD9
  5344                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        83
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15     120
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    first_int$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(COMRAM[1]), LED_toggle@pin_local(COMRAM[1]), 
		 -> relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), second_int(COMRAM[5]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), second_int(COMRAM[5]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    INT0_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_check_access@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_clear_flag@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_disable@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_edge_initialize@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_edge_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_enable@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_enable@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_get_index@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_get_index@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_initialize@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_priority_initialize@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_priority_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_set_callback_routine@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_set_callback_routine@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_priority_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LED_on@led	PTR struct . size(1) Largest target is 1
		 -> LED_NOK(COMRAM[1]), LED_OK(COMRAM[1]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    RB_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1056$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1108$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2051$buffer	PTR unsigned char  size(2) Largest target is 0

    S2051$source	PTR const unsigned char  size(2) Largest target is 0

    second_int$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_LED_on
    _LED_on->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _INT_INTx_initialize->_GPIO_pin_direction_initialize
    _INT_INTx_set_callback_routine->_INT_INTx_get_index
    _INT_INTx_priority_initialize->_INT_INTx_get_index
    _INT_INTx_enable->_INT_INTx_get_index
    _INT_INTx_edge_initialize->_INT_INTx_get_index
    _INT_INTx_disable->_INT_INTx_get_index
    _INT_INTx_clear_flag->_INT_INTx_get_index
    _GPIO_pin_direction_initialize->_GPIO_check_access

Critical Paths under _InterruptManagerLow in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2928
                _INT_INTx_initialize
                             _LED_on
 ---------------------------------------------------------------------------------
 (1) _LED_on                                               4     3      1     859
                                             12 COMRAM     3     2      1
                  _GPIO_check_access
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_write_logic                                 8     6      2     455
                                              4 COMRAM     8     6      2
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (1) _INT_INTx_initialize                                  3     2      1    2068
                                             11 COMRAM     3     2      1
      _GPIO_pin_direction_initialize
              _INT_INTx_check_access
                _INT_INTx_clear_flag
                   _INT_INTx_disable
           _INT_INTx_edge_initialize
                    _INT_INTx_enable
       _INT_INTx_priority_initialize
      _INT_INTx_set_callback_routine
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_set_callback_routine                        5     4      1     260
                                              3 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_priority_initialize                         5     4      1     218
                                              3 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_enable                                      5     4      1     216
                                              3 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_edge_initialize                             5     4      1     241
                                              3 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_disable                                     5     4      1     172
                                              3 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_clear_flag                                  5     4      1     172
                                              3 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (3) _INT_INTx_get_index                                   2     1      1      78
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_check_access                                2     1      1     135
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_direction_initialize                        7     6      1     406
                                              4 COMRAM     7     6      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (3) _GPIO_check_access                                    3     2      1     244
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManagerLow                                  1     1      0       0
                                              0 COMRAM     1     1      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManager                                     0     0      0       0
                             _RB_ISR
                         i2_INT0_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
 ---------------------------------------------------------------------------------
 (7) i2_INT2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_INT1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_INT0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _RB_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_INTx_initialize
     _GPIO_pin_direction_initialize
       _GPIO_check_access
     _INT_INTx_check_access
     _INT_INTx_clear_flag
       _INT_INTx_get_index
     _INT_INTx_disable
       _INT_INTx_get_index
     _INT_INTx_edge_initialize
       _INT_INTx_get_index
     _INT_INTx_enable
       _INT_INTx_get_index
     _INT_INTx_priority_initialize
       _INT_INTx_get_index
     _INT_INTx_set_callback_routine
       _INT_INTx_get_index
   _LED_on
     _GPIO_check_access
     _GPIO_pin_write_logic
       _GPIO_check_access

 _InterruptManagerLow (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR

 _InterruptManager (ROOT)
   _RB_ISR
   i2_INT0_ISR
   i2_INT1_ISR
   i2_INT2_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     15     120     95.2%
BITBIGSFRllh        70      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRh          15      0       0      0.0%
BITBIGSFRlll         4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     120      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Apr 25 14:26:10 2025

                                         ??_InterruptManager 006A  
                                                          _i 004A  
                                                          _j 0060  
                                            LED_toggle@F2885 0065  
                                                         bsr 0FE0  
                                      ??_InterruptManagerLow 006A  
                                 __end_of_INT_INTx_get_index 11D8  
                                                        l312 0FD2  
                                                        l318 1048  
                                                        l514 0BC0  
                                                        l622 09D6  
                                                        l640 0C58  
                                                        l624 09CE  
                                                        l625 0AAA  
                                                        l482 0882  
                                                        l474 087A  
                                                        l730 06E0  
                                                        l722 0690  
                                                        l634 0BF6  
                                                        l651 1088  
                                                        l715 0648  
                                                        l643 0C9E  
                                                        l652 1090  
                                                        l724 0698  
                                                        l636 0C00  
                                                        l628 0AAE  
                                                        l741 1114  
                                                        l733 075E  
                                                        l717 0650  
                                                        l637 0C28  
                                                        l750 0F02  
                                                        l742 111C  
                                                        l654 10D6  
                                                        l639 0C30  
                                                        l744 1162  
                                                        l728 06D8  
                                                        l497 099A  
                                                        l649 1080  
                                                        l842 1260  
                                                        l739 110C  
                                                        l780 11D4  
                                                        l692 0D08  
                                                        l749 0EFA  
                                                        l694 0D10  
                                                        l686 0CD6  
                                                        l775 1184  
                                                        l679 0CC4  
                                                        l688 0CDE  
                                                        l697 0D78  
                                                        l769 0E4A  
                              ?_INT_INTx_priority_initialize 006D  
                                                        wreg 0FE8  
                                      relay_initialize@F2865 0064  
                                INT_INTx_edge_initialize@ind 0070  
                                INT_INTx_edge_initialize@ret 0071  
                                                       l3031 0764  
                                                       l3111 090C  
                                                       l3103 0888  
                                                       l3041 07F8  
                                                       l3033 077C  
                                                       l3113 0962  
                                                       l3105 088C  
                                                       l3043 0814  
                                                       l3035 079A  
                                                       l3115 0996  
                                                       l3107 08A8  
                                                       l3045 0838  
                                                       l3037 07BA  
                                                       l3109 08B0  
                                                       l3047 0858  
                                                       l3039 07DA  
                                                       l3231 0ED6  
                                                       l3223 0E50  
                                                       l3071 118C  
                                                       l3311 0CBC  
                                                       l3049 087E  
                                                       l3233 0EFE  
                                                       l3225 0E68  
                                                       l3073 1196  
                                                       l3065 1168  
                                                       l3241 1068  
                                                       l4201 0708  
                                                       l3321 0D18  
                                                       l3313 0CC8  
                                                       l3227 0E8A  
                                                       l3067 1168  
                                                       l3243 1070  
                                                       l4203 073A  
                                                       l3307 0CA4  
                                                       l3091 0B38  
                                                       l3083 0AB4  
                                                       l3229 0EB0  
                                                       l3069 117C  
                                                       l3077 11A0  
                                                       l3261 10F4  
                                                       l4205 10B2  
                                                       l3237 1050  
                                                       l3341 0638  
                                                       l3317 0CE6  
                                                       l3325 0D3A  
                                                       l3309 0CA8  
                                                       l3093 0B8E  
                                                       l3085 0AB8  
                                                       l4141 1256  
                                                       l3079 11D0  
                                                       l4207 113E  
                                                       l3263 10FC  
                                                       l3247 1098  
                                                       l3239 1054  
                                                       l3335 0618  
                                                       l3327 0D74  
                                                       l3095 0BBC  
                                                       l3087 0AD4  
                                                       l4135 122C  
                                                       l3257 10DC  
                                                       l3249 10D2  
                                                       l3353 06E8  
                                                       l3345 0658  
                                                       l3337 061C  
                                                       l3281 0D96  
                                                       l3089 0ADC  
                                                       l3521 100E  
                                                       l4137 122C  
                                                       l3267 1124  
                                                       l3259 10E0  
                                                       l3339 0630  
                                                       l3291 0DE4  
                                                       l3283 0D9E  
                                                       l3523 1010  
                                                       l3515 0FB8  
                                                       l4139 124A  
                                                       l3269 115E  
                                                       l3349 06A0  
                                                       l3357 0720  
                                                       l3381 0BCA  
                                                       l3293 0DF8  
                                                       l3277 0D7E  
                                                       l3525 1020  
                                                       l3517 0FCC  
                                                       l3359 075A  
                                                       l3391 0C34  
                                                       l3383 0BDE  
                                                       l4191 0E26  
                                                       l3287 0DC0  
                                                       l3279 0D82  
                                                       l3551 09F6  
                                                       l3527 103C  
                                                       l3519 0FD8  
                                                       l3393 0C52  
                                                       l3385 0BE6  
                                                       l4193 0D54  
                                                       l3289 0DD0  
                                                       l3297 0E0C  
                                                       l3561 0A84  
                                                       l3553 0A12  
                                                       l3545 09A0  
                                                       l4195 0C7A  
                                                       l3387 0C04  
                                                       l3379 0BC6  
                                                       l3299 0E46  
                                                       l3563 0AA0  
                                                       l3555 0A30  
                                                       l3547 09B4  
                                                       l4197 0678  
                                                       l3389 0C22  
                                                       l3397 0C60  
                                                       l3557 0A4C  
                                                       l3565 0AA4  
                                                       l3549 09DA  
                                                       l4189 0BA4  
                                                       l4199 06C0  
                                                       l3399 0C9A  
                                                       l3559 0A68  
                                                       STR_1 0611  
                                                       _LCD1 0001  
                                                       u2200 07D8  
                                                       u2201 07D2  
                                                       u2210 07F6  
                                                       u2211 07F0  
                                                       u2220 0814  
                                                       u2221 080E  
                                                       _LATA 0F89  
                                                       u2230 0838  
                                                       u2310 08A6  
                                                       _LATB 0F8A  
                                                       u2231 0832  
                                                       u2311 08A0  
                                                       _LATC 0F8B  
                                                       u2240 0856  
                                                       u2304 0B5A  
                                                       _LATD 0F8C  
                                                       u2241 0850  
                                                       u2305 0B54  
                                                       _LATE 0F8D  
                                                       u2250 087A  
                                                       u2170 077A  
                                                       u2251 0874  
                                                       u2171 0774  
                                                       u2180 0798  
                                                       u2340 097C  
                                                       u2324 08D2  
                                                       u2500 0E88  
                                                       u2181 0792  
                                                       u2341 0974  
                                                       u2325 08CC  
                                                       u2501 0E82  
                                                       u2190 07BA  
                                                       u2334 092E  
                                                       u2510 0EAE  
                                                       u2270 117A  
                                                       u2191 07B4  
                                                       u2335 0928  
                                                       u2511 0EA8  
                                                       u2271 1174  
                                                       u2520 0ED4  
                                                       u2600 0BDC  
                                                       u2280 0AD2  
                                                       u2521 0ECE  
                                                       u2601 0BD6  
                                                       u2281 0ACC  
                                                       u2346 0980  
                                                       u2530 0EFA  
                                                       u2610 0C20  
                                                       u2531 0EF4  
                                                       u2611 0C1A  
                                                       u2540 1066  
                                                       u2620 0C50  
                                                       u2541 1060  
                                                       u2621 0C4A  
                                                       u2550 10F2  
                                                       u2294 0AFE  
                                                       u2551 10EC  
                                                       u2295 0AF8  
                                                       u2560 0D94  
                                                       u2561 0D8E  
                                                       u2490 0E66  
                                                       u2570 0DBA  
                                                       u2810 103A  
                                                       u2491 0E60  
                                                       u2571 0DB4  
                                                       u2811 1034  
                                                       u2580 0CBA  
                                                       u2900 0A66  
                                                       u2581 0CB4  
                                                       u2901 0A60  
                                                       u2805 101E  
                                                       u2590 062E  
                                                       u2910 0A82  
                                                       u2591 0628  
                                                       u2911 0A7C  
                                                       u2807 1020  
                                                       u2920 0A9E  
                                                       u2840 09B2  
                                                       u2921 0A98  
                                                       u2841 09AC  
                                                       u2850 09CE  
                                                       u3730 1248  
                                                       u2851 09C8  
                                                       u3731 1242  
                                                       u2860 09F4  
                                                       u2861 09EE  
                                                       u2870 0A10  
                                                       u2790 0FCA  
                                                       u2871 0A0A  
                                                       u2791 0FC4  
                                                       u2880 0A2E  
                                                       u2881 0A28  
                                                       u2890 0A4A  
                                                       u2891 0A44  
                                                       _btn1 0043  
                                                       _btn2 0040  
                                                ?i2_INT0_ISR 006A  
                                                       _main 122C  
                                                ?i2_INT1_ISR 006A  
                                                ?i2_INT2_ISR 006A  
                                                       _knum 005F  
                                                       _prev 005E  
                                                       fsr2h 0FDA  
                                                       indf2 0FDF  
                                                       fsr1l 0FE1  
                                                       fsr2l 0FD9  
                                                       btemp 0079  
                                                       prodl 0FF3  
                                                       start 00A8  
                                   __end_of_INT_INTx_disable 10DA  
                                       _GPIO_pin_write_logic 0AB2  
                                               ___param_bank 0000  
                                      INT_INTx_get_index@ind 006C  
                                           __end_of_INT0_ISR 12BC  
                                           __end_of_INT1_ISR 12B4  
                                           __end_of_INT2_ISR 12AC  
                                  INT_INTx_check_access@lint 006B  
                           __end_of_INT_INTx_edge_initialize 0762  
                                __end_of_INT_INTx_initialize 0AB2  
                                                      ?_main 006A  
                                             __LAT_registers 0016  
                                                      i1l611 12B0  
                                                      i1l607 12B8  
                                                      i1l615 12A8  
                                                      i1l809 009C  
                                                      i2l611 12C8  
                                                      i2l607 12D0  
                                                      i2l615 12C0  
                                                      i2l801 0FAE  
                                                      i2l619 12D8  
                                        relay_turn_off@F2875 0062  
                                                      _PORTA 0F80  
                                                      _PORTB 0F81  
                                                      _PORTC 0F82  
                                                      _PORTD 0F83  
                                                      _PORTE 0F84  
                                                      _TRISA 0F92  
                                                      _TRISB 0F93  
                                                      _TRISC 0F94  
                                                      _TRISD 0F95  
                                                      _TRISE 0F96  
                                                      _Iflag 0061  
                                                      _errno 0054  
                                                      tablat 0FF5  
                            ??_INT_INTx_set_callback_routine 006E  
                                                      ttemp5 007A  
                                                      ttemp6 007D  
                                                      ttemp7 0081  
                                                      status 0FD8  
                                                      wtemp8 007A  
                                      ?_GPIO_pin_write_logic 006E  
                                            __initialization 126A  
                                                LED_on@F2875 0067  
                                               __end_of_main 126A  
                                     INT_INTx_get_index@lint 006B  
                                                     ??_main 0079  
                                              __activetblptr 0002  
                                          ??_INT_INTx_enable 006E  
                             ??_INT_INTx_priority_initialize 006E  
                                                     i1l2121 12B6  
                                                     i1l2125 12AE  
                                                     i1l2129 12A6  
                                                     _LED_OK 0069  
                                                     i2l2133 12D6  
                                                     i1l2961 0044  
                                                     i2l2171 12CE  
                                                     i1l2971 0086  
                                                     i1l2963 0048  
                                                     i1l2973 0098  
                                                     i1l2965 005C  
                                                     i1l2957 0020  
                                                     i2l2175 12C6  
                                                     i1l2967 006E  
                                                     i1l2959 0032  
                                                     i1l2969 0072  
                                                     i2l2179 12BE  
                                                     i2l2941 0F44  
                                                     i2l2933 0F08  
                                                     i2l2951 0F84  
                                                     i2l2943 0F56  
                                                     i2l2935 0F1A  
                                                     i2l2953 0F98  
                                                     i2l2945 0F5A  
                                                     i2l2937 0F2C  
                                                     i2l2955 0FAA  
                                                     i2l2947 0F6E  
                                                     i2l2939 0F30  
                                                     i2l2949 0F80  
                                                     _LED_on 0FB6  
                                                     _RB_ISR 12D4  
                                                     clear_0 1290  
                                                     _relay1 004D  
                                                     _motor1 0048  
                                                     _motor2 0046  
                                                     isa$std 0001  
                                               __pdataCOMRAM 0001  
                                   _INT_INTx_edge_initialize 0616  
                                               __mediumconst 0600  
                                                     tblptrh 0FF7  
                                                     tblptrl 0FF6  
                                                     tblptru 0FF8  
                                         INT_INTx_enable@ind 0070  
                                         INT_INTx_enable@ret 0071  
                                    INT_INTx_clear_flag@lint 006D  
                                   INT_INTx_check_access@ret 006C  
                                                 __accesstop 0080  
                                    __end_of__initialization 1296  
                                     ??_GPIO_pin_write_logic 0070  
                                                  ?_INT0_ISR 006A  
                                                  ?_INT1_ISR 006A  
                                                  ?_INT2_ISR 006A  
                                      _INT_INTx_check_access 0E4E  
                                              ___rparam_used 0001  
                      __end_of_INT_INTx_set_callback_routine 0E4E  
                              _INT_INTx_set_callback_routine 0D7C  
                                             __pcstackCOMRAM 006A  
                            ??_GPIO_pin_direction_initialize 006F  
                   GPIO_pin_direction_initialize@_pin_config 006E  
                                                  LED_on@led 0076  
                                            __PORT_registers 000C  
                                               LED_off@F2880 0066  
                                         _INT_INTx_get_index 1166  
                                                    ?_LED_on 0076  
                                                    ?_RB_ISR 006A  
                                               ??i2_INT0_ISR 006A  
                                               ??i2_INT1_ISR 006A  
                                                 ??_INT0_ISR 006A  
                                               ??i2_INT2_ISR 006A  
                                                 ??_INT1_ISR 006A  
                                                 ??_INT2_ISR 006A  
                                        ?_INT_INTx_get_index 006B  
                                          ?_INT_INTx_disable 006D  
                                __end_of_InterruptManagerLow 00A8  
                                         ??_INT_INTx_disable 006E  
                            INT_INTx_priority_initialize@ind 0070  
                            INT_INTx_priority_initialize@ret 0071  
                                       ??_INT_INTx_get_index 006C  
                                                    _LED_NOK 0053  
                                         __end_ofi2_INT0_ISR 12D4  
                                         __end_ofi2_INT1_ISR 12CC  
                                         __end_ofi2_INT2_ISR 12C4  
                                   _INT_INTx_initialize$1300 0076  
                                     ?_INT_INTx_check_access 006B  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                               __psmallconst 0600  
                                            _INT_INTx_enable 0BC4  
                             ?_INT_INTx_set_callback_routine 006D  
                                                    __pcinit 126A  
                                                    __ramtop 0600  
                                                    __ptext0 122C  
                                                    __ptext1 0FB6  
                                                    __ptext2 0AB2  
                                                    __ptext3 099E  
                                                    __ptext4 0D7C  
                                                    __ptext5 0CA2  
                                                    __ptext6 0BC4  
                                                    __ptext7 0616  
                                                    __ptext8 104E  
                                                    __ptext9 10DA  
                                                    _led_arr 003C  
                      __end_of_GPIO_pin_direction_initialize 099E  
                              _GPIO_pin_direction_initialize 0886  
                                                    _keypad1 002A  
                                            _keypad_elements 0601  
                                                    _testing 004C  
                                             __pintcode_body 0F06  
                                       end_of_initialization 1296  
                                                 _second_int 004E  
                                              __Lmediumconst 0000  
                                                    int_func 0F06  
                                                    postdec1 0FE5  
                                                    postdec2 0FDD  
                                                    postinc0 0FEE  
                                                    postinc2 0FDE  
                                 ??_INT_INTx_edge_initialize 006E  
                                        INT_INTx_enable@lint 006D  
                                        INT_INTx_disable@ind 0070  
                                        INT_INTx_disable@ret 0071  
                                           _InterruptManager 0008  
                                             __end_of_LED_on 104E  
                                             __end_of_RB_ISR 12DC  
                          INT_INTx_set_callback_routine@lint 006D  
                                    __end_of_INT_INTx_enable 0CA2  
                                    GPIO_pin_write_logic@ret 0075  
                                         relay_turn_on@F2870 0063  
                                    __end_of_keypad_elements 0611  
                                              __pidataCOMRAM 11D8  
                                               _INT0_handler 005C  
                                               _INT1_handler 005A  
                                        start_initialization 126A  
                                               _INT2_handler 0058  
                                       GPIO_check_access@ret 006D  
                             ?_GPIO_pin_direction_initialize 006E  
                                            LED_on@pin_local 0078  
                                                   ??_LED_on 0077  
                                        _INT_INTx_clear_flag 10DA  
                                                   ??_RB_ISR 006A  
                                       ?_INT_INTx_clear_flag 006D  
                                     INT_INTx_clear_flag@ind 0070  
                                     INT_INTx_clear_flag@ret 0071  
                                                __pbssCOMRAM 0054  
                                    ??_INT_INTx_check_access 006C  
                               INT_INTx_edge_initialize@lint 006D  
                                           ?_INT_INTx_enable 006D  
                                        _INT_INTx_initialize 099E  
                                                  __pintcode 0008  
                            GPIO_pin_write_logic@_pin_config 006E  
                                      ??_INT_INTx_clear_flag 006E  
                                                __pintcodelo 0018  
                                        LED_initialize@F2870 0068  
                           INT_INTx_priority_initialize@lint 006D  
                                                __smallconst 0600  
                                                  _first_int 0038  
                                       ?_INT_INTx_initialize 0075  
                                  GPIO_pin_write_logic@logic 006F  
                                            __TRIS_registers 0020  
                                                   _INT0_ISR 12B4  
                                                   _INT1_ISR 12AC  
                                                   _INT2_ISR 12A4  
                                   __end_of_InterruptManager 0FB6  
                                                   i1u210_20 0030  
                                                   i1u210_21 002A  
                                                   i1u211_20 0042  
                                                   i1u211_21 003C  
                                                   i1u212_20 005A  
                                                   i1u212_21 0054  
                                                   i1u213_20 006C  
                                                   i1u213_21 0066  
                                                   i1u214_20 0084  
                                                   i1u214_21 007E  
                                                   i1u215_20 0096  
                                                   i1u215_21 0090  
                                                   i2u202_40 0F18  
                                                   i2u202_41 0F12  
                                                   i2u203_40 0F2A  
                                                   i2u203_41 0F24  
                                                   i2u204_40 0F42  
                                                   i2u204_41 0F3C  
                                                   i2u205_40 0F54  
                                                   i2u205_41 0F4E  
                                                   i2u206_40 0F6C  
                                                   i2u206_41 0F66  
                                                   i2u207_40 0F7E  
                                                   i2u207_41 0F78  
                                                   i2u208_40 0F96  
                                                   i2u208_41 0F90  
                                                   i2u209_40 0FA8  
                                                   i2u209_41 0FA2  
                                                   _RCONbits 0FD0  
                           GPIO_pin_direction_initialize@ret 0074  
                                      ??_INT_INTx_initialize 0076  
                                                _INTCON2bits 0FF1  
                                                _INTCON3bits 0FF0  
                                                  copy_data0 127E  
                                               _seg_units_en 004B  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                          _GPIO_check_access 0762  
                                         ?_GPIO_check_access 006B  
                                           _INT_INTx_disable 104E  
                                        ??_GPIO_check_access 006C  
                                                   __ptext10 1166  
                                                   __ptext11 0E4E  
                                                   __ptext20 12C4  
                                                   __ptext12 0886  
                                                   __ptext21 12CC  
                                                   __ptext13 0762  
                                                   __ptext22 12D4  
                                                   __ptext15 12A4  
                                                   __ptext16 12AC  
                                                   __ptext17 12B4  
                                                   __ptext19 12BC  
                                  ?_INT_INTx_edge_initialize 006D  
                                                   _segment1 0033  
                                                   isa$xinst 0000  
                                  __end_of_GPIO_check_access 0886  
                                                   int$flags 0079  
                               __end_of_GPIO_pin_write_logic 0BC4  
                                                 _INTCONbits 0FF2  
                                                   intlevel1 12DC  
                                                   intlevel2 12DC  
                              __end_of_INT_INTx_check_access 0F06  
                                        _InterruptManagerLow 0018  
                                                 i2_INT0_ISR 12CC  
                                                 i2_INT1_ISR 12C4  
                                                 i2_INT2_ISR 12BC  
                                       ?_InterruptManagerLow 006A  
                       __end_of_INT_INTx_priority_initialize 0D7C  
                               _INT_INTx_priority_initialize 0CA2  
                                    INT_INTx_initialize@lint 0075  
                           INT_INTx_set_callback_routine@ind 0070  
                           INT_INTx_set_callback_routine@ret 0071  
                                       INT_INTx_disable@lint 006D  
                                     INT_INTx_initialize@ret 0077  
                               GPIO_check_access@_pin_config 006B  
                                          ?_InterruptManager 006A  
                                __end_of_INT_INTx_clear_flag 1166  
                                                 _RB_handler 0056  
