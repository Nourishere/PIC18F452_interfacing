

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 22 14:57:10 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Generated 17/01/2025 GMT
    43                           ; 
    44                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F452 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000FE0                     bsr             equ	4064
    77   000FE9                     fsr0            equ	4073
    78   000FEA                     fsr0h           equ	4074
    79   000FE9                     fsr0l           equ	4073
    80   000FE1                     fsr1            equ	4065
    81   000FE2                     fsr1h           equ	4066
    82   000FE1                     fsr1l           equ	4065
    83   000FD9                     fsr2            equ	4057
    84   000FDA                     fsr2h           equ	4058
    85   000FD9                     fsr2l           equ	4057
    86   000FEF                     indf0           equ	4079
    87   000FE7                     indf1           equ	4071
    88   000FDF                     indf2           equ	4063
    89   000FF2                     intcon          equ	4082
    90   000000                     nvmcon          equ	0
    91   000FF9                     pcl             equ	4089
    92   000FFA                     pclath          equ	4090
    93   000FFB                     pclatu          equ	4091
    94   000FEB                     plusw0          equ	4075
    95   000FE3                     plusw1          equ	4067
    96   000FDB                     plusw2          equ	4059
    97   000FED                     postdec0        equ	4077
    98   000FE5                     postdec1        equ	4069
    99   000FDD                     postdec2        equ	4061
   100   000FEE                     postinc0        equ	4078
   101   000FE6                     postinc1        equ	4070
   102   000FDE                     postinc2        equ	4062
   103   000FEC                     preinc0         equ	4076
   104   000FE4                     preinc1         equ	4068
   105   000FDC                     preinc2         equ	4060
   106   000FF3                     prod            equ	4083
   107   000FF4                     prodh           equ	4084
   108   000FF3                     prodl           equ	4083
   109   000FD8                     status          equ	4056
   110   000FF5                     tablat          equ	4085
   111   000FF6                     tblptr          equ	4086
   112   000FF7                     tblptrh         equ	4087
   113   000FF6                     tblptrl         equ	4086
   114   000FF8                     tblptru         equ	4088
   115   000FFD                     tosl            equ	4093
   116   000FE8                     wreg            equ	4072
   117   000F80                     PORTA           equ	3968	;# 
   118   000F81                     PORTB           equ	3969	;# 
   119   000F82                     PORTC           equ	3970	;# 
   120   000F83                     PORTD           equ	3971	;# 
   121   000F84                     PORTE           equ	3972	;# 
   122   000F89                     LATA            equ	3977	;# 
   123   000F8A                     LATB            equ	3978	;# 
   124   000F8B                     LATC            equ	3979	;# 
   125   000F8C                     LATD            equ	3980	;# 
   126   000F8D                     LATE            equ	3981	;# 
   127   000F92                     TRISA           equ	3986	;# 
   128   000F92                     DDRA            equ	3986	;# 
   129   000F93                     TRISB           equ	3987	;# 
   130   000F93                     DDRB            equ	3987	;# 
   131   000F94                     TRISC           equ	3988	;# 
   132   000F94                     DDRC            equ	3988	;# 
   133   000F95                     TRISD           equ	3989	;# 
   134   000F95                     DDRD            equ	3989	;# 
   135   000F96                     TRISE           equ	3990	;# 
   136   000F96                     DDRE            equ	3990	;# 
   137   000F9D                     PIE1            equ	3997	;# 
   138   000F9E                     PIR1            equ	3998	;# 
   139   000F9F                     IPR1            equ	3999	;# 
   140   000FA0                     PIE2            equ	4000	;# 
   141   000FA1                     PIR2            equ	4001	;# 
   142   000FA2                     IPR2            equ	4002	;# 
   143   000FA6                     EECON1          equ	4006	;# 
   144   000FA7                     EECON2          equ	4007	;# 
   145   000FA8                     EEDATA          equ	4008	;# 
   146   000FA9                     EEADR           equ	4009	;# 
   147   000FAB                     RCSTA           equ	4011	;# 
   148   000FAB                     RCSTA1          equ	4011	;# 
   149   000FAC                     TXSTA           equ	4012	;# 
   150   000FAC                     TXSTA1          equ	4012	;# 
   151   000FAD                     TXREG           equ	4013	;# 
   152   000FAD                     TXREG1          equ	4013	;# 
   153   000FAE                     RCREG           equ	4014	;# 
   154   000FAE                     RCREG1          equ	4014	;# 
   155   000FAF                     SPBRG           equ	4015	;# 
   156   000FAF                     SPBRG1          equ	4015	;# 
   157   000FB1                     T3CON           equ	4017	;# 
   158   000FB2                     TMR3            equ	4018	;# 
   159   000FB2                     TMR3L           equ	4018	;# 
   160   000FB3                     TMR3H           equ	4019	;# 
   161   000FBA                     CCP2CON         equ	4026	;# 
   162   000FBB                     CCPR2           equ	4027	;# 
   163   000FBB                     CCPR2L          equ	4027	;# 
   164   000FBC                     CCPR2H          equ	4028	;# 
   165   000FBD                     CCP1CON         equ	4029	;# 
   166   000FBE                     CCPR1           equ	4030	;# 
   167   000FBE                     CCPR1L          equ	4030	;# 
   168   000FBF                     CCPR1H          equ	4031	;# 
   169   000FC1                     ADCON1          equ	4033	;# 
   170   000FC2                     ADCON0          equ	4034	;# 
   171   000FC3                     ADRES           equ	4035	;# 
   172   000FC3                     ADRESL          equ	4035	;# 
   173   000FC4                     ADRESH          equ	4036	;# 
   174   000FC5                     SSPCON2         equ	4037	;# 
   175   000FC6                     SSPCON1         equ	4038	;# 
   176   000FC7                     SSPSTAT         equ	4039	;# 
   177   000FC8                     SSPADD          equ	4040	;# 
   178   000FC9                     SSPBUF          equ	4041	;# 
   179   000FCA                     T2CON           equ	4042	;# 
   180   000FCB                     PR2             equ	4043	;# 
   181   000FCB                     MEMCON          equ	4043	;# 
   182   000FCC                     TMR2            equ	4044	;# 
   183   000FCD                     T1CON           equ	4045	;# 
   184   000FCE                     TMR1            equ	4046	;# 
   185   000FCE                     TMR1L           equ	4046	;# 
   186   000FCF                     TMR1H           equ	4047	;# 
   187   000FD0                     RCON            equ	4048	;# 
   188   000FD1                     WDTCON          equ	4049	;# 
   189   000FD2                     LVDCON          equ	4050	;# 
   190   000FD3                     OSCCON          equ	4051	;# 
   191   000FD5                     T0CON           equ	4053	;# 
   192   000FD6                     TMR0            equ	4054	;# 
   193   000FD6                     TMR0L           equ	4054	;# 
   194   000FD7                     TMR0H           equ	4055	;# 
   195   000FD8                     STATUS          equ	4056	;# 
   196   000FD9                     FSR2            equ	4057	;# 
   197   000FD9                     FSR2L           equ	4057	;# 
   198   000FDA                     FSR2H           equ	4058	;# 
   199   000FDB                     PLUSW2          equ	4059	;# 
   200   000FDC                     PREINC2         equ	4060	;# 
   201   000FDD                     POSTDEC2        equ	4061	;# 
   202   000FDE                     POSTINC2        equ	4062	;# 
   203   000FDF                     INDF2           equ	4063	;# 
   204   000FE0                     BSR             equ	4064	;# 
   205   000FE1                     FSR1            equ	4065	;# 
   206   000FE1                     FSR1L           equ	4065	;# 
   207   000FE2                     FSR1H           equ	4066	;# 
   208   000FE3                     PLUSW1          equ	4067	;# 
   209   000FE4                     PREINC1         equ	4068	;# 
   210   000FE5                     POSTDEC1        equ	4069	;# 
   211   000FE6                     POSTINC1        equ	4070	;# 
   212   000FE7                     INDF1           equ	4071	;# 
   213   000FE8                     WREG            equ	4072	;# 
   214   000FE9                     FSR0            equ	4073	;# 
   215   000FE9                     FSR0L           equ	4073	;# 
   216   000FEA                     FSR0H           equ	4074	;# 
   217   000FEB                     PLUSW0          equ	4075	;# 
   218   000FEC                     PREINC0         equ	4076	;# 
   219   000FED                     POSTDEC0        equ	4077	;# 
   220   000FEE                     POSTINC0        equ	4078	;# 
   221   000FEF                     INDF0           equ	4079	;# 
   222   000FF0                     INTCON3         equ	4080	;# 
   223   000FF1                     INTCON2         equ	4081	;# 
   224   000FF2                     INTCON          equ	4082	;# 
   225   000FF2                     INTCON1         equ	4082	;# 
   226   000FF3                     PROD            equ	4083	;# 
   227   000FF3                     PRODL           equ	4083	;# 
   228   000FF4                     PRODH           equ	4084	;# 
   229   000FF5                     TABLAT          equ	4085	;# 
   230   000FF6                     TBLPTR          equ	4086	;# 
   231   000FF6                     TBLPTRL         equ	4086	;# 
   232   000FF7                     TBLPTRH         equ	4087	;# 
   233   000FF8                     TBLPTRU         equ	4088	;# 
   234   000FF9                     PCLAT           equ	4089	;# 
   235   000FF9                     PC              equ	4089	;# 
   236   000FF9                     PCL             equ	4089	;# 
   237   000FFA                     PCLATH          equ	4090	;# 
   238   000FFB                     PCLATU          equ	4091	;# 
   239   000FFC                     STKPTR          equ	4092	;# 
   240   000FFD                     TOS             equ	4093	;# 
   241   000FFD                     TOSL            equ	4093	;# 
   242   000FFE                     TOSH            equ	4094	;# 
   243   000FFF                     TOSU            equ	4095	;# 
   244   000F80                     PORTA           equ	3968	;# 
   245   000F81                     PORTB           equ	3969	;# 
   246   000F82                     PORTC           equ	3970	;# 
   247   000F83                     PORTD           equ	3971	;# 
   248   000F84                     PORTE           equ	3972	;# 
   249   000F89                     LATA            equ	3977	;# 
   250   000F8A                     LATB            equ	3978	;# 
   251   000F8B                     LATC            equ	3979	;# 
   252   000F8C                     LATD            equ	3980	;# 
   253   000F8D                     LATE            equ	3981	;# 
   254   000F92                     TRISA           equ	3986	;# 
   255   000F92                     DDRA            equ	3986	;# 
   256   000F93                     TRISB           equ	3987	;# 
   257   000F93                     DDRB            equ	3987	;# 
   258   000F94                     TRISC           equ	3988	;# 
   259   000F94                     DDRC            equ	3988	;# 
   260   000F95                     TRISD           equ	3989	;# 
   261   000F95                     DDRD            equ	3989	;# 
   262   000F96                     TRISE           equ	3990	;# 
   263   000F96                     DDRE            equ	3990	;# 
   264   000F9D                     PIE1            equ	3997	;# 
   265   000F9E                     PIR1            equ	3998	;# 
   266   000F9F                     IPR1            equ	3999	;# 
   267   000FA0                     PIE2            equ	4000	;# 
   268   000FA1                     PIR2            equ	4001	;# 
   269   000FA2                     IPR2            equ	4002	;# 
   270   000FA6                     EECON1          equ	4006	;# 
   271   000FA7                     EECON2          equ	4007	;# 
   272   000FA8                     EEDATA          equ	4008	;# 
   273   000FA9                     EEADR           equ	4009	;# 
   274   000FAB                     RCSTA           equ	4011	;# 
   275   000FAB                     RCSTA1          equ	4011	;# 
   276   000FAC                     TXSTA           equ	4012	;# 
   277   000FAC                     TXSTA1          equ	4012	;# 
   278   000FAD                     TXREG           equ	4013	;# 
   279   000FAD                     TXREG1          equ	4013	;# 
   280   000FAE                     RCREG           equ	4014	;# 
   281   000FAE                     RCREG1          equ	4014	;# 
   282   000FAF                     SPBRG           equ	4015	;# 
   283   000FAF                     SPBRG1          equ	4015	;# 
   284   000FB1                     T3CON           equ	4017	;# 
   285   000FB2                     TMR3            equ	4018	;# 
   286   000FB2                     TMR3L           equ	4018	;# 
   287   000FB3                     TMR3H           equ	4019	;# 
   288   000FBA                     CCP2CON         equ	4026	;# 
   289   000FBB                     CCPR2           equ	4027	;# 
   290   000FBB                     CCPR2L          equ	4027	;# 
   291   000FBC                     CCPR2H          equ	4028	;# 
   292   000FBD                     CCP1CON         equ	4029	;# 
   293   000FBE                     CCPR1           equ	4030	;# 
   294   000FBE                     CCPR1L          equ	4030	;# 
   295   000FBF                     CCPR1H          equ	4031	;# 
   296   000FC1                     ADCON1          equ	4033	;# 
   297   000FC2                     ADCON0          equ	4034	;# 
   298   000FC3                     ADRES           equ	4035	;# 
   299   000FC3                     ADRESL          equ	4035	;# 
   300   000FC4                     ADRESH          equ	4036	;# 
   301   000FC5                     SSPCON2         equ	4037	;# 
   302   000FC6                     SSPCON1         equ	4038	;# 
   303   000FC7                     SSPSTAT         equ	4039	;# 
   304   000FC8                     SSPADD          equ	4040	;# 
   305   000FC9                     SSPBUF          equ	4041	;# 
   306   000FCA                     T2CON           equ	4042	;# 
   307   000FCB                     PR2             equ	4043	;# 
   308   000FCB                     MEMCON          equ	4043	;# 
   309   000FCC                     TMR2            equ	4044	;# 
   310   000FCD                     T1CON           equ	4045	;# 
   311   000FCE                     TMR1            equ	4046	;# 
   312   000FCE                     TMR1L           equ	4046	;# 
   313   000FCF                     TMR1H           equ	4047	;# 
   314   000FD0                     RCON            equ	4048	;# 
   315   000FD1                     WDTCON          equ	4049	;# 
   316   000FD2                     LVDCON          equ	4050	;# 
   317   000FD3                     OSCCON          equ	4051	;# 
   318   000FD5                     T0CON           equ	4053	;# 
   319   000FD6                     TMR0            equ	4054	;# 
   320   000FD6                     TMR0L           equ	4054	;# 
   321   000FD7                     TMR0H           equ	4055	;# 
   322   000FD8                     STATUS          equ	4056	;# 
   323   000FD9                     FSR2            equ	4057	;# 
   324   000FD9                     FSR2L           equ	4057	;# 
   325   000FDA                     FSR2H           equ	4058	;# 
   326   000FDB                     PLUSW2          equ	4059	;# 
   327   000FDC                     PREINC2         equ	4060	;# 
   328   000FDD                     POSTDEC2        equ	4061	;# 
   329   000FDE                     POSTINC2        equ	4062	;# 
   330   000FDF                     INDF2           equ	4063	;# 
   331   000FE0                     BSR             equ	4064	;# 
   332   000FE1                     FSR1            equ	4065	;# 
   333   000FE1                     FSR1L           equ	4065	;# 
   334   000FE2                     FSR1H           equ	4066	;# 
   335   000FE3                     PLUSW1          equ	4067	;# 
   336   000FE4                     PREINC1         equ	4068	;# 
   337   000FE5                     POSTDEC1        equ	4069	;# 
   338   000FE6                     POSTINC1        equ	4070	;# 
   339   000FE7                     INDF1           equ	4071	;# 
   340   000FE8                     WREG            equ	4072	;# 
   341   000FE9                     FSR0            equ	4073	;# 
   342   000FE9                     FSR0L           equ	4073	;# 
   343   000FEA                     FSR0H           equ	4074	;# 
   344   000FEB                     PLUSW0          equ	4075	;# 
   345   000FEC                     PREINC0         equ	4076	;# 
   346   000FED                     POSTDEC0        equ	4077	;# 
   347   000FEE                     POSTINC0        equ	4078	;# 
   348   000FEF                     INDF0           equ	4079	;# 
   349   000FF0                     INTCON3         equ	4080	;# 
   350   000FF1                     INTCON2         equ	4081	;# 
   351   000FF2                     INTCON          equ	4082	;# 
   352   000FF2                     INTCON1         equ	4082	;# 
   353   000FF3                     PROD            equ	4083	;# 
   354   000FF3                     PRODL           equ	4083	;# 
   355   000FF4                     PRODH           equ	4084	;# 
   356   000FF5                     TABLAT          equ	4085	;# 
   357   000FF6                     TBLPTR          equ	4086	;# 
   358   000FF6                     TBLPTRL         equ	4086	;# 
   359   000FF7                     TBLPTRH         equ	4087	;# 
   360   000FF8                     TBLPTRU         equ	4088	;# 
   361   000FF9                     PCLAT           equ	4089	;# 
   362   000FF9                     PC              equ	4089	;# 
   363   000FF9                     PCL             equ	4089	;# 
   364   000FFA                     PCLATH          equ	4090	;# 
   365   000FFB                     PCLATU          equ	4091	;# 
   366   000FFC                     STKPTR          equ	4092	;# 
   367   000FFD                     TOS             equ	4093	;# 
   368   000FFD                     TOSL            equ	4093	;# 
   369   000FFE                     TOSH            equ	4094	;# 
   370   000FFF                     TOSU            equ	4095	;# 
   371   000F80                     PORTA           equ	3968	;# 
   372   000F81                     PORTB           equ	3969	;# 
   373   000F82                     PORTC           equ	3970	;# 
   374   000F83                     PORTD           equ	3971	;# 
   375   000F84                     PORTE           equ	3972	;# 
   376   000F89                     LATA            equ	3977	;# 
   377   000F8A                     LATB            equ	3978	;# 
   378   000F8B                     LATC            equ	3979	;# 
   379   000F8C                     LATD            equ	3980	;# 
   380   000F8D                     LATE            equ	3981	;# 
   381   000F92                     TRISA           equ	3986	;# 
   382   000F92                     DDRA            equ	3986	;# 
   383   000F93                     TRISB           equ	3987	;# 
   384   000F93                     DDRB            equ	3987	;# 
   385   000F94                     TRISC           equ	3988	;# 
   386   000F94                     DDRC            equ	3988	;# 
   387   000F95                     TRISD           equ	3989	;# 
   388   000F95                     DDRD            equ	3989	;# 
   389   000F96                     TRISE           equ	3990	;# 
   390   000F96                     DDRE            equ	3990	;# 
   391   000F9D                     PIE1            equ	3997	;# 
   392   000F9E                     PIR1            equ	3998	;# 
   393   000F9F                     IPR1            equ	3999	;# 
   394   000FA0                     PIE2            equ	4000	;# 
   395   000FA1                     PIR2            equ	4001	;# 
   396   000FA2                     IPR2            equ	4002	;# 
   397   000FA6                     EECON1          equ	4006	;# 
   398   000FA7                     EECON2          equ	4007	;# 
   399   000FA8                     EEDATA          equ	4008	;# 
   400   000FA9                     EEADR           equ	4009	;# 
   401   000FAB                     RCSTA           equ	4011	;# 
   402   000FAB                     RCSTA1          equ	4011	;# 
   403   000FAC                     TXSTA           equ	4012	;# 
   404   000FAC                     TXSTA1          equ	4012	;# 
   405   000FAD                     TXREG           equ	4013	;# 
   406   000FAD                     TXREG1          equ	4013	;# 
   407   000FAE                     RCREG           equ	4014	;# 
   408   000FAE                     RCREG1          equ	4014	;# 
   409   000FAF                     SPBRG           equ	4015	;# 
   410   000FAF                     SPBRG1          equ	4015	;# 
   411   000FB1                     T3CON           equ	4017	;# 
   412   000FB2                     TMR3            equ	4018	;# 
   413   000FB2                     TMR3L           equ	4018	;# 
   414   000FB3                     TMR3H           equ	4019	;# 
   415   000FBA                     CCP2CON         equ	4026	;# 
   416   000FBB                     CCPR2           equ	4027	;# 
   417   000FBB                     CCPR2L          equ	4027	;# 
   418   000FBC                     CCPR2H          equ	4028	;# 
   419   000FBD                     CCP1CON         equ	4029	;# 
   420   000FBE                     CCPR1           equ	4030	;# 
   421   000FBE                     CCPR1L          equ	4030	;# 
   422   000FBF                     CCPR1H          equ	4031	;# 
   423   000FC1                     ADCON1          equ	4033	;# 
   424   000FC2                     ADCON0          equ	4034	;# 
   425   000FC3                     ADRES           equ	4035	;# 
   426   000FC3                     ADRESL          equ	4035	;# 
   427   000FC4                     ADRESH          equ	4036	;# 
   428   000FC5                     SSPCON2         equ	4037	;# 
   429   000FC6                     SSPCON1         equ	4038	;# 
   430   000FC7                     SSPSTAT         equ	4039	;# 
   431   000FC8                     SSPADD          equ	4040	;# 
   432   000FC9                     SSPBUF          equ	4041	;# 
   433   000FCA                     T2CON           equ	4042	;# 
   434   000FCB                     PR2             equ	4043	;# 
   435   000FCB                     MEMCON          equ	4043	;# 
   436   000FCC                     TMR2            equ	4044	;# 
   437   000FCD                     T1CON           equ	4045	;# 
   438   000FCE                     TMR1            equ	4046	;# 
   439   000FCE                     TMR1L           equ	4046	;# 
   440   000FCF                     TMR1H           equ	4047	;# 
   441   000FD0                     RCON            equ	4048	;# 
   442   000FD1                     WDTCON          equ	4049	;# 
   443   000FD2                     LVDCON          equ	4050	;# 
   444   000FD3                     OSCCON          equ	4051	;# 
   445   000FD5                     T0CON           equ	4053	;# 
   446   000FD6                     TMR0            equ	4054	;# 
   447   000FD6                     TMR0L           equ	4054	;# 
   448   000FD7                     TMR0H           equ	4055	;# 
   449   000FD8                     STATUS          equ	4056	;# 
   450   000FD9                     FSR2            equ	4057	;# 
   451   000FD9                     FSR2L           equ	4057	;# 
   452   000FDA                     FSR2H           equ	4058	;# 
   453   000FDB                     PLUSW2          equ	4059	;# 
   454   000FDC                     PREINC2         equ	4060	;# 
   455   000FDD                     POSTDEC2        equ	4061	;# 
   456   000FDE                     POSTINC2        equ	4062	;# 
   457   000FDF                     INDF2           equ	4063	;# 
   458   000FE0                     BSR             equ	4064	;# 
   459   000FE1                     FSR1            equ	4065	;# 
   460   000FE1                     FSR1L           equ	4065	;# 
   461   000FE2                     FSR1H           equ	4066	;# 
   462   000FE3                     PLUSW1          equ	4067	;# 
   463   000FE4                     PREINC1         equ	4068	;# 
   464   000FE5                     POSTDEC1        equ	4069	;# 
   465   000FE6                     POSTINC1        equ	4070	;# 
   466   000FE7                     INDF1           equ	4071	;# 
   467   000FE8                     WREG            equ	4072	;# 
   468   000FE9                     FSR0            equ	4073	;# 
   469   000FE9                     FSR0L           equ	4073	;# 
   470   000FEA                     FSR0H           equ	4074	;# 
   471   000FEB                     PLUSW0          equ	4075	;# 
   472   000FEC                     PREINC0         equ	4076	;# 
   473   000FED                     POSTDEC0        equ	4077	;# 
   474   000FEE                     POSTINC0        equ	4078	;# 
   475   000FEF                     INDF0           equ	4079	;# 
   476   000FF0                     INTCON3         equ	4080	;# 
   477   000FF1                     INTCON2         equ	4081	;# 
   478   000FF2                     INTCON          equ	4082	;# 
   479   000FF2                     INTCON1         equ	4082	;# 
   480   000FF3                     PROD            equ	4083	;# 
   481   000FF3                     PRODL           equ	4083	;# 
   482   000FF4                     PRODH           equ	4084	;# 
   483   000FF5                     TABLAT          equ	4085	;# 
   484   000FF6                     TBLPTR          equ	4086	;# 
   485   000FF6                     TBLPTRL         equ	4086	;# 
   486   000FF7                     TBLPTRH         equ	4087	;# 
   487   000FF8                     TBLPTRU         equ	4088	;# 
   488   000FF9                     PCLAT           equ	4089	;# 
   489   000FF9                     PC              equ	4089	;# 
   490   000FF9                     PCL             equ	4089	;# 
   491   000FFA                     PCLATH          equ	4090	;# 
   492   000FFB                     PCLATU          equ	4091	;# 
   493   000FFC                     STKPTR          equ	4092	;# 
   494   000FFD                     TOS             equ	4093	;# 
   495   000FFD                     TOSL            equ	4093	;# 
   496   000FFE                     TOSH            equ	4094	;# 
   497   000FFF                     TOSU            equ	4095	;# 
   498   000F80                     PORTA           equ	3968	;# 
   499   000F81                     PORTB           equ	3969	;# 
   500   000F82                     PORTC           equ	3970	;# 
   501   000F83                     PORTD           equ	3971	;# 
   502   000F84                     PORTE           equ	3972	;# 
   503   000F89                     LATA            equ	3977	;# 
   504   000F8A                     LATB            equ	3978	;# 
   505   000F8B                     LATC            equ	3979	;# 
   506   000F8C                     LATD            equ	3980	;# 
   507   000F8D                     LATE            equ	3981	;# 
   508   000F92                     TRISA           equ	3986	;# 
   509   000F92                     DDRA            equ	3986	;# 
   510   000F93                     TRISB           equ	3987	;# 
   511   000F93                     DDRB            equ	3987	;# 
   512   000F94                     TRISC           equ	3988	;# 
   513   000F94                     DDRC            equ	3988	;# 
   514   000F95                     TRISD           equ	3989	;# 
   515   000F95                     DDRD            equ	3989	;# 
   516   000F96                     TRISE           equ	3990	;# 
   517   000F96                     DDRE            equ	3990	;# 
   518   000F9D                     PIE1            equ	3997	;# 
   519   000F9E                     PIR1            equ	3998	;# 
   520   000F9F                     IPR1            equ	3999	;# 
   521   000FA0                     PIE2            equ	4000	;# 
   522   000FA1                     PIR2            equ	4001	;# 
   523   000FA2                     IPR2            equ	4002	;# 
   524   000FA6                     EECON1          equ	4006	;# 
   525   000FA7                     EECON2          equ	4007	;# 
   526   000FA8                     EEDATA          equ	4008	;# 
   527   000FA9                     EEADR           equ	4009	;# 
   528   000FAB                     RCSTA           equ	4011	;# 
   529   000FAB                     RCSTA1          equ	4011	;# 
   530   000FAC                     TXSTA           equ	4012	;# 
   531   000FAC                     TXSTA1          equ	4012	;# 
   532   000FAD                     TXREG           equ	4013	;# 
   533   000FAD                     TXREG1          equ	4013	;# 
   534   000FAE                     RCREG           equ	4014	;# 
   535   000FAE                     RCREG1          equ	4014	;# 
   536   000FAF                     SPBRG           equ	4015	;# 
   537   000FAF                     SPBRG1          equ	4015	;# 
   538   000FB1                     T3CON           equ	4017	;# 
   539   000FB2                     TMR3            equ	4018	;# 
   540   000FB2                     TMR3L           equ	4018	;# 
   541   000FB3                     TMR3H           equ	4019	;# 
   542   000FBA                     CCP2CON         equ	4026	;# 
   543   000FBB                     CCPR2           equ	4027	;# 
   544   000FBB                     CCPR2L          equ	4027	;# 
   545   000FBC                     CCPR2H          equ	4028	;# 
   546   000FBD                     CCP1CON         equ	4029	;# 
   547   000FBE                     CCPR1           equ	4030	;# 
   548   000FBE                     CCPR1L          equ	4030	;# 
   549   000FBF                     CCPR1H          equ	4031	;# 
   550   000FC1                     ADCON1          equ	4033	;# 
   551   000FC2                     ADCON0          equ	4034	;# 
   552   000FC3                     ADRES           equ	4035	;# 
   553   000FC3                     ADRESL          equ	4035	;# 
   554   000FC4                     ADRESH          equ	4036	;# 
   555   000FC5                     SSPCON2         equ	4037	;# 
   556   000FC6                     SSPCON1         equ	4038	;# 
   557   000FC7                     SSPSTAT         equ	4039	;# 
   558   000FC8                     SSPADD          equ	4040	;# 
   559   000FC9                     SSPBUF          equ	4041	;# 
   560   000FCA                     T2CON           equ	4042	;# 
   561   000FCB                     PR2             equ	4043	;# 
   562   000FCB                     MEMCON          equ	4043	;# 
   563   000FCC                     TMR2            equ	4044	;# 
   564   000FCD                     T1CON           equ	4045	;# 
   565   000FCE                     TMR1            equ	4046	;# 
   566   000FCE                     TMR1L           equ	4046	;# 
   567   000FCF                     TMR1H           equ	4047	;# 
   568   000FD0                     RCON            equ	4048	;# 
   569   000FD1                     WDTCON          equ	4049	;# 
   570   000FD2                     LVDCON          equ	4050	;# 
   571   000FD3                     OSCCON          equ	4051	;# 
   572   000FD5                     T0CON           equ	4053	;# 
   573   000FD6                     TMR0            equ	4054	;# 
   574   000FD6                     TMR0L           equ	4054	;# 
   575   000FD7                     TMR0H           equ	4055	;# 
   576   000FD8                     STATUS          equ	4056	;# 
   577   000FD9                     FSR2            equ	4057	;# 
   578   000FD9                     FSR2L           equ	4057	;# 
   579   000FDA                     FSR2H           equ	4058	;# 
   580   000FDB                     PLUSW2          equ	4059	;# 
   581   000FDC                     PREINC2         equ	4060	;# 
   582   000FDD                     POSTDEC2        equ	4061	;# 
   583   000FDE                     POSTINC2        equ	4062	;# 
   584   000FDF                     INDF2           equ	4063	;# 
   585   000FE0                     BSR             equ	4064	;# 
   586   000FE1                     FSR1            equ	4065	;# 
   587   000FE1                     FSR1L           equ	4065	;# 
   588   000FE2                     FSR1H           equ	4066	;# 
   589   000FE3                     PLUSW1          equ	4067	;# 
   590   000FE4                     PREINC1         equ	4068	;# 
   591   000FE5                     POSTDEC1        equ	4069	;# 
   592   000FE6                     POSTINC1        equ	4070	;# 
   593   000FE7                     INDF1           equ	4071	;# 
   594   000FE8                     WREG            equ	4072	;# 
   595   000FE9                     FSR0            equ	4073	;# 
   596   000FE9                     FSR0L           equ	4073	;# 
   597   000FEA                     FSR0H           equ	4074	;# 
   598   000FEB                     PLUSW0          equ	4075	;# 
   599   000FEC                     PREINC0         equ	4076	;# 
   600   000FED                     POSTDEC0        equ	4077	;# 
   601   000FEE                     POSTINC0        equ	4078	;# 
   602   000FEF                     INDF0           equ	4079	;# 
   603   000FF0                     INTCON3         equ	4080	;# 
   604   000FF1                     INTCON2         equ	4081	;# 
   605   000FF2                     INTCON          equ	4082	;# 
   606   000FF2                     INTCON1         equ	4082	;# 
   607   000FF3                     PROD            equ	4083	;# 
   608   000FF3                     PRODL           equ	4083	;# 
   609   000FF4                     PRODH           equ	4084	;# 
   610   000FF5                     TABLAT          equ	4085	;# 
   611   000FF6                     TBLPTR          equ	4086	;# 
   612   000FF6                     TBLPTRL         equ	4086	;# 
   613   000FF7                     TBLPTRH         equ	4087	;# 
   614   000FF8                     TBLPTRU         equ	4088	;# 
   615   000FF9                     PCLAT           equ	4089	;# 
   616   000FF9                     PC              equ	4089	;# 
   617   000FF9                     PCL             equ	4089	;# 
   618   000FFA                     PCLATH          equ	4090	;# 
   619   000FFB                     PCLATU          equ	4091	;# 
   620   000FFC                     STKPTR          equ	4092	;# 
   621   000FFD                     TOS             equ	4093	;# 
   622   000FFD                     TOSL            equ	4093	;# 
   623   000FFE                     TOSH            equ	4094	;# 
   624   000FFF                     TOSU            equ	4095	;# 
   625   000F80                     PORTA           equ	3968	;# 
   626   000F81                     PORTB           equ	3969	;# 
   627   000F82                     PORTC           equ	3970	;# 
   628   000F83                     PORTD           equ	3971	;# 
   629   000F84                     PORTE           equ	3972	;# 
   630   000F89                     LATA            equ	3977	;# 
   631   000F8A                     LATB            equ	3978	;# 
   632   000F8B                     LATC            equ	3979	;# 
   633   000F8C                     LATD            equ	3980	;# 
   634   000F8D                     LATE            equ	3981	;# 
   635   000F92                     TRISA           equ	3986	;# 
   636   000F92                     DDRA            equ	3986	;# 
   637   000F93                     TRISB           equ	3987	;# 
   638   000F93                     DDRB            equ	3987	;# 
   639   000F94                     TRISC           equ	3988	;# 
   640   000F94                     DDRC            equ	3988	;# 
   641   000F95                     TRISD           equ	3989	;# 
   642   000F95                     DDRD            equ	3989	;# 
   643   000F96                     TRISE           equ	3990	;# 
   644   000F96                     DDRE            equ	3990	;# 
   645   000F9D                     PIE1            equ	3997	;# 
   646   000F9E                     PIR1            equ	3998	;# 
   647   000F9F                     IPR1            equ	3999	;# 
   648   000FA0                     PIE2            equ	4000	;# 
   649   000FA1                     PIR2            equ	4001	;# 
   650   000FA2                     IPR2            equ	4002	;# 
   651   000FA6                     EECON1          equ	4006	;# 
   652   000FA7                     EECON2          equ	4007	;# 
   653   000FA8                     EEDATA          equ	4008	;# 
   654   000FA9                     EEADR           equ	4009	;# 
   655   000FAB                     RCSTA           equ	4011	;# 
   656   000FAB                     RCSTA1          equ	4011	;# 
   657   000FAC                     TXSTA           equ	4012	;# 
   658   000FAC                     TXSTA1          equ	4012	;# 
   659   000FAD                     TXREG           equ	4013	;# 
   660   000FAD                     TXREG1          equ	4013	;# 
   661   000FAE                     RCREG           equ	4014	;# 
   662   000FAE                     RCREG1          equ	4014	;# 
   663   000FAF                     SPBRG           equ	4015	;# 
   664   000FAF                     SPBRG1          equ	4015	;# 
   665   000FB1                     T3CON           equ	4017	;# 
   666   000FB2                     TMR3            equ	4018	;# 
   667   000FB2                     TMR3L           equ	4018	;# 
   668   000FB3                     TMR3H           equ	4019	;# 
   669   000FBA                     CCP2CON         equ	4026	;# 
   670   000FBB                     CCPR2           equ	4027	;# 
   671   000FBB                     CCPR2L          equ	4027	;# 
   672   000FBC                     CCPR2H          equ	4028	;# 
   673   000FBD                     CCP1CON         equ	4029	;# 
   674   000FBE                     CCPR1           equ	4030	;# 
   675   000FBE                     CCPR1L          equ	4030	;# 
   676   000FBF                     CCPR1H          equ	4031	;# 
   677   000FC1                     ADCON1          equ	4033	;# 
   678   000FC2                     ADCON0          equ	4034	;# 
   679   000FC3                     ADRES           equ	4035	;# 
   680   000FC3                     ADRESL          equ	4035	;# 
   681   000FC4                     ADRESH          equ	4036	;# 
   682   000FC5                     SSPCON2         equ	4037	;# 
   683   000FC6                     SSPCON1         equ	4038	;# 
   684   000FC7                     SSPSTAT         equ	4039	;# 
   685   000FC8                     SSPADD          equ	4040	;# 
   686   000FC9                     SSPBUF          equ	4041	;# 
   687   000FCA                     T2CON           equ	4042	;# 
   688   000FCB                     PR2             equ	4043	;# 
   689   000FCB                     MEMCON          equ	4043	;# 
   690   000FCC                     TMR2            equ	4044	;# 
   691   000FCD                     T1CON           equ	4045	;# 
   692   000FCE                     TMR1            equ	4046	;# 
   693   000FCE                     TMR1L           equ	4046	;# 
   694   000FCF                     TMR1H           equ	4047	;# 
   695   000FD0                     RCON            equ	4048	;# 
   696   000FD1                     WDTCON          equ	4049	;# 
   697   000FD2                     LVDCON          equ	4050	;# 
   698   000FD3                     OSCCON          equ	4051	;# 
   699   000FD5                     T0CON           equ	4053	;# 
   700   000FD6                     TMR0            equ	4054	;# 
   701   000FD6                     TMR0L           equ	4054	;# 
   702   000FD7                     TMR0H           equ	4055	;# 
   703   000FD8                     STATUS          equ	4056	;# 
   704   000FD9                     FSR2            equ	4057	;# 
   705   000FD9                     FSR2L           equ	4057	;# 
   706   000FDA                     FSR2H           equ	4058	;# 
   707   000FDB                     PLUSW2          equ	4059	;# 
   708   000FDC                     PREINC2         equ	4060	;# 
   709   000FDD                     POSTDEC2        equ	4061	;# 
   710   000FDE                     POSTINC2        equ	4062	;# 
   711   000FDF                     INDF2           equ	4063	;# 
   712   000FE0                     BSR             equ	4064	;# 
   713   000FE1                     FSR1            equ	4065	;# 
   714   000FE1                     FSR1L           equ	4065	;# 
   715   000FE2                     FSR1H           equ	4066	;# 
   716   000FE3                     PLUSW1          equ	4067	;# 
   717   000FE4                     PREINC1         equ	4068	;# 
   718   000FE5                     POSTDEC1        equ	4069	;# 
   719   000FE6                     POSTINC1        equ	4070	;# 
   720   000FE7                     INDF1           equ	4071	;# 
   721   000FE8                     WREG            equ	4072	;# 
   722   000FE9                     FSR0            equ	4073	;# 
   723   000FE9                     FSR0L           equ	4073	;# 
   724   000FEA                     FSR0H           equ	4074	;# 
   725   000FEB                     PLUSW0          equ	4075	;# 
   726   000FEC                     PREINC0         equ	4076	;# 
   727   000FED                     POSTDEC0        equ	4077	;# 
   728   000FEE                     POSTINC0        equ	4078	;# 
   729   000FEF                     INDF0           equ	4079	;# 
   730   000FF0                     INTCON3         equ	4080	;# 
   731   000FF1                     INTCON2         equ	4081	;# 
   732   000FF2                     INTCON          equ	4082	;# 
   733   000FF2                     INTCON1         equ	4082	;# 
   734   000FF3                     PROD            equ	4083	;# 
   735   000FF3                     PRODL           equ	4083	;# 
   736   000FF4                     PRODH           equ	4084	;# 
   737   000FF5                     TABLAT          equ	4085	;# 
   738   000FF6                     TBLPTR          equ	4086	;# 
   739   000FF6                     TBLPTRL         equ	4086	;# 
   740   000FF7                     TBLPTRH         equ	4087	;# 
   741   000FF8                     TBLPTRU         equ	4088	;# 
   742   000FF9                     PCLAT           equ	4089	;# 
   743   000FF9                     PC              equ	4089	;# 
   744   000FF9                     PCL             equ	4089	;# 
   745   000FFA                     PCLATH          equ	4090	;# 
   746   000FFB                     PCLATU          equ	4091	;# 
   747   000FFC                     STKPTR          equ	4092	;# 
   748   000FFD                     TOS             equ	4093	;# 
   749   000FFD                     TOSL            equ	4093	;# 
   750   000FFE                     TOSH            equ	4094	;# 
   751   000FFF                     TOSU            equ	4095	;# 
   752   000F80                     PORTA           equ	3968	;# 
   753   000F81                     PORTB           equ	3969	;# 
   754   000F82                     PORTC           equ	3970	;# 
   755   000F83                     PORTD           equ	3971	;# 
   756   000F84                     PORTE           equ	3972	;# 
   757   000F89                     LATA            equ	3977	;# 
   758   000F8A                     LATB            equ	3978	;# 
   759   000F8B                     LATC            equ	3979	;# 
   760   000F8C                     LATD            equ	3980	;# 
   761   000F8D                     LATE            equ	3981	;# 
   762   000F92                     TRISA           equ	3986	;# 
   763   000F92                     DDRA            equ	3986	;# 
   764   000F93                     TRISB           equ	3987	;# 
   765   000F93                     DDRB            equ	3987	;# 
   766   000F94                     TRISC           equ	3988	;# 
   767   000F94                     DDRC            equ	3988	;# 
   768   000F95                     TRISD           equ	3989	;# 
   769   000F95                     DDRD            equ	3989	;# 
   770   000F96                     TRISE           equ	3990	;# 
   771   000F96                     DDRE            equ	3990	;# 
   772   000F9D                     PIE1            equ	3997	;# 
   773   000F9E                     PIR1            equ	3998	;# 
   774   000F9F                     IPR1            equ	3999	;# 
   775   000FA0                     PIE2            equ	4000	;# 
   776   000FA1                     PIR2            equ	4001	;# 
   777   000FA2                     IPR2            equ	4002	;# 
   778   000FA6                     EECON1          equ	4006	;# 
   779   000FA7                     EECON2          equ	4007	;# 
   780   000FA8                     EEDATA          equ	4008	;# 
   781   000FA9                     EEADR           equ	4009	;# 
   782   000FAB                     RCSTA           equ	4011	;# 
   783   000FAB                     RCSTA1          equ	4011	;# 
   784   000FAC                     TXSTA           equ	4012	;# 
   785   000FAC                     TXSTA1          equ	4012	;# 
   786   000FAD                     TXREG           equ	4013	;# 
   787   000FAD                     TXREG1          equ	4013	;# 
   788   000FAE                     RCREG           equ	4014	;# 
   789   000FAE                     RCREG1          equ	4014	;# 
   790   000FAF                     SPBRG           equ	4015	;# 
   791   000FAF                     SPBRG1          equ	4015	;# 
   792   000FB1                     T3CON           equ	4017	;# 
   793   000FB2                     TMR3            equ	4018	;# 
   794   000FB2                     TMR3L           equ	4018	;# 
   795   000FB3                     TMR3H           equ	4019	;# 
   796   000FBA                     CCP2CON         equ	4026	;# 
   797   000FBB                     CCPR2           equ	4027	;# 
   798   000FBB                     CCPR2L          equ	4027	;# 
   799   000FBC                     CCPR2H          equ	4028	;# 
   800   000FBD                     CCP1CON         equ	4029	;# 
   801   000FBE                     CCPR1           equ	4030	;# 
   802   000FBE                     CCPR1L          equ	4030	;# 
   803   000FBF                     CCPR1H          equ	4031	;# 
   804   000FC1                     ADCON1          equ	4033	;# 
   805   000FC2                     ADCON0          equ	4034	;# 
   806   000FC3                     ADRES           equ	4035	;# 
   807   000FC3                     ADRESL          equ	4035	;# 
   808   000FC4                     ADRESH          equ	4036	;# 
   809   000FC5                     SSPCON2         equ	4037	;# 
   810   000FC6                     SSPCON1         equ	4038	;# 
   811   000FC7                     SSPSTAT         equ	4039	;# 
   812   000FC8                     SSPADD          equ	4040	;# 
   813   000FC9                     SSPBUF          equ	4041	;# 
   814   000FCA                     T2CON           equ	4042	;# 
   815   000FCB                     PR2             equ	4043	;# 
   816   000FCB                     MEMCON          equ	4043	;# 
   817   000FCC                     TMR2            equ	4044	;# 
   818   000FCD                     T1CON           equ	4045	;# 
   819   000FCE                     TMR1            equ	4046	;# 
   820   000FCE                     TMR1L           equ	4046	;# 
   821   000FCF                     TMR1H           equ	4047	;# 
   822   000FD0                     RCON            equ	4048	;# 
   823   000FD1                     WDTCON          equ	4049	;# 
   824   000FD2                     LVDCON          equ	4050	;# 
   825   000FD3                     OSCCON          equ	4051	;# 
   826   000FD5                     T0CON           equ	4053	;# 
   827   000FD6                     TMR0            equ	4054	;# 
   828   000FD6                     TMR0L           equ	4054	;# 
   829   000FD7                     TMR0H           equ	4055	;# 
   830   000FD8                     STATUS          equ	4056	;# 
   831   000FD9                     FSR2            equ	4057	;# 
   832   000FD9                     FSR2L           equ	4057	;# 
   833   000FDA                     FSR2H           equ	4058	;# 
   834   000FDB                     PLUSW2          equ	4059	;# 
   835   000FDC                     PREINC2         equ	4060	;# 
   836   000FDD                     POSTDEC2        equ	4061	;# 
   837   000FDE                     POSTINC2        equ	4062	;# 
   838   000FDF                     INDF2           equ	4063	;# 
   839   000FE0                     BSR             equ	4064	;# 
   840   000FE1                     FSR1            equ	4065	;# 
   841   000FE1                     FSR1L           equ	4065	;# 
   842   000FE2                     FSR1H           equ	4066	;# 
   843   000FE3                     PLUSW1          equ	4067	;# 
   844   000FE4                     PREINC1         equ	4068	;# 
   845   000FE5                     POSTDEC1        equ	4069	;# 
   846   000FE6                     POSTINC1        equ	4070	;# 
   847   000FE7                     INDF1           equ	4071	;# 
   848   000FE8                     WREG            equ	4072	;# 
   849   000FE9                     FSR0            equ	4073	;# 
   850   000FE9                     FSR0L           equ	4073	;# 
   851   000FEA                     FSR0H           equ	4074	;# 
   852   000FEB                     PLUSW0          equ	4075	;# 
   853   000FEC                     PREINC0         equ	4076	;# 
   854   000FED                     POSTDEC0        equ	4077	;# 
   855   000FEE                     POSTINC0        equ	4078	;# 
   856   000FEF                     INDF0           equ	4079	;# 
   857   000FF0                     INTCON3         equ	4080	;# 
   858   000FF1                     INTCON2         equ	4081	;# 
   859   000FF2                     INTCON          equ	4082	;# 
   860   000FF2                     INTCON1         equ	4082	;# 
   861   000FF3                     PROD            equ	4083	;# 
   862   000FF3                     PRODL           equ	4083	;# 
   863   000FF4                     PRODH           equ	4084	;# 
   864   000FF5                     TABLAT          equ	4085	;# 
   865   000FF6                     TBLPTR          equ	4086	;# 
   866   000FF6                     TBLPTRL         equ	4086	;# 
   867   000FF7                     TBLPTRH         equ	4087	;# 
   868   000FF8                     TBLPTRU         equ	4088	;# 
   869   000FF9                     PCLAT           equ	4089	;# 
   870   000FF9                     PC              equ	4089	;# 
   871   000FF9                     PCL             equ	4089	;# 
   872   000FFA                     PCLATH          equ	4090	;# 
   873   000FFB                     PCLATU          equ	4091	;# 
   874   000FFC                     STKPTR          equ	4092	;# 
   875   000FFD                     TOS             equ	4093	;# 
   876   000FFD                     TOSL            equ	4093	;# 
   877   000FFE                     TOSH            equ	4094	;# 
   878   000FFF                     TOSU            equ	4095	;# 
   879   000F80                     PORTA           equ	3968	;# 
   880   000F81                     PORTB           equ	3969	;# 
   881   000F82                     PORTC           equ	3970	;# 
   882   000F83                     PORTD           equ	3971	;# 
   883   000F84                     PORTE           equ	3972	;# 
   884   000F89                     LATA            equ	3977	;# 
   885   000F8A                     LATB            equ	3978	;# 
   886   000F8B                     LATC            equ	3979	;# 
   887   000F8C                     LATD            equ	3980	;# 
   888   000F8D                     LATE            equ	3981	;# 
   889   000F92                     TRISA           equ	3986	;# 
   890   000F92                     DDRA            equ	3986	;# 
   891   000F93                     TRISB           equ	3987	;# 
   892   000F93                     DDRB            equ	3987	;# 
   893   000F94                     TRISC           equ	3988	;# 
   894   000F94                     DDRC            equ	3988	;# 
   895   000F95                     TRISD           equ	3989	;# 
   896   000F95                     DDRD            equ	3989	;# 
   897   000F96                     TRISE           equ	3990	;# 
   898   000F96                     DDRE            equ	3990	;# 
   899   000F9D                     PIE1            equ	3997	;# 
   900   000F9E                     PIR1            equ	3998	;# 
   901   000F9F                     IPR1            equ	3999	;# 
   902   000FA0                     PIE2            equ	4000	;# 
   903   000FA1                     PIR2            equ	4001	;# 
   904   000FA2                     IPR2            equ	4002	;# 
   905   000FA6                     EECON1          equ	4006	;# 
   906   000FA7                     EECON2          equ	4007	;# 
   907   000FA8                     EEDATA          equ	4008	;# 
   908   000FA9                     EEADR           equ	4009	;# 
   909   000FAB                     RCSTA           equ	4011	;# 
   910   000FAB                     RCSTA1          equ	4011	;# 
   911   000FAC                     TXSTA           equ	4012	;# 
   912   000FAC                     TXSTA1          equ	4012	;# 
   913   000FAD                     TXREG           equ	4013	;# 
   914   000FAD                     TXREG1          equ	4013	;# 
   915   000FAE                     RCREG           equ	4014	;# 
   916   000FAE                     RCREG1          equ	4014	;# 
   917   000FAF                     SPBRG           equ	4015	;# 
   918   000FAF                     SPBRG1          equ	4015	;# 
   919   000FB1                     T3CON           equ	4017	;# 
   920   000FB2                     TMR3            equ	4018	;# 
   921   000FB2                     TMR3L           equ	4018	;# 
   922   000FB3                     TMR3H           equ	4019	;# 
   923   000FBA                     CCP2CON         equ	4026	;# 
   924   000FBB                     CCPR2           equ	4027	;# 
   925   000FBB                     CCPR2L          equ	4027	;# 
   926   000FBC                     CCPR2H          equ	4028	;# 
   927   000FBD                     CCP1CON         equ	4029	;# 
   928   000FBE                     CCPR1           equ	4030	;# 
   929   000FBE                     CCPR1L          equ	4030	;# 
   930   000FBF                     CCPR1H          equ	4031	;# 
   931   000FC1                     ADCON1          equ	4033	;# 
   932   000FC2                     ADCON0          equ	4034	;# 
   933   000FC3                     ADRES           equ	4035	;# 
   934   000FC3                     ADRESL          equ	4035	;# 
   935   000FC4                     ADRESH          equ	4036	;# 
   936   000FC5                     SSPCON2         equ	4037	;# 
   937   000FC6                     SSPCON1         equ	4038	;# 
   938   000FC7                     SSPSTAT         equ	4039	;# 
   939   000FC8                     SSPADD          equ	4040	;# 
   940   000FC9                     SSPBUF          equ	4041	;# 
   941   000FCA                     T2CON           equ	4042	;# 
   942   000FCB                     PR2             equ	4043	;# 
   943   000FCB                     MEMCON          equ	4043	;# 
   944   000FCC                     TMR2            equ	4044	;# 
   945   000FCD                     T1CON           equ	4045	;# 
   946   000FCE                     TMR1            equ	4046	;# 
   947   000FCE                     TMR1L           equ	4046	;# 
   948   000FCF                     TMR1H           equ	4047	;# 
   949   000FD0                     RCON            equ	4048	;# 
   950   000FD1                     WDTCON          equ	4049	;# 
   951   000FD2                     LVDCON          equ	4050	;# 
   952   000FD3                     OSCCON          equ	4051	;# 
   953   000FD5                     T0CON           equ	4053	;# 
   954   000FD6                     TMR0            equ	4054	;# 
   955   000FD6                     TMR0L           equ	4054	;# 
   956   000FD7                     TMR0H           equ	4055	;# 
   957   000FD8                     STATUS          equ	4056	;# 
   958   000FD9                     FSR2            equ	4057	;# 
   959   000FD9                     FSR2L           equ	4057	;# 
   960   000FDA                     FSR2H           equ	4058	;# 
   961   000FDB                     PLUSW2          equ	4059	;# 
   962   000FDC                     PREINC2         equ	4060	;# 
   963   000FDD                     POSTDEC2        equ	4061	;# 
   964   000FDE                     POSTINC2        equ	4062	;# 
   965   000FDF                     INDF2           equ	4063	;# 
   966   000FE0                     BSR             equ	4064	;# 
   967   000FE1                     FSR1            equ	4065	;# 
   968   000FE1                     FSR1L           equ	4065	;# 
   969   000FE2                     FSR1H           equ	4066	;# 
   970   000FE3                     PLUSW1          equ	4067	;# 
   971   000FE4                     PREINC1         equ	4068	;# 
   972   000FE5                     POSTDEC1        equ	4069	;# 
   973   000FE6                     POSTINC1        equ	4070	;# 
   974   000FE7                     INDF1           equ	4071	;# 
   975   000FE8                     WREG            equ	4072	;# 
   976   000FE9                     FSR0            equ	4073	;# 
   977   000FE9                     FSR0L           equ	4073	;# 
   978   000FEA                     FSR0H           equ	4074	;# 
   979   000FEB                     PLUSW0          equ	4075	;# 
   980   000FEC                     PREINC0         equ	4076	;# 
   981   000FED                     POSTDEC0        equ	4077	;# 
   982   000FEE                     POSTINC0        equ	4078	;# 
   983   000FEF                     INDF0           equ	4079	;# 
   984   000FF0                     INTCON3         equ	4080	;# 
   985   000FF1                     INTCON2         equ	4081	;# 
   986   000FF2                     INTCON          equ	4082	;# 
   987   000FF2                     INTCON1         equ	4082	;# 
   988   000FF3                     PROD            equ	4083	;# 
   989   000FF3                     PRODL           equ	4083	;# 
   990   000FF4                     PRODH           equ	4084	;# 
   991   000FF5                     TABLAT          equ	4085	;# 
   992   000FF6                     TBLPTR          equ	4086	;# 
   993   000FF6                     TBLPTRL         equ	4086	;# 
   994   000FF7                     TBLPTRH         equ	4087	;# 
   995   000FF8                     TBLPTRU         equ	4088	;# 
   996   000FF9                     PCLAT           equ	4089	;# 
   997   000FF9                     PC              equ	4089	;# 
   998   000FF9                     PCL             equ	4089	;# 
   999   000FFA                     PCLATH          equ	4090	;# 
  1000   000FFB                     PCLATU          equ	4091	;# 
  1001   000FFC                     STKPTR          equ	4092	;# 
  1002   000FFD                     TOS             equ	4093	;# 
  1003   000FFD                     TOSL            equ	4093	;# 
  1004   000FFE                     TOSH            equ	4094	;# 
  1005   000FFF                     TOSU            equ	4095	;# 
  1006   000F80                     PORTA           equ	3968	;# 
  1007   000F81                     PORTB           equ	3969	;# 
  1008   000F82                     PORTC           equ	3970	;# 
  1009   000F83                     PORTD           equ	3971	;# 
  1010   000F84                     PORTE           equ	3972	;# 
  1011   000F89                     LATA            equ	3977	;# 
  1012   000F8A                     LATB            equ	3978	;# 
  1013   000F8B                     LATC            equ	3979	;# 
  1014   000F8C                     LATD            equ	3980	;# 
  1015   000F8D                     LATE            equ	3981	;# 
  1016   000F92                     TRISA           equ	3986	;# 
  1017   000F92                     DDRA            equ	3986	;# 
  1018   000F93                     TRISB           equ	3987	;# 
  1019   000F93                     DDRB            equ	3987	;# 
  1020   000F94                     TRISC           equ	3988	;# 
  1021   000F94                     DDRC            equ	3988	;# 
  1022   000F95                     TRISD           equ	3989	;# 
  1023   000F95                     DDRD            equ	3989	;# 
  1024   000F96                     TRISE           equ	3990	;# 
  1025   000F96                     DDRE            equ	3990	;# 
  1026   000F9D                     PIE1            equ	3997	;# 
  1027   000F9E                     PIR1            equ	3998	;# 
  1028   000F9F                     IPR1            equ	3999	;# 
  1029   000FA0                     PIE2            equ	4000	;# 
  1030   000FA1                     PIR2            equ	4001	;# 
  1031   000FA2                     IPR2            equ	4002	;# 
  1032   000FA6                     EECON1          equ	4006	;# 
  1033   000FA7                     EECON2          equ	4007	;# 
  1034   000FA8                     EEDATA          equ	4008	;# 
  1035   000FA9                     EEADR           equ	4009	;# 
  1036   000FAB                     RCSTA           equ	4011	;# 
  1037   000FAB                     RCSTA1          equ	4011	;# 
  1038   000FAC                     TXSTA           equ	4012	;# 
  1039   000FAC                     TXSTA1          equ	4012	;# 
  1040   000FAD                     TXREG           equ	4013	;# 
  1041   000FAD                     TXREG1          equ	4013	;# 
  1042   000FAE                     RCREG           equ	4014	;# 
  1043   000FAE                     RCREG1          equ	4014	;# 
  1044   000FAF                     SPBRG           equ	4015	;# 
  1045   000FAF                     SPBRG1          equ	4015	;# 
  1046   000FB1                     T3CON           equ	4017	;# 
  1047   000FB2                     TMR3            equ	4018	;# 
  1048   000FB2                     TMR3L           equ	4018	;# 
  1049   000FB3                     TMR3H           equ	4019	;# 
  1050   000FBA                     CCP2CON         equ	4026	;# 
  1051   000FBB                     CCPR2           equ	4027	;# 
  1052   000FBB                     CCPR2L          equ	4027	;# 
  1053   000FBC                     CCPR2H          equ	4028	;# 
  1054   000FBD                     CCP1CON         equ	4029	;# 
  1055   000FBE                     CCPR1           equ	4030	;# 
  1056   000FBE                     CCPR1L          equ	4030	;# 
  1057   000FBF                     CCPR1H          equ	4031	;# 
  1058   000FC1                     ADCON1          equ	4033	;# 
  1059   000FC2                     ADCON0          equ	4034	;# 
  1060   000FC3                     ADRES           equ	4035	;# 
  1061   000FC3                     ADRESL          equ	4035	;# 
  1062   000FC4                     ADRESH          equ	4036	;# 
  1063   000FC5                     SSPCON2         equ	4037	;# 
  1064   000FC6                     SSPCON1         equ	4038	;# 
  1065   000FC7                     SSPSTAT         equ	4039	;# 
  1066   000FC8                     SSPADD          equ	4040	;# 
  1067   000FC9                     SSPBUF          equ	4041	;# 
  1068   000FCA                     T2CON           equ	4042	;# 
  1069   000FCB                     PR2             equ	4043	;# 
  1070   000FCB                     MEMCON          equ	4043	;# 
  1071   000FCC                     TMR2            equ	4044	;# 
  1072   000FCD                     T1CON           equ	4045	;# 
  1073   000FCE                     TMR1            equ	4046	;# 
  1074   000FCE                     TMR1L           equ	4046	;# 
  1075   000FCF                     TMR1H           equ	4047	;# 
  1076   000FD0                     RCON            equ	4048	;# 
  1077   000FD1                     WDTCON          equ	4049	;# 
  1078   000FD2                     LVDCON          equ	4050	;# 
  1079   000FD3                     OSCCON          equ	4051	;# 
  1080   000FD5                     T0CON           equ	4053	;# 
  1081   000FD6                     TMR0            equ	4054	;# 
  1082   000FD6                     TMR0L           equ	4054	;# 
  1083   000FD7                     TMR0H           equ	4055	;# 
  1084   000FD8                     STATUS          equ	4056	;# 
  1085   000FD9                     FSR2            equ	4057	;# 
  1086   000FD9                     FSR2L           equ	4057	;# 
  1087   000FDA                     FSR2H           equ	4058	;# 
  1088   000FDB                     PLUSW2          equ	4059	;# 
  1089   000FDC                     PREINC2         equ	4060	;# 
  1090   000FDD                     POSTDEC2        equ	4061	;# 
  1091   000FDE                     POSTINC2        equ	4062	;# 
  1092   000FDF                     INDF2           equ	4063	;# 
  1093   000FE0                     BSR             equ	4064	;# 
  1094   000FE1                     FSR1            equ	4065	;# 
  1095   000FE1                     FSR1L           equ	4065	;# 
  1096   000FE2                     FSR1H           equ	4066	;# 
  1097   000FE3                     PLUSW1          equ	4067	;# 
  1098   000FE4                     PREINC1         equ	4068	;# 
  1099   000FE5                     POSTDEC1        equ	4069	;# 
  1100   000FE6                     POSTINC1        equ	4070	;# 
  1101   000FE7                     INDF1           equ	4071	;# 
  1102   000FE8                     WREG            equ	4072	;# 
  1103   000FE9                     FSR0            equ	4073	;# 
  1104   000FE9                     FSR0L           equ	4073	;# 
  1105   000FEA                     FSR0H           equ	4074	;# 
  1106   000FEB                     PLUSW0          equ	4075	;# 
  1107   000FEC                     PREINC0         equ	4076	;# 
  1108   000FED                     POSTDEC0        equ	4077	;# 
  1109   000FEE                     POSTINC0        equ	4078	;# 
  1110   000FEF                     INDF0           equ	4079	;# 
  1111   000FF0                     INTCON3         equ	4080	;# 
  1112   000FF1                     INTCON2         equ	4081	;# 
  1113   000FF2                     INTCON          equ	4082	;# 
  1114   000FF2                     INTCON1         equ	4082	;# 
  1115   000FF3                     PROD            equ	4083	;# 
  1116   000FF3                     PRODL           equ	4083	;# 
  1117   000FF4                     PRODH           equ	4084	;# 
  1118   000FF5                     TABLAT          equ	4085	;# 
  1119   000FF6                     TBLPTR          equ	4086	;# 
  1120   000FF6                     TBLPTRL         equ	4086	;# 
  1121   000FF7                     TBLPTRH         equ	4087	;# 
  1122   000FF8                     TBLPTRU         equ	4088	;# 
  1123   000FF9                     PCLAT           equ	4089	;# 
  1124   000FF9                     PC              equ	4089	;# 
  1125   000FF9                     PCL             equ	4089	;# 
  1126   000FFA                     PCLATH          equ	4090	;# 
  1127   000FFB                     PCLATU          equ	4091	;# 
  1128   000FFC                     STKPTR          equ	4092	;# 
  1129   000FFD                     TOS             equ	4093	;# 
  1130   000FFD                     TOSL            equ	4093	;# 
  1131   000FFE                     TOSH            equ	4094	;# 
  1132   000FFF                     TOSU            equ	4095	;# 
  1133   000F80                     PORTA           equ	3968	;# 
  1134   000F81                     PORTB           equ	3969	;# 
  1135   000F82                     PORTC           equ	3970	;# 
  1136   000F83                     PORTD           equ	3971	;# 
  1137   000F84                     PORTE           equ	3972	;# 
  1138   000F89                     LATA            equ	3977	;# 
  1139   000F8A                     LATB            equ	3978	;# 
  1140   000F8B                     LATC            equ	3979	;# 
  1141   000F8C                     LATD            equ	3980	;# 
  1142   000F8D                     LATE            equ	3981	;# 
  1143   000F92                     TRISA           equ	3986	;# 
  1144   000F92                     DDRA            equ	3986	;# 
  1145   000F93                     TRISB           equ	3987	;# 
  1146   000F93                     DDRB            equ	3987	;# 
  1147   000F94                     TRISC           equ	3988	;# 
  1148   000F94                     DDRC            equ	3988	;# 
  1149   000F95                     TRISD           equ	3989	;# 
  1150   000F95                     DDRD            equ	3989	;# 
  1151   000F96                     TRISE           equ	3990	;# 
  1152   000F96                     DDRE            equ	3990	;# 
  1153   000F9D                     PIE1            equ	3997	;# 
  1154   000F9E                     PIR1            equ	3998	;# 
  1155   000F9F                     IPR1            equ	3999	;# 
  1156   000FA0                     PIE2            equ	4000	;# 
  1157   000FA1                     PIR2            equ	4001	;# 
  1158   000FA2                     IPR2            equ	4002	;# 
  1159   000FA6                     EECON1          equ	4006	;# 
  1160   000FA7                     EECON2          equ	4007	;# 
  1161   000FA8                     EEDATA          equ	4008	;# 
  1162   000FA9                     EEADR           equ	4009	;# 
  1163   000FAB                     RCSTA           equ	4011	;# 
  1164   000FAB                     RCSTA1          equ	4011	;# 
  1165   000FAC                     TXSTA           equ	4012	;# 
  1166   000FAC                     TXSTA1          equ	4012	;# 
  1167   000FAD                     TXREG           equ	4013	;# 
  1168   000FAD                     TXREG1          equ	4013	;# 
  1169   000FAE                     RCREG           equ	4014	;# 
  1170   000FAE                     RCREG1          equ	4014	;# 
  1171   000FAF                     SPBRG           equ	4015	;# 
  1172   000FAF                     SPBRG1          equ	4015	;# 
  1173   000FB1                     T3CON           equ	4017	;# 
  1174   000FB2                     TMR3            equ	4018	;# 
  1175   000FB2                     TMR3L           equ	4018	;# 
  1176   000FB3                     TMR3H           equ	4019	;# 
  1177   000FBA                     CCP2CON         equ	4026	;# 
  1178   000FBB                     CCPR2           equ	4027	;# 
  1179   000FBB                     CCPR2L          equ	4027	;# 
  1180   000FBC                     CCPR2H          equ	4028	;# 
  1181   000FBD                     CCP1CON         equ	4029	;# 
  1182   000FBE                     CCPR1           equ	4030	;# 
  1183   000FBE                     CCPR1L          equ	4030	;# 
  1184   000FBF                     CCPR1H          equ	4031	;# 
  1185   000FC1                     ADCON1          equ	4033	;# 
  1186   000FC2                     ADCON0          equ	4034	;# 
  1187   000FC3                     ADRES           equ	4035	;# 
  1188   000FC3                     ADRESL          equ	4035	;# 
  1189   000FC4                     ADRESH          equ	4036	;# 
  1190   000FC5                     SSPCON2         equ	4037	;# 
  1191   000FC6                     SSPCON1         equ	4038	;# 
  1192   000FC7                     SSPSTAT         equ	4039	;# 
  1193   000FC8                     SSPADD          equ	4040	;# 
  1194   000FC9                     SSPBUF          equ	4041	;# 
  1195   000FCA                     T2CON           equ	4042	;# 
  1196   000FCB                     PR2             equ	4043	;# 
  1197   000FCB                     MEMCON          equ	4043	;# 
  1198   000FCC                     TMR2            equ	4044	;# 
  1199   000FCD                     T1CON           equ	4045	;# 
  1200   000FCE                     TMR1            equ	4046	;# 
  1201   000FCE                     TMR1L           equ	4046	;# 
  1202   000FCF                     TMR1H           equ	4047	;# 
  1203   000FD0                     RCON            equ	4048	;# 
  1204   000FD1                     WDTCON          equ	4049	;# 
  1205   000FD2                     LVDCON          equ	4050	;# 
  1206   000FD3                     OSCCON          equ	4051	;# 
  1207   000FD5                     T0CON           equ	4053	;# 
  1208   000FD6                     TMR0            equ	4054	;# 
  1209   000FD6                     TMR0L           equ	4054	;# 
  1210   000FD7                     TMR0H           equ	4055	;# 
  1211   000FD8                     STATUS          equ	4056	;# 
  1212   000FD9                     FSR2            equ	4057	;# 
  1213   000FD9                     FSR2L           equ	4057	;# 
  1214   000FDA                     FSR2H           equ	4058	;# 
  1215   000FDB                     PLUSW2          equ	4059	;# 
  1216   000FDC                     PREINC2         equ	4060	;# 
  1217   000FDD                     POSTDEC2        equ	4061	;# 
  1218   000FDE                     POSTINC2        equ	4062	;# 
  1219   000FDF                     INDF2           equ	4063	;# 
  1220   000FE0                     BSR             equ	4064	;# 
  1221   000FE1                     FSR1            equ	4065	;# 
  1222   000FE1                     FSR1L           equ	4065	;# 
  1223   000FE2                     FSR1H           equ	4066	;# 
  1224   000FE3                     PLUSW1          equ	4067	;# 
  1225   000FE4                     PREINC1         equ	4068	;# 
  1226   000FE5                     POSTDEC1        equ	4069	;# 
  1227   000FE6                     POSTINC1        equ	4070	;# 
  1228   000FE7                     INDF1           equ	4071	;# 
  1229   000FE8                     WREG            equ	4072	;# 
  1230   000FE9                     FSR0            equ	4073	;# 
  1231   000FE9                     FSR0L           equ	4073	;# 
  1232   000FEA                     FSR0H           equ	4074	;# 
  1233   000FEB                     PLUSW0          equ	4075	;# 
  1234   000FEC                     PREINC0         equ	4076	;# 
  1235   000FED                     POSTDEC0        equ	4077	;# 
  1236   000FEE                     POSTINC0        equ	4078	;# 
  1237   000FEF                     INDF0           equ	4079	;# 
  1238   000FF0                     INTCON3         equ	4080	;# 
  1239   000FF1                     INTCON2         equ	4081	;# 
  1240   000FF2                     INTCON          equ	4082	;# 
  1241   000FF2                     INTCON1         equ	4082	;# 
  1242   000FF3                     PROD            equ	4083	;# 
  1243   000FF3                     PRODL           equ	4083	;# 
  1244   000FF4                     PRODH           equ	4084	;# 
  1245   000FF5                     TABLAT          equ	4085	;# 
  1246   000FF6                     TBLPTR          equ	4086	;# 
  1247   000FF6                     TBLPTRL         equ	4086	;# 
  1248   000FF7                     TBLPTRH         equ	4087	;# 
  1249   000FF8                     TBLPTRU         equ	4088	;# 
  1250   000FF9                     PCLAT           equ	4089	;# 
  1251   000FF9                     PC              equ	4089	;# 
  1252   000FF9                     PCL             equ	4089	;# 
  1253   000FFA                     PCLATH          equ	4090	;# 
  1254   000FFB                     PCLATU          equ	4091	;# 
  1255   000FFC                     STKPTR          equ	4092	;# 
  1256   000FFD                     TOS             equ	4093	;# 
  1257   000FFD                     TOSL            equ	4093	;# 
  1258   000FFE                     TOSH            equ	4094	;# 
  1259   000FFF                     TOSU            equ	4095	;# 
  1260   000F80                     PORTA           equ	3968	;# 
  1261   000F81                     PORTB           equ	3969	;# 
  1262   000F82                     PORTC           equ	3970	;# 
  1263   000F83                     PORTD           equ	3971	;# 
  1264   000F84                     PORTE           equ	3972	;# 
  1265   000F89                     LATA            equ	3977	;# 
  1266   000F8A                     LATB            equ	3978	;# 
  1267   000F8B                     LATC            equ	3979	;# 
  1268   000F8C                     LATD            equ	3980	;# 
  1269   000F8D                     LATE            equ	3981	;# 
  1270   000F92                     TRISA           equ	3986	;# 
  1271   000F92                     DDRA            equ	3986	;# 
  1272   000F93                     TRISB           equ	3987	;# 
  1273   000F93                     DDRB            equ	3987	;# 
  1274   000F94                     TRISC           equ	3988	;# 
  1275   000F94                     DDRC            equ	3988	;# 
  1276   000F95                     TRISD           equ	3989	;# 
  1277   000F95                     DDRD            equ	3989	;# 
  1278   000F96                     TRISE           equ	3990	;# 
  1279   000F96                     DDRE            equ	3990	;# 
  1280   000F9D                     PIE1            equ	3997	;# 
  1281   000F9E                     PIR1            equ	3998	;# 
  1282   000F9F                     IPR1            equ	3999	;# 
  1283   000FA0                     PIE2            equ	4000	;# 
  1284   000FA1                     PIR2            equ	4001	;# 
  1285   000FA2                     IPR2            equ	4002	;# 
  1286   000FA6                     EECON1          equ	4006	;# 
  1287   000FA7                     EECON2          equ	4007	;# 
  1288   000FA8                     EEDATA          equ	4008	;# 
  1289   000FA9                     EEADR           equ	4009	;# 
  1290   000FAB                     RCSTA           equ	4011	;# 
  1291   000FAB                     RCSTA1          equ	4011	;# 
  1292   000FAC                     TXSTA           equ	4012	;# 
  1293   000FAC                     TXSTA1          equ	4012	;# 
  1294   000FAD                     TXREG           equ	4013	;# 
  1295   000FAD                     TXREG1          equ	4013	;# 
  1296   000FAE                     RCREG           equ	4014	;# 
  1297   000FAE                     RCREG1          equ	4014	;# 
  1298   000FAF                     SPBRG           equ	4015	;# 
  1299   000FAF                     SPBRG1          equ	4015	;# 
  1300   000FB1                     T3CON           equ	4017	;# 
  1301   000FB2                     TMR3            equ	4018	;# 
  1302   000FB2                     TMR3L           equ	4018	;# 
  1303   000FB3                     TMR3H           equ	4019	;# 
  1304   000FBA                     CCP2CON         equ	4026	;# 
  1305   000FBB                     CCPR2           equ	4027	;# 
  1306   000FBB                     CCPR2L          equ	4027	;# 
  1307   000FBC                     CCPR2H          equ	4028	;# 
  1308   000FBD                     CCP1CON         equ	4029	;# 
  1309   000FBE                     CCPR1           equ	4030	;# 
  1310   000FBE                     CCPR1L          equ	4030	;# 
  1311   000FBF                     CCPR1H          equ	4031	;# 
  1312   000FC1                     ADCON1          equ	4033	;# 
  1313   000FC2                     ADCON0          equ	4034	;# 
  1314   000FC3                     ADRES           equ	4035	;# 
  1315   000FC3                     ADRESL          equ	4035	;# 
  1316   000FC4                     ADRESH          equ	4036	;# 
  1317   000FC5                     SSPCON2         equ	4037	;# 
  1318   000FC6                     SSPCON1         equ	4038	;# 
  1319   000FC7                     SSPSTAT         equ	4039	;# 
  1320   000FC8                     SSPADD          equ	4040	;# 
  1321   000FC9                     SSPBUF          equ	4041	;# 
  1322   000FCA                     T2CON           equ	4042	;# 
  1323   000FCB                     PR2             equ	4043	;# 
  1324   000FCB                     MEMCON          equ	4043	;# 
  1325   000FCC                     TMR2            equ	4044	;# 
  1326   000FCD                     T1CON           equ	4045	;# 
  1327   000FCE                     TMR1            equ	4046	;# 
  1328   000FCE                     TMR1L           equ	4046	;# 
  1329   000FCF                     TMR1H           equ	4047	;# 
  1330   000FD0                     RCON            equ	4048	;# 
  1331   000FD1                     WDTCON          equ	4049	;# 
  1332   000FD2                     LVDCON          equ	4050	;# 
  1333   000FD3                     OSCCON          equ	4051	;# 
  1334   000FD5                     T0CON           equ	4053	;# 
  1335   000FD6                     TMR0            equ	4054	;# 
  1336   000FD6                     TMR0L           equ	4054	;# 
  1337   000FD7                     TMR0H           equ	4055	;# 
  1338   000FD8                     STATUS          equ	4056	;# 
  1339   000FD9                     FSR2            equ	4057	;# 
  1340   000FD9                     FSR2L           equ	4057	;# 
  1341   000FDA                     FSR2H           equ	4058	;# 
  1342   000FDB                     PLUSW2          equ	4059	;# 
  1343   000FDC                     PREINC2         equ	4060	;# 
  1344   000FDD                     POSTDEC2        equ	4061	;# 
  1345   000FDE                     POSTINC2        equ	4062	;# 
  1346   000FDF                     INDF2           equ	4063	;# 
  1347   000FE0                     BSR             equ	4064	;# 
  1348   000FE1                     FSR1            equ	4065	;# 
  1349   000FE1                     FSR1L           equ	4065	;# 
  1350   000FE2                     FSR1H           equ	4066	;# 
  1351   000FE3                     PLUSW1          equ	4067	;# 
  1352   000FE4                     PREINC1         equ	4068	;# 
  1353   000FE5                     POSTDEC1        equ	4069	;# 
  1354   000FE6                     POSTINC1        equ	4070	;# 
  1355   000FE7                     INDF1           equ	4071	;# 
  1356   000FE8                     WREG            equ	4072	;# 
  1357   000FE9                     FSR0            equ	4073	;# 
  1358   000FE9                     FSR0L           equ	4073	;# 
  1359   000FEA                     FSR0H           equ	4074	;# 
  1360   000FEB                     PLUSW0          equ	4075	;# 
  1361   000FEC                     PREINC0         equ	4076	;# 
  1362   000FED                     POSTDEC0        equ	4077	;# 
  1363   000FEE                     POSTINC0        equ	4078	;# 
  1364   000FEF                     INDF0           equ	4079	;# 
  1365   000FF0                     INTCON3         equ	4080	;# 
  1366   000FF1                     INTCON2         equ	4081	;# 
  1367   000FF2                     INTCON          equ	4082	;# 
  1368   000FF2                     INTCON1         equ	4082	;# 
  1369   000FF3                     PROD            equ	4083	;# 
  1370   000FF3                     PRODL           equ	4083	;# 
  1371   000FF4                     PRODH           equ	4084	;# 
  1372   000FF5                     TABLAT          equ	4085	;# 
  1373   000FF6                     TBLPTR          equ	4086	;# 
  1374   000FF6                     TBLPTRL         equ	4086	;# 
  1375   000FF7                     TBLPTRH         equ	4087	;# 
  1376   000FF8                     TBLPTRU         equ	4088	;# 
  1377   000FF9                     PCLAT           equ	4089	;# 
  1378   000FF9                     PC              equ	4089	;# 
  1379   000FF9                     PCL             equ	4089	;# 
  1380   000FFA                     PCLATH          equ	4090	;# 
  1381   000FFB                     PCLATU          equ	4091	;# 
  1382   000FFC                     STKPTR          equ	4092	;# 
  1383   000FFD                     TOS             equ	4093	;# 
  1384   000FFD                     TOSL            equ	4093	;# 
  1385   000FFE                     TOSH            equ	4094	;# 
  1386   000FFF                     TOSU            equ	4095	;# 
  1387   000F80                     PORTA           equ	3968	;# 
  1388   000F81                     PORTB           equ	3969	;# 
  1389   000F82                     PORTC           equ	3970	;# 
  1390   000F83                     PORTD           equ	3971	;# 
  1391   000F84                     PORTE           equ	3972	;# 
  1392   000F89                     LATA            equ	3977	;# 
  1393   000F8A                     LATB            equ	3978	;# 
  1394   000F8B                     LATC            equ	3979	;# 
  1395   000F8C                     LATD            equ	3980	;# 
  1396   000F8D                     LATE            equ	3981	;# 
  1397   000F92                     TRISA           equ	3986	;# 
  1398   000F92                     DDRA            equ	3986	;# 
  1399   000F93                     TRISB           equ	3987	;# 
  1400   000F93                     DDRB            equ	3987	;# 
  1401   000F94                     TRISC           equ	3988	;# 
  1402   000F94                     DDRC            equ	3988	;# 
  1403   000F95                     TRISD           equ	3989	;# 
  1404   000F95                     DDRD            equ	3989	;# 
  1405   000F96                     TRISE           equ	3990	;# 
  1406   000F96                     DDRE            equ	3990	;# 
  1407   000F9D                     PIE1            equ	3997	;# 
  1408   000F9E                     PIR1            equ	3998	;# 
  1409   000F9F                     IPR1            equ	3999	;# 
  1410   000FA0                     PIE2            equ	4000	;# 
  1411   000FA1                     PIR2            equ	4001	;# 
  1412   000FA2                     IPR2            equ	4002	;# 
  1413   000FA6                     EECON1          equ	4006	;# 
  1414   000FA7                     EECON2          equ	4007	;# 
  1415   000FA8                     EEDATA          equ	4008	;# 
  1416   000FA9                     EEADR           equ	4009	;# 
  1417   000FAB                     RCSTA           equ	4011	;# 
  1418   000FAB                     RCSTA1          equ	4011	;# 
  1419   000FAC                     TXSTA           equ	4012	;# 
  1420   000FAC                     TXSTA1          equ	4012	;# 
  1421   000FAD                     TXREG           equ	4013	;# 
  1422   000FAD                     TXREG1          equ	4013	;# 
  1423   000FAE                     RCREG           equ	4014	;# 
  1424   000FAE                     RCREG1          equ	4014	;# 
  1425   000FAF                     SPBRG           equ	4015	;# 
  1426   000FAF                     SPBRG1          equ	4015	;# 
  1427   000FB1                     T3CON           equ	4017	;# 
  1428   000FB2                     TMR3            equ	4018	;# 
  1429   000FB2                     TMR3L           equ	4018	;# 
  1430   000FB3                     TMR3H           equ	4019	;# 
  1431   000FBA                     CCP2CON         equ	4026	;# 
  1432   000FBB                     CCPR2           equ	4027	;# 
  1433   000FBB                     CCPR2L          equ	4027	;# 
  1434   000FBC                     CCPR2H          equ	4028	;# 
  1435   000FBD                     CCP1CON         equ	4029	;# 
  1436   000FBE                     CCPR1           equ	4030	;# 
  1437   000FBE                     CCPR1L          equ	4030	;# 
  1438   000FBF                     CCPR1H          equ	4031	;# 
  1439   000FC1                     ADCON1          equ	4033	;# 
  1440   000FC2                     ADCON0          equ	4034	;# 
  1441   000FC3                     ADRES           equ	4035	;# 
  1442   000FC3                     ADRESL          equ	4035	;# 
  1443   000FC4                     ADRESH          equ	4036	;# 
  1444   000FC5                     SSPCON2         equ	4037	;# 
  1445   000FC6                     SSPCON1         equ	4038	;# 
  1446   000FC7                     SSPSTAT         equ	4039	;# 
  1447   000FC8                     SSPADD          equ	4040	;# 
  1448   000FC9                     SSPBUF          equ	4041	;# 
  1449   000FCA                     T2CON           equ	4042	;# 
  1450   000FCB                     PR2             equ	4043	;# 
  1451   000FCB                     MEMCON          equ	4043	;# 
  1452   000FCC                     TMR2            equ	4044	;# 
  1453   000FCD                     T1CON           equ	4045	;# 
  1454   000FCE                     TMR1            equ	4046	;# 
  1455   000FCE                     TMR1L           equ	4046	;# 
  1456   000FCF                     TMR1H           equ	4047	;# 
  1457   000FD0                     RCON            equ	4048	;# 
  1458   000FD1                     WDTCON          equ	4049	;# 
  1459   000FD2                     LVDCON          equ	4050	;# 
  1460   000FD3                     OSCCON          equ	4051	;# 
  1461   000FD5                     T0CON           equ	4053	;# 
  1462   000FD6                     TMR0            equ	4054	;# 
  1463   000FD6                     TMR0L           equ	4054	;# 
  1464   000FD7                     TMR0H           equ	4055	;# 
  1465   000FD8                     STATUS          equ	4056	;# 
  1466   000FD9                     FSR2            equ	4057	;# 
  1467   000FD9                     FSR2L           equ	4057	;# 
  1468   000FDA                     FSR2H           equ	4058	;# 
  1469   000FDB                     PLUSW2          equ	4059	;# 
  1470   000FDC                     PREINC2         equ	4060	;# 
  1471   000FDD                     POSTDEC2        equ	4061	;# 
  1472   000FDE                     POSTINC2        equ	4062	;# 
  1473   000FDF                     INDF2           equ	4063	;# 
  1474   000FE0                     BSR             equ	4064	;# 
  1475   000FE1                     FSR1            equ	4065	;# 
  1476   000FE1                     FSR1L           equ	4065	;# 
  1477   000FE2                     FSR1H           equ	4066	;# 
  1478   000FE3                     PLUSW1          equ	4067	;# 
  1479   000FE4                     PREINC1         equ	4068	;# 
  1480   000FE5                     POSTDEC1        equ	4069	;# 
  1481   000FE6                     POSTINC1        equ	4070	;# 
  1482   000FE7                     INDF1           equ	4071	;# 
  1483   000FE8                     WREG            equ	4072	;# 
  1484   000FE9                     FSR0            equ	4073	;# 
  1485   000FE9                     FSR0L           equ	4073	;# 
  1486   000FEA                     FSR0H           equ	4074	;# 
  1487   000FEB                     PLUSW0          equ	4075	;# 
  1488   000FEC                     PREINC0         equ	4076	;# 
  1489   000FED                     POSTDEC0        equ	4077	;# 
  1490   000FEE                     POSTINC0        equ	4078	;# 
  1491   000FEF                     INDF0           equ	4079	;# 
  1492   000FF0                     INTCON3         equ	4080	;# 
  1493   000FF1                     INTCON2         equ	4081	;# 
  1494   000FF2                     INTCON          equ	4082	;# 
  1495   000FF2                     INTCON1         equ	4082	;# 
  1496   000FF3                     PROD            equ	4083	;# 
  1497   000FF3                     PRODL           equ	4083	;# 
  1498   000FF4                     PRODH           equ	4084	;# 
  1499   000FF5                     TABLAT          equ	4085	;# 
  1500   000FF6                     TBLPTR          equ	4086	;# 
  1501   000FF6                     TBLPTRL         equ	4086	;# 
  1502   000FF7                     TBLPTRH         equ	4087	;# 
  1503   000FF8                     TBLPTRU         equ	4088	;# 
  1504   000FF9                     PCLAT           equ	4089	;# 
  1505   000FF9                     PC              equ	4089	;# 
  1506   000FF9                     PCL             equ	4089	;# 
  1507   000FFA                     PCLATH          equ	4090	;# 
  1508   000FFB                     PCLATU          equ	4091	;# 
  1509   000FFC                     STKPTR          equ	4092	;# 
  1510   000FFD                     TOS             equ	4093	;# 
  1511   000FFD                     TOSL            equ	4093	;# 
  1512   000FFE                     TOSH            equ	4094	;# 
  1513   000FFF                     TOSU            equ	4095	;# 
  1514   000F80                     PORTA           equ	3968	;# 
  1515   000F81                     PORTB           equ	3969	;# 
  1516   000F82                     PORTC           equ	3970	;# 
  1517   000F83                     PORTD           equ	3971	;# 
  1518   000F84                     PORTE           equ	3972	;# 
  1519   000F89                     LATA            equ	3977	;# 
  1520   000F8A                     LATB            equ	3978	;# 
  1521   000F8B                     LATC            equ	3979	;# 
  1522   000F8C                     LATD            equ	3980	;# 
  1523   000F8D                     LATE            equ	3981	;# 
  1524   000F92                     TRISA           equ	3986	;# 
  1525   000F92                     DDRA            equ	3986	;# 
  1526   000F93                     TRISB           equ	3987	;# 
  1527   000F93                     DDRB            equ	3987	;# 
  1528   000F94                     TRISC           equ	3988	;# 
  1529   000F94                     DDRC            equ	3988	;# 
  1530   000F95                     TRISD           equ	3989	;# 
  1531   000F95                     DDRD            equ	3989	;# 
  1532   000F96                     TRISE           equ	3990	;# 
  1533   000F96                     DDRE            equ	3990	;# 
  1534   000F9D                     PIE1            equ	3997	;# 
  1535   000F9E                     PIR1            equ	3998	;# 
  1536   000F9F                     IPR1            equ	3999	;# 
  1537   000FA0                     PIE2            equ	4000	;# 
  1538   000FA1                     PIR2            equ	4001	;# 
  1539   000FA2                     IPR2            equ	4002	;# 
  1540   000FA6                     EECON1          equ	4006	;# 
  1541   000FA7                     EECON2          equ	4007	;# 
  1542   000FA8                     EEDATA          equ	4008	;# 
  1543   000FA9                     EEADR           equ	4009	;# 
  1544   000FAB                     RCSTA           equ	4011	;# 
  1545   000FAB                     RCSTA1          equ	4011	;# 
  1546   000FAC                     TXSTA           equ	4012	;# 
  1547   000FAC                     TXSTA1          equ	4012	;# 
  1548   000FAD                     TXREG           equ	4013	;# 
  1549   000FAD                     TXREG1          equ	4013	;# 
  1550   000FAE                     RCREG           equ	4014	;# 
  1551   000FAE                     RCREG1          equ	4014	;# 
  1552   000FAF                     SPBRG           equ	4015	;# 
  1553   000FAF                     SPBRG1          equ	4015	;# 
  1554   000FB1                     T3CON           equ	4017	;# 
  1555   000FB2                     TMR3            equ	4018	;# 
  1556   000FB2                     TMR3L           equ	4018	;# 
  1557   000FB3                     TMR3H           equ	4019	;# 
  1558   000FBA                     CCP2CON         equ	4026	;# 
  1559   000FBB                     CCPR2           equ	4027	;# 
  1560   000FBB                     CCPR2L          equ	4027	;# 
  1561   000FBC                     CCPR2H          equ	4028	;# 
  1562   000FBD                     CCP1CON         equ	4029	;# 
  1563   000FBE                     CCPR1           equ	4030	;# 
  1564   000FBE                     CCPR1L          equ	4030	;# 
  1565   000FBF                     CCPR1H          equ	4031	;# 
  1566   000FC1                     ADCON1          equ	4033	;# 
  1567   000FC2                     ADCON0          equ	4034	;# 
  1568   000FC3                     ADRES           equ	4035	;# 
  1569   000FC3                     ADRESL          equ	4035	;# 
  1570   000FC4                     ADRESH          equ	4036	;# 
  1571   000FC5                     SSPCON2         equ	4037	;# 
  1572   000FC6                     SSPCON1         equ	4038	;# 
  1573   000FC7                     SSPSTAT         equ	4039	;# 
  1574   000FC8                     SSPADD          equ	4040	;# 
  1575   000FC9                     SSPBUF          equ	4041	;# 
  1576   000FCA                     T2CON           equ	4042	;# 
  1577   000FCB                     PR2             equ	4043	;# 
  1578   000FCB                     MEMCON          equ	4043	;# 
  1579   000FCC                     TMR2            equ	4044	;# 
  1580   000FCD                     T1CON           equ	4045	;# 
  1581   000FCE                     TMR1            equ	4046	;# 
  1582   000FCE                     TMR1L           equ	4046	;# 
  1583   000FCF                     TMR1H           equ	4047	;# 
  1584   000FD0                     RCON            equ	4048	;# 
  1585   000FD1                     WDTCON          equ	4049	;# 
  1586   000FD2                     LVDCON          equ	4050	;# 
  1587   000FD3                     OSCCON          equ	4051	;# 
  1588   000FD5                     T0CON           equ	4053	;# 
  1589   000FD6                     TMR0            equ	4054	;# 
  1590   000FD6                     TMR0L           equ	4054	;# 
  1591   000FD7                     TMR0H           equ	4055	;# 
  1592   000FD8                     STATUS          equ	4056	;# 
  1593   000FD9                     FSR2            equ	4057	;# 
  1594   000FD9                     FSR2L           equ	4057	;# 
  1595   000FDA                     FSR2H           equ	4058	;# 
  1596   000FDB                     PLUSW2          equ	4059	;# 
  1597   000FDC                     PREINC2         equ	4060	;# 
  1598   000FDD                     POSTDEC2        equ	4061	;# 
  1599   000FDE                     POSTINC2        equ	4062	;# 
  1600   000FDF                     INDF2           equ	4063	;# 
  1601   000FE0                     BSR             equ	4064	;# 
  1602   000FE1                     FSR1            equ	4065	;# 
  1603   000FE1                     FSR1L           equ	4065	;# 
  1604   000FE2                     FSR1H           equ	4066	;# 
  1605   000FE3                     PLUSW1          equ	4067	;# 
  1606   000FE4                     PREINC1         equ	4068	;# 
  1607   000FE5                     POSTDEC1        equ	4069	;# 
  1608   000FE6                     POSTINC1        equ	4070	;# 
  1609   000FE7                     INDF1           equ	4071	;# 
  1610   000FE8                     WREG            equ	4072	;# 
  1611   000FE9                     FSR0            equ	4073	;# 
  1612   000FE9                     FSR0L           equ	4073	;# 
  1613   000FEA                     FSR0H           equ	4074	;# 
  1614   000FEB                     PLUSW0          equ	4075	;# 
  1615   000FEC                     PREINC0         equ	4076	;# 
  1616   000FED                     POSTDEC0        equ	4077	;# 
  1617   000FEE                     POSTINC0        equ	4078	;# 
  1618   000FEF                     INDF0           equ	4079	;# 
  1619   000FF0                     INTCON3         equ	4080	;# 
  1620   000FF1                     INTCON2         equ	4081	;# 
  1621   000FF2                     INTCON          equ	4082	;# 
  1622   000FF2                     INTCON1         equ	4082	;# 
  1623   000FF3                     PROD            equ	4083	;# 
  1624   000FF3                     PRODL           equ	4083	;# 
  1625   000FF4                     PRODH           equ	4084	;# 
  1626   000FF5                     TABLAT          equ	4085	;# 
  1627   000FF6                     TBLPTR          equ	4086	;# 
  1628   000FF6                     TBLPTRL         equ	4086	;# 
  1629   000FF7                     TBLPTRH         equ	4087	;# 
  1630   000FF8                     TBLPTRU         equ	4088	;# 
  1631   000FF9                     PCLAT           equ	4089	;# 
  1632   000FF9                     PC              equ	4089	;# 
  1633   000FF9                     PCL             equ	4089	;# 
  1634   000FFA                     PCLATH          equ	4090	;# 
  1635   000FFB                     PCLATU          equ	4091	;# 
  1636   000FFC                     STKPTR          equ	4092	;# 
  1637   000FFD                     TOS             equ	4093	;# 
  1638   000FFD                     TOSL            equ	4093	;# 
  1639   000FFE                     TOSH            equ	4094	;# 
  1640   000FFF                     TOSU            equ	4095	;# 
  1641   000F80                     PORTA           equ	3968	;# 
  1642   000F81                     PORTB           equ	3969	;# 
  1643   000F82                     PORTC           equ	3970	;# 
  1644   000F83                     PORTD           equ	3971	;# 
  1645   000F84                     PORTE           equ	3972	;# 
  1646   000F89                     LATA            equ	3977	;# 
  1647   000F8A                     LATB            equ	3978	;# 
  1648   000F8B                     LATC            equ	3979	;# 
  1649   000F8C                     LATD            equ	3980	;# 
  1650   000F8D                     LATE            equ	3981	;# 
  1651   000F92                     TRISA           equ	3986	;# 
  1652   000F92                     DDRA            equ	3986	;# 
  1653   000F93                     TRISB           equ	3987	;# 
  1654   000F93                     DDRB            equ	3987	;# 
  1655   000F94                     TRISC           equ	3988	;# 
  1656   000F94                     DDRC            equ	3988	;# 
  1657   000F95                     TRISD           equ	3989	;# 
  1658   000F95                     DDRD            equ	3989	;# 
  1659   000F96                     TRISE           equ	3990	;# 
  1660   000F96                     DDRE            equ	3990	;# 
  1661   000F9D                     PIE1            equ	3997	;# 
  1662   000F9E                     PIR1            equ	3998	;# 
  1663   000F9F                     IPR1            equ	3999	;# 
  1664   000FA0                     PIE2            equ	4000	;# 
  1665   000FA1                     PIR2            equ	4001	;# 
  1666   000FA2                     IPR2            equ	4002	;# 
  1667   000FA6                     EECON1          equ	4006	;# 
  1668   000FA7                     EECON2          equ	4007	;# 
  1669   000FA8                     EEDATA          equ	4008	;# 
  1670   000FA9                     EEADR           equ	4009	;# 
  1671   000FAB                     RCSTA           equ	4011	;# 
  1672   000FAB                     RCSTA1          equ	4011	;# 
  1673   000FAC                     TXSTA           equ	4012	;# 
  1674   000FAC                     TXSTA1          equ	4012	;# 
  1675   000FAD                     TXREG           equ	4013	;# 
  1676   000FAD                     TXREG1          equ	4013	;# 
  1677   000FAE                     RCREG           equ	4014	;# 
  1678   000FAE                     RCREG1          equ	4014	;# 
  1679   000FAF                     SPBRG           equ	4015	;# 
  1680   000FAF                     SPBRG1          equ	4015	;# 
  1681   000FB1                     T3CON           equ	4017	;# 
  1682   000FB2                     TMR3            equ	4018	;# 
  1683   000FB2                     TMR3L           equ	4018	;# 
  1684   000FB3                     TMR3H           equ	4019	;# 
  1685   000FBA                     CCP2CON         equ	4026	;# 
  1686   000FBB                     CCPR2           equ	4027	;# 
  1687   000FBB                     CCPR2L          equ	4027	;# 
  1688   000FBC                     CCPR2H          equ	4028	;# 
  1689   000FBD                     CCP1CON         equ	4029	;# 
  1690   000FBE                     CCPR1           equ	4030	;# 
  1691   000FBE                     CCPR1L          equ	4030	;# 
  1692   000FBF                     CCPR1H          equ	4031	;# 
  1693   000FC1                     ADCON1          equ	4033	;# 
  1694   000FC2                     ADCON0          equ	4034	;# 
  1695   000FC3                     ADRES           equ	4035	;# 
  1696   000FC3                     ADRESL          equ	4035	;# 
  1697   000FC4                     ADRESH          equ	4036	;# 
  1698   000FC5                     SSPCON2         equ	4037	;# 
  1699   000FC6                     SSPCON1         equ	4038	;# 
  1700   000FC7                     SSPSTAT         equ	4039	;# 
  1701   000FC8                     SSPADD          equ	4040	;# 
  1702   000FC9                     SSPBUF          equ	4041	;# 
  1703   000FCA                     T2CON           equ	4042	;# 
  1704   000FCB                     PR2             equ	4043	;# 
  1705   000FCB                     MEMCON          equ	4043	;# 
  1706   000FCC                     TMR2            equ	4044	;# 
  1707   000FCD                     T1CON           equ	4045	;# 
  1708   000FCE                     TMR1            equ	4046	;# 
  1709   000FCE                     TMR1L           equ	4046	;# 
  1710   000FCF                     TMR1H           equ	4047	;# 
  1711   000FD0                     RCON            equ	4048	;# 
  1712   000FD1                     WDTCON          equ	4049	;# 
  1713   000FD2                     LVDCON          equ	4050	;# 
  1714   000FD3                     OSCCON          equ	4051	;# 
  1715   000FD5                     T0CON           equ	4053	;# 
  1716   000FD6                     TMR0            equ	4054	;# 
  1717   000FD6                     TMR0L           equ	4054	;# 
  1718   000FD7                     TMR0H           equ	4055	;# 
  1719   000FD8                     STATUS          equ	4056	;# 
  1720   000FD9                     FSR2            equ	4057	;# 
  1721   000FD9                     FSR2L           equ	4057	;# 
  1722   000FDA                     FSR2H           equ	4058	;# 
  1723   000FDB                     PLUSW2          equ	4059	;# 
  1724   000FDC                     PREINC2         equ	4060	;# 
  1725   000FDD                     POSTDEC2        equ	4061	;# 
  1726   000FDE                     POSTINC2        equ	4062	;# 
  1727   000FDF                     INDF2           equ	4063	;# 
  1728   000FE0                     BSR             equ	4064	;# 
  1729   000FE1                     FSR1            equ	4065	;# 
  1730   000FE1                     FSR1L           equ	4065	;# 
  1731   000FE2                     FSR1H           equ	4066	;# 
  1732   000FE3                     PLUSW1          equ	4067	;# 
  1733   000FE4                     PREINC1         equ	4068	;# 
  1734   000FE5                     POSTDEC1        equ	4069	;# 
  1735   000FE6                     POSTINC1        equ	4070	;# 
  1736   000FE7                     INDF1           equ	4071	;# 
  1737   000FE8                     WREG            equ	4072	;# 
  1738   000FE9                     FSR0            equ	4073	;# 
  1739   000FE9                     FSR0L           equ	4073	;# 
  1740   000FEA                     FSR0H           equ	4074	;# 
  1741   000FEB                     PLUSW0          equ	4075	;# 
  1742   000FEC                     PREINC0         equ	4076	;# 
  1743   000FED                     POSTDEC0        equ	4077	;# 
  1744   000FEE                     POSTINC0        equ	4078	;# 
  1745   000FEF                     INDF0           equ	4079	;# 
  1746   000FF0                     INTCON3         equ	4080	;# 
  1747   000FF1                     INTCON2         equ	4081	;# 
  1748   000FF2                     INTCON          equ	4082	;# 
  1749   000FF2                     INTCON1         equ	4082	;# 
  1750   000FF3                     PROD            equ	4083	;# 
  1751   000FF3                     PRODL           equ	4083	;# 
  1752   000FF4                     PRODH           equ	4084	;# 
  1753   000FF5                     TABLAT          equ	4085	;# 
  1754   000FF6                     TBLPTR          equ	4086	;# 
  1755   000FF6                     TBLPTRL         equ	4086	;# 
  1756   000FF7                     TBLPTRH         equ	4087	;# 
  1757   000FF8                     TBLPTRU         equ	4088	;# 
  1758   000FF9                     PCLAT           equ	4089	;# 
  1759   000FF9                     PC              equ	4089	;# 
  1760   000FF9                     PCL             equ	4089	;# 
  1761   000FFA                     PCLATH          equ	4090	;# 
  1762   000FFB                     PCLATU          equ	4091	;# 
  1763   000FFC                     STKPTR          equ	4092	;# 
  1764   000FFD                     TOS             equ	4093	;# 
  1765   000FFD                     TOSL            equ	4093	;# 
  1766   000FFE                     TOSH            equ	4094	;# 
  1767   000FFF                     TOSU            equ	4095	;# 
  1768                           
  1769                           	psect	idataCOMRAM
  1770   0010D4                     __pidataCOMRAM:
  1771                           	callstack 0
  1772                           
  1773                           ;initializer for _LCD1
  1774   0010D4  93                 	db	147
  1775   0010D5  9B                 	db	155
  1776   0010D6  01                 	db	1
  1777   0010D7  A2                 	db	162
  1778   0010D8  AA                 	db	170
  1779   0010D9  B2                 	db	178
  1780   0010DA  BA                 	db	186
  1781   0010DB  A3                 	db	163
  1782   0010DC  AB                 	db	171
  1783   0010DD  B3                 	db	179
  1784   0010DE  BB                 	db	187
  1785                           
  1786                           ;initializer for __PORT_registers
  1787   0010DF  80                 	db	128
  1788   0010E0  0F                 	db	15
  1789   0010E1  81                 	db	129
  1790   0010E2  0F                 	db	15
  1791   0010E3  82                 	db	130
  1792   0010E4  0F                 	db	15
  1793   0010E5  83                 	db	131
  1794   0010E6  0F                 	db	15
  1795   0010E7  84                 	db	132
  1796   0010E8  0F                 	db	15
  1797                           
  1798                           ;initializer for __LAT_registers
  1799   0010E9  89                 	db	137
  1800   0010EA  0F                 	db	15
  1801   0010EB  8A                 	db	138
  1802   0010EC  0F                 	db	15
  1803   0010ED  8B                 	db	139
  1804   0010EE  0F                 	db	15
  1805   0010EF  8C                 	db	140
  1806   0010F0  0F                 	db	15
  1807   0010F1  8D                 	db	141
  1808   0010F2  0F                 	db	15
  1809                           
  1810                           ;initializer for __TRIS_registers
  1811   0010F3  92                 	db	146
  1812   0010F4  0F                 	db	15
  1813   0010F5  93                 	db	147
  1814   0010F6  0F                 	db	15
  1815   0010F7  94                 	db	148
  1816   0010F8  0F                 	db	15
  1817   0010F9  95                 	db	149
  1818   0010FA  0F                 	db	15
  1819   0010FB  96                 	db	150
  1820   0010FC  0F                 	db	15
  1821                           
  1822                           ;initializer for _keypad1
  1823   0010FD  21                 	db	33
  1824   0010FE  19                 	db	25
  1825   0010FF  11                 	db	17
  1826   001100  09                 	db	9
  1827   001101  2B                 	db	43
  1828   001102  23                 	db	35
  1829   001103  1B                 	db	27
  1830   001104  13                 	db	19
  1831   001105  00                 	db	0
  1832                           
  1833                           ;initializer for _segment1
  1834   001106  00                 	db	0
  1835   001107  08                 	db	8
  1836   001108  10                 	db	16
  1837   001109  18                 	db	24
  1838   00110A  00                 	db	0
  1839                           
  1840                           ;initializer for _led_arr
  1841   00110B  00                 	db	0
  1842   00110C  08                 	db	8
  1843   00110D  10                 	db	16
  1844   00110E  18                 	db	24
  1845                           
  1846                           ;initializer for _btn2
  1847   00110F  4C                 	db	76
  1848   001110  01                 	db	1
  1849   001111  00                 	db	0
  1850                           
  1851                           ;initializer for _btn1
  1852   001112  E0                 	db	224
  1853   001113  01                 	db	1
  1854   001114  01                 	db	1
  1855                           
  1856                           ;initializer for _motor2
  1857   001115  7C                 	db	124
  1858   001116  4A                 	db	74
  1859                           
  1860                           ;initializer for _motor1
  1861   001117  08                 	db	8
  1862   001118  10                 	db	16
  1863                           
  1864                           ;initializer for _i
  1865   001119  5A                 	db	90
  1866                           
  1867                           ;initializer for _seg_units_en
  1868   00111A  8B                 	db	139
  1869                           
  1870                           ;initializer for _testing
  1871   00111B  8B                 	db	139
  1872                           
  1873                           ;initializer for _relay1
  1874   00111C  08                 	db	8
  1875                           
  1876                           ;initializer for _first_int
  1877   00111D  60                 	db	low ___INT0
  1878   00111E  13                 	db	high ___INT0
  1879   00111F  01                 	db	1
  1880   001120  00                 	db	0
  1881   001121  00                 	db	0
  1882   001122  01                 	db	1
  1883                           
  1884                           ;initializer for _LED_NOK
  1885   001123  08                 	db	8
  1886                           
  1887                           	psect	smallconst
  1888   000600                     __psmallconst:
  1889                           	callstack 0
  1890   000600  00                 	db	0
  1891   000601                     _keypad_elements:
  1892                           	callstack 0
  1893   000601  31                 	db	49
  1894   000602  32                 	db	50
  1895   000603  33                 	db	51
  1896   000604  41                 	db	65
  1897   000605  34                 	db	52
  1898   000606  35                 	db	53
  1899   000607  36                 	db	54
  1900   000608  42                 	db	66
  1901   000609  37                 	db	55
  1902   00060A  38                 	db	56
  1903   00060B  39                 	db	57
  1904   00060C  43                 	db	67
  1905   00060D  2A                 	db	42
  1906   00060E  30                 	db	48
  1907   00060F  23                 	db	35
  1908   000610  44                 	db	68
  1909   000611                     __end_of_keypad_elements:
  1910                           	callstack 0
  1911   000FF1                     _INTCON2bits    set	4081
  1912   000FD0                     _RCONbits       set	4048
  1913   000FF0                     _INTCON3bits    set	4080
  1914   000FF2                     _INTCONbits     set	4082
  1915   000F84                     _PORTE          set	3972
  1916   000F83                     _PORTD          set	3971
  1917   000F82                     _PORTC          set	3970
  1918   000F81                     _PORTB          set	3969
  1919   000F80                     _PORTA          set	3968
  1920   000F8D                     _LATE           set	3981
  1921   000F8C                     _LATD           set	3980
  1922   000F8B                     _LATC           set	3979
  1923   000F8A                     _LATB           set	3978
  1924   000F89                     _LATA           set	3977
  1925   000F96                     _TRISE          set	3990
  1926   000F95                     _TRISD          set	3989
  1927   000F94                     _TRISC          set	3988
  1928   000F93                     _TRISB          set	3987
  1929   000F92                     _TRISA          set	3986
  1930   000611                     STR_1:
  1931   000611  25                 	db	37
  1932   000612  69                 	db	105	;'i'
  1933   000613  00                 	db	0
  1934   000611                     STR_2           equ	STR_1
  1935   000611                     STR_3           equ	STR_1
  1936   000614  00                 	db	0	; dummy byte at the end
  1937   000600                     __smallconst    set	__psmallconst
  1938   000600                     __mediumconst   set	__psmallconst
  1939   000002                     __activetblptr  equ	2
  1940                           
  1941                           ; #config settings
  1942                           
  1943                           	psect	cinit
  1944   001326                     __pcinit:
  1945                           	callstack 0
  1946   001326                     start_initialization:
  1947                           	callstack 0
  1948   001326                     __initialization:
  1949                           	callstack 0
  1950                           
  1951                           ; Initialize objects allocated to COMRAM (80 bytes)
  1952                           ; load TBLPTR registers with __pidataCOMRAM
  1953   001326  0ED4               	movlw	low __pidataCOMRAM
  1954   001328  6EF6               	movwf	tblptrl,c
  1955   00132A  0E10               	movlw	high __pidataCOMRAM
  1956   00132C  6EF7               	movwf	tblptrh,c
  1957   00132E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1958   001330  6EF8               	movwf	tblptru,c
  1959   001332  EE00  F001         	lfsr	0,__pdataCOMRAM
  1960   001336  EE10 F050          	lfsr	1,80
  1961   00133A                     copy_data0:
  1962   00133A  0009               	tblrd		*+
  1963   00133C  CFF5 FFEE          	movff	tablat,postinc0
  1964   001340  50E5               	movf	postdec1,w,c
  1965   001342  50E1               	movf	fsr1l,w,c
  1966   001344  E1FA               	bnz	copy_data0
  1967                           
  1968                           ; Clear objects allocated to COMRAM (20 bytes)
  1969   001346  EE00  F051         	lfsr	0,__pbssCOMRAM
  1970   00134A  0E14               	movlw	20
  1971   00134C                     clear_0:
  1972   00134C  6AEE               	clrf	postinc0,c
  1973   00134E  06E8               	decf	wreg,f,c
  1974   001350  E1FD               	bnz	clear_0
  1975   001352                     end_of_initialization:
  1976                           	callstack 0
  1977   001352                     __end_of__initialization:
  1978                           	callstack 0
  1979   001352  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1980   001354  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1981   001356  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1982   001358  6EF8               	movwf	tblptru,c
  1983   00135A  0100               	movlb	0
  1984   00135C  EFB9  F008         	goto	_main	;jump to C main() function
  1985                           
  1986                           	psect	bssCOMRAM
  1987   000051                     __pbssCOMRAM:
  1988                           	callstack 0
  1989   000051                     _errno:
  1990                           	callstack 0
  1991   000051                     	ds	2
  1992   000053                     _INT2_handler:
  1993                           	callstack 0
  1994   000053                     	ds	2
  1995   000055                     _INT1_handler:
  1996                           	callstack 0
  1997   000055                     	ds	2
  1998   000057                     _INT0_handler:
  1999                           	callstack 0
  2000   000057                     	ds	2
  2001   000059                     _prev:
  2002                           	callstack 0
  2003   000059                     	ds	1
  2004   00005A                     _knum:
  2005                           	callstack 0
  2006   00005A                     	ds	1
  2007   00005B                     _j:
  2008                           	callstack 0
  2009   00005B                     	ds	1
  2010   00005C                     _Iflag:
  2011                           	callstack 0
  2012   00005C                     	ds	1
  2013   00005D                     relay_turn_off@F2875:
  2014                           	callstack 0
  2015   00005D                     	ds	1
  2016   00005E                     relay_turn_on@F2870:
  2017                           	callstack 0
  2018   00005E                     	ds	1
  2019   00005F                     relay_initialize@F2865:
  2020                           	callstack 0
  2021   00005F                     	ds	1
  2022   000060                     LED_toggle@F2885:
  2023                           	callstack 0
  2024   000060                     	ds	1
  2025   000061                     LED_off@F2880:
  2026                           	callstack 0
  2027   000061                     	ds	1
  2028   000062                     LED_on@F2875:
  2029                           	callstack 0
  2030   000062                     	ds	1
  2031   000063                     LED_initialize@F2870:
  2032                           	callstack 0
  2033   000063                     	ds	1
  2034   000064                     _LED_OK:
  2035                           	callstack 0
  2036   000064                     	ds	1
  2037                           
  2038                           	psect	dataCOMRAM
  2039   000001                     __pdataCOMRAM:
  2040                           	callstack 0
  2041   000001                     _LCD1:
  2042                           	callstack 0
  2043   000001                     	ds	11
  2044   00000C                     __PORT_registers:
  2045                           	callstack 0
  2046   00000C                     	ds	10
  2047   000016                     __LAT_registers:
  2048                           	callstack 0
  2049   000016                     	ds	10
  2050   000020                     __TRIS_registers:
  2051                           	callstack 0
  2052   000020                     	ds	10
  2053   00002A                     _keypad1:
  2054                           	callstack 0
  2055   00002A                     	ds	9
  2056   000033                     _segment1:
  2057                           	callstack 0
  2058   000033                     	ds	5
  2059   000038                     _led_arr:
  2060                           	callstack 0
  2061   000038                     	ds	4
  2062   00003C                     _btn2:
  2063                           	callstack 0
  2064   00003C                     	ds	3
  2065   00003F                     _btn1:
  2066                           	callstack 0
  2067   00003F                     	ds	3
  2068   000042                     _motor2:
  2069                           	callstack 0
  2070   000042                     	ds	2
  2071   000044                     _motor1:
  2072                           	callstack 0
  2073   000044                     	ds	2
  2074   000046                     _i:
  2075                           	callstack 0
  2076   000046                     	ds	1
  2077   000047                     _seg_units_en:
  2078                           	callstack 0
  2079   000047                     	ds	1
  2080   000048                     _testing:
  2081                           	callstack 0
  2082   000048                     	ds	1
  2083   000049                     _relay1:
  2084                           	callstack 0
  2085   000049                     	ds	1
  2086   00004A                     _first_int:
  2087                           	callstack 0
  2088   00004A                     	ds	6
  2089   000050                     _LED_NOK:
  2090                           	callstack 0
  2091   000050                     	ds	1
  2092                           
  2093                           	psect	cstackBANK0
  2094   000080                     __pcstackBANK0:
  2095                           	callstack 0
  2096   000080                     INT_INTx_initialize@lint:
  2097                           	callstack 0
  2098   000080                     ??_LED_on:
  2099                           
  2100                           ; 1 bytes @ 0x0
  2101   000080                     	ds	1
  2102   000081                     LED_on@pin_local:
  2103                           	callstack 0
  2104   000081                     _INT_INTx_initialize$1363:
  2105                           	callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x1
  2108   000081                     	ds	1
  2109   000082                     INT_INTx_initialize@ret:
  2110                           	callstack 0
  2111                           
  2112                           ; 1 bytes @ 0x2
  2113   000082                     	ds	1
  2114                           
  2115                           	psect	cstackCOMRAM
  2116   000065                     __pcstackCOMRAM:
  2117                           	callstack 0
  2118   000065                     ??_InterruptManager:
  2119   000065                     
  2120                           ; 1 bytes @ 0x0
  2121   000065                     	ds	2
  2122   000067                     ??_InterruptManagerLow:
  2123                           
  2124                           ; 1 bytes @ 0x2
  2125   000067                     	ds	5
  2126   00006C                     GPIO_check_access@_pin_config:
  2127                           	callstack 0
  2128   00006C                     INT_INTx_enable@lint:
  2129                           	callstack 0
  2130   00006C                     INT_INTx_disable@lint:
  2131                           	callstack 0
  2132   00006C                     INT_INTx_priority_initialize@lint:
  2133                           	callstack 0
  2134   00006C                     INT_INTx_edge_initialize@lint:
  2135                           	callstack 0
  2136   00006C                     INT_INTx_clear_flag@lint:
  2137                           	callstack 0
  2138   00006C                     INT_INTx_check_access@lint:
  2139                           	callstack 0
  2140   00006C                     INT_INTx_set_callback_routine@lint:
  2141                           	callstack 0
  2142                           
  2143                           ; 1 bytes @ 0x7
  2144   00006C                     	ds	1
  2145   00006D                     INT_INTx_check_access@ret:
  2146                           	callstack 0
  2147   00006D                     ??_GPIO_check_access:
  2148   00006D                     ??_INT_INTx_disable:
  2149   00006D                     ??_INT_INTx_clear_flag:
  2150   00006D                     ??_INT_INTx_set_callback_routine:
  2151   00006D                     ??_INT_INTx_priority_initialize:
  2152   00006D                     ??_INT_INTx_edge_initialize:
  2153   00006D                     ??_INT_INTx_enable:
  2154                           
  2155                           ; 1 bytes @ 0x8
  2156   00006D                     	ds	1
  2157   00006E                     GPIO_check_access@ret:
  2158                           	callstack 0
  2159                           
  2160                           ; 1 bytes @ 0x9
  2161   00006E                     	ds	1
  2162   00006F                     GPIO_pin_direction_initialize@_pin_config:
  2163                           	callstack 0
  2164   00006F                     GPIO_pin_write_logic@_pin_config:
  2165                           	callstack 0
  2166   00006F                     INT_INTx_enable@ret:
  2167                           	callstack 0
  2168   00006F                     INT_INTx_disable@ret:
  2169                           	callstack 0
  2170   00006F                     INT_INTx_priority_initialize@ret:
  2171                           	callstack 0
  2172   00006F                     INT_INTx_edge_initialize@ret:
  2173                           	callstack 0
  2174   00006F                     INT_INTx_clear_flag@ret:
  2175                           	callstack 0
  2176   00006F                     INT_INTx_set_callback_routine@ret:
  2177                           	callstack 0
  2178                           
  2179                           ; 1 bytes @ 0xA
  2180   00006F                     	ds	1
  2181   000070                     GPIO_pin_write_logic@logic:
  2182                           	callstack 0
  2183   000070                     ??_GPIO_pin_direction_initialize:
  2184                           
  2185                           ; 1 bytes @ 0xB
  2186   000070                     	ds	1
  2187   000071                     ??_GPIO_pin_write_logic:
  2188                           
  2189                           ; 1 bytes @ 0xC
  2190   000071                     	ds	4
  2191   000075                     GPIO_pin_direction_initialize@ret:
  2192                           	callstack 0
  2193                           
  2194                           ; 1 bytes @ 0x10
  2195   000075                     	ds	1
  2196   000076                     GPIO_pin_write_logic@ret:
  2197                           	callstack 0
  2198   000076                     INT_INTx_pin_initialize@lint:
  2199                           	callstack 0
  2200                           
  2201                           ; 1 bytes @ 0x11
  2202   000076                     	ds	1
  2203   000077                     LED_on@led:
  2204                           	callstack 0
  2205   000077                     INT_INTx_pin_initialize@ret:
  2206                           	callstack 0
  2207   000077                     
  2208                           ; 1 bytes @ 0x12
  2209   000077                     	ds	1
  2210   000078                     
  2211                           ; 1 bytes @ 0x13
  2212 ;;
  2213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2214 ;;
  2215 ;; *************** function _main *****************
  2216 ;; Defined at:
  2217 ;;		line 35 in file "application.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  ret             1    0        unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2  595[None  ] int 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0
  2234 ;;      Totals:         0       0       0       0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels required when called: 10
  2237 ;; This function calls:
  2238 ;;		_INT_INTx_initialize
  2239 ;;		_LED_on
  2240 ;; This function is called by:
  2241 ;;		Startup code after reset
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text0
  2246   001172                     __ptext0:
  2247                           	callstack 0
  2248   001172                     _main:
  2249                           	callstack 21
  2250   001172  FFFF               	dw	65535	; assembler added errata NOP
  2251                           
  2252                           ;application.c: 37:     if(INT_INTx_initialize(&first_int))
  2253   001174  0E4A               	movlw	low _first_int
  2254   001176  0100               	movlb	0	; () banked
  2255   001178  6F80               	movwf	INT_INTx_initialize@lint& (0+255),b
  2256   00117A  EC3E  F004         	call	_INT_INTx_initialize	;wreg free
  2257   00117E  0900               	iorlw	0
  2258   001180  B4D8               	btfsc	status,2,c
  2259   001182  EFC5  F008         	goto	u5141
  2260   001186  EFC8  F008         	goto	u5140
  2261   00118A                     u5141:
  2262   00118A  FFFF               	dw	65535	; assembler added errata NOP
  2263   00118C  EFCF  F008         	goto	l5023
  2264   001190                     u5140:
  2265   001190  FFFF               	dw	65535	; assembler added errata NOP
  2266   001192                     
  2267                           ;application.c: 38:         LED_on(&LED_OK);
  2268   001192  0E64               	movlw	low _LED_OK
  2269   001194  6E77               	movwf	LED_on@led^0,c
  2270   001196  EC08  F007         	call	_LED_on	;wreg free
  2271   00119A  EFD4  F008         	goto	l598
  2272   00119E                     l5023:
  2273   00119E  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ;application.c: 40:         LED_on(&LED_NOK);
  2276   0011A0  0E50               	movlw	low _LED_NOK
  2277   0011A2  6E77               	movwf	LED_on@led^0,c
  2278   0011A4  EC08  F007         	call	_LED_on	;wreg free
  2279   0011A8                     l598:
  2280   0011A8  FFFF               	dw	65535	; assembler added errata NOP
  2281   0011AA  EFD4  F008         	goto	l598
  2282   0011AE  EF64  F000         	goto	start
  2283   0011B2                     __end_of_main:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _LED_on *****************
  2287 ;; Defined at:
  2288 ;;		line 33 in file "ECU_layer/LED/ecu_led.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  led             1   18[COMRAM] PTR struct .
  2291 ;;		 -> LED_NOK(1), LED_OK(1), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  pin_local       1    1[BANK0 ] struct .
  2294 ;;  ret             1    0        unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      unsigned char 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2304 ;;      Params:         1       0       0       0       0       0       0
  2305 ;;      Locals:         0       1       0       0       0       0       0
  2306 ;;      Temps:          0       1       0       0       0       0       0
  2307 ;;      Totals:         1       2       0       0       0       0       0
  2308 ;;Total ram usage:        3 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 8
  2311 ;; This function calls:
  2312 ;;		_GPIO_check_access
  2313 ;;		_GPIO_pin_write_logic
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text1
  2320   000E10                     __ptext1:
  2321                           	callstack 0
  2322   000E10                     _LED_on:
  2323                           	callstack 0
  2324   000E10  FFFF               	dw	65535	; assembler added errata NOP
  2325   000E12                     
  2326                           ;ECU_layer/LED/ecu_led.c: 35:  if ( (((void*)0) == led) ){
  2327   000E12  5077               	movf	LED_on@led^0,w,c
  2328   000E14  A4D8               	btfss	status,2,c
  2329   000E16  EF0F  F007         	goto	u4271
  2330   000E1A  EF12  F007         	goto	u4270
  2331   000E1E                     u4271:
  2332   000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2333   000E20  EF16  F007         	goto	l312
  2334   000E24                     u4270:
  2335   000E24  FFFF               	dw	65535	; assembler added errata NOP
  2336   000E26                     l4425:
  2337   000E26  FFFF               	dw	65535	; assembler added errata NOP
  2338                           
  2339                           ;ECU_layer/LED/ecu_led.c: 37:  }
  2340   000E28  EF53  F007         	goto	l318
  2341   000E2C                     l312:
  2342   000E2C  FFFF               	dw	65535	; assembler added errata NOP
  2343                           
  2344                           ;ECU_layer/LED/ecu_led.c: 39:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  2345   000E2E  C062  F081         	movff	LED_on@F2875,LED_on@pin_local
  2346   000E32  5077               	movf	LED_on@led^0,w,c
  2347   000E34  6ED9               	movwf	fsr2l,c
  2348   000E36  6ADA               	clrf	fsr2h,c
  2349   000E38  50DF               	movf	223,w,c
  2350   000E3A  0B07               	andlw	7
  2351   000E3C  0100               	movlb	0	; () banked
  2352   000E3E  6F80               	movwf	??_LED_on& (0+255),b
  2353   000E40  5181               	movf	LED_on@pin_local& (0+255),w,b
  2354   000E42  1980               	xorwf	??_LED_on& (0+255),w,b
  2355   000E44  0BF8               	andlw	-8
  2356   000E46  1980               	xorwf	??_LED_on& (0+255),w,b
  2357   000E48  6F81               	movwf	LED_on@pin_local& (0+255),b
  2358   000E4A  5077               	movf	LED_on@led^0,w,c
  2359   000E4C  6ED9               	movwf	fsr2l,c
  2360   000E4E  6ADA               	clrf	fsr2h,c
  2361   000E50  30DF               	rrcf	223,w,c
  2362   000E52  32E8               	rrcf	wreg,f,c
  2363   000E54  32E8               	rrcf	wreg,f,c
  2364   000E56  0B07               	andlw	7
  2365   000E58  6F80               	movwf	??_LED_on& (0+255),b
  2366   000E5A  4780               	rlncf	??_LED_on& (0+255),f,b
  2367   000E5C  4780               	rlncf	??_LED_on& (0+255),f,b
  2368   000E5E  4780               	rlncf	??_LED_on& (0+255),f,b
  2369   000E60  5181               	movf	LED_on@pin_local& (0+255),w,b
  2370   000E62  1980               	xorwf	??_LED_on& (0+255),w,b
  2371   000E64  0BC7               	andlw	-57
  2372   000E66  1980               	xorwf	??_LED_on& (0+255),w,b
  2373   000E68  6F81               	movwf	LED_on@pin_local& (0+255),b
  2374   000E6A                     
  2375                           ; BSR set to: 0
  2376   000E6A  9D81               	bcf	LED_on@pin_local& (0+255),6,b
  2377   000E6C                     
  2378                           ; BSR set to: 0
  2379   000E6C  5077               	movf	LED_on@led^0,w,c
  2380   000E6E  6ED9               	movwf	fsr2l,c
  2381   000E70  6ADA               	clrf	fsr2h,c
  2382   000E72  ACDF               	btfss	indf2,6,c
  2383   000E74  D002               	bra	u4285
  2384   000E76  8F81               	bsf	LED_on@pin_local& (0+255),7,b
  2385   000E78  D002               	bra	u4287
  2386   000E7A                     u4285:
  2387   000E7A  0100               	movlb	0	; () banked
  2388   000E7C  9F81               	bcf	LED_on@pin_local& (0+255),7,b
  2389   000E7E                     u4287:
  2390   000E7E                     
  2391                           ; BSR set to: 0
  2392                           ;ECU_layer/LED/ecu_led.c: 40:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  2393   000E7E  0E81               	movlw	low LED_on@pin_local
  2394   000E80  6E6C               	movwf	GPIO_check_access@_pin_config^0,c
  2395   000E82  ECAC  F003         	call	_GPIO_check_access	;wreg free
  2396   000E86  06E8               	decf	wreg,f,c
  2397   000E88  A4D8               	btfss	status,2,c
  2398   000E8A  EF49  F007         	goto	u4291
  2399   000E8E  EF4C  F007         	goto	u4290
  2400   000E92                     u4291:
  2401   000E92  FFFF               	dw	65535	; assembler added errata NOP
  2402   000E94  EF13  F007         	goto	l4425
  2403   000E98                     u4290:
  2404   000E98  FFFF               	dw	65535	; assembler added errata NOP
  2405   000E9A                     
  2406                           ;ECU_layer/LED/ecu_led.c: 41:    GPIO_pin_write_logic(&pin_local, GPIO_HIGH);
  2407   000E9A  0E81               	movlw	low LED_on@pin_local
  2408   000E9C  6E6F               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2409   000E9E  0E01               	movlw	1
  2410   000EA0  6E70               	movwf	GPIO_pin_write_logic@logic^0,c
  2411   000EA2  EC58  F005         	call	_GPIO_pin_write_logic	;wreg free
  2412   000EA6                     l318:
  2413   000EA6  FFFF               	dw	65535	; assembler added errata NOP
  2414   000EA8  0012               	return		;funcret
  2415   000EAA  FFFF               	dw	65535	; errata NOP
  2416   000EAC                     __end_of_LED_on:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _GPIO_pin_write_logic *****************
  2420 ;; Defined at:
  2421 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  2424 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_off@pin_local(1), 
  2425 ;;		 -> LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), 
  2426 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  2427 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  2428 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  2429 ;;  logic           1   11[COMRAM] enum E2776
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  ret             1   17[COMRAM] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      unsigned char 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2441 ;;      Params:         2       0       0       0       0       0       0
  2442 ;;      Locals:         1       0       0       0       0       0       0
  2443 ;;      Temps:          5       0       0       0       0       0       0
  2444 ;;      Totals:         8       0       0       0       0       0       0
  2445 ;;Total ram usage:        8 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 7
  2448 ;; This function calls:
  2449 ;;		_GPIO_check_access
  2450 ;; This function is called by:
  2451 ;;		_LED_on
  2452 ;;		_seven_segment_write_number
  2453 ;;		_seven_segment_write_2digit_number
  2454 ;;		_dc_motor_turn_right
  2455 ;;		_dc_motor_turn_left
  2456 ;;		_dc_motor_stop
  2457 ;;		_keypad_read_number
  2458 ;;		_lcd_send_command
  2459 ;;		_lcd_send_char_data
  2460 ;;		_lcd_send_4bits
  2461 ;;		_lcd_send_8bits
  2462 ;;		_lcd_send_en
  2463 ;;		_LED_off
  2464 ;;		_relay_turn_on
  2465 ;;		_relay_turn_off
  2466 ;;		_GPIO_pin_initialize
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text2
  2471   000AB0                     __ptext2:
  2472                           	callstack 0
  2473   000AB0                     _GPIO_pin_write_logic:
  2474                           	callstack 0
  2475   000AB0  FFFF               	dw	65535	; assembler added errata NOP
  2476   000AB2                     
  2477                           ;MCAL_layer/GPIO/hal_gpio.c: 98:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2478   000AB2  0E01               	movlw	1
  2479   000AB4  6E76               	movwf	GPIO_pin_write_logic@ret^0,c
  2480   000AB6                     
  2481                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  2482   000AB6  C06F  F06C         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  2483   000ABA  ECAC  F003         	call	_GPIO_check_access	;wreg free
  2484   000ABE  0900               	iorlw	0
  2485   000AC0  A4D8               	btfss	status,2,c
  2486   000AC2  EF65  F005         	goto	u3851
  2487   000AC6  EF68  F005         	goto	u3850
  2488   000ACA                     u3851:
  2489   000ACA  FFFF               	dw	65535	; assembler added errata NOP
  2490   000ACC  EFC6  F005         	goto	l4057
  2491   000AD0                     u3850:
  2492   000AD0  FFFF               	dw	65535	; assembler added errata NOP
  2493   000AD2                     l4051:
  2494   000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2495                           
  2496                           ;MCAL_layer/GPIO/hal_gpio.c: 100:   ret = (STD_ReturnType)(0x00);
  2497   000AD4  6A76               	clrf	GPIO_pin_write_logic@ret^0,c
  2498                           
  2499                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  2500   000AD6  EFDD  F005         	goto	l4059
  2501   000ADA                     l4053:
  2502   000ADA  FFFF               	dw	65535	; assembler added errata NOP
  2503                           
  2504                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  2505   000ADC  506F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2506   000ADE  6ED9               	movwf	fsr2l,c
  2507   000AE0  6ADA               	clrf	fsr2h,c
  2508   000AE2  30DF               	rrcf	223,w,c
  2509   000AE4  32E8               	rrcf	wreg,f,c
  2510   000AE6  32E8               	rrcf	wreg,f,c
  2511   000AE8  0B07               	andlw	7
  2512   000AEA  6E71               	movwf	??_GPIO_pin_write_logic^0,c
  2513   000AEC  0E01               	movlw	1
  2514   000AEE  6E72               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  2515   000AF0  2A71               	incf	??_GPIO_pin_write_logic^0,f,c
  2516   000AF2  EF7E  F005         	goto	u3864
  2517   000AF6                     u3865:
  2518   000AF6  FFFF               	dw	65535	; assembler added errata NOP
  2519   000AF8  90D8               	bcf	status,0,c
  2520   000AFA  3672               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  2521   000AFC                     u3864:
  2522   000AFC  FFFF               	dw	65535	; assembler added errata NOP
  2523   000AFE  2E71               	decfsz	??_GPIO_pin_write_logic^0,f,c
  2524   000B00  EF7B  F005         	goto	u3865
  2525   000B04  5072               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2526   000B06  0AFF               	xorlw	255
  2527   000B08  6E73               	movwf	(??_GPIO_pin_write_logic+2)^0,c
  2528   000B0A  506F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2529   000B0C  6ED9               	movwf	fsr2l,c
  2530   000B0E  6ADA               	clrf	fsr2h,c
  2531   000B10  50DF               	movf	223,w,c
  2532   000B12  0B07               	andlw	7
  2533   000B14  0D02               	mullw	2
  2534   000B16  50F3               	movf	243,w,c
  2535   000B18  0F16               	addlw	low __LAT_registers
  2536   000B1A  6ED9               	movwf	fsr2l,c
  2537   000B1C  6ADA               	clrf	fsr2h,c
  2538   000B1E  CFDE F074          	movff	postinc2,??_GPIO_pin_write_logic+3
  2539   000B22  CFDD F075          	movff	postdec2,??_GPIO_pin_write_logic+4
  2540   000B26  C074  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  2541   000B2A  C075  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  2542   000B2E  5073               	movf	(??_GPIO_pin_write_logic+2)^0,w,c
  2543   000B30  16DF               	andwf	indf2,f,c
  2544                           
  2545                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  2546   000B32  EFDD  F005         	goto	l4059
  2547   000B36                     l4055:
  2548   000B36  FFFF               	dw	65535	; assembler added errata NOP
  2549                           
  2550                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  2551   000B38  506F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2552   000B3A  6ED9               	movwf	fsr2l,c
  2553   000B3C  6ADA               	clrf	fsr2h,c
  2554   000B3E  30DF               	rrcf	223,w,c
  2555   000B40  32E8               	rrcf	wreg,f,c
  2556   000B42  32E8               	rrcf	wreg,f,c
  2557   000B44  0B07               	andlw	7
  2558   000B46  6E71               	movwf	??_GPIO_pin_write_logic^0,c
  2559   000B48  0E01               	movlw	1
  2560   000B4A  6E72               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  2561   000B4C  2A71               	incf	??_GPIO_pin_write_logic^0,f,c
  2562   000B4E  EFAC  F005         	goto	u3874
  2563   000B52                     u3875:
  2564   000B52  FFFF               	dw	65535	; assembler added errata NOP
  2565   000B54  90D8               	bcf	status,0,c
  2566   000B56  3672               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  2567   000B58                     u3874:
  2568   000B58  FFFF               	dw	65535	; assembler added errata NOP
  2569   000B5A  2E71               	decfsz	??_GPIO_pin_write_logic^0,f,c
  2570   000B5C  EFA9  F005         	goto	u3875
  2571   000B60  506F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2572   000B62  6ED9               	movwf	fsr2l,c
  2573   000B64  6ADA               	clrf	fsr2h,c
  2574   000B66  50DF               	movf	223,w,c
  2575   000B68  0B07               	andlw	7
  2576   000B6A  0D02               	mullw	2
  2577   000B6C  50F3               	movf	243,w,c
  2578   000B6E  0F16               	addlw	low __LAT_registers
  2579   000B70  6ED9               	movwf	fsr2l,c
  2580   000B72  6ADA               	clrf	fsr2h,c
  2581   000B74  CFDE F073          	movff	postinc2,??_GPIO_pin_write_logic+2
  2582   000B78  CFDD F074          	movff	postdec2,??_GPIO_pin_write_logic+3
  2583   000B7C  C073  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  2584   000B80  C074  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  2585   000B84  5072               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2586   000B86  12DF               	iorwf	indf2,f,c
  2587                           
  2588                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  2589   000B88  EFDD  F005         	goto	l4059
  2590   000B8C                     l4057:
  2591   000B8C  FFFF               	dw	65535	; assembler added errata NOP
  2592   000B8E  5070               	movf	GPIO_pin_write_logic@logic^0,w,c
  2593   000B90  6E71               	movwf	??_GPIO_pin_write_logic^0,c
  2594   000B92  6A72               	clrf	(??_GPIO_pin_write_logic+1)^0,c
  2595                           
  2596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2597                           ; Switch size 1, requested type "simple"
  2598                           ; Number of cases is 1, Range of values is 0 to 0
  2599                           ; switch strategies available:
  2600                           ; Name         Instructions Cycles
  2601                           ; simple_byte            4     3 (average)
  2602                           ;	Chosen strategy is simple_byte
  2603   000B94  5072               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2604   000B96  0A00               	xorlw	0	; case 0
  2605   000B98  B4D8               	btfsc	status,2,c
  2606   000B9A  EFD1  F005         	goto	l5231
  2607   000B9E  EF69  F005         	goto	l4051
  2608   000BA2                     l5231:
  2609   000BA2  FFFF               	dw	65535	; assembler added errata NOP
  2610                           
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 2, Range of values is 0 to 1
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte            7     4 (average)
  2616                           ;	Chosen strategy is simple_byte
  2617   000BA4  5071               	movf	??_GPIO_pin_write_logic^0,w,c
  2618   000BA6  0A00               	xorlw	0	; case 0
  2619   000BA8  B4D8               	btfsc	status,2,c
  2620   000BAA  EF6D  F005         	goto	l4053
  2621   000BAE  0A01               	xorlw	1	; case 1
  2622   000BB0  B4D8               	btfsc	status,2,c
  2623   000BB2  EF9B  F005         	goto	l4055
  2624   000BB6  EF69  F005         	goto	l4051
  2625   000BBA                     l4059:
  2626   000BBA  FFFF               	dw	65535	; assembler added errata NOP
  2627                           
  2628                           ;MCAL_layer/GPIO/hal_gpio.c: 114:  return ret;
  2629   000BBC  5076               	movf	GPIO_pin_write_logic@ret^0,w,c
  2630   000BBE  0012               	return		;funcret
  2631   000BC0  FFFF               	dw	65535	; errata NOP
  2632   000BC2                     __end_of_GPIO_pin_write_logic:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function _INT_INTx_initialize *****************
  2636 ;; Defined at:
  2637 ;;		line 33 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  lint            1    0[BANK0 ] PTR const struct .
  2640 ;;		 -> first_int(6), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  ret             1    2[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      unsigned char 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2652 ;;      Params:         0       1       0       0       0       0       0
  2653 ;;      Locals:         0       2       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0
  2655 ;;      Totals:         0       3       0       0       0       0       0
  2656 ;;Total ram usage:        3 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 9
  2659 ;; This function calls:
  2660 ;;		_INT_INTx_check_access
  2661 ;;		_INT_INTx_clear_flag
  2662 ;;		_INT_INTx_disable
  2663 ;;		_INT_INTx_edge_initialize
  2664 ;;		_INT_INTx_enable
  2665 ;;		_INT_INTx_pin_initialize
  2666 ;;		_INT_INTx_priority_initialize
  2667 ;;		_INT_INTx_set_callback_routine
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text3
  2674   00087C                     __ptext3:
  2675                           	callstack 0
  2676   00087C                     _INT_INTx_initialize:
  2677                           	callstack 0
  2678   00087C  FFFF               	dw	65535	; assembler added errata NOP
  2679   00087E                     
  2680                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 35:  if(((void*)0) == lint || (STD_Retu
      +                          rnType)(0x00) ==INT_INTx_check_access(lint))
  2681   00087E  0100               	movlb	0	; () banked
  2682   000880  5180               	movf	INT_INTx_initialize@lint& (0+255),w,b
  2683   000882  B4D8               	btfsc	status,2,c
  2684   000884  EF46  F004         	goto	u4321
  2685   000888  EF49  F004         	goto	u4320
  2686   00088C                     u4321:
  2687   00088C  FFFF               	dw	65535	; assembler added errata NOP
  2688   00088E  EF57  F004         	goto	l662
  2689   000892                     u4320:
  2690   000892  FFFF               	dw	65535	; assembler added errata NOP
  2691   000894                     
  2692                           ; BSR set to: 0
  2693   000894  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_check_access@lint
  2694   000898  ECAC  F006         	call	_INT_INTx_check_access	;wreg free
  2695   00089C  0900               	iorlw	0
  2696   00089E  A4D8               	btfss	status,2,c
  2697   0008A0  EF54  F004         	goto	u4331
  2698   0008A4  EF57  F004         	goto	u4330
  2699   0008A8                     u4331:
  2700   0008A8  FFFF               	dw	65535	; assembler added errata NOP
  2701   0008AA  EF5C  F004         	goto	l660
  2702   0008AE                     u4330:
  2703   0008AE                     l662:
  2704   0008AE  FFFF               	dw	65535	; assembler added errata NOP
  2705                           
  2706                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 36:   ret = (STD_ReturnType)(0x00);
  2707   0008B0  0100               	movlb	0	; () banked
  2708   0008B2  6B82               	clrf	INT_INTx_initialize@ret& (0+255),b
  2709   0008B4  EFC7  F004         	goto	l663
  2710   0008B8                     l660:
  2711   0008B8  FFFF               	dw	65535	; assembler added errata NOP
  2712                           
  2713                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 39:   ret = INT_INTx_disable(lint)&&
  2714   0008BA  0100               	movlb	0	; () banked
  2715   0008BC  6B81               	clrf	_INT_INTx_initialize$1363& (0+255),b
  2716   0008BE                     
  2717                           ; BSR set to: 0
  2718   0008BE  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_disable@lint
  2719   0008C2  ECE8  F007         	call	_INT_INTx_disable	;wreg free
  2720   0008C6  0900               	iorlw	0
  2721   0008C8  B4D8               	btfsc	status,2,c
  2722   0008CA  EF69  F004         	goto	u4341
  2723   0008CE  EF6C  F004         	goto	u4340
  2724   0008D2                     u4341:
  2725   0008D2  FFFF               	dw	65535	; assembler added errata NOP
  2726   0008D4  EFC4  F004         	goto	l4473
  2727   0008D8                     u4340:
  2728   0008D8  FFFF               	dw	65535	; assembler added errata NOP
  2729   0008DA  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_clear_flag@lint
  2730   0008DE  EC29  F008         	call	_INT_INTx_clear_flag	;wreg free
  2731   0008E2  0900               	iorlw	0
  2732   0008E4  B4D8               	btfsc	status,2,c
  2733   0008E6  EF77  F004         	goto	u4351
  2734   0008EA  EF7A  F004         	goto	u4350
  2735   0008EE                     u4351:
  2736   0008EE  FFFF               	dw	65535	; assembler added errata NOP
  2737   0008F0  EFC4  F004         	goto	l4473
  2738   0008F4                     u4350:
  2739   0008F4  FFFF               	dw	65535	; assembler added errata NOP
  2740   0008F6  C080  F076         	movff	INT_INTx_initialize@lint,INT_INTx_pin_initialize@lint
  2741   0008FA  EC92  F008         	call	_INT_INTx_pin_initialize	;wreg free
  2742   0008FE  0900               	iorlw	0
  2743   000900  B4D8               	btfsc	status,2,c
  2744   000902  EF85  F004         	goto	u4361
  2745   000906  EF88  F004         	goto	u4360
  2746   00090A                     u4361:
  2747   00090A  FFFF               	dw	65535	; assembler added errata NOP
  2748   00090C  EFC4  F004         	goto	l4473
  2749   000910                     u4360:
  2750   000910  FFFF               	dw	65535	; assembler added errata NOP
  2751   000912  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_set_callback_routine@lint
  2752   000916  EC4C  F006         	call	_INT_INTx_set_callback_routine	;wreg free
  2753   00091A  0900               	iorlw	0
  2754   00091C  B4D8               	btfsc	status,2,c
  2755   00091E  EF93  F004         	goto	u4371
  2756   000922  EF96  F004         	goto	u4370
  2757   000926                     u4371:
  2758   000926  FFFF               	dw	65535	; assembler added errata NOP
  2759   000928  EFC4  F004         	goto	l4473
  2760   00092C                     u4370:
  2761   00092C  FFFF               	dw	65535	; assembler added errata NOP
  2762   00092E  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_priority_initialize@lint
  2763   000932  ECE1  F005         	call	_INT_INTx_priority_initialize	;wreg free
  2764   000936  0900               	iorlw	0
  2765   000938  B4D8               	btfsc	status,2,c
  2766   00093A  EFA1  F004         	goto	u4381
  2767   00093E  EFA4  F004         	goto	u4380
  2768   000942                     u4381:
  2769   000942  FFFF               	dw	65535	; assembler added errata NOP
  2770   000944  EFC4  F004         	goto	l4473
  2771   000948                     u4380:
  2772   000948  FFFF               	dw	65535	; assembler added errata NOP
  2773   00094A  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_edge_initialize@lint
  2774   00094E  EC0B  F003         	call	_INT_INTx_edge_initialize	;wreg free
  2775   000952  0900               	iorlw	0
  2776   000954  B4D8               	btfsc	status,2,c
  2777   000956  EFAF  F004         	goto	u4391
  2778   00095A  EFB2  F004         	goto	u4390
  2779   00095E                     u4391:
  2780   00095E  FFFF               	dw	65535	; assembler added errata NOP
  2781   000960  EFC4  F004         	goto	l4473
  2782   000964                     u4390:
  2783   000964  FFFF               	dw	65535	; assembler added errata NOP
  2784   000966  C080  F06C         	movff	INT_INTx_initialize@lint,INT_INTx_enable@lint
  2785   00096A  ECA1  F007         	call	_INT_INTx_enable	;wreg free
  2786   00096E  0900               	iorlw	0
  2787   000970  B4D8               	btfsc	status,2,c
  2788   000972  EFBD  F004         	goto	u4401
  2789   000976  EFC0  F004         	goto	u4400
  2790   00097A                     u4401:
  2791   00097A  FFFF               	dw	65535	; assembler added errata NOP
  2792   00097C  EFC4  F004         	goto	l4473
  2793   000980                     u4400:
  2794   000980  FFFF               	dw	65535	; assembler added errata NOP
  2795   000982  0E01               	movlw	1
  2796   000984  0100               	movlb	0	; () banked
  2797   000986  6F81               	movwf	_INT_INTx_initialize$1363& (0+255),b
  2798   000988                     l4473:
  2799   000988  FFFF               	dw	65535	; assembler added errata NOP
  2800   00098A  C081  F082         	movff	_INT_INTx_initialize$1363,INT_INTx_initialize@ret
  2801   00098E                     l663:
  2802   00098E  FFFF               	dw	65535	; assembler added errata NOP
  2803                           
  2804                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 55:  return ret;
  2805   000990  0100               	movlb	0	; () banked
  2806   000992  5182               	movf	INT_INTx_initialize@ret& (0+255),w,b
  2807   000994                     
  2808                           ; BSR set to: 0
  2809   000994  0012               	return		;funcret
  2810   000996  FFFF               	dw	65535	; errata NOP
  2811   000998                     __end_of_INT_INTx_initialize:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _INT_INTx_set_callback_routine *****************
  2815 ;; Defined at:
  2816 ;;		line 387 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  lint            1    7[COMRAM] PTR const struct .
  2819 ;;		 -> first_int(6), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  ret             1   10[COMRAM] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      unsigned char 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2831 ;;      Params:         1       0       0       0       0       0       0
  2832 ;;      Locals:         1       0       0       0       0       0       0
  2833 ;;      Temps:          2       0       0       0       0       0       0
  2834 ;;      Totals:         4       0       0       0       0       0       0
  2835 ;;Total ram usage:        4 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 6
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_INT_INTx_initialize
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text4
  2846   000C98                     __ptext4:
  2847                           	callstack 0
  2848   000C98                     _INT_INTx_set_callback_routine:
  2849                           	callstack 0
  2850   000C98  FFFF               	dw	65535	; assembler added errata NOP
  2851   000C9A                     
  2852                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 388:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  2853   000C9A  0E01               	movlw	1
  2854   000C9C  6E6F               	movwf	INT_INTx_set_callback_routine@ret^0,c
  2855                           
  2856                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 389:  if(((void*)0) == lint || ((void*)
      +                          0) == lint -> ext_interrupt_handler)
  2857   000C9E  506C               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2858   000CA0  B4D8               	btfsc	status,2,c
  2859   000CA2  EF55  F006         	goto	u4061
  2860   000CA6  EF58  F006         	goto	u4060
  2861   000CAA                     u4061:
  2862   000CAA  FFFF               	dw	65535	; assembler added errata NOP
  2863   000CAC  EF66  F006         	goto	l780
  2864   000CB0                     u4060:
  2865   000CB0  FFFF               	dw	65535	; assembler added errata NOP
  2866   000CB2  506C               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2867   000CB4  6ED9               	movwf	fsr2l,c
  2868   000CB6  6ADA               	clrf	fsr2h,c
  2869   000CB8  50DE               	movf	postinc2,w,c
  2870   000CBA  10DE               	iorwf	postinc2,w,c
  2871   000CBC  A4D8               	btfss	status,2,c
  2872   000CBE  EF63  F006         	goto	u4071
  2873   000CC2  EF66  F006         	goto	u4070
  2874   000CC6                     u4071:
  2875   000CC6  FFFF               	dw	65535	; assembler added errata NOP
  2876   000CC8  EF88  F006         	goto	l4225
  2877   000CCC                     u4070:
  2878   000CCC                     l780:
  2879   000CCC  FFFF               	dw	65535	; assembler added errata NOP
  2880                           
  2881                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 390:   ret = (STD_ReturnType)(0x00);
  2882   000CCE  6A6F               	clrf	INT_INTx_set_callback_routine@ret^0,c
  2883   000CD0  EFA8  F006         	goto	l4227
  2884   000CD4                     l4217:
  2885   000CD4  FFFF               	dw	65535	; assembler added errata NOP
  2886                           
  2887                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 394:     INT0_handler = lint -> ext_int
      +                          errupt_handler;
  2888   000CD6  506C               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2889   000CD8  6ED9               	movwf	fsr2l,c
  2890   000CDA  6ADA               	clrf	fsr2h,c
  2891   000CDC  CFDE F057          	movff	postinc2,_INT0_handler
  2892   000CE0  CFDD F058          	movff	postdec2,_INT0_handler+1
  2893                           
  2894                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 395:     break;
  2895   000CE4  EFA8  F006         	goto	l4227
  2896   000CE8                     l4219:
  2897   000CE8  FFFF               	dw	65535	; assembler added errata NOP
  2898                           
  2899                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 397:     INT1_handler = lint -> ext_int
      +                          errupt_handler;
  2900   000CEA  506C               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2901   000CEC  6ED9               	movwf	fsr2l,c
  2902   000CEE  6ADA               	clrf	fsr2h,c
  2903   000CF0  CFDE F055          	movff	postinc2,_INT1_handler
  2904   000CF4  CFDD F056          	movff	postdec2,_INT1_handler+1
  2905                           
  2906                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 398:     break;
  2907   000CF8  EFA8  F006         	goto	l4227
  2908   000CFC                     l4221:
  2909   000CFC  FFFF               	dw	65535	; assembler added errata NOP
  2910                           
  2911                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 400:     INT2_handler = lint -> ext_int
      +                          errupt_handler;
  2912   000CFE  506C               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2913   000D00  6ED9               	movwf	fsr2l,c
  2914   000D02  6ADA               	clrf	fsr2h,c
  2915   000D04  CFDE F053          	movff	postinc2,_INT2_handler
  2916   000D08  CFDD F054          	movff	postdec2,_INT2_handler+1
  2917                           
  2918                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 401:     break;
  2919   000D0C  EFA8  F006         	goto	l4227
  2920   000D10                     l4225:
  2921   000D10  FFFF               	dw	65535	; assembler added errata NOP
  2922   000D12  506C               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2923   000D14  6ED9               	movwf	fsr2l,c
  2924   000D16  6ADA               	clrf	fsr2h,c
  2925   000D18  0E03               	movlw	3
  2926   000D1A  26D9               	addwf	fsr2l,f,c
  2927   000D1C  50DF               	movf	indf2,w,c
  2928   000D1E  6E6D               	movwf	??_INT_INTx_set_callback_routine^0,c
  2929   000D20  6A6E               	clrf	(??_INT_INTx_set_callback_routine+1)^0,c
  2930                           
  2931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2932                           ; Switch size 1, requested type "simple"
  2933                           ; Number of cases is 1, Range of values is 0 to 0
  2934                           ; switch strategies available:
  2935                           ; Name         Instructions Cycles
  2936                           ; simple_byte            4     3 (average)
  2937                           ;	Chosen strategy is simple_byte
  2938   000D22  506E               	movf	(??_INT_INTx_set_callback_routine+1)^0,w,c
  2939   000D24  0A00               	xorlw	0	; case 0
  2940   000D26  B4D8               	btfsc	status,2,c
  2941   000D28  EF98  F006         	goto	l5233
  2942   000D2C  EF66  F006         	goto	l780
  2943   000D30                     l5233:
  2944   000D30  FFFF               	dw	65535	; assembler added errata NOP
  2945                           
  2946                           ; Switch size 1, requested type "simple"
  2947                           ; Number of cases is 3, Range of values is 0 to 2
  2948                           ; switch strategies available:
  2949                           ; Name         Instructions Cycles
  2950                           ; simple_byte           10     6 (average)
  2951                           ;	Chosen strategy is simple_byte
  2952   000D32  506D               	movf	??_INT_INTx_set_callback_routine^0,w,c
  2953   000D34  0A00               	xorlw	0	; case 0
  2954   000D36  B4D8               	btfsc	status,2,c
  2955   000D38  EF6A  F006         	goto	l4217
  2956   000D3C  0A01               	xorlw	1	; case 1
  2957   000D3E  B4D8               	btfsc	status,2,c
  2958   000D40  EF74  F006         	goto	l4219
  2959   000D44  0A03               	xorlw	3	; case 2
  2960   000D46  B4D8               	btfsc	status,2,c
  2961   000D48  EF7E  F006         	goto	l4221
  2962   000D4C  EF66  F006         	goto	l780
  2963   000D50                     l4227:
  2964   000D50  FFFF               	dw	65535	; assembler added errata NOP
  2965                           
  2966                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 407:  return ret;
  2967   000D52  506F               	movf	INT_INTx_set_callback_routine@ret^0,w,c
  2968   000D54  0012               	return		;funcret
  2969   000D56  FFFF               	dw	65535	; errata NOP
  2970   000D58                     __end_of_INT_INTx_set_callback_routine:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _INT_INTx_priority_initialize *****************
  2974 ;; Defined at:
  2975 ;;		line 191 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  lint            1    7[COMRAM] PTR const struct .
  2978 ;;		 -> first_int(6), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  ret             1   10[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      unsigned char 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2990 ;;      Params:         1       0       0       0       0       0       0
  2991 ;;      Locals:         1       0       0       0       0       0       0
  2992 ;;      Temps:          2       0       0       0       0       0       0
  2993 ;;      Totals:         4       0       0       0       0       0       0
  2994 ;;Total ram usage:        4 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 6
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_INT_INTx_initialize
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text5
  3005   000BC2                     __ptext5:
  3006                           	callstack 0
  3007   000BC2                     _INT_INTx_priority_initialize:
  3008                           	callstack 0
  3009   000BC2  FFFF               	dw	65535	; assembler added errata NOP
  3010   000BC4                     
  3011                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 192:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3012   000BC4  0E01               	movlw	1
  3013   000BC6  6E6F               	movwf	INT_INTx_priority_initialize@ret^0,c
  3014                           
  3015                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 193:  if(((void*)0) == lint)
  3016   000BC8  506C               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3017   000BCA  A4D8               	btfss	status,2,c
  3018   000BCC  EFEA  F005         	goto	u4081
  3019   000BD0  EFED  F005         	goto	u4080
  3020   000BD4                     u4081:
  3021   000BD4  FFFF               	dw	65535	; assembler added errata NOP
  3022   000BD6  EFF2  F005         	goto	l701
  3023   000BDA                     u4080:
  3024   000BDA  FFFF               	dw	65535	; assembler added errata NOP
  3025   000BDC                     l4237:
  3026   000BDC  FFFF               	dw	65535	; assembler added errata NOP
  3027                           
  3028                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 194:   ret = (STD_ReturnType)(0x00);
  3029   000BDE  6A6F               	clrf	INT_INTx_priority_initialize@ret^0,c
  3030   000BE0  EF48  F006         	goto	l4251
  3031   000BE4                     l701:
  3032   000BE4  FFFF               	dw	65535	; assembler added errata NOP
  3033                           
  3034                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 196:             RCONbits.IPEN=1;
  3035   000BE6  8ED0               	bsf	208,7,c	;volatile
  3036                           
  3037                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 197:   switch(lint -> index){
  3038   000BE8  EF28  F006         	goto	l4249
  3039   000BEC                     l707:
  3040   000BEC  FFFF               	dw	65535	; assembler added errata NOP
  3041                           
  3042                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 203:       INTCON3bits.INT1IP=1;
  3043   000BEE  8CF0               	bsf	240,6,c	;volatile
  3044                           
  3045                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 204:       break;
  3046   000BF0  EF48  F006         	goto	l4251
  3047   000BF4                     l709:
  3048   000BF4  FFFF               	dw	65535	; assembler added errata NOP
  3049                           
  3050                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 206:       INTCON3bits.INT1IP=0;
  3051   000BF6  9CF0               	bcf	240,6,c	;volatile
  3052                           
  3053                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 207:       break;
  3054   000BF8  EF48  F006         	goto	l4251
  3055   000BFC                     l4241:
  3056   000BFC  FFFF               	dw	65535	; assembler added errata NOP
  3057   000BFE  506C               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3058   000C00  6ED9               	movwf	fsr2l,c
  3059   000C02  6ADA               	clrf	fsr2h,c
  3060   000C04  0E05               	movlw	5
  3061   000C06  26D9               	addwf	fsr2l,f,c
  3062   000C08  50DF               	movf	indf2,w,c
  3063                           
  3064                           ; Switch size 1, requested type "simple"
  3065                           ; Number of cases is 2, Range of values is 0 to 1
  3066                           ; switch strategies available:
  3067                           ; Name         Instructions Cycles
  3068                           ; simple_byte            7     4 (average)
  3069                           ;	Chosen strategy is simple_byte
  3070   000C0A  0A00               	xorlw	0	; case 0
  3071   000C0C  B4D8               	btfsc	status,2,c
  3072   000C0E  EFFA  F005         	goto	l709
  3073   000C12  0A01               	xorlw	1	; case 1
  3074   000C14  B4D8               	btfsc	status,2,c
  3075   000C16  EFF6  F005         	goto	l707
  3076   000C1A  EFEE  F005         	goto	l4237
  3077   000C1E                     l714:
  3078   000C1E  FFFF               	dw	65535	; assembler added errata NOP
  3079                           
  3080                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 216:       INTCON3bits.INT2IP=1;
  3081   000C20  8EF0               	bsf	240,7,c	;volatile
  3082                           
  3083                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 217:       break;
  3084   000C22  EF48  F006         	goto	l4251
  3085   000C26                     l716:
  3086   000C26  FFFF               	dw	65535	; assembler added errata NOP
  3087                           
  3088                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 219:       INTCON3bits.INT2IP=0;
  3089   000C28  9EF0               	bcf	240,7,c	;volatile
  3090                           
  3091                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 220:       break;
  3092   000C2A  EF48  F006         	goto	l4251
  3093   000C2E                     l4245:
  3094   000C2E  FFFF               	dw	65535	; assembler added errata NOP
  3095   000C30  506C               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3096   000C32  6ED9               	movwf	fsr2l,c
  3097   000C34  6ADA               	clrf	fsr2h,c
  3098   000C36  0E05               	movlw	5
  3099   000C38  26D9               	addwf	fsr2l,f,c
  3100   000C3A  50DF               	movf	indf2,w,c
  3101                           
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 2, Range of values is 0 to 1
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte            7     4 (average)
  3107                           ;	Chosen strategy is simple_byte
  3108   000C3C  0A00               	xorlw	0	; case 0
  3109   000C3E  B4D8               	btfsc	status,2,c
  3110   000C40  EF13  F006         	goto	l716
  3111   000C44  0A01               	xorlw	1	; case 1
  3112   000C46  B4D8               	btfsc	status,2,c
  3113   000C48  EF0F  F006         	goto	l714
  3114   000C4C  EFEE  F005         	goto	l4237
  3115   000C50                     l4249:
  3116   000C50  FFFF               	dw	65535	; assembler added errata NOP
  3117   000C52  506C               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3118   000C54  6ED9               	movwf	fsr2l,c
  3119   000C56  6ADA               	clrf	fsr2h,c
  3120   000C58  0E03               	movlw	3
  3121   000C5A  26D9               	addwf	fsr2l,f,c
  3122   000C5C  50DF               	movf	indf2,w,c
  3123   000C5E  6E6D               	movwf	??_INT_INTx_priority_initialize^0,c
  3124   000C60  6A6E               	clrf	(??_INT_INTx_priority_initialize+1)^0,c
  3125                           
  3126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3127                           ; Switch size 1, requested type "simple"
  3128                           ; Number of cases is 1, Range of values is 0 to 0
  3129                           ; switch strategies available:
  3130                           ; Name         Instructions Cycles
  3131                           ; simple_byte            4     3 (average)
  3132                           ;	Chosen strategy is simple_byte
  3133   000C62  506E               	movf	(??_INT_INTx_priority_initialize+1)^0,w,c
  3134   000C64  0A00               	xorlw	0	; case 0
  3135   000C66  B4D8               	btfsc	status,2,c
  3136   000C68  EF38  F006         	goto	l5235
  3137   000C6C  EFEE  F005         	goto	l4237
  3138   000C70                     l5235:
  3139   000C70  FFFF               	dw	65535	; assembler added errata NOP
  3140                           
  3141                           ; Switch size 1, requested type "simple"
  3142                           ; Number of cases is 3, Range of values is 0 to 2
  3143                           ; switch strategies available:
  3144                           ; Name         Instructions Cycles
  3145                           ; simple_byte           10     6 (average)
  3146                           ;	Chosen strategy is simple_byte
  3147   000C72  506D               	movf	??_INT_INTx_priority_initialize^0,w,c
  3148   000C74  0A00               	xorlw	0	; case 0
  3149   000C76  B4D8               	btfsc	status,2,c
  3150   000C78  EFFE  F005         	goto	l4241
  3151   000C7C  0A01               	xorlw	1	; case 1
  3152   000C7E  B4D8               	btfsc	status,2,c
  3153   000C80  EFFE  F005         	goto	l4241
  3154   000C84  0A03               	xorlw	3	; case 2
  3155   000C86  B4D8               	btfsc	status,2,c
  3156   000C88  EF17  F006         	goto	l4245
  3157   000C8C  EFEE  F005         	goto	l4237
  3158   000C90                     l4251:
  3159   000C90  FFFF               	dw	65535	; assembler added errata NOP
  3160                           
  3161                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 231:  return ret;
  3162   000C92  506F               	movf	INT_INTx_priority_initialize@ret^0,w,c
  3163   000C94  0012               	return		;funcret
  3164   000C96  FFFF               	dw	65535	; errata NOP
  3165   000C98                     __end_of_INT_INTx_priority_initialize:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _INT_INTx_pin_initialize *****************
  3169 ;; Defined at:
  3170 ;;		line 324 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  lint            1   17[COMRAM] PTR const struct .
  3173 ;;		 -> first_int(6), 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  ret             1   18[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         1       0       0       0       0       0       0
  3186 ;;      Locals:         1       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0
  3188 ;;      Totals:         2       0       0       0       0       0       0
  3189 ;;Total ram usage:        2 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 8
  3192 ;; This function calls:
  3193 ;;		_GPIO_pin_direction_initialize
  3194 ;;		_INT_INTx_check_access
  3195 ;; This function is called by:
  3196 ;;		_INT_INTx_initialize
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text6
  3201   001124                     __ptext6:
  3202                           	callstack 0
  3203   001124                     _INT_INTx_pin_initialize:
  3204                           	callstack 0
  3205   001124  FFFF               	dw	65535	; assembler added errata NOP
  3206   001126                     
  3207                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 326:  if(((void*)0) == lint || ((STD_Re
      +                          turnType)(0x00) == INT_INTx_check_access(lint)) )
  3208   001126  5076               	movf	INT_INTx_pin_initialize@lint^0,w,c
  3209   001128  B4D8               	btfsc	status,2,c
  3210   00112A  EF99  F008         	goto	u4041
  3211   00112E  EF9C  F008         	goto	u4040
  3212   001132                     u4041:
  3213   001132  FFFF               	dw	65535	; assembler added errata NOP
  3214   001134  EFAA  F008         	goto	l750
  3215   001138                     u4040:
  3216   001138  FFFF               	dw	65535	; assembler added errata NOP
  3217   00113A  C076  F06C         	movff	INT_INTx_pin_initialize@lint,INT_INTx_check_access@lint
  3218   00113E  ECAC  F006         	call	_INT_INTx_check_access	;wreg free
  3219   001142  0900               	iorlw	0
  3220   001144  A4D8               	btfss	status,2,c
  3221   001146  EFA7  F008         	goto	u4051
  3222   00114A  EFAA  F008         	goto	u4050
  3223   00114E                     u4051:
  3224   00114E  FFFF               	dw	65535	; assembler added errata NOP
  3225   001150  EFAE  F008         	goto	l4207
  3226   001154                     u4050:
  3227   001154                     l750:
  3228   001154  FFFF               	dw	65535	; assembler added errata NOP
  3229                           
  3230                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 327:   ret = (STD_ReturnType)(0x00);
  3231   001156  6A77               	clrf	INT_INTx_pin_initialize@ret^0,c
  3232   001158  EFB5  F008         	goto	l4209
  3233   00115C                     l4207:
  3234   00115C  FFFF               	dw	65535	; assembler added errata NOP
  3235                           
  3236                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 329:   ret = GPIO_pin_direction_initial
      +                          ize(&(lint -> Ipin));
  3237   00115E  5076               	movf	INT_INTx_pin_initialize@lint^0,w,c
  3238   001160  0F02               	addlw	2
  3239   001162  6E6F               	movwf	GPIO_pin_direction_initialize@_pin_config^0,c
  3240   001164  ECCC  F004         	call	_GPIO_pin_direction_initialize	;wreg free
  3241   001168  6E77               	movwf	INT_INTx_pin_initialize@ret^0,c
  3242   00116A                     l4209:
  3243   00116A  FFFF               	dw	65535	; assembler added errata NOP
  3244                           
  3245                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 331:  return ret;
  3246   00116C  5077               	movf	INT_INTx_pin_initialize@ret^0,w,c
  3247   00116E  0012               	return		;funcret
  3248   001170  FFFF               	dw	65535	; errata NOP
  3249   001172                     __end_of_INT_INTx_pin_initialize:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _INT_INTx_check_access *****************
  3253 ;; Defined at:
  3254 ;;		line 363 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  lint            1    7[COMRAM] PTR const struct .
  3257 ;;		 -> first_int(6), 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  ret             1    8[COMRAM] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      unsigned char 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3269 ;;      Params:         1       0       0       0       0       0       0
  3270 ;;      Locals:         1       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 6
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_INT_INTx_initialize
  3280 ;;		_INT_INTx_pin_initialize
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text7
  3285   000D58                     __ptext7:
  3286                           	callstack 0
  3287   000D58                     _INT_INTx_check_access:
  3288                           	callstack 0
  3289   000D58  FFFF               	dw	65535	; assembler added errata NOP
  3290   000D5A                     
  3291                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 364:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3292   000D5A  0E01               	movlw	1
  3293   000D5C  6E6D               	movwf	INT_INTx_check_access@ret^0,c
  3294                           
  3295                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 365:  if(((void*)0) == lint || (lint ->
      +                           Ipin.port != PORTB_I) || ( (lint -> Ipin.pin != PIN0)
  3296   000D5E  506C               	movf	INT_INTx_check_access@lint^0,w,c
  3297   000D60  B4D8               	btfsc	status,2,c
  3298   000D62  EFB5  F006         	goto	u3801
  3299   000D66  EFB8  F006         	goto	u3800
  3300   000D6A                     u3801:
  3301   000D6A  FFFF               	dw	65535	; assembler added errata NOP
  3302   000D6C  EF02  F007         	goto	l768
  3303   000D70                     u3800:
  3304   000D70  FFFF               	dw	65535	; assembler added errata NOP
  3305   000D72  506C               	movf	INT_INTx_check_access@lint^0,w,c
  3306   000D74  6ED9               	movwf	fsr2l,c
  3307   000D76  6ADA               	clrf	fsr2h,c
  3308   000D78  0E02               	movlw	2
  3309   000D7A  26D9               	addwf	fsr2l,f,c
  3310   000D7C  50DF               	movf	223,w,c
  3311   000D7E  0B07               	andlw	7
  3312   000D80  06E8               	decf	wreg,f,c
  3313   000D82  A4D8               	btfss	status,2,c
  3314   000D84  EFC6  F006         	goto	u3811
  3315   000D88  EFC9  F006         	goto	u3810
  3316   000D8C                     u3811:
  3317   000D8C  FFFF               	dw	65535	; assembler added errata NOP
  3318   000D8E  EF02  F007         	goto	l768
  3319   000D92                     u3810:
  3320   000D92  FFFF               	dw	65535	; assembler added errata NOP
  3321   000D94  506C               	movf	INT_INTx_check_access@lint^0,w,c
  3322   000D96  6ED9               	movwf	fsr2l,c
  3323   000D98  6ADA               	clrf	fsr2h,c
  3324   000D9A  0E02               	movlw	2
  3325   000D9C  26D9               	addwf	fsr2l,f,c
  3326   000D9E  30DF               	rrcf	223,w,c
  3327   000DA0  32E8               	rrcf	wreg,f,c
  3328   000DA2  32E8               	rrcf	wreg,f,c
  3329   000DA4  0B07               	andlw	7
  3330   000DA6  0900               	iorlw	0
  3331   000DA8  B4D8               	btfsc	status,2,c
  3332   000DAA  EFD9  F006         	goto	u3821
  3333   000DAE  EFDC  F006         	goto	u3820
  3334   000DB2                     u3821:
  3335   000DB2  FFFF               	dw	65535	; assembler added errata NOP
  3336   000DB4  EF04  F007         	goto	l4043
  3337   000DB8                     u3820:
  3338   000DB8  FFFF               	dw	65535	; assembler added errata NOP
  3339   000DBA  506C               	movf	INT_INTx_check_access@lint^0,w,c
  3340   000DBC  6ED9               	movwf	fsr2l,c
  3341   000DBE  6ADA               	clrf	fsr2h,c
  3342   000DC0  0E02               	movlw	2
  3343   000DC2  26D9               	addwf	fsr2l,f,c
  3344   000DC4  30DF               	rrcf	223,w,c
  3345   000DC6  32E8               	rrcf	wreg,f,c
  3346   000DC8  32E8               	rrcf	wreg,f,c
  3347   000DCA  0B07               	andlw	7
  3348   000DCC  06E8               	decf	wreg,f,c
  3349   000DCE  B4D8               	btfsc	status,2,c
  3350   000DD0  EFEC  F006         	goto	u3831
  3351   000DD4  EFEF  F006         	goto	u3830
  3352   000DD8                     u3831:
  3353   000DD8  FFFF               	dw	65535	; assembler added errata NOP
  3354   000DDA  EF04  F007         	goto	l4043
  3355   000DDE                     u3830:
  3356   000DDE  FFFF               	dw	65535	; assembler added errata NOP
  3357   000DE0  506C               	movf	INT_INTx_check_access@lint^0,w,c
  3358   000DE2  6ED9               	movwf	fsr2l,c
  3359   000DE4  6ADA               	clrf	fsr2h,c
  3360   000DE6  0E02               	movlw	2
  3361   000DE8  26D9               	addwf	fsr2l,f,c
  3362   000DEA  30DF               	rrcf	223,w,c
  3363   000DEC  32E8               	rrcf	wreg,f,c
  3364   000DEE  32E8               	rrcf	wreg,f,c
  3365   000DF0  0B07               	andlw	7
  3366   000DF2  0A02               	xorlw	2
  3367   000DF4  B4D8               	btfsc	status,2,c
  3368   000DF6  EFFF  F006         	goto	u3841
  3369   000DFA  EF02  F007         	goto	u3840
  3370   000DFE                     u3841:
  3371   000DFE  FFFF               	dw	65535	; assembler added errata NOP
  3372   000E00  EF04  F007         	goto	l4043
  3373   000E04                     u3840:
  3374   000E04                     l768:
  3375   000E04  FFFF               	dw	65535	; assembler added errata NOP
  3376                           
  3377                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 366:   && (lint -> Ipin.pin != PIN1) &&
      +                           (lint -> Ipin.pin != PIN2)) ){;MCAL_layer/Interrupt/mcal_external_interrupt.c: 367:   r
      +                          et = (STD_ReturnType)(0x00);
  3378   000E06  6A6D               	clrf	INT_INTx_check_access@ret^0,c
  3379   000E08                     l4043:
  3380   000E08  FFFF               	dw	65535	; assembler added errata NOP
  3381                           
  3382                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 369:  return ret;
  3383   000E0A  506D               	movf	INT_INTx_check_access@ret^0,w,c
  3384   000E0C  0012               	return		;funcret
  3385   000E0E  FFFF               	dw	65535	; errata NOP
  3386   000E10                     __end_of_INT_INTx_check_access:
  3387                           	callstack 0
  3388                           
  3389 ;; *************** function _GPIO_pin_direction_initialize *****************
  3390 ;; Defined at:
  3391 ;;		line 54 in file "MCAL_layer/GPIO/hal_gpio.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  3394 ;;		 -> first_int(6), relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinc(4), 
  3395 ;;		 -> keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize
      +@lpin(4), 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  ret             1   16[COMRAM] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      unsigned char 
  3400 ;; Registers used:
  3401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3407 ;;      Params:         1       0       0       0       0       0       0
  3408 ;;      Locals:         1       0       0       0       0       0       0
  3409 ;;      Temps:          5       0       0       0       0       0       0
  3410 ;;      Totals:         7       0       0       0       0       0       0
  3411 ;;Total ram usage:        7 bytes
  3412 ;; Hardware stack levels used: 1
  3413 ;; Hardware stack levels required when called: 7
  3414 ;; This function calls:
  3415 ;;		_GPIO_check_access
  3416 ;; This function is called by:
  3417 ;;		_INT_INTx_pin_initialize
  3418 ;;		_keypad_initialize
  3419 ;;		_btn_initialize
  3420 ;;		_GPIO_pin_initialize
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text8
  3425   000998                     __ptext8:
  3426                           	callstack 0
  3427   000998                     _GPIO_pin_direction_initialize:
  3428                           	callstack 0
  3429   000998  FFFF               	dw	65535	; assembler added errata NOP
  3430   00099A                     
  3431                           ;MCAL_layer/GPIO/hal_gpio.c: 55:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3432   00099A  0E01               	movlw	1
  3433   00099C  6E75               	movwf	GPIO_pin_direction_initialize@ret^0,c
  3434   00099E                     
  3435                           ;MCAL_layer/GPIO/hal_gpio.c: 56:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3436   00099E  C06F  F06C         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  3437   0009A2  ECAC  F003         	call	_GPIO_check_access	;wreg free
  3438   0009A6  0900               	iorlw	0
  3439   0009A8  A4D8               	btfss	status,2,c
  3440   0009AA  EFD9  F004         	goto	u3761
  3441   0009AE  EFDC  F004         	goto	u3760
  3442   0009B2                     u3761:
  3443   0009B2  FFFF               	dw	65535	; assembler added errata NOP
  3444   0009B4  EF3A  F005         	goto	l4027
  3445   0009B8                     u3760:
  3446   0009B8  FFFF               	dw	65535	; assembler added errata NOP
  3447   0009BA                     l4021:
  3448   0009BA  FFFF               	dw	65535	; assembler added errata NOP
  3449                           
  3450                           ;MCAL_layer/GPIO/hal_gpio.c: 57:   ret = (STD_ReturnType)(0x00);
  3451   0009BC  6A75               	clrf	GPIO_pin_direction_initialize@ret^0,c
  3452                           
  3453                           ;MCAL_layer/GPIO/hal_gpio.c: 58:  }
  3454   0009BE  EF54  F005         	goto	l4029
  3455   0009C2                     l4023:
  3456   0009C2  FFFF               	dw	65535	; assembler added errata NOP
  3457                           
  3458                           ;MCAL_layer/GPIO/hal_gpio.c: 62:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3459   0009C4  506F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3460   0009C6  6ED9               	movwf	fsr2l,c
  3461   0009C8  6ADA               	clrf	fsr2h,c
  3462   0009CA  30DF               	rrcf	223,w,c
  3463   0009CC  32E8               	rrcf	wreg,f,c
  3464   0009CE  32E8               	rrcf	wreg,f,c
  3465   0009D0  0B07               	andlw	7
  3466   0009D2  6E70               	movwf	??_GPIO_pin_direction_initialize^0,c
  3467   0009D4  0E01               	movlw	1
  3468   0009D6  6E71               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  3469   0009D8  2A70               	incf	??_GPIO_pin_direction_initialize^0,f,c
  3470   0009DA  EFF2  F004         	goto	u3774
  3471   0009DE                     u3775:
  3472   0009DE  FFFF               	dw	65535	; assembler added errata NOP
  3473   0009E0  90D8               	bcf	status,0,c
  3474   0009E2  3671               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  3475   0009E4                     u3774:
  3476   0009E4  FFFF               	dw	65535	; assembler added errata NOP
  3477   0009E6  2E70               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  3478   0009E8  EFEF  F004         	goto	u3775
  3479   0009EC  5071               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  3480   0009EE  0AFF               	xorlw	255
  3481   0009F0  6E72               	movwf	(??_GPIO_pin_direction_initialize+2)^0,c
  3482   0009F2  506F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3483   0009F4  6ED9               	movwf	fsr2l,c
  3484   0009F6  6ADA               	clrf	fsr2h,c
  3485   0009F8  50DF               	movf	223,w,c
  3486   0009FA  0B07               	andlw	7
  3487   0009FC  0D02               	mullw	2
  3488   0009FE  50F3               	movf	243,w,c
  3489   000A00  0F20               	addlw	low __TRIS_registers
  3490   000A02  6ED9               	movwf	fsr2l,c
  3491   000A04  6ADA               	clrf	fsr2h,c
  3492   000A06  CFDE F073          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  3493   000A0A  CFDD F074          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  3494   000A0E  C073  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  3495   000A12  C074  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  3496   000A16  5072               	movf	(??_GPIO_pin_direction_initialize+2)^0,w,c
  3497   000A18  16DF               	andwf	indf2,f,c
  3498                           
  3499                           ;MCAL_layer/GPIO/hal_gpio.c: 63:     break;
  3500   000A1A  EF54  F005         	goto	l4029
  3501   000A1E                     l4025:
  3502   000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3503                           
  3504                           ;MCAL_layer/GPIO/hal_gpio.c: 65:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  3505   000A20  506F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3506   000A22  6ED9               	movwf	fsr2l,c
  3507   000A24  6ADA               	clrf	fsr2h,c
  3508   000A26  30DF               	rrcf	223,w,c
  3509   000A28  32E8               	rrcf	wreg,f,c
  3510   000A2A  32E8               	rrcf	wreg,f,c
  3511   000A2C  0B07               	andlw	7
  3512   000A2E  6E70               	movwf	??_GPIO_pin_direction_initialize^0,c
  3513   000A30  0E01               	movlw	1
  3514   000A32  6E71               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  3515   000A34  2A70               	incf	??_GPIO_pin_direction_initialize^0,f,c
  3516   000A36  EF20  F005         	goto	u3784
  3517   000A3A                     u3785:
  3518   000A3A  FFFF               	dw	65535	; assembler added errata NOP
  3519   000A3C  90D8               	bcf	status,0,c
  3520   000A3E  3671               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  3521   000A40                     u3784:
  3522   000A40  FFFF               	dw	65535	; assembler added errata NOP
  3523   000A42  2E70               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  3524   000A44  EF1D  F005         	goto	u3785
  3525   000A48  506F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3526   000A4A  6ED9               	movwf	fsr2l,c
  3527   000A4C  6ADA               	clrf	fsr2h,c
  3528   000A4E  50DF               	movf	223,w,c
  3529   000A50  0B07               	andlw	7
  3530   000A52  0D02               	mullw	2
  3531   000A54  50F3               	movf	243,w,c
  3532   000A56  0F20               	addlw	low __TRIS_registers
  3533   000A58  6ED9               	movwf	fsr2l,c
  3534   000A5A  6ADA               	clrf	fsr2h,c
  3535   000A5C  CFDE F072          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  3536   000A60  CFDD F073          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  3537   000A64  C072  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  3538   000A68  C073  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  3539   000A6C  5071               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  3540   000A6E  12DF               	iorwf	indf2,f,c
  3541                           
  3542                           ;MCAL_layer/GPIO/hal_gpio.c: 66:     break;
  3543   000A70  EF54  F005         	goto	l4029
  3544   000A74                     l4027:
  3545   000A74  FFFF               	dw	65535	; assembler added errata NOP
  3546   000A76  506F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3547   000A78  6ED9               	movwf	fsr2l,c
  3548   000A7A  6ADA               	clrf	fsr2h,c
  3549   000A7C  BCDF               	btfsc	indf2,6,c
  3550   000A7E  EF43  F005         	goto	u3791
  3551   000A82  EF47  F005         	goto	u3790
  3552   000A86                     u3791:
  3553   000A86  FFFF               	dw	65535	; assembler added errata NOP
  3554   000A88  0E01               	movlw	1
  3555   000A8A  EF49  F005         	goto	u3796
  3556   000A8E                     u3790:
  3557   000A8E  FFFF               	dw	65535	; assembler added errata NOP
  3558   000A90  0E00               	movlw	0
  3559   000A92                     u3796:
  3560   000A92  FFFF               	dw	65535	; assembler added errata NOP
  3561                           
  3562                           ; Switch size 1, requested type "simple"
  3563                           ; Number of cases is 2, Range of values is 0 to 1
  3564                           ; switch strategies available:
  3565                           ; Name         Instructions Cycles
  3566                           ; simple_byte            7     4 (average)
  3567                           ;	Chosen strategy is simple_byte
  3568   000A94  0A00               	xorlw	0	; case 0
  3569   000A96  B4D8               	btfsc	status,2,c
  3570   000A98  EFE1  F004         	goto	l4023
  3571   000A9C  0A01               	xorlw	1	; case 1
  3572   000A9E  B4D8               	btfsc	status,2,c
  3573   000AA0  EF0F  F005         	goto	l4025
  3574   000AA4  EFDD  F004         	goto	l4021
  3575   000AA8                     l4029:
  3576   000AA8  FFFF               	dw	65535	; assembler added errata NOP
  3577                           
  3578                           ;MCAL_layer/GPIO/hal_gpio.c: 71:  return ret;
  3579   000AAA  5075               	movf	GPIO_pin_direction_initialize@ret^0,w,c
  3580   000AAC  0012               	return		;funcret
  3581   000AAE  FFFF               	dw	65535	; errata NOP
  3582   000AB0                     __end_of_GPIO_pin_direction_initialize:
  3583                           	callstack 0
  3584                           
  3585 ;; *************** function _GPIO_check_access *****************
  3586 ;; Defined at:
  3587 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  _pin_config     1    7[COMRAM] PTR const struct .
  3590 ;;		 -> first_int(6), relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), 
  3591 ;;		 -> LED_toggle@pin_local(1), LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), 
  3592 ;;		 -> keypad_read_number@lpinc(4), keypad_read_number@lpinr(4), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4)
      +, 
  3593 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  3594 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  3595 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  ret             1    9[COMRAM] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      unsigned char 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3607 ;;      Params:         1       0       0       0       0       0       0
  3608 ;;      Locals:         1       0       0       0       0       0       0
  3609 ;;      Temps:          1       0       0       0       0       0       0
  3610 ;;      Totals:         3       0       0       0       0       0       0
  3611 ;;Total ram usage:        3 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 6
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_LED_on
  3618 ;;		_GPIO_pin_direction_initialize
  3619 ;;		_GPIO_pin_write_logic
  3620 ;;		_seven_segment_initialize
  3621 ;;		_dc_motor_initialize
  3622 ;;		_lcd_check_access
  3623 ;;		_LED_initialize
  3624 ;;		_LED_off
  3625 ;;		_LED_toggle
  3626 ;;		_btn_initialize
  3627 ;;		_btn_read_state
  3628 ;;		_relay_initialize
  3629 ;;		_relay_turn_on
  3630 ;;		_relay_turn_off
  3631 ;;		_GPIO_pin_initialize
  3632 ;;		_GPIO_pin_get_direction_status
  3633 ;;		_GPIO_pin_read_logic
  3634 ;;		_GPIO_pin_toggle_logic
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text9
  3639   000758                     __ptext9:
  3640                           	callstack 0
  3641   000758                     _GPIO_check_access:
  3642                           	callstack 0
  3643   000758  FFFF               	dw	65535	; assembler added errata NOP
  3644   00075A                     
  3645                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3646   00075A  0E01               	movlw	1
  3647   00075C  6E6E               	movwf	GPIO_check_access@ret^0,c
  3648                           
  3649                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  3650   00075E  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3651   000760  B4D8               	btfsc	status,2,c
  3652   000762  EFB5  F003         	goto	u3661
  3653   000766  EFB8  F003         	goto	u3660
  3654   00076A                     u3661:
  3655   00076A  FFFF               	dw	65535	; assembler added errata NOP
  3656   00076C  EF38  F004         	goto	l474
  3657   000770                     u3660:
  3658   000770  FFFF               	dw	65535	; assembler added errata NOP
  3659   000772  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3660   000774  6ED9               	movwf	fsr2l,c
  3661   000776  6ADA               	clrf	fsr2h,c
  3662   000778  50DF               	movf	223,w,c
  3663   00077A  0B07               	andlw	7
  3664   00077C  0900               	iorlw	0
  3665   00077E  A4D8               	btfss	status,2,c
  3666   000780  EFC4  F003         	goto	u3671
  3667   000784  EFC7  F003         	goto	u3670
  3668   000788                     u3671:
  3669   000788  FFFF               	dw	65535	; assembler added errata NOP
  3670   00078A  EFD8  F003         	goto	l3989
  3671   00078E                     u3670:
  3672   00078E  FFFF               	dw	65535	; assembler added errata NOP
  3673   000790  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3674   000792  6ED9               	movwf	fsr2l,c
  3675   000794  6ADA               	clrf	fsr2h,c
  3676   000796  30DF               	rrcf	223,w,c
  3677   000798  32E8               	rrcf	wreg,f,c
  3678   00079A  32E8               	rrcf	wreg,f,c
  3679   00079C  0B07               	andlw	7
  3680   00079E  0A07               	xorlw	7
  3681   0007A0  B4D8               	btfsc	status,2,c
  3682   0007A2  EFD5  F003         	goto	u3681
  3683   0007A6  EFD8  F003         	goto	u3680
  3684   0007AA                     u3681:
  3685   0007AA  FFFF               	dw	65535	; assembler added errata NOP
  3686   0007AC  EF38  F004         	goto	l474
  3687   0007B0                     u3680:
  3688   0007B0                     l3989:
  3689   0007B0  FFFF               	dw	65535	; assembler added errata NOP
  3690   0007B2  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3691   0007B4  6ED9               	movwf	fsr2l,c
  3692   0007B6  6ADA               	clrf	fsr2h,c
  3693   0007B8  50DF               	movf	223,w,c
  3694   0007BA  0B07               	andlw	7
  3695   0007BC  06E8               	decf	wreg,f,c
  3696   0007BE  B4D8               	btfsc	status,2,c
  3697   0007C0  EFE4  F003         	goto	u3691
  3698   0007C4  EFE7  F003         	goto	u3690
  3699   0007C8                     u3691:
  3700   0007C8  FFFF               	dw	65535	; assembler added errata NOP
  3701   0007CA  EF05  F004         	goto	l3995
  3702   0007CE                     u3690:
  3703   0007CE  FFFF               	dw	65535	; assembler added errata NOP
  3704   0007D0  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3705   0007D2  6ED9               	movwf	fsr2l,c
  3706   0007D4  6ADA               	clrf	fsr2h,c
  3707   0007D6  50DF               	movf	223,w,c
  3708   0007D8  0B07               	andlw	7
  3709   0007DA  0A02               	xorlw	2
  3710   0007DC  B4D8               	btfsc	status,2,c
  3711   0007DE  EFF3  F003         	goto	u3701
  3712   0007E2  EFF6  F003         	goto	u3700
  3713   0007E6                     u3701:
  3714   0007E6  FFFF               	dw	65535	; assembler added errata NOP
  3715   0007E8  EF05  F004         	goto	l3995
  3716   0007EC                     u3700:
  3717   0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3718   0007EE  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3719   0007F0  6ED9               	movwf	fsr2l,c
  3720   0007F2  6ADA               	clrf	fsr2h,c
  3721   0007F4  50DF               	movf	223,w,c
  3722   0007F6  0B07               	andlw	7
  3723   0007F8  0A03               	xorlw	3
  3724   0007FA  A4D8               	btfss	status,2,c
  3725   0007FC  EF02  F004         	goto	u3711
  3726   000800  EF05  F004         	goto	u3710
  3727   000804                     u3711:
  3728   000804  FFFF               	dw	65535	; assembler added errata NOP
  3729   000806  EF17  F004         	goto	l3997
  3730   00080A                     u3710:
  3731   00080A                     l3995:
  3732   00080A  FFFF               	dw	65535	; assembler added errata NOP
  3733   00080C  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3734   00080E  6ED9               	movwf	fsr2l,c
  3735   000810  6ADA               	clrf	fsr2h,c
  3736   000812  30DF               	rrcf	223,w,c
  3737   000814  32E8               	rrcf	wreg,f,c
  3738   000816  32E8               	rrcf	wreg,f,c
  3739   000818  0B07               	andlw	7
  3740   00081A  6E6D               	movwf	??_GPIO_check_access^0,c
  3741   00081C  0E08               	movlw	8
  3742   00081E  606D               	cpfslt	??_GPIO_check_access^0,c
  3743   000820  EF14  F004         	goto	u3721
  3744   000824  EF17  F004         	goto	u3720
  3745   000828                     u3721:
  3746   000828  FFFF               	dw	65535	; assembler added errata NOP
  3747   00082A  EF38  F004         	goto	l474
  3748   00082E                     u3720:
  3749   00082E                     l3997:
  3750   00082E  FFFF               	dw	65535	; assembler added errata NOP
  3751   000830  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3752   000832  6ED9               	movwf	fsr2l,c
  3753   000834  6ADA               	clrf	fsr2h,c
  3754   000836  50DF               	movf	223,w,c
  3755   000838  0B07               	andlw	7
  3756   00083A  0A04               	xorlw	4
  3757   00083C  A4D8               	btfss	status,2,c
  3758   00083E  EF23  F004         	goto	u3731
  3759   000842  EF26  F004         	goto	u3730
  3760   000846                     u3731:
  3761   000846  FFFF               	dw	65535	; assembler added errata NOP
  3762   000848  EF3A  F004         	goto	l4001
  3763   00084C                     u3730:
  3764   00084C  FFFF               	dw	65535	; assembler added errata NOP
  3765   00084E  506C               	movf	GPIO_check_access@_pin_config^0,w,c
  3766   000850  6ED9               	movwf	fsr2l,c
  3767   000852  6ADA               	clrf	fsr2h,c
  3768   000854  30DF               	rrcf	223,w,c
  3769   000856  32E8               	rrcf	wreg,f,c
  3770   000858  32E8               	rrcf	wreg,f,c
  3771   00085A  0B07               	andlw	7
  3772   00085C  6E6D               	movwf	??_GPIO_check_access^0,c
  3773   00085E  0E02               	movlw	2
  3774   000860  646D               	cpfsgt	??_GPIO_check_access^0,c
  3775   000862  EF35  F004         	goto	u3741
  3776   000866  EF38  F004         	goto	u3740
  3777   00086A                     u3741:
  3778   00086A  FFFF               	dw	65535	; assembler added errata NOP
  3779   00086C  EF3A  F004         	goto	l4001
  3780   000870                     u3740:
  3781   000870                     l474:
  3782   000870  FFFF               	dw	65535	; assembler added errata NOP
  3783                           
  3784                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  3785   000872  6A6E               	clrf	GPIO_check_access@ret^0,c
  3786   000874                     l4001:
  3787   000874  FFFF               	dw	65535	; assembler added errata NOP
  3788                           
  3789                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  3790   000876  506E               	movf	GPIO_check_access@ret^0,w,c
  3791   000878  0012               	return		;funcret
  3792   00087A  FFFF               	dw	65535	; errata NOP
  3793   00087C                     __end_of_GPIO_check_access:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _INT_INTx_enable *****************
  3797 ;; Defined at:
  3798 ;;		line 62 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  lint            1    7[COMRAM] PTR const struct .
  3801 ;;		 -> first_int(6), 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  ret             1   10[COMRAM] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3813 ;;      Params:         1       0       0       0       0       0       0
  3814 ;;      Locals:         1       0       0       0       0       0       0
  3815 ;;      Temps:          2       0       0       0       0       0       0
  3816 ;;      Totals:         4       0       0       0       0       0       0
  3817 ;;Total ram usage:        4 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 6
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_INT_INTx_initialize
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text10
  3828   000F42                     __ptext10:
  3829                           	callstack 0
  3830   000F42                     _INT_INTx_enable:
  3831                           	callstack 0
  3832   000F42  FFFF               	dw	65535	; assembler added errata NOP
  3833   000F44                     
  3834                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 63:  STD_ReturnType ret = (STD_ReturnTy
      +                          pe)(0x01);
  3835   000F44  0E01               	movlw	1
  3836   000F46  6E6F               	movwf	INT_INTx_enable@ret^0,c
  3837                           
  3838                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 64:  if(((void*)0) == lint)
  3839   000F48  506C               	movf	INT_INTx_enable@lint^0,w,c
  3840   000F4A  A4D8               	btfss	status,2,c
  3841   000F4C  EFAA  F007         	goto	u4101
  3842   000F50  EFAD  F007         	goto	u4100
  3843   000F54                     u4101:
  3844   000F54  FFFF               	dw	65535	; assembler added errata NOP
  3845   000F56  EFC4  F007         	goto	l4305
  3846   000F5A                     u4100:
  3847   000F5A  FFFF               	dw	65535	; assembler added errata NOP
  3848   000F5C                     l4301:
  3849   000F5C  FFFF               	dw	65535	; assembler added errata NOP
  3850                           
  3851                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 65:   ret = (STD_ReturnType)(0x00);
  3852   000F5E  6A6F               	clrf	INT_INTx_enable@ret^0,c
  3853   000F60  EFE4  F007         	goto	l4307
  3854   000F64                     l672:
  3855   000F64  FFFF               	dw	65535	; assembler added errata NOP
  3856                           
  3857                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 69:     INTCONbits.INT0IE=1;
  3858   000F66  88F2               	bsf	242,4,c	;volatile
  3859                           
  3860                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 71:     INTCONbits.GIEH=1;
  3861   000F68  8EF2               	bsf	242,7,c	;volatile
  3862                           
  3863                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 72:     INTCONbits.GIEL=1;
  3864   000F6A  8CF2               	bsf	242,6,c	;volatile
  3865                           
  3866                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 76:     break;
  3867   000F6C  EFE4  F007         	goto	l4307
  3868   000F70                     l674:
  3869   000F70  FFFF               	dw	65535	; assembler added errata NOP
  3870                           
  3871                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 78:     INTCONbits.INT0IE=1;
  3872   000F72  88F2               	bsf	242,4,c	;volatile
  3873                           
  3874                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 80:     INTCONbits.GIEH=1;
  3875   000F74  8EF2               	bsf	242,7,c	;volatile
  3876                           
  3877                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 81:     INTCONbits.GIEL=1;
  3878   000F76  8CF2               	bsf	242,6,c	;volatile
  3879                           
  3880                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 85:     break;
  3881   000F78  EFE4  F007         	goto	l4307
  3882   000F7C                     l675:
  3883   000F7C  FFFF               	dw	65535	; assembler added errata NOP
  3884                           
  3885                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 87:     INTCON3bits.INT2IE=1;
  3886   000F7E  88F0               	bsf	240,4,c	;volatile
  3887                           
  3888                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 89:     INTCONbits.GIEH=1;
  3889   000F80  8EF2               	bsf	242,7,c	;volatile
  3890                           
  3891                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 90:     INTCONbits.GIEL=1;
  3892   000F82  8CF2               	bsf	242,6,c	;volatile
  3893                           
  3894                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 94:     break;
  3895   000F84  EFE4  F007         	goto	l4307
  3896   000F88                     l4305:
  3897   000F88  FFFF               	dw	65535	; assembler added errata NOP
  3898   000F8A  506C               	movf	INT_INTx_enable@lint^0,w,c
  3899   000F8C  6ED9               	movwf	fsr2l,c
  3900   000F8E  6ADA               	clrf	fsr2h,c
  3901   000F90  0E03               	movlw	3
  3902   000F92  26D9               	addwf	fsr2l,f,c
  3903   000F94  50DF               	movf	indf2,w,c
  3904   000F96  6E6D               	movwf	??_INT_INTx_enable^0,c
  3905   000F98  6A6E               	clrf	(??_INT_INTx_enable+1)^0,c
  3906                           
  3907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3908                           ; Switch size 1, requested type "simple"
  3909                           ; Number of cases is 1, Range of values is 0 to 0
  3910                           ; switch strategies available:
  3911                           ; Name         Instructions Cycles
  3912                           ; simple_byte            4     3 (average)
  3913                           ;	Chosen strategy is simple_byte
  3914   000F9A  506E               	movf	(??_INT_INTx_enable+1)^0,w,c
  3915   000F9C  0A00               	xorlw	0	; case 0
  3916   000F9E  B4D8               	btfsc	status,2,c
  3917   000FA0  EFD4  F007         	goto	l5237
  3918   000FA4  EFAE  F007         	goto	l4301
  3919   000FA8                     l5237:
  3920   000FA8  FFFF               	dw	65535	; assembler added errata NOP
  3921                           
  3922                           ; Switch size 1, requested type "simple"
  3923                           ; Number of cases is 3, Range of values is 0 to 2
  3924                           ; switch strategies available:
  3925                           ; Name         Instructions Cycles
  3926                           ; simple_byte           10     6 (average)
  3927                           ;	Chosen strategy is simple_byte
  3928   000FAA  506D               	movf	??_INT_INTx_enable^0,w,c
  3929   000FAC  0A00               	xorlw	0	; case 0
  3930   000FAE  B4D8               	btfsc	status,2,c
  3931   000FB0  EFB2  F007         	goto	l672
  3932   000FB4  0A01               	xorlw	1	; case 1
  3933   000FB6  B4D8               	btfsc	status,2,c
  3934   000FB8  EFB8  F007         	goto	l674
  3935   000FBC  0A03               	xorlw	3	; case 2
  3936   000FBE  B4D8               	btfsc	status,2,c
  3937   000FC0  EFBE  F007         	goto	l675
  3938   000FC4  EFAE  F007         	goto	l4301
  3939   000FC8                     l4307:
  3940   000FC8  FFFF               	dw	65535	; assembler added errata NOP
  3941                           
  3942                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 100:  return ret;
  3943   000FCA  506F               	movf	INT_INTx_enable@ret^0,w,c
  3944   000FCC  0012               	return		;funcret
  3945   000FCE  FFFF               	dw	65535	; errata NOP
  3946   000FD0                     __end_of_INT_INTx_enable:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _INT_INTx_edge_initialize *****************
  3950 ;; Defined at:
  3951 ;;		line 267 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  lint            1    7[COMRAM] PTR const struct .
  3954 ;;		 -> first_int(6), 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  ret             1   10[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      unsigned char 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3966 ;;      Params:         1       0       0       0       0       0       0
  3967 ;;      Locals:         1       0       0       0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0       0       0
  3969 ;;      Totals:         4       0       0       0       0       0       0
  3970 ;;Total ram usage:        4 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 6
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_INT_INTx_initialize
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text11
  3981   000616                     __ptext11:
  3982                           	callstack 0
  3983   000616                     _INT_INTx_edge_initialize:
  3984                           	callstack 0
  3985   000616  FFFF               	dw	65535	; assembler added errata NOP
  3986   000618                     
  3987                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 268:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3988   000618  0E01               	movlw	1
  3989   00061A  6E6F               	movwf	INT_INTx_edge_initialize@ret^0,c
  3990                           
  3991                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 269:  if(((void*)0) == lint)
  3992   00061C  506C               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3993   00061E  A4D8               	btfss	status,2,c
  3994   000620  EF14  F003         	goto	u4091
  3995   000624  EF17  F003         	goto	u4090
  3996   000628                     u4091:
  3997   000628  FFFF               	dw	65535	; assembler added errata NOP
  3998   00062A  EF88  F003         	goto	l4277
  3999   00062E                     u4090:
  4000   00062E  FFFF               	dw	65535	; assembler added errata NOP
  4001   000630                     l4261:
  4002   000630  FFFF               	dw	65535	; assembler added errata NOP
  4003                           
  4004                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 270:   ret = (STD_ReturnType)(0x00);
  4005   000632  6A6F               	clrf	INT_INTx_edge_initialize@ret^0,c
  4006   000634  EFA8  F003         	goto	l4279
  4007   000638                     l727:
  4008   000638  FFFF               	dw	65535	; assembler added errata NOP
  4009                           
  4010                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 276:       INTCON2bits.INTEDG0=0;
  4011   00063A  9CF1               	bcf	241,6,c	;volatile
  4012                           
  4013                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 277:       break;
  4014   00063C  EFA8  F003         	goto	l4279
  4015   000640                     l729:
  4016   000640  FFFF               	dw	65535	; assembler added errata NOP
  4017                           
  4018                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 279:       INTCON2bits.INTEDG0=1;
  4019   000642  8CF1               	bsf	241,6,c	;volatile
  4020                           
  4021                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 280:       break;
  4022   000644  EFA8  F003         	goto	l4279
  4023   000648                     l4265:
  4024   000648  FFFF               	dw	65535	; assembler added errata NOP
  4025   00064A  506C               	movf	INT_INTx_edge_initialize@lint^0,w,c
  4026   00064C  6ED9               	movwf	fsr2l,c
  4027   00064E  6ADA               	clrf	fsr2h,c
  4028   000650  0E04               	movlw	4
  4029   000652  26D9               	addwf	fsr2l,f,c
  4030   000654  50DF               	movf	indf2,w,c
  4031   000656  6E6D               	movwf	??_INT_INTx_edge_initialize^0,c
  4032   000658  6A6E               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  4033                           
  4034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4035                           ; Switch size 1, requested type "simple"
  4036                           ; Number of cases is 1, Range of values is 0 to 0
  4037                           ; switch strategies available:
  4038                           ; Name         Instructions Cycles
  4039                           ; simple_byte            4     3 (average)
  4040                           ;	Chosen strategy is simple_byte
  4041   00065A  506E               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  4042   00065C  0A00               	xorlw	0	; case 0
  4043   00065E  B4D8               	btfsc	status,2,c
  4044   000660  EF34  F003         	goto	l5239
  4045   000664  EF18  F003         	goto	l4261
  4046   000668                     l5239:
  4047   000668  FFFF               	dw	65535	; assembler added errata NOP
  4048                           
  4049                           ; Switch size 1, requested type "simple"
  4050                           ; Number of cases is 2, Range of values is 0 to 1
  4051                           ; switch strategies available:
  4052                           ; Name         Instructions Cycles
  4053                           ; simple_byte            7     4 (average)
  4054                           ;	Chosen strategy is simple_byte
  4055   00066A  506D               	movf	??_INT_INTx_edge_initialize^0,w,c
  4056   00066C  0A00               	xorlw	0	; case 0
  4057   00066E  B4D8               	btfsc	status,2,c
  4058   000670  EF1C  F003         	goto	l727
  4059   000674  0A01               	xorlw	1	; case 1
  4060   000676  B4D8               	btfsc	status,2,c
  4061   000678  EF20  F003         	goto	l729
  4062   00067C  EF18  F003         	goto	l4261
  4063   000680                     l734:
  4064   000680  FFFF               	dw	65535	; assembler added errata NOP
  4065                           
  4066                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 289:       INTCON2bits.INTEDG1=0;
  4067   000682  9AF1               	bcf	241,5,c	;volatile
  4068                           
  4069                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 290:       break;
  4070   000684  EFA8  F003         	goto	l4279
  4071   000688                     l736:
  4072   000688  FFFF               	dw	65535	; assembler added errata NOP
  4073                           
  4074                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 292:       INTCON2bits.INTEDG1=1;
  4075   00068A  8AF1               	bsf	241,5,c	;volatile
  4076                           
  4077                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 293:       break;
  4078   00068C  EFA8  F003         	goto	l4279
  4079   000690                     l4269:
  4080   000690  FFFF               	dw	65535	; assembler added errata NOP
  4081   000692  506C               	movf	INT_INTx_edge_initialize@lint^0,w,c
  4082   000694  6ED9               	movwf	fsr2l,c
  4083   000696  6ADA               	clrf	fsr2h,c
  4084   000698  0E04               	movlw	4
  4085   00069A  26D9               	addwf	fsr2l,f,c
  4086   00069C  50DF               	movf	indf2,w,c
  4087   00069E  6E6D               	movwf	??_INT_INTx_edge_initialize^0,c
  4088   0006A0  6A6E               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  4089                           
  4090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4091                           ; Switch size 1, requested type "simple"
  4092                           ; Number of cases is 1, Range of values is 0 to 0
  4093                           ; switch strategies available:
  4094                           ; Name         Instructions Cycles
  4095                           ; simple_byte            4     3 (average)
  4096                           ;	Chosen strategy is simple_byte
  4097   0006A2  506E               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  4098   0006A4  0A00               	xorlw	0	; case 0
  4099   0006A6  B4D8               	btfsc	status,2,c
  4100   0006A8  EF58  F003         	goto	l5241
  4101   0006AC  EF18  F003         	goto	l4261
  4102   0006B0                     l5241:
  4103   0006B0  FFFF               	dw	65535	; assembler added errata NOP
  4104                           
  4105                           ; Switch size 1, requested type "simple"
  4106                           ; Number of cases is 2, Range of values is 0 to 1
  4107                           ; switch strategies available:
  4108                           ; Name         Instructions Cycles
  4109                           ; simple_byte            7     4 (average)
  4110                           ;	Chosen strategy is simple_byte
  4111   0006B2  506D               	movf	??_INT_INTx_edge_initialize^0,w,c
  4112   0006B4  0A00               	xorlw	0	; case 0
  4113   0006B6  B4D8               	btfsc	status,2,c
  4114   0006B8  EF40  F003         	goto	l734
  4115   0006BC  0A01               	xorlw	1	; case 1
  4116   0006BE  B4D8               	btfsc	status,2,c
  4117   0006C0  EF44  F003         	goto	l736
  4118   0006C4  EF18  F003         	goto	l4261
  4119   0006C8                     l740:
  4120   0006C8  FFFF               	dw	65535	; assembler added errata NOP
  4121                           
  4122                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 302:       INTCON2bits.INTEDG2=0;
  4123   0006CA  98F1               	bcf	241,4,c	;volatile
  4124                           
  4125                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 303:       break;
  4126   0006CC  EFA8  F003         	goto	l4279
  4127   0006D0                     l742:
  4128   0006D0  FFFF               	dw	65535	; assembler added errata NOP
  4129                           
  4130                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 305:       INTCON2bits.INTEDG2=1;
  4131   0006D2  88F1               	bsf	241,4,c	;volatile
  4132                           
  4133                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 306:       break;
  4134   0006D4  EFA8  F003         	goto	l4279
  4135   0006D8                     l4273:
  4136   0006D8  FFFF               	dw	65535	; assembler added errata NOP
  4137   0006DA  506C               	movf	INT_INTx_edge_initialize@lint^0,w,c
  4138   0006DC  6ED9               	movwf	fsr2l,c
  4139   0006DE  6ADA               	clrf	fsr2h,c
  4140   0006E0  0E04               	movlw	4
  4141   0006E2  26D9               	addwf	fsr2l,f,c
  4142   0006E4  50DF               	movf	indf2,w,c
  4143   0006E6  6E6D               	movwf	??_INT_INTx_edge_initialize^0,c
  4144   0006E8  6A6E               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  4145                           
  4146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4147                           ; Switch size 1, requested type "simple"
  4148                           ; Number of cases is 1, Range of values is 0 to 0
  4149                           ; switch strategies available:
  4150                           ; Name         Instructions Cycles
  4151                           ; simple_byte            4     3 (average)
  4152                           ;	Chosen strategy is simple_byte
  4153   0006EA  506E               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  4154   0006EC  0A00               	xorlw	0	; case 0
  4155   0006EE  B4D8               	btfsc	status,2,c
  4156   0006F0  EF7C  F003         	goto	l5243
  4157   0006F4  EF18  F003         	goto	l4261
  4158   0006F8                     l5243:
  4159   0006F8  FFFF               	dw	65535	; assembler added errata NOP
  4160                           
  4161                           ; Switch size 1, requested type "simple"
  4162                           ; Number of cases is 2, Range of values is 0 to 1
  4163                           ; switch strategies available:
  4164                           ; Name         Instructions Cycles
  4165                           ; simple_byte            7     4 (average)
  4166                           ;	Chosen strategy is simple_byte
  4167   0006FA  506D               	movf	??_INT_INTx_edge_initialize^0,w,c
  4168   0006FC  0A00               	xorlw	0	; case 0
  4169   0006FE  B4D8               	btfsc	status,2,c
  4170   000700  EF64  F003         	goto	l740
  4171   000704  0A01               	xorlw	1	; case 1
  4172   000706  B4D8               	btfsc	status,2,c
  4173   000708  EF68  F003         	goto	l742
  4174   00070C  EF18  F003         	goto	l4261
  4175   000710                     l4277:
  4176   000710  FFFF               	dw	65535	; assembler added errata NOP
  4177   000712  506C               	movf	INT_INTx_edge_initialize@lint^0,w,c
  4178   000714  6ED9               	movwf	fsr2l,c
  4179   000716  6ADA               	clrf	fsr2h,c
  4180   000718  0E03               	movlw	3
  4181   00071A  26D9               	addwf	fsr2l,f,c
  4182   00071C  50DF               	movf	indf2,w,c
  4183   00071E  6E6D               	movwf	??_INT_INTx_edge_initialize^0,c
  4184   000720  6A6E               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  4185                           
  4186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4187                           ; Switch size 1, requested type "simple"
  4188                           ; Number of cases is 1, Range of values is 0 to 0
  4189                           ; switch strategies available:
  4190                           ; Name         Instructions Cycles
  4191                           ; simple_byte            4     3 (average)
  4192                           ;	Chosen strategy is simple_byte
  4193   000722  506E               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  4194   000724  0A00               	xorlw	0	; case 0
  4195   000726  B4D8               	btfsc	status,2,c
  4196   000728  EF98  F003         	goto	l5245
  4197   00072C  EF18  F003         	goto	l4261
  4198   000730                     l5245:
  4199   000730  FFFF               	dw	65535	; assembler added errata NOP
  4200                           
  4201                           ; Switch size 1, requested type "simple"
  4202                           ; Number of cases is 3, Range of values is 0 to 2
  4203                           ; switch strategies available:
  4204                           ; Name         Instructions Cycles
  4205                           ; simple_byte           10     6 (average)
  4206                           ;	Chosen strategy is simple_byte
  4207   000732  506D               	movf	??_INT_INTx_edge_initialize^0,w,c
  4208   000734  0A00               	xorlw	0	; case 0
  4209   000736  B4D8               	btfsc	status,2,c
  4210   000738  EF24  F003         	goto	l4265
  4211   00073C  0A01               	xorlw	1	; case 1
  4212   00073E  B4D8               	btfsc	status,2,c
  4213   000740  EF48  F003         	goto	l4269
  4214   000744  0A03               	xorlw	3	; case 2
  4215   000746  B4D8               	btfsc	status,2,c
  4216   000748  EF6C  F003         	goto	l4273
  4217   00074C  EF18  F003         	goto	l4261
  4218   000750                     l4279:
  4219   000750  FFFF               	dw	65535	; assembler added errata NOP
  4220                           
  4221                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 317:  return ret;
  4222   000752  506F               	movf	INT_INTx_edge_initialize@ret^0,w,c
  4223   000754  0012               	return		;funcret
  4224   000756  FFFF               	dw	65535	; errata NOP
  4225   000758                     __end_of_INT_INTx_edge_initialize:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _INT_INTx_disable *****************
  4229 ;; Defined at:
  4230 ;;		line 106 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  lint            1    7[COMRAM] PTR const struct .
  4233 ;;		 -> first_int(6), 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  ret             1   10[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         1       0       0       0       0       0       0
  4246 ;;      Locals:         1       0       0       0       0       0       0
  4247 ;;      Temps:          2       0       0       0       0       0       0
  4248 ;;      Totals:         4       0       0       0       0       0       0
  4249 ;;Total ram usage:        4 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 6
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_INT_INTx_initialize
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text12
  4260   000FD0                     __ptext12:
  4261                           	callstack 0
  4262   000FD0                     _INT_INTx_disable:
  4263                           	callstack 0
  4264   000FD0  FFFF               	dw	65535	; assembler added errata NOP
  4265   000FD2                     
  4266                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 107:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  4267   000FD2  0E01               	movlw	1
  4268   000FD4  6E6F               	movwf	INT_INTx_disable@ret^0,c
  4269                           
  4270                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 108:  if(((void*)0) == lint)
  4271   000FD6  506C               	movf	INT_INTx_disable@lint^0,w,c
  4272   000FD8  A4D8               	btfss	status,2,c
  4273   000FDA  EFF1  F007         	goto	u4021
  4274   000FDE  EFF4  F007         	goto	u4020
  4275   000FE2                     u4021:
  4276   000FE2  FFFF               	dw	65535	; assembler added errata NOP
  4277   000FE4  EF05  F008         	goto	l4177
  4278   000FE8                     u4020:
  4279   000FE8  FFFF               	dw	65535	; assembler added errata NOP
  4280   000FEA                     l4173:
  4281   000FEA  FFFF               	dw	65535	; assembler added errata NOP
  4282                           
  4283                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 109:   ret = (STD_ReturnType)(0x00);
  4284   000FEC  6A6F               	clrf	INT_INTx_disable@ret^0,c
  4285   000FEE  EF25  F008         	goto	l4179
  4286   000FF2                     l683:
  4287   000FF2  FFFF               	dw	65535	; assembler added errata NOP
  4288                           
  4289                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 113:     INTCONbits.INT0IE=0;
  4290   000FF4  98F2               	bcf	242,4,c	;volatile
  4291                           
  4292                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 114:     break;
  4293   000FF6  EF25  F008         	goto	l4179
  4294   000FFA                     l685:
  4295   000FFA  FFFF               	dw	65535	; assembler added errata NOP
  4296                           
  4297                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 116:     INTCONbits.INT0IE=0;
  4298   000FFC  98F2               	bcf	242,4,c	;volatile
  4299                           
  4300                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 117:     break;
  4301   000FFE  EF25  F008         	goto	l4179
  4302   001002                     l686:
  4303   001002  FFFF               	dw	65535	; assembler added errata NOP
  4304                           
  4305                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 119:     INTCONbits.INT0IE=0;
  4306   001004  98F2               	bcf	242,4,c	;volatile
  4307                           
  4308                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 120:     break;
  4309   001006  EF25  F008         	goto	l4179
  4310   00100A                     l4177:
  4311   00100A  FFFF               	dw	65535	; assembler added errata NOP
  4312   00100C  506C               	movf	INT_INTx_disable@lint^0,w,c
  4313   00100E  6ED9               	movwf	fsr2l,c
  4314   001010  6ADA               	clrf	fsr2h,c
  4315   001012  0E03               	movlw	3
  4316   001014  26D9               	addwf	fsr2l,f,c
  4317   001016  50DF               	movf	indf2,w,c
  4318   001018  6E6D               	movwf	??_INT_INTx_disable^0,c
  4319   00101A  6A6E               	clrf	(??_INT_INTx_disable+1)^0,c
  4320                           
  4321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4322                           ; Switch size 1, requested type "simple"
  4323                           ; Number of cases is 1, Range of values is 0 to 0
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte            4     3 (average)
  4327                           ;	Chosen strategy is simple_byte
  4328   00101C  506E               	movf	(??_INT_INTx_disable+1)^0,w,c
  4329   00101E  0A00               	xorlw	0	; case 0
  4330   001020  B4D8               	btfsc	status,2,c
  4331   001022  EF15  F008         	goto	l5247
  4332   001026  EFF5  F007         	goto	l4173
  4333   00102A                     l5247:
  4334   00102A  FFFF               	dw	65535	; assembler added errata NOP
  4335                           
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 3, Range of values is 0 to 2
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte           10     6 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342   00102C  506D               	movf	??_INT_INTx_disable^0,w,c
  4343   00102E  0A00               	xorlw	0	; case 0
  4344   001030  B4D8               	btfsc	status,2,c
  4345   001032  EFF9  F007         	goto	l683
  4346   001036  0A01               	xorlw	1	; case 1
  4347   001038  B4D8               	btfsc	status,2,c
  4348   00103A  EFFD  F007         	goto	l685
  4349   00103E  0A03               	xorlw	3	; case 2
  4350   001040  B4D8               	btfsc	status,2,c
  4351   001042  EF01  F008         	goto	l686
  4352   001046  EFF5  F007         	goto	l4173
  4353   00104A                     l4179:
  4354   00104A  FFFF               	dw	65535	; assembler added errata NOP
  4355                           
  4356                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 126:  return ret;
  4357   00104C  506F               	movf	INT_INTx_disable@ret^0,w,c
  4358   00104E  0012               	return		;funcret
  4359   001050  FFFF               	dw	65535	; errata NOP
  4360   001052                     __end_of_INT_INTx_disable:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _INT_INTx_clear_flag *****************
  4364 ;; Defined at:
  4365 ;;		line 337 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  lint            1    7[COMRAM] PTR const struct .
  4368 ;;		 -> first_int(6), 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  ret             1   10[COMRAM] unsigned char 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4380 ;;      Params:         1       0       0       0       0       0       0
  4381 ;;      Locals:         1       0       0       0       0       0       0
  4382 ;;      Temps:          2       0       0       0       0       0       0
  4383 ;;      Totals:         4       0       0       0       0       0       0
  4384 ;;Total ram usage:        4 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 6
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_INT_INTx_initialize
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text13
  4395   001052                     __ptext13:
  4396                           	callstack 0
  4397   001052                     _INT_INTx_clear_flag:
  4398                           	callstack 0
  4399   001052  FFFF               	dw	65535	; assembler added errata NOP
  4400   001054                     
  4401                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 338:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  4402   001054  0E01               	movlw	1
  4403   001056  6E6F               	movwf	INT_INTx_clear_flag@ret^0,c
  4404                           
  4405                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 339:  if(((void*)0) == lint)
  4406   001058  506C               	movf	INT_INTx_clear_flag@lint^0,w,c
  4407   00105A  A4D8               	btfss	status,2,c
  4408   00105C  EF32  F008         	goto	u4031
  4409   001060  EF35  F008         	goto	u4030
  4410   001064                     u4031:
  4411   001064  FFFF               	dw	65535	; assembler added errata NOP
  4412   001066  EF46  F008         	goto	l4193
  4413   00106A                     u4030:
  4414   00106A  FFFF               	dw	65535	; assembler added errata NOP
  4415   00106C                     l4189:
  4416   00106C  FFFF               	dw	65535	; assembler added errata NOP
  4417                           
  4418                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 340:   ret = (STD_ReturnType)(0x00);
  4419   00106E  6A6F               	clrf	INT_INTx_clear_flag@ret^0,c
  4420   001070  EF66  F008         	goto	l4195
  4421   001074                     l758:
  4422   001074  FFFF               	dw	65535	; assembler added errata NOP
  4423                           
  4424                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 344:     INTCONbits.INT0IF=0;
  4425   001076  92F2               	bcf	242,1,c	;volatile
  4426                           
  4427                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 345:     break;
  4428   001078  EF66  F008         	goto	l4195
  4429   00107C                     l760:
  4430   00107C  FFFF               	dw	65535	; assembler added errata NOP
  4431                           
  4432                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 347:     INTCON3bits.INT1IF=0;
  4433   00107E  90F0               	bcf	240,0,c	;volatile
  4434                           
  4435                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 348:     break;
  4436   001080  EF66  F008         	goto	l4195
  4437   001084                     l761:
  4438   001084  FFFF               	dw	65535	; assembler added errata NOP
  4439                           
  4440                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 350:     INTCON3bits.INT2IF=0;
  4441   001086  92F0               	bcf	240,1,c	;volatile
  4442                           
  4443                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 351:     break;
  4444   001088  EF66  F008         	goto	l4195
  4445   00108C                     l4193:
  4446   00108C  FFFF               	dw	65535	; assembler added errata NOP
  4447   00108E  506C               	movf	INT_INTx_clear_flag@lint^0,w,c
  4448   001090  6ED9               	movwf	fsr2l,c
  4449   001092  6ADA               	clrf	fsr2h,c
  4450   001094  0E03               	movlw	3
  4451   001096  26D9               	addwf	fsr2l,f,c
  4452   001098  50DF               	movf	indf2,w,c
  4453   00109A  6E6D               	movwf	??_INT_INTx_clear_flag^0,c
  4454   00109C  6A6E               	clrf	(??_INT_INTx_clear_flag+1)^0,c
  4455                           
  4456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4457                           ; Switch size 1, requested type "simple"
  4458                           ; Number of cases is 1, Range of values is 0 to 0
  4459                           ; switch strategies available:
  4460                           ; Name         Instructions Cycles
  4461                           ; simple_byte            4     3 (average)
  4462                           ;	Chosen strategy is simple_byte
  4463   00109E  506E               	movf	(??_INT_INTx_clear_flag+1)^0,w,c
  4464   0010A0  0A00               	xorlw	0	; case 0
  4465   0010A2  B4D8               	btfsc	status,2,c
  4466   0010A4  EF56  F008         	goto	l5249
  4467   0010A8  EF36  F008         	goto	l4189
  4468   0010AC                     l5249:
  4469   0010AC  FFFF               	dw	65535	; assembler added errata NOP
  4470                           
  4471                           ; Switch size 1, requested type "simple"
  4472                           ; Number of cases is 3, Range of values is 0 to 2
  4473                           ; switch strategies available:
  4474                           ; Name         Instructions Cycles
  4475                           ; simple_byte           10     6 (average)
  4476                           ;	Chosen strategy is simple_byte
  4477   0010AE  506D               	movf	??_INT_INTx_clear_flag^0,w,c
  4478   0010B0  0A00               	xorlw	0	; case 0
  4479   0010B2  B4D8               	btfsc	status,2,c
  4480   0010B4  EF3A  F008         	goto	l758
  4481   0010B8  0A01               	xorlw	1	; case 1
  4482   0010BA  B4D8               	btfsc	status,2,c
  4483   0010BC  EF3E  F008         	goto	l760
  4484   0010C0  0A03               	xorlw	3	; case 2
  4485   0010C2  B4D8               	btfsc	status,2,c
  4486   0010C4  EF42  F008         	goto	l761
  4487   0010C8  EF36  F008         	goto	l4189
  4488   0010CC                     l4195:
  4489   0010CC  FFFF               	dw	65535	; assembler added errata NOP
  4490                           
  4491                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 357:  return ret;
  4492   0010CE  506F               	movf	INT_INTx_clear_flag@ret^0,w,c
  4493   0010D0  0012               	return		;funcret
  4494   0010D2  FFFF               	dw	65535	; errata NOP
  4495   0010D4                     __end_of_INT_INTx_clear_flag:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _InterruptManagerLow *****************
  4499 ;; Defined at:
  4500 ;;		line 17 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;		None
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4514 ;;      Params:         0       0       0       0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0
  4516 ;;      Temps:          5       0       0       0       0       0       0
  4517 ;;      Totals:         5       0       0       0       0       0       0
  4518 ;;Total ram usage:        5 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 5
  4521 ;; This function calls:
  4522 ;;		_INT0_ISR
  4523 ;;		_INT1_ISR
  4524 ;;		_INT2_ISR
  4525 ;; This function is called by:
  4526 ;;		Interrupt level 1
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	intcodelo
  4531   000018                     __pintcodelo:
  4532                           	callstack 0
  4533   000018                     _InterruptManagerLow:
  4534                           	callstack 0
  4535   000018  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ;incstack = 0
  4538   00001A  8078               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4539   00001C  CFD8 F067          	movff	status,??_InterruptManagerLow
  4540   000020  CFE8 F068          	movff	wreg,??_InterruptManagerLow+1
  4541   000024  CFE0 F069          	movff	bsr,??_InterruptManagerLow+2
  4542   000028  CFFA F06A          	movff	pclath,??_InterruptManagerLow+3
  4543   00002C  CFFB F06B          	movff	pclatu,??_InterruptManagerLow+4
  4544   000030                     
  4545                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 18:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4546   000030  A2F2               	btfss	242,1,c	;volatile
  4547   000032  EF1D  F000         	goto	i1u211_21
  4548   000036  EF20  F000         	goto	i1u211_20
  4549   00003A                     i1u211_21:
  4550   00003A  FFFF               	dw	65535	; assembler added errata NOP
  4551   00003C  EF2C  F000         	goto	i1l2843
  4552   000040                     i1u211_20:
  4553   000040  FFFF               	dw	65535	; assembler added errata NOP
  4554   000042  A8F2               	btfss	242,4,c	;volatile
  4555   000044  EF26  F000         	goto	i1u212_21
  4556   000048  EF29  F000         	goto	i1u212_20
  4557   00004C                     i1u212_21:
  4558   00004C  FFFF               	dw	65535	; assembler added errata NOP
  4559   00004E  EF2C  F000         	goto	i1l2843
  4560   000052                     i1u212_20:
  4561   000052  FFFF               	dw	65535	; assembler added errata NOP
  4562   000054                     
  4563                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 19:         INT0_ISR();
  4564   000054  EC17  F009         	call	_INT0_ISR	;wreg free
  4565   000058                     i1l2843:
  4566   000058  FFFF               	dw	65535	; assembler added errata NOP
  4567                           
  4568                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 20:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4569   00005A  A0F0               	btfss	240,0,c	;volatile
  4570   00005C  EF32  F000         	goto	i1u213_21
  4571   000060  EF35  F000         	goto	i1u213_20
  4572   000064                     i1u213_21:
  4573   000064  FFFF               	dw	65535	; assembler added errata NOP
  4574   000066  EF41  F000         	goto	i1l2849
  4575   00006A                     i1u213_20:
  4576   00006A  FFFF               	dw	65535	; assembler added errata NOP
  4577   00006C  A6F0               	btfss	240,3,c	;volatile
  4578   00006E  EF3B  F000         	goto	i1u214_21
  4579   000072  EF3E  F000         	goto	i1u214_20
  4580   000076                     i1u214_21:
  4581   000076  FFFF               	dw	65535	; assembler added errata NOP
  4582   000078  EF41  F000         	goto	i1l2849
  4583   00007C                     i1u214_20:
  4584   00007C  FFFF               	dw	65535	; assembler added errata NOP
  4585   00007E                     
  4586                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 21:         INT1_ISR();
  4587   00007E  ECF8  F008         	call	_INT1_ISR	;wreg free
  4588   000082                     i1l2849:
  4589   000082  FFFF               	dw	65535	; assembler added errata NOP
  4590                           
  4591                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 22:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  4592   000084  A2F0               	btfss	240,1,c	;volatile
  4593   000086  EF47  F000         	goto	i1u215_21
  4594   00008A  EF4A  F000         	goto	i1u215_20
  4595   00008E                     i1u215_21:
  4596   00008E  FFFF               	dw	65535	; assembler added errata NOP
  4597   000090  EF56  F000         	goto	i1l814
  4598   000094                     i1u215_20:
  4599   000094  FFFF               	dw	65535	; assembler added errata NOP
  4600   000096  A8F0               	btfss	240,4,c	;volatile
  4601   000098  EF50  F000         	goto	i1u216_21
  4602   00009C  EF53  F000         	goto	i1u216_20
  4603   0000A0                     i1u216_21:
  4604   0000A0  FFFF               	dw	65535	; assembler added errata NOP
  4605   0000A2  EF56  F000         	goto	i1l814
  4606   0000A6                     i1u216_20:
  4607   0000A6  FFFF               	dw	65535	; assembler added errata NOP
  4608   0000A8                     
  4609                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 23:         INT2_ISR();
  4610   0000A8  ECD9  F008         	call	_INT2_ISR	;wreg free
  4611   0000AC                     i1l814:
  4612   0000AC  FFFF               	dw	65535	; assembler added errata NOP
  4613   0000AE  C06B  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  4614   0000B2  C06A  FFFA         	movff	??_InterruptManagerLow+3,pclath
  4615   0000B6  C069  FFE0         	movff	??_InterruptManagerLow+2,bsr
  4616   0000BA  C068  FFE8         	movff	??_InterruptManagerLow+1,wreg
  4617   0000BE  C067  FFD8         	movff	??_InterruptManagerLow,status
  4618   0000C2  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4619   0000C4  0010               	retfie	
  4620   0000C6  FFFF               	dw	65535	; errata NOP
  4621   0000C8                     __end_of_InterruptManagerLow:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _INT2_ISR *****************
  4625 ;; Defined at:
  4626 ;;		line 24 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4640 ;;      Params:         0       0       0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0
  4643 ;;      Totals:         0       0       0       0       0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 4
  4647 ;; This function calls:
  4648 ;;		NULL
  4649 ;;		___INT0
  4650 ;; This function is called by:
  4651 ;;		_InterruptManagerLow
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text15
  4656   0011B2                     __ptext15:
  4657                           	callstack 0
  4658   0011B2                     _INT2_ISR:
  4659                           	callstack 0
  4660   0011B2  FFFF               	dw	65535	; assembler added errata NOP
  4661   0011B4                     
  4662                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 25:  INTCON3bits.INT2IF=0;
  4663   0011B4  92F0               	bcf	240,1,c	;volatile
  4664   0011B6                     
  4665                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 26:  if(INT2_handler)
  4666   0011B6  5053               	movf	_INT2_handler^0,w,c
  4667   0011B8  1054               	iorwf	(_INT2_handler+1)^0,w,c
  4668   0011BA  B4D8               	btfsc	status,2,c
  4669   0011BC  EFE2  F008         	goto	i1u88_21
  4670   0011C0  EFE5  F008         	goto	i1u88_20
  4671   0011C4                     i1u88_21:
  4672   0011C4  FFFF               	dw	65535	; assembler added errata NOP
  4673   0011C6  EFF5  F008         	goto	i1l657
  4674   0011CA                     i1u88_20:
  4675   0011CA  FFFF               	dw	65535	; assembler added errata NOP
  4676   0011CC                     
  4677                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 27:   INT2_handler();
  4678   0011CC  D802               	call	i1u89_28
  4679   0011CE  EFF5  F008         	goto	i1u89_29
  4680   0011D2                     i1u89_28:
  4681   0011D2  FFFF               	dw	65535	; assembler added errata NOP
  4682   0011D4  0005               	push	
  4683   0011D6  6EFA               	movwf	pclath,c
  4684   0011D8  5053               	movf	_INT2_handler^0,w,c
  4685   0011DA  6EFD               	movwf	tosl,c
  4686   0011DC  5054               	movf	(_INT2_handler+1)^0,w,c
  4687   0011DE  6EFE               	movwf	tosh,c
  4688   0011E0  50F8               	movf	tblptru,w,c
  4689   0011E2  6EFF               	movwf	tosu,c
  4690   0011E4  50FA               	movf	pclath,w,c
  4691   0011E6  0012               	return		;indir
  4692   0011E8  FFFF               	dw	65535	; errata NOP
  4693   0011EA                     i1u89_29:
  4694   0011EA                     i1l657:
  4695   0011EA  FFFF               	dw	65535	; assembler added errata NOP
  4696   0011EC  0012               	return		;funcret
  4697   0011EE  FFFF               	dw	65535	; errata NOP
  4698   0011F0                     __end_of_INT2_ISR:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _INT1_ISR *****************
  4702 ;; Defined at:
  4703 ;;		line 19 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4717 ;;      Params:         0       0       0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 4
  4724 ;; This function calls:
  4725 ;;		NULL
  4726 ;;		___INT0
  4727 ;; This function is called by:
  4728 ;;		_InterruptManagerLow
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text16
  4733   0011F0                     __ptext16:
  4734                           	callstack 0
  4735   0011F0                     _INT1_ISR:
  4736                           	callstack 0
  4737   0011F0  FFFF               	dw	65535	; assembler added errata NOP
  4738   0011F2                     
  4739                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 20:  INTCON3bits.INT1IF=0;
  4740   0011F2  90F0               	bcf	240,0,c	;volatile
  4741   0011F4                     
  4742                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 21:  if(INT1_handler)
  4743   0011F4  5055               	movf	_INT1_handler^0,w,c
  4744   0011F6  1056               	iorwf	(_INT1_handler+1)^0,w,c
  4745   0011F8  B4D8               	btfsc	status,2,c
  4746   0011FA  EF01  F009         	goto	i1u86_21
  4747   0011FE  EF04  F009         	goto	i1u86_20
  4748   001202                     i1u86_21:
  4749   001202  FFFF               	dw	65535	; assembler added errata NOP
  4750   001204  EF14  F009         	goto	i1l653
  4751   001208                     i1u86_20:
  4752   001208  FFFF               	dw	65535	; assembler added errata NOP
  4753   00120A                     
  4754                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 22:   INT1_handler();
  4755   00120A  D802               	call	i1u87_28
  4756   00120C  EF14  F009         	goto	i1u87_29
  4757   001210                     i1u87_28:
  4758   001210  FFFF               	dw	65535	; assembler added errata NOP
  4759   001212  0005               	push	
  4760   001214  6EFA               	movwf	pclath,c
  4761   001216  5055               	movf	_INT1_handler^0,w,c
  4762   001218  6EFD               	movwf	tosl,c
  4763   00121A  5056               	movf	(_INT1_handler+1)^0,w,c
  4764   00121C  6EFE               	movwf	tosh,c
  4765   00121E  50F8               	movf	tblptru,w,c
  4766   001220  6EFF               	movwf	tosu,c
  4767   001222  50FA               	movf	pclath,w,c
  4768   001224  0012               	return		;indir
  4769   001226  FFFF               	dw	65535	; errata NOP
  4770   001228                     i1u87_29:
  4771   001228                     i1l653:
  4772   001228  FFFF               	dw	65535	; assembler added errata NOP
  4773   00122A  0012               	return		;funcret
  4774   00122C  FFFF               	dw	65535	; errata NOP
  4775   00122E                     __end_of_INT1_ISR:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function _INT0_ISR *****************
  4779 ;; Defined at:
  4780 ;;		line 14 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         0       0       0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 4
  4801 ;; This function calls:
  4802 ;;		NULL
  4803 ;;		___INT0
  4804 ;; This function is called by:
  4805 ;;		_InterruptManagerLow
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text17
  4810   00122E                     __ptext17:
  4811                           	callstack 0
  4812   00122E                     _INT0_ISR:
  4813                           	callstack 0
  4814   00122E  FFFF               	dw	65535	; assembler added errata NOP
  4815   001230                     
  4816                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 15:  INTCONbits.INT0IF=0;
  4817   001230  92F2               	bcf	242,1,c	;volatile
  4818   001232                     
  4819                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 16:  if(INT0_handler)
  4820   001232  5057               	movf	_INT0_handler^0,w,c
  4821   001234  1058               	iorwf	(_INT0_handler+1)^0,w,c
  4822   001236  B4D8               	btfsc	status,2,c
  4823   001238  EF20  F009         	goto	i1u84_21
  4824   00123C  EF23  F009         	goto	i1u84_20
  4825   001240                     i1u84_21:
  4826   001240  FFFF               	dw	65535	; assembler added errata NOP
  4827   001242  EF33  F009         	goto	i1l649
  4828   001246                     i1u84_20:
  4829   001246  FFFF               	dw	65535	; assembler added errata NOP
  4830   001248                     
  4831                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 17:   INT0_handler();
  4832   001248  D802               	call	i1u85_28
  4833   00124A  EF33  F009         	goto	i1u85_29
  4834   00124E                     i1u85_28:
  4835   00124E  FFFF               	dw	65535	; assembler added errata NOP
  4836   001250  0005               	push	
  4837   001252  6EFA               	movwf	pclath,c
  4838   001254  5057               	movf	_INT0_handler^0,w,c
  4839   001256  6EFD               	movwf	tosl,c
  4840   001258  5058               	movf	(_INT0_handler+1)^0,w,c
  4841   00125A  6EFE               	movwf	tosh,c
  4842   00125C  50F8               	movf	tblptru,w,c
  4843   00125E  6EFF               	movwf	tosu,c
  4844   001260  50FA               	movf	pclath,w,c
  4845   001262  0012               	return		;indir
  4846   001264  FFFF               	dw	65535	; errata NOP
  4847   001266                     i1u85_29:
  4848   001266                     i1l649:
  4849   001266  FFFF               	dw	65535	; assembler added errata NOP
  4850   001268  0012               	return		;funcret
  4851   00126A  FFFF               	dw	65535	; errata NOP
  4852   00126C                     __end_of_INT0_ISR:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function ___INT0 *****************
  4856 ;; Defined at:
  4857 ;;		line 59 in file "application.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4871 ;;      Params:         0       0       0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 3
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_INT0_ISR
  4882 ;;		_INT1_ISR
  4883 ;;		_INT2_ISR
  4884 ;;		i2_INT0_ISR
  4885 ;;		i2_INT1_ISR
  4886 ;;		i2_INT2_ISR
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text18
  4891   001360                     __ptext18:
  4892                           	callstack 0
  4893   001360                     ___INT0:
  4894                           	callstack 0
  4895   001360  FFFF               	dw	65535	; assembler added errata NOP
  4896                           
  4897                           ;Skip over the trampoline to the duplicate function for level 2
  4898   001362  A278               	btfss	int$flags,1,c
  4899   001364  EFB6  F009         	goto	___INT0$intlevel1
  4900   001368  EFBA  F009         	goto	i2___INT0
  4901   00136C                     ___INT0$intlevel1:
  4902                           	callstack 0
  4903   00136C  FFFF               	dw	65535	; assembler added errata NOP
  4904   00136E                     
  4905                           ;application.c: 60:  Iflag++;
  4906   00136E  2A5C               	incf	_Iflag^0,f,c
  4907   001370  0012               	return		;funcret
  4908   001372  FFFF               	dw	65535	; errata NOP
  4909   001374                     __end_of___INT0:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _InterruptManager *****************
  4913 ;; Defined at:
  4914 ;;		line 9 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4928 ;;      Params:         0       0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0
  4930 ;;      Temps:          2       0       0       0       0       0       0
  4931 ;;      Totals:         2       0       0       0       0       0       0
  4932 ;;Total ram usage:        2 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 2
  4935 ;; This function calls:
  4936 ;;		i2_INT0_ISR
  4937 ;;		i2_INT1_ISR
  4938 ;;		i2_INT2_ISR
  4939 ;; This function is called by:
  4940 ;;		Interrupt level 2
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	intcode
  4945   000008                     __pintcode:
  4946                           	callstack 0
  4947   000008                     _InterruptManager:
  4948                           	callstack 0
  4949   000008  FFFF               	dw	65535	; assembler added errata NOP
  4950                           
  4951                           ;incstack = 0
  4952   00000A  8278               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4953   00000C  EF56  F007         	goto	int_func
  4954                           
  4955                           	psect	intcode_body
  4956   000EAC                     __pintcode_body:
  4957                           	callstack 21
  4958   000EAC                     int_func:
  4959                           	callstack 21
  4960   000EAC  FFFF               	dw	65535	; errata NOP
  4961   000EAE  CFFA F065          	movff	pclath,??_InterruptManager
  4962   000EB2  CFFB F066          	movff	pclatu,??_InterruptManager+1
  4963   000EB6                     
  4964                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 10:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4965   000EB6  A2F2               	btfss	242,1,c	;volatile
  4966   000EB8  EF60  F007         	goto	i2u205_41
  4967   000EBC  EF63  F007         	goto	i2u205_40
  4968   000EC0                     i2u205_41:
  4969   000EC0  FFFF               	dw	65535	; assembler added errata NOP
  4970   000EC2  EF6F  F007         	goto	i2l2825
  4971   000EC6                     i2u205_40:
  4972   000EC6  FFFF               	dw	65535	; assembler added errata NOP
  4973   000EC8  A8F2               	btfss	242,4,c	;volatile
  4974   000ECA  EF69  F007         	goto	i2u206_41
  4975   000ECE  EF6C  F007         	goto	i2u206_40
  4976   000ED2                     i2u206_41:
  4977   000ED2  FFFF               	dw	65535	; assembler added errata NOP
  4978   000ED4  EF6F  F007         	goto	i2l2825
  4979   000ED8                     i2u206_40:
  4980   000ED8  FFFF               	dw	65535	; assembler added errata NOP
  4981   000EDA                     
  4982                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 11:         INT0_ISR();
  4983   000EDA  EC74  F009         	call	i2_INT0_ISR	;wreg free
  4984   000EDE                     i2l2825:
  4985   000EDE  FFFF               	dw	65535	; assembler added errata NOP
  4986                           
  4987                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 12:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4988   000EE0  A0F0               	btfss	240,0,c	;volatile
  4989   000EE2  EF75  F007         	goto	i2u207_41
  4990   000EE6  EF78  F007         	goto	i2u207_40
  4991   000EEA                     i2u207_41:
  4992   000EEA  FFFF               	dw	65535	; assembler added errata NOP
  4993   000EEC  EF84  F007         	goto	i2l2831
  4994   000EF0                     i2u207_40:
  4995   000EF0  FFFF               	dw	65535	; assembler added errata NOP
  4996   000EF2  A6F0               	btfss	240,3,c	;volatile
  4997   000EF4  EF7E  F007         	goto	i2u208_41
  4998   000EF8  EF81  F007         	goto	i2u208_40
  4999   000EFC                     i2u208_41:
  5000   000EFC  FFFF               	dw	65535	; assembler added errata NOP
  5001   000EFE  EF84  F007         	goto	i2l2831
  5002   000F02                     i2u208_40:
  5003   000F02  FFFF               	dw	65535	; assembler added errata NOP
  5004   000F04                     
  5005                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 13:         INT1_ISR();
  5006   000F04  EC55  F009         	call	i2_INT1_ISR	;wreg free
  5007   000F08                     i2l2831:
  5008   000F08  FFFF               	dw	65535	; assembler added errata NOP
  5009                           
  5010                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 14:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  5011   000F0A  A2F0               	btfss	240,1,c	;volatile
  5012   000F0C  EF8A  F007         	goto	i2u209_41
  5013   000F10  EF8D  F007         	goto	i2u209_40
  5014   000F14                     i2u209_41:
  5015   000F14  FFFF               	dw	65535	; assembler added errata NOP
  5016   000F16  EF99  F007         	goto	i2l806
  5017   000F1A                     i2u209_40:
  5018   000F1A  FFFF               	dw	65535	; assembler added errata NOP
  5019   000F1C  A8F0               	btfss	240,4,c	;volatile
  5020   000F1E  EF93  F007         	goto	i2u210_41
  5021   000F22  EF96  F007         	goto	i2u210_40
  5022   000F26                     i2u210_41:
  5023   000F26  FFFF               	dw	65535	; assembler added errata NOP
  5024   000F28  EF99  F007         	goto	i2l806
  5025   000F2C                     i2u210_40:
  5026   000F2C  FFFF               	dw	65535	; assembler added errata NOP
  5027   000F2E                     
  5028                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 15:         INT2_ISR();
  5029   000F2E  EC36  F009         	call	i2_INT2_ISR	;wreg free
  5030   000F32                     i2l806:
  5031   000F32  FFFF               	dw	65535	; assembler added errata NOP
  5032   000F34  C066  FFFB         	movff	??_InterruptManager+1,pclatu
  5033   000F38  C065  FFFA         	movff	??_InterruptManager,pclath
  5034   000F3C  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5035   000F3E  0011               	retfie		f
  5036   000F40  FFFF               	dw	65535	; errata NOP
  5037   000F42                     __end_of_InterruptManager:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function i2_INT2_ISR *****************
  5041 ;; Defined at:
  5042 ;;		line 24 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5056 ;;      Params:         0       0       0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 1
  5063 ;; This function calls:
  5064 ;;		NULL
  5065 ;;		i2___INT0
  5066 ;; This function is called by:
  5067 ;;		_InterruptManager
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text20
  5072   00126C                     __ptext20:
  5073                           	callstack 0
  5074   00126C                     i2_INT2_ISR:
  5075                           	callstack 0
  5076   00126C  FFFF               	dw	65535	; assembler added errata NOP
  5077   00126E                     
  5078                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 25:  INTCON3bits.INT2IF=0;
  5079   00126E  92F0               	bcf	240,1,c	;volatile
  5080   001270                     
  5081                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 26:  if(INT2_handler)
  5082   001270  5053               	movf	_INT2_handler^0,w,c
  5083   001272  1054               	iorwf	(_INT2_handler+1)^0,w,c
  5084   001274  B4D8               	btfsc	status,2,c
  5085   001276  EF3F  F009         	goto	i2u94_41
  5086   00127A  EF42  F009         	goto	i2u94_40
  5087   00127E                     i2u94_41:
  5088   00127E  FFFF               	dw	65535	; assembler added errata NOP
  5089   001280  EF52  F009         	goto	i2l657
  5090   001284                     i2u94_40:
  5091   001284  FFFF               	dw	65535	; assembler added errata NOP
  5092   001286                     
  5093                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 27:   INT2_handler();
  5094   001286  D802               	call	i2u95_48
  5095   001288  EF52  F009         	goto	i2u95_49
  5096   00128C                     i2u95_48:
  5097   00128C  FFFF               	dw	65535	; assembler added errata NOP
  5098   00128E  0005               	push	
  5099   001290  6EFA               	movwf	pclath,c
  5100   001292  5053               	movf	_INT2_handler^0,w,c
  5101   001294  6EFD               	movwf	tosl,c
  5102   001296  5054               	movf	(_INT2_handler+1)^0,w,c
  5103   001298  6EFE               	movwf	tosh,c
  5104   00129A  50F8               	movf	tblptru,w,c
  5105   00129C  6EFF               	movwf	tosu,c
  5106   00129E  50FA               	movf	pclath,w,c
  5107   0012A0  0012               	return		;indir
  5108   0012A2  FFFF               	dw	65535	; errata NOP
  5109   0012A4                     i2u95_49:
  5110   0012A4                     i2l657:
  5111   0012A4  FFFF               	dw	65535	; assembler added errata NOP
  5112   0012A6  0012               	return		;funcret
  5113   0012A8  FFFF               	dw	65535	; errata NOP
  5114   0012AA                     __end_ofi2_INT2_ISR:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function i2_INT1_ISR *****************
  5118 ;; Defined at:
  5119 ;;		line 19 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5133 ;;      Params:         0       0       0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0
  5136 ;;      Totals:         0       0       0       0       0       0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 1
  5140 ;; This function calls:
  5141 ;;		NULL
  5142 ;;		i2___INT0
  5143 ;; This function is called by:
  5144 ;;		_InterruptManager
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text21
  5149   0012AA                     __ptext21:
  5150                           	callstack 0
  5151   0012AA                     i2_INT1_ISR:
  5152                           	callstack 0
  5153   0012AA  FFFF               	dw	65535	; assembler added errata NOP
  5154   0012AC                     
  5155                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 20:  INTCON3bits.INT1IF=0;
  5156   0012AC  90F0               	bcf	240,0,c	;volatile
  5157   0012AE                     
  5158                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 21:  if(INT1_handler)
  5159   0012AE  5055               	movf	_INT1_handler^0,w,c
  5160   0012B0  1056               	iorwf	(_INT1_handler+1)^0,w,c
  5161   0012B2  B4D8               	btfsc	status,2,c
  5162   0012B4  EF5E  F009         	goto	i2u92_41
  5163   0012B8  EF61  F009         	goto	i2u92_40
  5164   0012BC                     i2u92_41:
  5165   0012BC  FFFF               	dw	65535	; assembler added errata NOP
  5166   0012BE  EF71  F009         	goto	i2l653
  5167   0012C2                     i2u92_40:
  5168   0012C2  FFFF               	dw	65535	; assembler added errata NOP
  5169   0012C4                     
  5170                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 22:   INT1_handler();
  5171   0012C4  D802               	call	i2u93_48
  5172   0012C6  EF71  F009         	goto	i2u93_49
  5173   0012CA                     i2u93_48:
  5174   0012CA  FFFF               	dw	65535	; assembler added errata NOP
  5175   0012CC  0005               	push	
  5176   0012CE  6EFA               	movwf	pclath,c
  5177   0012D0  5055               	movf	_INT1_handler^0,w,c
  5178   0012D2  6EFD               	movwf	tosl,c
  5179   0012D4  5056               	movf	(_INT1_handler+1)^0,w,c
  5180   0012D6  6EFE               	movwf	tosh,c
  5181   0012D8  50F8               	movf	tblptru,w,c
  5182   0012DA  6EFF               	movwf	tosu,c
  5183   0012DC  50FA               	movf	pclath,w,c
  5184   0012DE  0012               	return		;indir
  5185   0012E0  FFFF               	dw	65535	; errata NOP
  5186   0012E2                     i2u93_49:
  5187   0012E2                     i2l653:
  5188   0012E2  FFFF               	dw	65535	; assembler added errata NOP
  5189   0012E4  0012               	return		;funcret
  5190   0012E6  FFFF               	dw	65535	; errata NOP
  5191   0012E8                     __end_ofi2_INT1_ISR:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function i2_INT0_ISR *****************
  5195 ;; Defined at:
  5196 ;;		line 14 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5210 ;;      Params:         0       0       0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0
  5213 ;;      Totals:         0       0       0       0       0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 1
  5217 ;; This function calls:
  5218 ;;		NULL
  5219 ;;		i2___INT0
  5220 ;; This function is called by:
  5221 ;;		_InterruptManager
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text22
  5226   0012E8                     __ptext22:
  5227                           	callstack 0
  5228   0012E8                     i2_INT0_ISR:
  5229                           	callstack 0
  5230   0012E8  FFFF               	dw	65535	; assembler added errata NOP
  5231   0012EA                     
  5232                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 15:  INTCONbits.INT0IF=0;
  5233   0012EA  92F2               	bcf	242,1,c	;volatile
  5234   0012EC                     
  5235                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 16:  if(INT0_handler)
  5236   0012EC  5057               	movf	_INT0_handler^0,w,c
  5237   0012EE  1058               	iorwf	(_INT0_handler+1)^0,w,c
  5238   0012F0  B4D8               	btfsc	status,2,c
  5239   0012F2  EF7D  F009         	goto	i2u90_41
  5240   0012F6  EF80  F009         	goto	i2u90_40
  5241   0012FA                     i2u90_41:
  5242   0012FA  FFFF               	dw	65535	; assembler added errata NOP
  5243   0012FC  EF90  F009         	goto	i2l649
  5244   001300                     i2u90_40:
  5245   001300  FFFF               	dw	65535	; assembler added errata NOP
  5246   001302                     
  5247                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 17:   INT0_handler();
  5248   001302  D802               	call	i2u91_48
  5249   001304  EF90  F009         	goto	i2u91_49
  5250   001308                     i2u91_48:
  5251   001308  FFFF               	dw	65535	; assembler added errata NOP
  5252   00130A  0005               	push	
  5253   00130C  6EFA               	movwf	pclath,c
  5254   00130E  5057               	movf	_INT0_handler^0,w,c
  5255   001310  6EFD               	movwf	tosl,c
  5256   001312  5058               	movf	(_INT0_handler+1)^0,w,c
  5257   001314  6EFE               	movwf	tosh,c
  5258   001316  50F8               	movf	tblptru,w,c
  5259   001318  6EFF               	movwf	tosu,c
  5260   00131A  50FA               	movf	pclath,w,c
  5261   00131C  0012               	return		;indir
  5262   00131E  FFFF               	dw	65535	; errata NOP
  5263   001320                     i2u91_49:
  5264   001320                     i2l649:
  5265   001320  FFFF               	dw	65535	; assembler added errata NOP
  5266   001322  0012               	return		;funcret
  5267   001324  FFFF               	dw	65535	; errata NOP
  5268   001326                     __end_ofi2_INT0_ISR:
  5269                           	callstack 0
  5270                           
  5271 ;; *************** function i2___INT0 *****************
  5272 ;; Defined at:
  5273 ;;		line 59 in file "application.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5287 ;;      Params:         0       0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_INT0_ISR
  5297 ;;		_INT1_ISR
  5298 ;;		_INT2_ISR
  5299 ;;		i2_INT0_ISR
  5300 ;;		i2_INT1_ISR
  5301 ;;		i2_INT2_ISR
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text23
  5306   001374                     __ptext23:
  5307                           	callstack 0
  5308   001374                     i2___INT0:
  5309                           	callstack 0
  5310   001374  FFFF               	dw	65535	; assembler added errata NOP
  5311   001376                     
  5312                           ;application.c: 60:  Iflag++;
  5313   001376  2A5C               	incf	_Iflag^0,f,c
  5314   001378  0012               	return		;funcret
  5315   00137A  FFFF               	dw	65535	; errata NOP
  5316   00137C                     __end_ofi2___INT0:
  5317                           	callstack 0
  5318                           
  5319                           	psect	rparam
  5320   000001                     ___rparam_used  equ	1
  5321   000000                     ___param_bank   equ	0
  5322   000000                     __Lparam        equ	__Lrparam
  5323   000000                     __Hparam        equ	__Hrparam
  5324                           
  5325                           	psect	temp
  5326   000078                     btemp:
  5327                           	callstack 0
  5328   000078                     	ds	1
  5329   000078                     int$flags       set	btemp
  5330   000079                     wtemp8          set	btemp+1
  5331   000079                     ttemp5          set	btemp+1
  5332   00007C                     ttemp6          set	btemp+4
  5333   000080                     ttemp7          set	btemp+8
  5334                           
  5335                           	psect	config
  5336                           
  5337                           ; Padding undefined space
  5338   300000                     	org	3145728
  5339   300000  FF                 	db	255
  5340                           
  5341                           ;Config register CONFIG1H @ 0x300001
  5342                           ;	Oscillator Selection bits
  5343                           ;	OSC = HS, HS oscillator
  5344                           ;	Oscillator System Clock Switch Enable bit
  5345                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  5346   300001                     	org	3145729
  5347   300001  22                 	db	34
  5348                           
  5349                           ;Config register CONFIG2L @ 0x300002
  5350                           ;	Power-up Timer Enable bit
  5351                           ;	PWRT = OFF, PWRT disabled
  5352                           ;	Brown-out Reset Enable bit
  5353                           ;	BOR = OFF, Brown-out Reset disabled
  5354                           ;	Brown-out Reset Voltage bits
  5355                           ;	BORV = 20, VBOR set to 2.0V
  5356   300002                     	org	3145730
  5357   300002  0D                 	db	13
  5358                           
  5359                           ;Config register CONFIG2H @ 0x300003
  5360                           ;	Watchdog Timer Enable bit
  5361                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5362                           ;	Watchdog Timer Postscale Select bits
  5363                           ;	WDTPS = 128, 1:128
  5364   300003                     	org	3145731
  5365   300003  0E                 	db	14
  5366                           
  5367                           ; Padding undefined space
  5368   300004                     	org	3145732
  5369   300004  FF                 	db	255
  5370                           
  5371                           ;Config register CONFIG3H @ 0x300005
  5372                           ;	CCP2 Mux bit
  5373                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  5374   300005                     	org	3145733
  5375   300005  01                 	db	1
  5376                           
  5377                           ;Config register CONFIG4L @ 0x300006
  5378                           ;	Stack Full/Underflow Reset Enable bit
  5379                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  5380                           ;	Low Voltage ICSP Enable bit
  5381                           ;	LVP = OFF, Low Voltage ICSP disabled
  5382                           ;	Background Debugger Enable bit
  5383                           ;	DEBUG = 0x1, unprogrammed default
  5384   300006                     	org	3145734
  5385   300006  81                 	db	129
  5386                           
  5387                           ; Padding undefined space
  5388   300007                     	org	3145735
  5389   300007  FF                 	db	255
  5390                           
  5391                           ;Config register CONFIG5L @ 0x300008
  5392                           ;	Code Protection bit
  5393                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  5394                           ;	Code Protection bit
  5395                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  5396                           ;	Code Protection bit
  5397                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  5398                           ;	Code Protection bit
  5399                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  5400   300008                     	org	3145736
  5401   300008  0F                 	db	15
  5402                           
  5403                           ;Config register CONFIG5H @ 0x300009
  5404                           ;	Boot Block Code Protection bit
  5405                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  5406                           ;	Data EEPROM Code Protection bit
  5407                           ;	CPD = OFF, Data EEPROM not code protected
  5408   300009                     	org	3145737
  5409   300009  C0                 	db	192
  5410                           
  5411                           ;Config register CONFIG6L @ 0x30000A
  5412                           ;	Write Protection bit
  5413                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  5414                           ;	Write Protection bit
  5415                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  5416                           ;	Write Protection bit
  5417                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  5418                           ;	Write Protection bit
  5419                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  5420   30000A                     	org	3145738
  5421   30000A  0F                 	db	15
  5422                           
  5423                           ;Config register CONFIG6H @ 0x30000B
  5424                           ;	Configuration Register Write Protection bit
  5425                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  5426                           ;	Boot Block Write Protection bit
  5427                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  5428                           ;	Data EEPROM Write Protection bit
  5429                           ;	WRTD = OFF, Data EEPROM not write protected
  5430   30000B                     	org	3145739
  5431   30000B  E0                 	db	224
  5432                           
  5433                           ;Config register CONFIG7L @ 0x30000C
  5434                           ;	Table Read Protection bit
  5435                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  5436                           ;	Table Read Protection bit
  5437                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  5438                           ;	Table Read Protection bit
  5439                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  5440                           ;	Table Read Protection bit
  5441                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  5442   30000C                     	org	3145740
  5443   30000C  0F                 	db	15
  5444                           
  5445                           ;Config register CONFIG7H @ 0x30000D
  5446                           ;	Boot Block Table Read Protection bit
  5447                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  5448   30000D                     	org	3145741
  5449   30000D  40                 	db	64
  5450                           tosu	equ	0xFFF
  5451                           tosh	equ	0xFFE
  5452                           tosl	equ	0xFFD
  5453                           stkptr	equ	0xFFC
  5454                           pclatu	equ	0xFFB
  5455                           pclath	equ	0xFFA
  5456                           pcl	equ	0xFF9
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           indf0	equ	0xFEF
  5464                           postinc0	equ	0xFEE
  5465                           postdec0	equ	0xFED
  5466                           preinc0	equ	0xFEC
  5467                           plusw0	equ	0xFEB
  5468                           fsr0h	equ	0xFEA
  5469                           fsr0l	equ	0xFE9
  5470                           wreg	equ	0xFE8
  5471                           indf1	equ	0xFE7
  5472                           postinc1	equ	0xFE6
  5473                           postdec1	equ	0xFE5
  5474                           preinc1	equ	0xFE4
  5475                           plusw1	equ	0xFE3
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           bsr	equ	0xFE0
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           preinc2	equ	0xFDC
  5483                           plusw2	equ	0xFDB
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        80
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19     119
    BANK0           128      3       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    first_int$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2___INT0(), __INT0(), 

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> first_int(COMRAM[6]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), 
		 -> keypad_read_number@lpinr(COMRAM[4]), LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(BANK0[1]), 
		 -> LED_toggle@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), first_int(COMRAM[6]), keypad_initialize@lpinc(COMRAM[4]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(BANK0[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    INT0_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2___INT0(), __INT0(), NULL(), 

    INT1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2___INT0(), __INT0(), NULL(), 

    INT2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2___INT0(), __INT0(), NULL(), 

    INT_INTx_check_access@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_clear_flag@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_clear_flag@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_disable@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_disable@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_edge_initialize@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_edge_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_enable@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_enable@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_initialize@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_pin_initialize@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_pin_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_priority_initialize@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_priority_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_INTx_set_callback_routine@lint	PTR const struct . size(1) Largest target is 6
		 -> first_int(COMRAM[6]), 

    INT_INTx_set_callback_routine@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    INT_RBx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LED_on@led	PTR struct . size(1) Largest target is 1
		 -> LED_NOK(COMRAM[1]), LED_OK(COMRAM[1]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    S1195$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    S2009$buffer	PTR unsigned char  size(2) Largest target is 0

    S2009$source	PTR const unsigned char  size(2) Largest target is 0

    S959$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT0(), 

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_LED_on
    _LED_on->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _INT_INTx_initialize->_INT_INTx_pin_initialize
    _INT_INTx_pin_initialize->_GPIO_pin_direction_initialize
    _GPIO_pin_direction_initialize->_GPIO_check_access

Critical Paths under _InterruptManagerLow in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_INT_INTx_initialize

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3849
                _INT_INTx_initialize
                             _LED_on
 ---------------------------------------------------------------------------------
 (1) _LED_on                                               4     3      1    1411
                                             18 COMRAM     1     0      1
                                              0 BANK0      2     2      0
                  _GPIO_check_access
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_write_logic                                 8     6      2     770
                                             10 COMRAM     8     6      2
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (1) _INT_INTx_initialize                                  3     2      1    2435
                                              0 BANK0      3     2      1
              _INT_INTx_check_access
                _INT_INTx_clear_flag
                   _INT_INTx_disable
           _INT_INTx_edge_initialize
                    _INT_INTx_enable
            _INT_INTx_pin_initialize
       _INT_INTx_priority_initialize
      _INT_INTx_set_callback_routine
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_set_callback_routine                        4     3      1     229
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_priority_initialize                         4     3      1     173
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_pin_initialize                              2     1      1     954
                                             17 COMRAM     2     1      1
      _GPIO_pin_direction_initialize
              _INT_INTx_check_access
 ---------------------------------------------------------------------------------
 (3) _INT_INTx_check_access                                2     1      1     198
                                              7 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _GPIO_pin_direction_initialize                        7     6      1     620
                                             10 COMRAM     7     6      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (3) _GPIO_check_access                                    3     2      1     382
                                              7 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_enable                                      4     3      1     105
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_edge_initialize                             4     3      1     207
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_disable                                     4     3      1     105
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_clear_flag                                  4     3      1     105
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptManagerLow                                  5     5      0       0
                                              2 COMRAM     5     5      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
                                NULL *
                             ___INT0 *
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
                                NULL *
                             ___INT0 *
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
                                NULL *
                             ___INT0 *
 ---------------------------------------------------------------------------------
 (7) ___INT0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptManager                                     2     2      0       0
                                              0 COMRAM     2     2      0
                         i2_INT0_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
 ---------------------------------------------------------------------------------
 (9) i2_INT2_ISR                                           0     0      0       0
                                NULL *
                           i2___INT0 *
 ---------------------------------------------------------------------------------
 (9) i2_INT1_ISR                                           0     0      0       0
                                NULL *
                           i2___INT0 *
 ---------------------------------------------------------------------------------
 (9) i2_INT0_ISR                                           0     0      0       0
                                NULL *
                           i2___INT0 *
 ---------------------------------------------------------------------------------
 (10) i2___INT0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_INTx_initialize
     _INT_INTx_check_access
     _INT_INTx_clear_flag
     _INT_INTx_disable
     _INT_INTx_edge_initialize
     _INT_INTx_enable
     _INT_INTx_pin_initialize
       _GPIO_pin_direction_initialize
         _GPIO_check_access
       _INT_INTx_check_access
     _INT_INTx_priority_initialize
     _INT_INTx_set_callback_routine
   _LED_on
     _GPIO_check_access
     _GPIO_pin_write_logic
       _GPIO_check_access

 _InterruptManagerLow (ROOT)
   _INT0_ISR
     NULL(Fake) *
     ___INT0 *
   _INT1_ISR
     NULL(Fake) *
     ___INT0 *
   _INT2_ISR
     NULL(Fake) *
     ___INT0 *

 _InterruptManager (ROOT)
   i2_INT0_ISR
     NULL(Fake) *
     i2___INT0 *
   i2_INT1_ISR
     NULL(Fake) *
     i2___INT0 *
   i2_INT2_ISR
     NULL(Fake) *
     i2___INT0 *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      3       3      2.3%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     19     119     94.4%
BITBIGSFRllh        70      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRh          15      0       0      0.0%
BITBIGSFRlll         4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     122      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 22 14:57:10 2025

                                         ??_InterruptManager 0065  
                                                          _i 0046  
                                                          _j 005B  
                                            LED_toggle@F2885 0060  
                                                         bsr 0FE0  
                                      ??_InterruptManagerLow 0067  
                                                        l312 0E2C  
                                                        l318 0EA6  
                                                        l514 0BBE  
                                                        l701 0BE4  
                                                        l482 0878  
                                                        l474 0870  
                                                        l714 0C1E  
                                                        l707 0BEC  
                                                        l740 06C8  
                                                        l716 0C26  
                                                        l660 08B8  
                                                        l709 0BF4  
                                                        l742 06D0  
                                                        l734 0680  
                                                        l750 1154  
                                                        l662 08AE  
                                                        l727 0638  
                                                        l719 0C94  
                                                        l663 098E  
                                                        l760 107C  
                                                        l736 0688  
                                                        l672 0F64  
                                                        l752 116E  
                                                        l761 1084  
                                                        l745 0754  
                                                        l729 0640  
                                                        l497 0AAC  
                                                        l674 0F70  
                                                        l666 0994  
                                                        l763 10D0  
                                                        l683 0FF2  
                                                        l675 0F7C  
                                                        l780 0CCC  
                                                        l685 0FFA  
                                                        l677 0FCC  
                                                        l758 1074  
                                                        l686 1002  
                                                        l598 11A8  
                                                        l688 104E  
                                                        l768 0E04  
                                                        l769 0E0C  
                                                        l788 0D54  
                              ?_INT_INTx_priority_initialize 006C  
                                                        tosl 0FFD  
                                                        wreg 0FE8  
                                      relay_initialize@F2865 005F  
                                INT_INTx_edge_initialize@ret 006F  
                                                       l4001 0874  
                                                       l4021 09BA  
                                                       l4023 09C2  
                                                       l4025 0A1E  
                                                       l4017 099A  
                                                       l4041 0DE0  
                                                       l4033 0D5A  
                                                       l4027 0A74  
                                                       l4019 099E  
                                                       l4043 0E08  
                                                       l4035 0D72  
                                                       l4203 1126  
                                                       l4051 0AD2  
                                                       l4301 0F5C  
                                                       l4029 0AA8  
                                                       l4037 0D94  
                                                       l4205 113A  
                                                       l4221 0CFC  
                                                       l4213 0C9A  
                                                       l4053 0ADA  
                                                       l5021 1192  
                                                       l4039 0DBA  
                                                       l4207 115C  
                                                       l4215 0CB2  
                                                       l4055 0B36  
                                                       l4047 0AB2  
                                                       l5023 119E  
                                                       l4305 0F88  
                                                       l4209 116A  
                                                       l4241 0BFC  
                                                       l4217 0CD4  
                                                       l4225 0D10  
                                                       l4057 0B8C  
                                                       l4049 0AB6  
                                                       l5017 1172  
                                                       l4171 0FD2  
                                                       l4307 0FC8  
                                                       l4251 0C90  
                                                       l4235 0BC4  
                                                       l4219 0CE8  
                                                       l4227 0D50  
                                                       l4059 0BBA  
                                                       l5019 1172  
                                                       l4173 0FEA  
                                                       l4261 0630  
                                                       l4245 0C2E  
                                                       l4237 0BDC  
                                                       l5231 0BA2  
                                                       l4431 0E6C  
                                                       l4423 0E12  
                                                       l4193 108C  
                                                       l4177 100A  
                                                       l4273 06D8  
                                                       l5241 06B0  
                                                       l4265 0648  
                                                       l4249 0C50  
                                                       l5233 0D30  
                                                       l4433 0E7E  
                                                       l4425 0E26  
                                                       l4195 10CC  
                                                       l4187 1054  
                                                       l4179 104A  
                                                       l5243 06F8  
                                                       l4259 0618  
                                                       l5235 0C70  
                                                       l4435 0E9A  
                                                       l4427 0E32  
                                                       l4189 106C  
                                                       l5245 0730  
                                                       l4269 0690  
                                                       l4277 0710  
                                                       l5237 0FA8  
                                                       l4461 08F6  
                                                       l4453 087E  
                                                       l4429 0E6A  
                                                       l5247 102A  
                                                       l5239 0668  
                                                       l4279 0750  
                                                       l4471 0982  
                                                       l4463 0912  
                                                       l4455 0894  
                                                       l5249 10AC  
                                                       l4465 092E  
                                                       l4473 0988  
                                                       l4457 08BE  
                                                       l4299 0F44  
                                                       l4467 094A  
                                                       l4459 08DA  
                                                       l4469 0966  
                                                       l3991 07D0  
                                                       l3983 075A  
                                                       l3993 07EE  
                                                       l3985 0772  
                                                       l3995 080A  
                                                       l3987 0790  
                                                       l3997 082E  
                                                       l3989 07B0  
                                                       l3999 084E  
                                                       STR_1 0611  
                                                       _LCD1 0001  
                                                       _LATA 0F89  
                                                       _LATB 0F8A  
                                                       _LATC 0F8B  
                                                       _LATD 0F8C  
                                                       _LATE 0F8D  
                                                       u4020 0FE8  
                                                       u4100 0F5A  
                                                       u4021 0FE2  
                                                       u4101 0F54  
                                                       u4030 106A  
                                                       u4031 1064  
                                                       u4040 1138  
                                                       u4041 1132  
                                                       u4050 1154  
                                                       u4051 114E  
                                                       u4060 0CB0  
                                                       u4061 0CAA  
                                                       u4070 0CCC  
                                                       u4071 0CC6  
                                                       u4080 0BDA  
                                                       u4400 0980  
                                                       u4320 0892  
                                                       u4081 0BD4  
                                                       u4401 097A  
                                                       u4321 088C  
                                                       u4090 062E  
                                                       u4330 08AE  
                                                       u4091 0628  
                                                       u4331 08A8  
                                                       u3700 07EC  
                                                       u4340 08D8  
                                                       u5140 1190  
                                                       u3701 07E6  
                                                       u4341 08D2  
                                                       u5141 118A  
                                                       u3710 080A  
                                                       u4350 08F4  
                                                       u4270 0E24  
                                                       u3711 0804  
                                                       u4351 08EE  
                                                       u4271 0E1E  
                                                       u3720 082E  
                                                       u3800 0D70  
                                                       u4360 0910  
                                                       u3721 0828  
                                                       u3801 0D6A  
                                                       u4361 090A  
                                                       u3730 084C  
                                                       u3810 0D92  
                                                       u4370 092C  
                                                       u4290 0E98  
                                                       u3731 0846  
                                                       u3811 0D8C  
                                                       u4371 0926  
                                                       u4291 0E92  
                                                       u3740 0870  
                                                       u3660 0770  
                                                       u3820 0DB8  
                                                       u4380 0948  
                                                       u3741 086A  
                                                       u3661 076A  
                                                       u3821 0DB2  
                                                       u4381 0942  
                                                       u4285 0E7A  
                                                       u3670 078E  
                                                       u3830 0DDE  
                                                       u4390 0964  
                                                       u3671 0788  
                                                       u3831 0DD8  
                                                       u4391 095E  
                                                       u4287 0E7E  
                                                       u3680 07B0  
                                                       u3760 09B8  
                                                       u3840 0E04  
                                                       u3681 07AA  
                                                       u3761 09B2  
                                                       u3841 0DFE  
                                                       u3690 07CE  
                                                       u3850 0AD0  
                                                       u3691 07C8  
                                                       u3851 0ACA  
                                                       u3790 0A8E  
                                                       u3774 09E4  
                                                       u3791 0A86  
                                                       u3775 09DE  
                                                       u3784 0A40  
                                                       u3864 0AFC  
                                                       u3785 0A3A  
                                                       u3865 0AF6  
                                                       u3874 0B58  
                                                       u3875 0B52  
                                                       u3796 0A92  
                                                       _btn1 003F  
                                                       _btn2 003C  
                                                ?i2_INT0_ISR 0065  
                                                       _main 1172  
                                                ?i2_INT1_ISR 0065  
                                                ?i2_INT2_ISR 0065  
                                                       _knum 005A  
                                                       _prev 0059  
                                                       fsr2h 0FDA  
                                                       indf2 0FDF  
                                                       fsr1l 0FE1  
                                                       fsr2l 0FD9  
                                                       btemp 0078  
                                                       prodl 0FF3  
                                                       start 00C8  
                                   __end_of_INT_INTx_disable 1052  
                                       _GPIO_pin_write_logic 0AB0  
                                               ___param_bank 0000  
                                           __end_of_INT0_ISR 126C  
                                           __end_of_INT1_ISR 122E  
                                           __end_of_INT2_ISR 11F0  
                                INT_INTx_pin_initialize@lint 0076  
                                  INT_INTx_check_access@lint 006C  
                           __end_of_INT_INTx_edge_initialize 0758  
                                __end_of_INT_INTx_initialize 0998  
                                                      ?_main 0065  
                                             __LAT_registers 0016  
                                                      i1l607 1370  
                                                      i1l653 1228  
                                                      i1l814 00AC  
                                                      i1l649 1266  
                                                      i1l657 11EA  
                                                      i2l607 1378  
                                                      i2l653 12E2  
                                                      i2l806 0F32  
                                                      i2l649 1320  
                                                      i2l657 12A4  
                                        relay_turn_off@F2875 005D  
                                                      _PORTA 0F80  
                                                      _PORTB 0F81  
                                                      _PORTC 0F82  
                                                      _PORTD 0F83  
                                                      _PORTE 0F84  
                                                      _TRISA 0F92  
                                                      _TRISB 0F93  
                                                      _TRISC 0F94  
                                                      _TRISD 0F95  
                                                      _TRISE 0F96  
                                                      _Iflag 005C  
                                           __end_ofi2___INT0 137C  
                                                      _errno 0051  
                                                      pclath 0FFA  
                                                      pclatu 0FFB  
                                                      tablat 0FF5  
                            ??_INT_INTx_set_callback_routine 006D  
                                                      ttemp5 0079  
                                                      ttemp6 007C  
                                                      ttemp7 0080  
                                                      status 0FD8  
                                                      wtemp8 0079  
                                      ?_GPIO_pin_write_logic 006F  
                                            __initialization 1326  
                                                LED_on@F2875 0062  
                                               __end_of_main 11B2  
                                           ___INT0$intlevel1 136C  
                                                     ??_main 0078  
                                              __activetblptr 0002  
                                          ??_INT_INTx_enable 006D  
                             ??_INT_INTx_priority_initialize 006D  
                                    _INT_INTx_pin_initialize 1124  
                                                     i1l2061 1232  
                                                     i1l2063 1248  
                                                     i1l2071 11B4  
                                                     i1l2065 11F2  
                                                     i1l2073 11B6  
                                                     i1l2059 1230  
                                                     i1l2067 11F4  
                                                     i1l2075 11CC  
                                                     i1l2069 120A  
                                                     _LED_OK 0064  
                                                     i1l1703 136E  
                                                     i1l2841 0054  
                                                     i1l2851 0096  
                                                     i1l2843 0058  
                                                     i1l2853 00A8  
                                                     i1l2845 006C  
                                                     i1l2837 0030  
                                                     i1l2847 007E  
                                                     i1l2839 0042  
                                                     i2l2081 1302  
                                                     i1l2849 0082  
                                                     i2l2083 12AC  
                                                     i2l2091 1270  
                                                     i2l2077 12EA  
                                                     i2l2085 12AE  
                                                     i2l2093 1286  
                                                     i2l2079 12EC  
                                                     i2l2087 12C4  
                                                     i2l2089 126E  
                                                     i2l2821 0EC8  
                                                     i2l2831 0F08  
                                                     i2l2823 0EDA  
                                                     i2l1849 1376  
                                                     i2l2833 0F1C  
                                                     i2l2825 0EDE  
                                                     i2l2835 0F2E  
                                                     i2l2827 0EF2  
                                                     i2l2819 0EB6  
                                                     i2l2829 0F04  
                                                     _LED_on 0E10  
                                                     ___INT0 1360  
                                                     clear_0 134C  
                                                     _relay1 0049  
                                                     _motor1 0044  
                                                     _motor2 0042  
                                                     isa$std 0001  
                                               __pdataCOMRAM 0001  
                                   _INT_INTx_edge_initialize 0616  
                                               __mediumconst 0600  
                                                     tblptrh 0FF7  
                                                     tblptrl 0FF6  
                                                     tblptru 0FF8  
                                         INT_INTx_enable@ret 006F  
                                    INT_INTx_clear_flag@lint 006C  
                                   INT_INTx_check_access@ret 006D  
                                                 __accesstop 0080  
                                    __end_of__initialization 1352  
                                     ??_GPIO_pin_write_logic 0071  
                                                  ?_INT0_ISR 0065  
                                                  ?_INT1_ISR 0065  
                                                  ?_INT2_ISR 0065  
                                      _INT_INTx_check_access 0D58  
                                              ___rparam_used 0001  
                      __end_of_INT_INTx_set_callback_routine 0D58  
                              _INT_INTx_set_callback_routine 0C98  
                                             __pcstackCOMRAM 0065  
                            ??_GPIO_pin_direction_initialize 0070  
                                                  ?i2___INT0 0065  
                   GPIO_pin_direction_initialize@_pin_config 006F  
                                                  LED_on@led 0077  
                                            __PORT_registers 000C  
                                               LED_off@F2880 0061  
                                  ??_INT_INTx_pin_initialize 0077  
                                                    ?_LED_on 0077  
                                               ??i2_INT0_ISR 0065  
                                               ??i2_INT1_ISR 0065  
                                                 ??_INT0_ISR 0067  
                                               ??i2_INT2_ISR 0065  
                                                 ??_INT1_ISR 0067  
                                                 ??_INT2_ISR 0067  
                                                    ?___INT0 0065  
                                          ?_INT_INTx_disable 006C  
                                __end_of_InterruptManagerLow 00C8  
                                         ??_INT_INTx_disable 006D  
                            INT_INTx_priority_initialize@ret 006F  
                                                 ??i2___INT0 0065  
                                                    _LED_NOK 0050  
                                         __end_ofi2_INT0_ISR 1326  
                                         __end_ofi2_INT1_ISR 12E8  
                                         __end_ofi2_INT2_ISR 12AA  
                                                    i1u84_20 1246  
                                                    i1u84_21 1240  
                                                    i1u85_28 124E  
                                                    i1u86_20 1208  
                                                    i1u85_29 1266  
                                                    i1u86_21 1202  
                                                    i1u87_28 1210  
                                                    i1u88_20 11CA  
                                                    i1u87_29 1228  
                                                    i1u88_21 11C4  
                                                    i1u89_28 11D2  
                                                    i1u89_29 11EA  
                                                    i2u90_40 1300  
                                                    i2u90_41 12FA  
                                                    i2u91_48 1308  
                                                    i2u92_40 12C2  
                                                    i2u91_49 1320  
                                                    i2u92_41 12BC  
                                                    i2u93_48 12CA  
                                                    i2u94_40 1284  
                                                    i2u93_49 12E2  
                                                    i2u94_41 127E  
                                                    i2u95_48 128C  
                                                    i2u95_49 12A4  
                                   _INT_INTx_initialize$1363 0081  
                                     ?_INT_INTx_check_access 006C  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                               __psmallconst 0600  
                                            _INT_INTx_enable 0F42  
                             ?_INT_INTx_set_callback_routine 006C  
                                                    __pcinit 1326  
                                                    __ramtop 0600  
                                                    __ptext0 1172  
                                                    __ptext1 0E10  
                                                    __ptext2 0AB0  
                                                    __ptext3 087C  
                                                    __ptext4 0C98  
                                                    __ptext5 0BC2  
                                                    __ptext6 1124  
                                                    __ptext7 0D58  
                                                    __ptext8 0998  
                                                    __ptext9 0758  
                                                    _led_arr 0038  
                      __end_of_GPIO_pin_direction_initialize 0AB0  
                              _GPIO_pin_direction_initialize 0998  
                                                    _keypad1 002A  
                                            _keypad_elements 0601  
                                                    _testing 0048  
                                             __pintcode_body 0EAC  
                                       end_of_initialization 1352  
                                              __Lmediumconst 0000  
                                                    int_func 0EAC  
                                                    postdec1 0FE5  
                                                    postdec2 0FDD  
                                                    postinc0 0FEE  
                                                    postinc2 0FDE  
                                 ??_INT_INTx_edge_initialize 006D  
                                        INT_INTx_enable@lint 006C  
                                        INT_INTx_disable@ret 006F  
                                           _InterruptManager 0008  
                                             __end_of_LED_on 0EAC  
                          INT_INTx_set_callback_routine@lint 006C  
                                    __end_of_INT_INTx_enable 0FD0  
                                    GPIO_pin_write_logic@ret 0076  
                                         relay_turn_on@F2870 005E  
                                             __end_of___INT0 1374  
                                 INT_INTx_pin_initialize@ret 0077  
                                    __end_of_keypad_elements 0611  
                                              __pidataCOMRAM 10D4  
                                               _INT0_handler 0057  
                                               _INT1_handler 0055  
                                        start_initialization 1326  
                                               _INT2_handler 0053  
                                       GPIO_check_access@ret 006E  
                             ?_GPIO_pin_direction_initialize 006F  
                                            LED_on@pin_local 0081  
                                                   ??_LED_on 0080  
                                        _INT_INTx_clear_flag 1052  
                                                   ??___INT0 0067  
                                       ?_INT_INTx_clear_flag 006C  
                                     INT_INTx_clear_flag@ret 006F  
                                                __pbssCOMRAM 0051  
                                              __pcstackBANK0 0080  
                                    ??_INT_INTx_check_access 006D  
                               INT_INTx_edge_initialize@lint 006C  
                                           ?_INT_INTx_enable 006C  
                                        _INT_INTx_initialize 087C  
                                                  __pintcode 0008  
                            GPIO_pin_write_logic@_pin_config 006F  
                                      ??_INT_INTx_clear_flag 006D  
                                                __pintcodelo 0018  
                                        LED_initialize@F2870 0063  
                           INT_INTx_priority_initialize@lint 006C  
                                   ?_INT_INTx_pin_initialize 0076  
                                                __smallconst 0600  
                                                  _first_int 004A  
                                       ?_INT_INTx_initialize 0080  
                                  GPIO_pin_write_logic@logic 0070  
                                            __TRIS_registers 0020  
                                                   _INT0_ISR 122E  
                                                   _INT1_ISR 11F0  
                                                   _INT2_ISR 11B2  
                                   __end_of_InterruptManager 0F42  
                                                   i1u211_20 0040  
                                                   i1u211_21 003A  
                                                   i1u212_20 0052  
                                                   i1u212_21 004C  
                                                   i1u213_20 006A  
                                                   i1u213_21 0064  
                                                   i1u214_20 007C  
                                                   i1u214_21 0076  
                                                   i1u215_20 0094  
                                                   i1u215_21 008E  
                                                   i1u216_20 00A6  
                                                   i1u216_21 00A0  
                                                   i2u210_40 0F2C  
                                                   i2u210_41 0F26  
                                                   i2u205_40 0EC6  
                                                   i2u205_41 0EC0  
                                                   i2u206_40 0ED8  
                                                   i2u206_41 0ED2  
                                                   i2u207_40 0EF0  
                                                   i2u207_41 0EEA  
                                                   i2u208_40 0F02  
                                                   i2u208_41 0EFC  
                                                   i2u209_40 0F1A  
                                                   i2u209_41 0F14  
                                                   _RCONbits 0FD0  
                           GPIO_pin_direction_initialize@ret 0075  
                                                   i2___INT0 1374  
                                      ??_INT_INTx_initialize 0078  
                                                _INTCON2bits 0FF1  
                                                _INTCON3bits 0FF0  
                                                  copy_data0 133A  
                                               _seg_units_en 0047  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                            __end_of_INT_INTx_pin_initialize 1172  
                                          _GPIO_check_access 0758  
                                         ?_GPIO_check_access 006C  
                                           _INT_INTx_disable 0FD0  
                                        ??_GPIO_check_access 006D  
                                                   __ptext10 0F42  
                                                   __ptext11 0616  
                                                   __ptext20 126C  
                                                   __ptext12 0FD0  
                                                   __ptext21 12AA  
                                                   __ptext13 1052  
                                                   __ptext22 12E8  
                                                   __ptext23 1374  
                                                   __ptext15 11B2  
                                                   __ptext16 11F0  
                                                   __ptext17 122E  
                                                   __ptext18 1360  
                                  ?_INT_INTx_edge_initialize 006C  
                                                   _segment1 0033  
                                                   isa$xinst 0000  
                                  __end_of_GPIO_check_access 087C  
                                                   int$flags 0078  
                               __end_of_GPIO_pin_write_logic 0BC2  
                                                 _INTCONbits 0FF2  
                                                   intlevel1 137C  
                                                   intlevel2 137C  
                              __end_of_INT_INTx_check_access 0E10  
                                        _InterruptManagerLow 0018  
                                                 i2_INT0_ISR 12E8  
                                                 i2_INT1_ISR 12AA  
                                                 i2_INT2_ISR 126C  
                                       ?_InterruptManagerLow 0065  
                       __end_of_INT_INTx_priority_initialize 0C98  
                               _INT_INTx_priority_initialize 0BC2  
                                    INT_INTx_initialize@lint 0080  
                           INT_INTx_set_callback_routine@ret 006F  
                                       INT_INTx_disable@lint 006C  
                                     INT_INTx_initialize@ret 0082  
                               GPIO_check_access@_pin_config 006C  
                                          ?_InterruptManager 0065  
                                __end_of_INT_INTx_clear_flag 10D4  
