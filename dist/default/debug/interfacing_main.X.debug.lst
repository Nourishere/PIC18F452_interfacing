

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 29 12:39:58 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 17/01/2025 GMT
    57                           ; 
    58                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F452 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F80                     PORTA           equ	3968	;# 
   132   000F81                     PORTB           equ	3969	;# 
   133   000F82                     PORTC           equ	3970	;# 
   134   000F83                     PORTD           equ	3971	;# 
   135   000F84                     PORTE           equ	3972	;# 
   136   000F89                     LATA            equ	3977	;# 
   137   000F8A                     LATB            equ	3978	;# 
   138   000F8B                     LATC            equ	3979	;# 
   139   000F8C                     LATD            equ	3980	;# 
   140   000F8D                     LATE            equ	3981	;# 
   141   000F92                     TRISA           equ	3986	;# 
   142   000F92                     DDRA            equ	3986	;# 
   143   000F93                     TRISB           equ	3987	;# 
   144   000F93                     DDRB            equ	3987	;# 
   145   000F94                     TRISC           equ	3988	;# 
   146   000F94                     DDRC            equ	3988	;# 
   147   000F95                     TRISD           equ	3989	;# 
   148   000F95                     DDRD            equ	3989	;# 
   149   000F96                     TRISE           equ	3990	;# 
   150   000F96                     DDRE            equ	3990	;# 
   151   000F9D                     PIE1            equ	3997	;# 
   152   000F9E                     PIR1            equ	3998	;# 
   153   000F9F                     IPR1            equ	3999	;# 
   154   000FA0                     PIE2            equ	4000	;# 
   155   000FA1                     PIR2            equ	4001	;# 
   156   000FA2                     IPR2            equ	4002	;# 
   157   000FA6                     EECON1          equ	4006	;# 
   158   000FA7                     EECON2          equ	4007	;# 
   159   000FA8                     EEDATA          equ	4008	;# 
   160   000FA9                     EEADR           equ	4009	;# 
   161   000FAB                     RCSTA           equ	4011	;# 
   162   000FAB                     RCSTA1          equ	4011	;# 
   163   000FAC                     TXSTA           equ	4012	;# 
   164   000FAC                     TXSTA1          equ	4012	;# 
   165   000FAD                     TXREG           equ	4013	;# 
   166   000FAD                     TXREG1          equ	4013	;# 
   167   000FAE                     RCREG           equ	4014	;# 
   168   000FAE                     RCREG1          equ	4014	;# 
   169   000FAF                     SPBRG           equ	4015	;# 
   170   000FAF                     SPBRG1          equ	4015	;# 
   171   000FB1                     T3CON           equ	4017	;# 
   172   000FB2                     TMR3            equ	4018	;# 
   173   000FB2                     TMR3L           equ	4018	;# 
   174   000FB3                     TMR3H           equ	4019	;# 
   175   000FBA                     CCP2CON         equ	4026	;# 
   176   000FBB                     CCPR2           equ	4027	;# 
   177   000FBB                     CCPR2L          equ	4027	;# 
   178   000FBC                     CCPR2H          equ	4028	;# 
   179   000FBD                     CCP1CON         equ	4029	;# 
   180   000FBE                     CCPR1           equ	4030	;# 
   181   000FBE                     CCPR1L          equ	4030	;# 
   182   000FBF                     CCPR1H          equ	4031	;# 
   183   000FC1                     ADCON1          equ	4033	;# 
   184   000FC2                     ADCON0          equ	4034	;# 
   185   000FC3                     ADRES           equ	4035	;# 
   186   000FC3                     ADRESL          equ	4035	;# 
   187   000FC4                     ADRESH          equ	4036	;# 
   188   000FC5                     SSPCON2         equ	4037	;# 
   189   000FC6                     SSPCON1         equ	4038	;# 
   190   000FC7                     SSPSTAT         equ	4039	;# 
   191   000FC8                     SSPADD          equ	4040	;# 
   192   000FC9                     SSPBUF          equ	4041	;# 
   193   000FCA                     T2CON           equ	4042	;# 
   194   000FCB                     PR2             equ	4043	;# 
   195   000FCB                     MEMCON          equ	4043	;# 
   196   000FCC                     TMR2            equ	4044	;# 
   197   000FCD                     T1CON           equ	4045	;# 
   198   000FCE                     TMR1            equ	4046	;# 
   199   000FCE                     TMR1L           equ	4046	;# 
   200   000FCF                     TMR1H           equ	4047	;# 
   201   000FD0                     RCON            equ	4048	;# 
   202   000FD1                     WDTCON          equ	4049	;# 
   203   000FD2                     LVDCON          equ	4050	;# 
   204   000FD3                     OSCCON          equ	4051	;# 
   205   000FD5                     T0CON           equ	4053	;# 
   206   000FD6                     TMR0            equ	4054	;# 
   207   000FD6                     TMR0L           equ	4054	;# 
   208   000FD7                     TMR0H           equ	4055	;# 
   209   000FD8                     STATUS          equ	4056	;# 
   210   000FD9                     FSR2            equ	4057	;# 
   211   000FD9                     FSR2L           equ	4057	;# 
   212   000FDA                     FSR2H           equ	4058	;# 
   213   000FDB                     PLUSW2          equ	4059	;# 
   214   000FDC                     PREINC2         equ	4060	;# 
   215   000FDD                     POSTDEC2        equ	4061	;# 
   216   000FDE                     POSTINC2        equ	4062	;# 
   217   000FDF                     INDF2           equ	4063	;# 
   218   000FE0                     BSR             equ	4064	;# 
   219   000FE1                     FSR1            equ	4065	;# 
   220   000FE1                     FSR1L           equ	4065	;# 
   221   000FE2                     FSR1H           equ	4066	;# 
   222   000FE3                     PLUSW1          equ	4067	;# 
   223   000FE4                     PREINC1         equ	4068	;# 
   224   000FE5                     POSTDEC1        equ	4069	;# 
   225   000FE6                     POSTINC1        equ	4070	;# 
   226   000FE7                     INDF1           equ	4071	;# 
   227   000FE8                     WREG            equ	4072	;# 
   228   000FE9                     FSR0            equ	4073	;# 
   229   000FE9                     FSR0L           equ	4073	;# 
   230   000FEA                     FSR0H           equ	4074	;# 
   231   000FEB                     PLUSW0          equ	4075	;# 
   232   000FEC                     PREINC0         equ	4076	;# 
   233   000FED                     POSTDEC0        equ	4077	;# 
   234   000FEE                     POSTINC0        equ	4078	;# 
   235   000FEF                     INDF0           equ	4079	;# 
   236   000FF0                     INTCON3         equ	4080	;# 
   237   000FF1                     INTCON2         equ	4081	;# 
   238   000FF2                     INTCON          equ	4082	;# 
   239   000FF2                     INTCON1         equ	4082	;# 
   240   000FF3                     PROD            equ	4083	;# 
   241   000FF3                     PRODL           equ	4083	;# 
   242   000FF4                     PRODH           equ	4084	;# 
   243   000FF5                     TABLAT          equ	4085	;# 
   244   000FF6                     TBLPTR          equ	4086	;# 
   245   000FF6                     TBLPTRL         equ	4086	;# 
   246   000FF7                     TBLPTRH         equ	4087	;# 
   247   000FF8                     TBLPTRU         equ	4088	;# 
   248   000FF9                     PCLAT           equ	4089	;# 
   249   000FF9                     PC              equ	4089	;# 
   250   000FF9                     PCL             equ	4089	;# 
   251   000FFA                     PCLATH          equ	4090	;# 
   252   000FFB                     PCLATU          equ	4091	;# 
   253   000FFC                     STKPTR          equ	4092	;# 
   254   000FFD                     TOS             equ	4093	;# 
   255   000FFD                     TOSL            equ	4093	;# 
   256   000FFE                     TOSH            equ	4094	;# 
   257   000FFF                     TOSU            equ	4095	;# 
   258   000F80                     PORTA           equ	3968	;# 
   259   000F81                     PORTB           equ	3969	;# 
   260   000F82                     PORTC           equ	3970	;# 
   261   000F83                     PORTD           equ	3971	;# 
   262   000F84                     PORTE           equ	3972	;# 
   263   000F89                     LATA            equ	3977	;# 
   264   000F8A                     LATB            equ	3978	;# 
   265   000F8B                     LATC            equ	3979	;# 
   266   000F8C                     LATD            equ	3980	;# 
   267   000F8D                     LATE            equ	3981	;# 
   268   000F92                     TRISA           equ	3986	;# 
   269   000F92                     DDRA            equ	3986	;# 
   270   000F93                     TRISB           equ	3987	;# 
   271   000F93                     DDRB            equ	3987	;# 
   272   000F94                     TRISC           equ	3988	;# 
   273   000F94                     DDRC            equ	3988	;# 
   274   000F95                     TRISD           equ	3989	;# 
   275   000F95                     DDRD            equ	3989	;# 
   276   000F96                     TRISE           equ	3990	;# 
   277   000F96                     DDRE            equ	3990	;# 
   278   000F9D                     PIE1            equ	3997	;# 
   279   000F9E                     PIR1            equ	3998	;# 
   280   000F9F                     IPR1            equ	3999	;# 
   281   000FA0                     PIE2            equ	4000	;# 
   282   000FA1                     PIR2            equ	4001	;# 
   283   000FA2                     IPR2            equ	4002	;# 
   284   000FA6                     EECON1          equ	4006	;# 
   285   000FA7                     EECON2          equ	4007	;# 
   286   000FA8                     EEDATA          equ	4008	;# 
   287   000FA9                     EEADR           equ	4009	;# 
   288   000FAB                     RCSTA           equ	4011	;# 
   289   000FAB                     RCSTA1          equ	4011	;# 
   290   000FAC                     TXSTA           equ	4012	;# 
   291   000FAC                     TXSTA1          equ	4012	;# 
   292   000FAD                     TXREG           equ	4013	;# 
   293   000FAD                     TXREG1          equ	4013	;# 
   294   000FAE                     RCREG           equ	4014	;# 
   295   000FAE                     RCREG1          equ	4014	;# 
   296   000FAF                     SPBRG           equ	4015	;# 
   297   000FAF                     SPBRG1          equ	4015	;# 
   298   000FB1                     T3CON           equ	4017	;# 
   299   000FB2                     TMR3            equ	4018	;# 
   300   000FB2                     TMR3L           equ	4018	;# 
   301   000FB3                     TMR3H           equ	4019	;# 
   302   000FBA                     CCP2CON         equ	4026	;# 
   303   000FBB                     CCPR2           equ	4027	;# 
   304   000FBB                     CCPR2L          equ	4027	;# 
   305   000FBC                     CCPR2H          equ	4028	;# 
   306   000FBD                     CCP1CON         equ	4029	;# 
   307   000FBE                     CCPR1           equ	4030	;# 
   308   000FBE                     CCPR1L          equ	4030	;# 
   309   000FBF                     CCPR1H          equ	4031	;# 
   310   000FC1                     ADCON1          equ	4033	;# 
   311   000FC2                     ADCON0          equ	4034	;# 
   312   000FC3                     ADRES           equ	4035	;# 
   313   000FC3                     ADRESL          equ	4035	;# 
   314   000FC4                     ADRESH          equ	4036	;# 
   315   000FC5                     SSPCON2         equ	4037	;# 
   316   000FC6                     SSPCON1         equ	4038	;# 
   317   000FC7                     SSPSTAT         equ	4039	;# 
   318   000FC8                     SSPADD          equ	4040	;# 
   319   000FC9                     SSPBUF          equ	4041	;# 
   320   000FCA                     T2CON           equ	4042	;# 
   321   000FCB                     PR2             equ	4043	;# 
   322   000FCB                     MEMCON          equ	4043	;# 
   323   000FCC                     TMR2            equ	4044	;# 
   324   000FCD                     T1CON           equ	4045	;# 
   325   000FCE                     TMR1            equ	4046	;# 
   326   000FCE                     TMR1L           equ	4046	;# 
   327   000FCF                     TMR1H           equ	4047	;# 
   328   000FD0                     RCON            equ	4048	;# 
   329   000FD1                     WDTCON          equ	4049	;# 
   330   000FD2                     LVDCON          equ	4050	;# 
   331   000FD3                     OSCCON          equ	4051	;# 
   332   000FD5                     T0CON           equ	4053	;# 
   333   000FD6                     TMR0            equ	4054	;# 
   334   000FD6                     TMR0L           equ	4054	;# 
   335   000FD7                     TMR0H           equ	4055	;# 
   336   000FD8                     STATUS          equ	4056	;# 
   337   000FD9                     FSR2            equ	4057	;# 
   338   000FD9                     FSR2L           equ	4057	;# 
   339   000FDA                     FSR2H           equ	4058	;# 
   340   000FDB                     PLUSW2          equ	4059	;# 
   341   000FDC                     PREINC2         equ	4060	;# 
   342   000FDD                     POSTDEC2        equ	4061	;# 
   343   000FDE                     POSTINC2        equ	4062	;# 
   344   000FDF                     INDF2           equ	4063	;# 
   345   000FE0                     BSR             equ	4064	;# 
   346   000FE1                     FSR1            equ	4065	;# 
   347   000FE1                     FSR1L           equ	4065	;# 
   348   000FE2                     FSR1H           equ	4066	;# 
   349   000FE3                     PLUSW1          equ	4067	;# 
   350   000FE4                     PREINC1         equ	4068	;# 
   351   000FE5                     POSTDEC1        equ	4069	;# 
   352   000FE6                     POSTINC1        equ	4070	;# 
   353   000FE7                     INDF1           equ	4071	;# 
   354   000FE8                     WREG            equ	4072	;# 
   355   000FE9                     FSR0            equ	4073	;# 
   356   000FE9                     FSR0L           equ	4073	;# 
   357   000FEA                     FSR0H           equ	4074	;# 
   358   000FEB                     PLUSW0          equ	4075	;# 
   359   000FEC                     PREINC0         equ	4076	;# 
   360   000FED                     POSTDEC0        equ	4077	;# 
   361   000FEE                     POSTINC0        equ	4078	;# 
   362   000FEF                     INDF0           equ	4079	;# 
   363   000FF0                     INTCON3         equ	4080	;# 
   364   000FF1                     INTCON2         equ	4081	;# 
   365   000FF2                     INTCON          equ	4082	;# 
   366   000FF2                     INTCON1         equ	4082	;# 
   367   000FF3                     PROD            equ	4083	;# 
   368   000FF3                     PRODL           equ	4083	;# 
   369   000FF4                     PRODH           equ	4084	;# 
   370   000FF5                     TABLAT          equ	4085	;# 
   371   000FF6                     TBLPTR          equ	4086	;# 
   372   000FF6                     TBLPTRL         equ	4086	;# 
   373   000FF7                     TBLPTRH         equ	4087	;# 
   374   000FF8                     TBLPTRU         equ	4088	;# 
   375   000FF9                     PCLAT           equ	4089	;# 
   376   000FF9                     PC              equ	4089	;# 
   377   000FF9                     PCL             equ	4089	;# 
   378   000FFA                     PCLATH          equ	4090	;# 
   379   000FFB                     PCLATU          equ	4091	;# 
   380   000FFC                     STKPTR          equ	4092	;# 
   381   000FFD                     TOS             equ	4093	;# 
   382   000FFD                     TOSL            equ	4093	;# 
   383   000FFE                     TOSH            equ	4094	;# 
   384   000FFF                     TOSU            equ	4095	;# 
   385   000F80                     PORTA           equ	3968	;# 
   386   000F81                     PORTB           equ	3969	;# 
   387   000F82                     PORTC           equ	3970	;# 
   388   000F83                     PORTD           equ	3971	;# 
   389   000F84                     PORTE           equ	3972	;# 
   390   000F89                     LATA            equ	3977	;# 
   391   000F8A                     LATB            equ	3978	;# 
   392   000F8B                     LATC            equ	3979	;# 
   393   000F8C                     LATD            equ	3980	;# 
   394   000F8D                     LATE            equ	3981	;# 
   395   000F92                     TRISA           equ	3986	;# 
   396   000F92                     DDRA            equ	3986	;# 
   397   000F93                     TRISB           equ	3987	;# 
   398   000F93                     DDRB            equ	3987	;# 
   399   000F94                     TRISC           equ	3988	;# 
   400   000F94                     DDRC            equ	3988	;# 
   401   000F95                     TRISD           equ	3989	;# 
   402   000F95                     DDRD            equ	3989	;# 
   403   000F96                     TRISE           equ	3990	;# 
   404   000F96                     DDRE            equ	3990	;# 
   405   000F9D                     PIE1            equ	3997	;# 
   406   000F9E                     PIR1            equ	3998	;# 
   407   000F9F                     IPR1            equ	3999	;# 
   408   000FA0                     PIE2            equ	4000	;# 
   409   000FA1                     PIR2            equ	4001	;# 
   410   000FA2                     IPR2            equ	4002	;# 
   411   000FA6                     EECON1          equ	4006	;# 
   412   000FA7                     EECON2          equ	4007	;# 
   413   000FA8                     EEDATA          equ	4008	;# 
   414   000FA9                     EEADR           equ	4009	;# 
   415   000FAB                     RCSTA           equ	4011	;# 
   416   000FAB                     RCSTA1          equ	4011	;# 
   417   000FAC                     TXSTA           equ	4012	;# 
   418   000FAC                     TXSTA1          equ	4012	;# 
   419   000FAD                     TXREG           equ	4013	;# 
   420   000FAD                     TXREG1          equ	4013	;# 
   421   000FAE                     RCREG           equ	4014	;# 
   422   000FAE                     RCREG1          equ	4014	;# 
   423   000FAF                     SPBRG           equ	4015	;# 
   424   000FAF                     SPBRG1          equ	4015	;# 
   425   000FB1                     T3CON           equ	4017	;# 
   426   000FB2                     TMR3            equ	4018	;# 
   427   000FB2                     TMR3L           equ	4018	;# 
   428   000FB3                     TMR3H           equ	4019	;# 
   429   000FBA                     CCP2CON         equ	4026	;# 
   430   000FBB                     CCPR2           equ	4027	;# 
   431   000FBB                     CCPR2L          equ	4027	;# 
   432   000FBC                     CCPR2H          equ	4028	;# 
   433   000FBD                     CCP1CON         equ	4029	;# 
   434   000FBE                     CCPR1           equ	4030	;# 
   435   000FBE                     CCPR1L          equ	4030	;# 
   436   000FBF                     CCPR1H          equ	4031	;# 
   437   000FC1                     ADCON1          equ	4033	;# 
   438   000FC2                     ADCON0          equ	4034	;# 
   439   000FC3                     ADRES           equ	4035	;# 
   440   000FC3                     ADRESL          equ	4035	;# 
   441   000FC4                     ADRESH          equ	4036	;# 
   442   000FC5                     SSPCON2         equ	4037	;# 
   443   000FC6                     SSPCON1         equ	4038	;# 
   444   000FC7                     SSPSTAT         equ	4039	;# 
   445   000FC8                     SSPADD          equ	4040	;# 
   446   000FC9                     SSPBUF          equ	4041	;# 
   447   000FCA                     T2CON           equ	4042	;# 
   448   000FCB                     PR2             equ	4043	;# 
   449   000FCB                     MEMCON          equ	4043	;# 
   450   000FCC                     TMR2            equ	4044	;# 
   451   000FCD                     T1CON           equ	4045	;# 
   452   000FCE                     TMR1            equ	4046	;# 
   453   000FCE                     TMR1L           equ	4046	;# 
   454   000FCF                     TMR1H           equ	4047	;# 
   455   000FD0                     RCON            equ	4048	;# 
   456   000FD1                     WDTCON          equ	4049	;# 
   457   000FD2                     LVDCON          equ	4050	;# 
   458   000FD3                     OSCCON          equ	4051	;# 
   459   000FD5                     T0CON           equ	4053	;# 
   460   000FD6                     TMR0            equ	4054	;# 
   461   000FD6                     TMR0L           equ	4054	;# 
   462   000FD7                     TMR0H           equ	4055	;# 
   463   000FD8                     STATUS          equ	4056	;# 
   464   000FD9                     FSR2            equ	4057	;# 
   465   000FD9                     FSR2L           equ	4057	;# 
   466   000FDA                     FSR2H           equ	4058	;# 
   467   000FDB                     PLUSW2          equ	4059	;# 
   468   000FDC                     PREINC2         equ	4060	;# 
   469   000FDD                     POSTDEC2        equ	4061	;# 
   470   000FDE                     POSTINC2        equ	4062	;# 
   471   000FDF                     INDF2           equ	4063	;# 
   472   000FE0                     BSR             equ	4064	;# 
   473   000FE1                     FSR1            equ	4065	;# 
   474   000FE1                     FSR1L           equ	4065	;# 
   475   000FE2                     FSR1H           equ	4066	;# 
   476   000FE3                     PLUSW1          equ	4067	;# 
   477   000FE4                     PREINC1         equ	4068	;# 
   478   000FE5                     POSTDEC1        equ	4069	;# 
   479   000FE6                     POSTINC1        equ	4070	;# 
   480   000FE7                     INDF1           equ	4071	;# 
   481   000FE8                     WREG            equ	4072	;# 
   482   000FE9                     FSR0            equ	4073	;# 
   483   000FE9                     FSR0L           equ	4073	;# 
   484   000FEA                     FSR0H           equ	4074	;# 
   485   000FEB                     PLUSW0          equ	4075	;# 
   486   000FEC                     PREINC0         equ	4076	;# 
   487   000FED                     POSTDEC0        equ	4077	;# 
   488   000FEE                     POSTINC0        equ	4078	;# 
   489   000FEF                     INDF0           equ	4079	;# 
   490   000FF0                     INTCON3         equ	4080	;# 
   491   000FF1                     INTCON2         equ	4081	;# 
   492   000FF2                     INTCON          equ	4082	;# 
   493   000FF2                     INTCON1         equ	4082	;# 
   494   000FF3                     PROD            equ	4083	;# 
   495   000FF3                     PRODL           equ	4083	;# 
   496   000FF4                     PRODH           equ	4084	;# 
   497   000FF5                     TABLAT          equ	4085	;# 
   498   000FF6                     TBLPTR          equ	4086	;# 
   499   000FF6                     TBLPTRL         equ	4086	;# 
   500   000FF7                     TBLPTRH         equ	4087	;# 
   501   000FF8                     TBLPTRU         equ	4088	;# 
   502   000FF9                     PCLAT           equ	4089	;# 
   503   000FF9                     PC              equ	4089	;# 
   504   000FF9                     PCL             equ	4089	;# 
   505   000FFA                     PCLATH          equ	4090	;# 
   506   000FFB                     PCLATU          equ	4091	;# 
   507   000FFC                     STKPTR          equ	4092	;# 
   508   000FFD                     TOS             equ	4093	;# 
   509   000FFD                     TOSL            equ	4093	;# 
   510   000FFE                     TOSH            equ	4094	;# 
   511   000FFF                     TOSU            equ	4095	;# 
   512   000F80                     PORTA           equ	3968	;# 
   513   000F81                     PORTB           equ	3969	;# 
   514   000F82                     PORTC           equ	3970	;# 
   515   000F83                     PORTD           equ	3971	;# 
   516   000F84                     PORTE           equ	3972	;# 
   517   000F89                     LATA            equ	3977	;# 
   518   000F8A                     LATB            equ	3978	;# 
   519   000F8B                     LATC            equ	3979	;# 
   520   000F8C                     LATD            equ	3980	;# 
   521   000F8D                     LATE            equ	3981	;# 
   522   000F92                     TRISA           equ	3986	;# 
   523   000F92                     DDRA            equ	3986	;# 
   524   000F93                     TRISB           equ	3987	;# 
   525   000F93                     DDRB            equ	3987	;# 
   526   000F94                     TRISC           equ	3988	;# 
   527   000F94                     DDRC            equ	3988	;# 
   528   000F95                     TRISD           equ	3989	;# 
   529   000F95                     DDRD            equ	3989	;# 
   530   000F96                     TRISE           equ	3990	;# 
   531   000F96                     DDRE            equ	3990	;# 
   532   000F9D                     PIE1            equ	3997	;# 
   533   000F9E                     PIR1            equ	3998	;# 
   534   000F9F                     IPR1            equ	3999	;# 
   535   000FA0                     PIE2            equ	4000	;# 
   536   000FA1                     PIR2            equ	4001	;# 
   537   000FA2                     IPR2            equ	4002	;# 
   538   000FA6                     EECON1          equ	4006	;# 
   539   000FA7                     EECON2          equ	4007	;# 
   540   000FA8                     EEDATA          equ	4008	;# 
   541   000FA9                     EEADR           equ	4009	;# 
   542   000FAB                     RCSTA           equ	4011	;# 
   543   000FAB                     RCSTA1          equ	4011	;# 
   544   000FAC                     TXSTA           equ	4012	;# 
   545   000FAC                     TXSTA1          equ	4012	;# 
   546   000FAD                     TXREG           equ	4013	;# 
   547   000FAD                     TXREG1          equ	4013	;# 
   548   000FAE                     RCREG           equ	4014	;# 
   549   000FAE                     RCREG1          equ	4014	;# 
   550   000FAF                     SPBRG           equ	4015	;# 
   551   000FAF                     SPBRG1          equ	4015	;# 
   552   000FB1                     T3CON           equ	4017	;# 
   553   000FB2                     TMR3            equ	4018	;# 
   554   000FB2                     TMR3L           equ	4018	;# 
   555   000FB3                     TMR3H           equ	4019	;# 
   556   000FBA                     CCP2CON         equ	4026	;# 
   557   000FBB                     CCPR2           equ	4027	;# 
   558   000FBB                     CCPR2L          equ	4027	;# 
   559   000FBC                     CCPR2H          equ	4028	;# 
   560   000FBD                     CCP1CON         equ	4029	;# 
   561   000FBE                     CCPR1           equ	4030	;# 
   562   000FBE                     CCPR1L          equ	4030	;# 
   563   000FBF                     CCPR1H          equ	4031	;# 
   564   000FC1                     ADCON1          equ	4033	;# 
   565   000FC2                     ADCON0          equ	4034	;# 
   566   000FC3                     ADRES           equ	4035	;# 
   567   000FC3                     ADRESL          equ	4035	;# 
   568   000FC4                     ADRESH          equ	4036	;# 
   569   000FC5                     SSPCON2         equ	4037	;# 
   570   000FC6                     SSPCON1         equ	4038	;# 
   571   000FC7                     SSPSTAT         equ	4039	;# 
   572   000FC8                     SSPADD          equ	4040	;# 
   573   000FC9                     SSPBUF          equ	4041	;# 
   574   000FCA                     T2CON           equ	4042	;# 
   575   000FCB                     PR2             equ	4043	;# 
   576   000FCB                     MEMCON          equ	4043	;# 
   577   000FCC                     TMR2            equ	4044	;# 
   578   000FCD                     T1CON           equ	4045	;# 
   579   000FCE                     TMR1            equ	4046	;# 
   580   000FCE                     TMR1L           equ	4046	;# 
   581   000FCF                     TMR1H           equ	4047	;# 
   582   000FD0                     RCON            equ	4048	;# 
   583   000FD1                     WDTCON          equ	4049	;# 
   584   000FD2                     LVDCON          equ	4050	;# 
   585   000FD3                     OSCCON          equ	4051	;# 
   586   000FD5                     T0CON           equ	4053	;# 
   587   000FD6                     TMR0            equ	4054	;# 
   588   000FD6                     TMR0L           equ	4054	;# 
   589   000FD7                     TMR0H           equ	4055	;# 
   590   000FD8                     STATUS          equ	4056	;# 
   591   000FD9                     FSR2            equ	4057	;# 
   592   000FD9                     FSR2L           equ	4057	;# 
   593   000FDA                     FSR2H           equ	4058	;# 
   594   000FDB                     PLUSW2          equ	4059	;# 
   595   000FDC                     PREINC2         equ	4060	;# 
   596   000FDD                     POSTDEC2        equ	4061	;# 
   597   000FDE                     POSTINC2        equ	4062	;# 
   598   000FDF                     INDF2           equ	4063	;# 
   599   000FE0                     BSR             equ	4064	;# 
   600   000FE1                     FSR1            equ	4065	;# 
   601   000FE1                     FSR1L           equ	4065	;# 
   602   000FE2                     FSR1H           equ	4066	;# 
   603   000FE3                     PLUSW1          equ	4067	;# 
   604   000FE4                     PREINC1         equ	4068	;# 
   605   000FE5                     POSTDEC1        equ	4069	;# 
   606   000FE6                     POSTINC1        equ	4070	;# 
   607   000FE7                     INDF1           equ	4071	;# 
   608   000FE8                     WREG            equ	4072	;# 
   609   000FE9                     FSR0            equ	4073	;# 
   610   000FE9                     FSR0L           equ	4073	;# 
   611   000FEA                     FSR0H           equ	4074	;# 
   612   000FEB                     PLUSW0          equ	4075	;# 
   613   000FEC                     PREINC0         equ	4076	;# 
   614   000FED                     POSTDEC0        equ	4077	;# 
   615   000FEE                     POSTINC0        equ	4078	;# 
   616   000FEF                     INDF0           equ	4079	;# 
   617   000FF0                     INTCON3         equ	4080	;# 
   618   000FF1                     INTCON2         equ	4081	;# 
   619   000FF2                     INTCON          equ	4082	;# 
   620   000FF2                     INTCON1         equ	4082	;# 
   621   000FF3                     PROD            equ	4083	;# 
   622   000FF3                     PRODL           equ	4083	;# 
   623   000FF4                     PRODH           equ	4084	;# 
   624   000FF5                     TABLAT          equ	4085	;# 
   625   000FF6                     TBLPTR          equ	4086	;# 
   626   000FF6                     TBLPTRL         equ	4086	;# 
   627   000FF7                     TBLPTRH         equ	4087	;# 
   628   000FF8                     TBLPTRU         equ	4088	;# 
   629   000FF9                     PCLAT           equ	4089	;# 
   630   000FF9                     PC              equ	4089	;# 
   631   000FF9                     PCL             equ	4089	;# 
   632   000FFA                     PCLATH          equ	4090	;# 
   633   000FFB                     PCLATU          equ	4091	;# 
   634   000FFC                     STKPTR          equ	4092	;# 
   635   000FFD                     TOS             equ	4093	;# 
   636   000FFD                     TOSL            equ	4093	;# 
   637   000FFE                     TOSH            equ	4094	;# 
   638   000FFF                     TOSU            equ	4095	;# 
   639   000F80                     PORTA           equ	3968	;# 
   640   000F81                     PORTB           equ	3969	;# 
   641   000F82                     PORTC           equ	3970	;# 
   642   000F83                     PORTD           equ	3971	;# 
   643   000F84                     PORTE           equ	3972	;# 
   644   000F89                     LATA            equ	3977	;# 
   645   000F8A                     LATB            equ	3978	;# 
   646   000F8B                     LATC            equ	3979	;# 
   647   000F8C                     LATD            equ	3980	;# 
   648   000F8D                     LATE            equ	3981	;# 
   649   000F92                     TRISA           equ	3986	;# 
   650   000F92                     DDRA            equ	3986	;# 
   651   000F93                     TRISB           equ	3987	;# 
   652   000F93                     DDRB            equ	3987	;# 
   653   000F94                     TRISC           equ	3988	;# 
   654   000F94                     DDRC            equ	3988	;# 
   655   000F95                     TRISD           equ	3989	;# 
   656   000F95                     DDRD            equ	3989	;# 
   657   000F96                     TRISE           equ	3990	;# 
   658   000F96                     DDRE            equ	3990	;# 
   659   000F9D                     PIE1            equ	3997	;# 
   660   000F9E                     PIR1            equ	3998	;# 
   661   000F9F                     IPR1            equ	3999	;# 
   662   000FA0                     PIE2            equ	4000	;# 
   663   000FA1                     PIR2            equ	4001	;# 
   664   000FA2                     IPR2            equ	4002	;# 
   665   000FA6                     EECON1          equ	4006	;# 
   666   000FA7                     EECON2          equ	4007	;# 
   667   000FA8                     EEDATA          equ	4008	;# 
   668   000FA9                     EEADR           equ	4009	;# 
   669   000FAB                     RCSTA           equ	4011	;# 
   670   000FAB                     RCSTA1          equ	4011	;# 
   671   000FAC                     TXSTA           equ	4012	;# 
   672   000FAC                     TXSTA1          equ	4012	;# 
   673   000FAD                     TXREG           equ	4013	;# 
   674   000FAD                     TXREG1          equ	4013	;# 
   675   000FAE                     RCREG           equ	4014	;# 
   676   000FAE                     RCREG1          equ	4014	;# 
   677   000FAF                     SPBRG           equ	4015	;# 
   678   000FAF                     SPBRG1          equ	4015	;# 
   679   000FB1                     T3CON           equ	4017	;# 
   680   000FB2                     TMR3            equ	4018	;# 
   681   000FB2                     TMR3L           equ	4018	;# 
   682   000FB3                     TMR3H           equ	4019	;# 
   683   000FBA                     CCP2CON         equ	4026	;# 
   684   000FBB                     CCPR2           equ	4027	;# 
   685   000FBB                     CCPR2L          equ	4027	;# 
   686   000FBC                     CCPR2H          equ	4028	;# 
   687   000FBD                     CCP1CON         equ	4029	;# 
   688   000FBE                     CCPR1           equ	4030	;# 
   689   000FBE                     CCPR1L          equ	4030	;# 
   690   000FBF                     CCPR1H          equ	4031	;# 
   691   000FC1                     ADCON1          equ	4033	;# 
   692   000FC2                     ADCON0          equ	4034	;# 
   693   000FC3                     ADRES           equ	4035	;# 
   694   000FC3                     ADRESL          equ	4035	;# 
   695   000FC4                     ADRESH          equ	4036	;# 
   696   000FC5                     SSPCON2         equ	4037	;# 
   697   000FC6                     SSPCON1         equ	4038	;# 
   698   000FC7                     SSPSTAT         equ	4039	;# 
   699   000FC8                     SSPADD          equ	4040	;# 
   700   000FC9                     SSPBUF          equ	4041	;# 
   701   000FCA                     T2CON           equ	4042	;# 
   702   000FCB                     PR2             equ	4043	;# 
   703   000FCB                     MEMCON          equ	4043	;# 
   704   000FCC                     TMR2            equ	4044	;# 
   705   000FCD                     T1CON           equ	4045	;# 
   706   000FCE                     TMR1            equ	4046	;# 
   707   000FCE                     TMR1L           equ	4046	;# 
   708   000FCF                     TMR1H           equ	4047	;# 
   709   000FD0                     RCON            equ	4048	;# 
   710   000FD1                     WDTCON          equ	4049	;# 
   711   000FD2                     LVDCON          equ	4050	;# 
   712   000FD3                     OSCCON          equ	4051	;# 
   713   000FD5                     T0CON           equ	4053	;# 
   714   000FD6                     TMR0            equ	4054	;# 
   715   000FD6                     TMR0L           equ	4054	;# 
   716   000FD7                     TMR0H           equ	4055	;# 
   717   000FD8                     STATUS          equ	4056	;# 
   718   000FD9                     FSR2            equ	4057	;# 
   719   000FD9                     FSR2L           equ	4057	;# 
   720   000FDA                     FSR2H           equ	4058	;# 
   721   000FDB                     PLUSW2          equ	4059	;# 
   722   000FDC                     PREINC2         equ	4060	;# 
   723   000FDD                     POSTDEC2        equ	4061	;# 
   724   000FDE                     POSTINC2        equ	4062	;# 
   725   000FDF                     INDF2           equ	4063	;# 
   726   000FE0                     BSR             equ	4064	;# 
   727   000FE1                     FSR1            equ	4065	;# 
   728   000FE1                     FSR1L           equ	4065	;# 
   729   000FE2                     FSR1H           equ	4066	;# 
   730   000FE3                     PLUSW1          equ	4067	;# 
   731   000FE4                     PREINC1         equ	4068	;# 
   732   000FE5                     POSTDEC1        equ	4069	;# 
   733   000FE6                     POSTINC1        equ	4070	;# 
   734   000FE7                     INDF1           equ	4071	;# 
   735   000FE8                     WREG            equ	4072	;# 
   736   000FE9                     FSR0            equ	4073	;# 
   737   000FE9                     FSR0L           equ	4073	;# 
   738   000FEA                     FSR0H           equ	4074	;# 
   739   000FEB                     PLUSW0          equ	4075	;# 
   740   000FEC                     PREINC0         equ	4076	;# 
   741   000FED                     POSTDEC0        equ	4077	;# 
   742   000FEE                     POSTINC0        equ	4078	;# 
   743   000FEF                     INDF0           equ	4079	;# 
   744   000FF0                     INTCON3         equ	4080	;# 
   745   000FF1                     INTCON2         equ	4081	;# 
   746   000FF2                     INTCON          equ	4082	;# 
   747   000FF2                     INTCON1         equ	4082	;# 
   748   000FF3                     PROD            equ	4083	;# 
   749   000FF3                     PRODL           equ	4083	;# 
   750   000FF4                     PRODH           equ	4084	;# 
   751   000FF5                     TABLAT          equ	4085	;# 
   752   000FF6                     TBLPTR          equ	4086	;# 
   753   000FF6                     TBLPTRL         equ	4086	;# 
   754   000FF7                     TBLPTRH         equ	4087	;# 
   755   000FF8                     TBLPTRU         equ	4088	;# 
   756   000FF9                     PCLAT           equ	4089	;# 
   757   000FF9                     PC              equ	4089	;# 
   758   000FF9                     PCL             equ	4089	;# 
   759   000FFA                     PCLATH          equ	4090	;# 
   760   000FFB                     PCLATU          equ	4091	;# 
   761   000FFC                     STKPTR          equ	4092	;# 
   762   000FFD                     TOS             equ	4093	;# 
   763   000FFD                     TOSL            equ	4093	;# 
   764   000FFE                     TOSH            equ	4094	;# 
   765   000FFF                     TOSU            equ	4095	;# 
   766   000F80                     PORTA           equ	3968	;# 
   767   000F81                     PORTB           equ	3969	;# 
   768   000F82                     PORTC           equ	3970	;# 
   769   000F83                     PORTD           equ	3971	;# 
   770   000F84                     PORTE           equ	3972	;# 
   771   000F89                     LATA            equ	3977	;# 
   772   000F8A                     LATB            equ	3978	;# 
   773   000F8B                     LATC            equ	3979	;# 
   774   000F8C                     LATD            equ	3980	;# 
   775   000F8D                     LATE            equ	3981	;# 
   776   000F92                     TRISA           equ	3986	;# 
   777   000F92                     DDRA            equ	3986	;# 
   778   000F93                     TRISB           equ	3987	;# 
   779   000F93                     DDRB            equ	3987	;# 
   780   000F94                     TRISC           equ	3988	;# 
   781   000F94                     DDRC            equ	3988	;# 
   782   000F95                     TRISD           equ	3989	;# 
   783   000F95                     DDRD            equ	3989	;# 
   784   000F96                     TRISE           equ	3990	;# 
   785   000F96                     DDRE            equ	3990	;# 
   786   000F9D                     PIE1            equ	3997	;# 
   787   000F9E                     PIR1            equ	3998	;# 
   788   000F9F                     IPR1            equ	3999	;# 
   789   000FA0                     PIE2            equ	4000	;# 
   790   000FA1                     PIR2            equ	4001	;# 
   791   000FA2                     IPR2            equ	4002	;# 
   792   000FA6                     EECON1          equ	4006	;# 
   793   000FA7                     EECON2          equ	4007	;# 
   794   000FA8                     EEDATA          equ	4008	;# 
   795   000FA9                     EEADR           equ	4009	;# 
   796   000FAB                     RCSTA           equ	4011	;# 
   797   000FAB                     RCSTA1          equ	4011	;# 
   798   000FAC                     TXSTA           equ	4012	;# 
   799   000FAC                     TXSTA1          equ	4012	;# 
   800   000FAD                     TXREG           equ	4013	;# 
   801   000FAD                     TXREG1          equ	4013	;# 
   802   000FAE                     RCREG           equ	4014	;# 
   803   000FAE                     RCREG1          equ	4014	;# 
   804   000FAF                     SPBRG           equ	4015	;# 
   805   000FAF                     SPBRG1          equ	4015	;# 
   806   000FB1                     T3CON           equ	4017	;# 
   807   000FB2                     TMR3            equ	4018	;# 
   808   000FB2                     TMR3L           equ	4018	;# 
   809   000FB3                     TMR3H           equ	4019	;# 
   810   000FBA                     CCP2CON         equ	4026	;# 
   811   000FBB                     CCPR2           equ	4027	;# 
   812   000FBB                     CCPR2L          equ	4027	;# 
   813   000FBC                     CCPR2H          equ	4028	;# 
   814   000FBD                     CCP1CON         equ	4029	;# 
   815   000FBE                     CCPR1           equ	4030	;# 
   816   000FBE                     CCPR1L          equ	4030	;# 
   817   000FBF                     CCPR1H          equ	4031	;# 
   818   000FC1                     ADCON1          equ	4033	;# 
   819   000FC2                     ADCON0          equ	4034	;# 
   820   000FC3                     ADRES           equ	4035	;# 
   821   000FC3                     ADRESL          equ	4035	;# 
   822   000FC4                     ADRESH          equ	4036	;# 
   823   000FC5                     SSPCON2         equ	4037	;# 
   824   000FC6                     SSPCON1         equ	4038	;# 
   825   000FC7                     SSPSTAT         equ	4039	;# 
   826   000FC8                     SSPADD          equ	4040	;# 
   827   000FC9                     SSPBUF          equ	4041	;# 
   828   000FCA                     T2CON           equ	4042	;# 
   829   000FCB                     PR2             equ	4043	;# 
   830   000FCB                     MEMCON          equ	4043	;# 
   831   000FCC                     TMR2            equ	4044	;# 
   832   000FCD                     T1CON           equ	4045	;# 
   833   000FCE                     TMR1            equ	4046	;# 
   834   000FCE                     TMR1L           equ	4046	;# 
   835   000FCF                     TMR1H           equ	4047	;# 
   836   000FD0                     RCON            equ	4048	;# 
   837   000FD1                     WDTCON          equ	4049	;# 
   838   000FD2                     LVDCON          equ	4050	;# 
   839   000FD3                     OSCCON          equ	4051	;# 
   840   000FD5                     T0CON           equ	4053	;# 
   841   000FD6                     TMR0            equ	4054	;# 
   842   000FD6                     TMR0L           equ	4054	;# 
   843   000FD7                     TMR0H           equ	4055	;# 
   844   000FD8                     STATUS          equ	4056	;# 
   845   000FD9                     FSR2            equ	4057	;# 
   846   000FD9                     FSR2L           equ	4057	;# 
   847   000FDA                     FSR2H           equ	4058	;# 
   848   000FDB                     PLUSW2          equ	4059	;# 
   849   000FDC                     PREINC2         equ	4060	;# 
   850   000FDD                     POSTDEC2        equ	4061	;# 
   851   000FDE                     POSTINC2        equ	4062	;# 
   852   000FDF                     INDF2           equ	4063	;# 
   853   000FE0                     BSR             equ	4064	;# 
   854   000FE1                     FSR1            equ	4065	;# 
   855   000FE1                     FSR1L           equ	4065	;# 
   856   000FE2                     FSR1H           equ	4066	;# 
   857   000FE3                     PLUSW1          equ	4067	;# 
   858   000FE4                     PREINC1         equ	4068	;# 
   859   000FE5                     POSTDEC1        equ	4069	;# 
   860   000FE6                     POSTINC1        equ	4070	;# 
   861   000FE7                     INDF1           equ	4071	;# 
   862   000FE8                     WREG            equ	4072	;# 
   863   000FE9                     FSR0            equ	4073	;# 
   864   000FE9                     FSR0L           equ	4073	;# 
   865   000FEA                     FSR0H           equ	4074	;# 
   866   000FEB                     PLUSW0          equ	4075	;# 
   867   000FEC                     PREINC0         equ	4076	;# 
   868   000FED                     POSTDEC0        equ	4077	;# 
   869   000FEE                     POSTINC0        equ	4078	;# 
   870   000FEF                     INDF0           equ	4079	;# 
   871   000FF0                     INTCON3         equ	4080	;# 
   872   000FF1                     INTCON2         equ	4081	;# 
   873   000FF2                     INTCON          equ	4082	;# 
   874   000FF2                     INTCON1         equ	4082	;# 
   875   000FF3                     PROD            equ	4083	;# 
   876   000FF3                     PRODL           equ	4083	;# 
   877   000FF4                     PRODH           equ	4084	;# 
   878   000FF5                     TABLAT          equ	4085	;# 
   879   000FF6                     TBLPTR          equ	4086	;# 
   880   000FF6                     TBLPTRL         equ	4086	;# 
   881   000FF7                     TBLPTRH         equ	4087	;# 
   882   000FF8                     TBLPTRU         equ	4088	;# 
   883   000FF9                     PCLAT           equ	4089	;# 
   884   000FF9                     PC              equ	4089	;# 
   885   000FF9                     PCL             equ	4089	;# 
   886   000FFA                     PCLATH          equ	4090	;# 
   887   000FFB                     PCLATU          equ	4091	;# 
   888   000FFC                     STKPTR          equ	4092	;# 
   889   000FFD                     TOS             equ	4093	;# 
   890   000FFD                     TOSL            equ	4093	;# 
   891   000FFE                     TOSH            equ	4094	;# 
   892   000FFF                     TOSU            equ	4095	;# 
   893   000F80                     PORTA           equ	3968	;# 
   894   000F81                     PORTB           equ	3969	;# 
   895   000F82                     PORTC           equ	3970	;# 
   896   000F83                     PORTD           equ	3971	;# 
   897   000F84                     PORTE           equ	3972	;# 
   898   000F89                     LATA            equ	3977	;# 
   899   000F8A                     LATB            equ	3978	;# 
   900   000F8B                     LATC            equ	3979	;# 
   901   000F8C                     LATD            equ	3980	;# 
   902   000F8D                     LATE            equ	3981	;# 
   903   000F92                     TRISA           equ	3986	;# 
   904   000F92                     DDRA            equ	3986	;# 
   905   000F93                     TRISB           equ	3987	;# 
   906   000F93                     DDRB            equ	3987	;# 
   907   000F94                     TRISC           equ	3988	;# 
   908   000F94                     DDRC            equ	3988	;# 
   909   000F95                     TRISD           equ	3989	;# 
   910   000F95                     DDRD            equ	3989	;# 
   911   000F96                     TRISE           equ	3990	;# 
   912   000F96                     DDRE            equ	3990	;# 
   913   000F9D                     PIE1            equ	3997	;# 
   914   000F9E                     PIR1            equ	3998	;# 
   915   000F9F                     IPR1            equ	3999	;# 
   916   000FA0                     PIE2            equ	4000	;# 
   917   000FA1                     PIR2            equ	4001	;# 
   918   000FA2                     IPR2            equ	4002	;# 
   919   000FA6                     EECON1          equ	4006	;# 
   920   000FA7                     EECON2          equ	4007	;# 
   921   000FA8                     EEDATA          equ	4008	;# 
   922   000FA9                     EEADR           equ	4009	;# 
   923   000FAB                     RCSTA           equ	4011	;# 
   924   000FAB                     RCSTA1          equ	4011	;# 
   925   000FAC                     TXSTA           equ	4012	;# 
   926   000FAC                     TXSTA1          equ	4012	;# 
   927   000FAD                     TXREG           equ	4013	;# 
   928   000FAD                     TXREG1          equ	4013	;# 
   929   000FAE                     RCREG           equ	4014	;# 
   930   000FAE                     RCREG1          equ	4014	;# 
   931   000FAF                     SPBRG           equ	4015	;# 
   932   000FAF                     SPBRG1          equ	4015	;# 
   933   000FB1                     T3CON           equ	4017	;# 
   934   000FB2                     TMR3            equ	4018	;# 
   935   000FB2                     TMR3L           equ	4018	;# 
   936   000FB3                     TMR3H           equ	4019	;# 
   937   000FBA                     CCP2CON         equ	4026	;# 
   938   000FBB                     CCPR2           equ	4027	;# 
   939   000FBB                     CCPR2L          equ	4027	;# 
   940   000FBC                     CCPR2H          equ	4028	;# 
   941   000FBD                     CCP1CON         equ	4029	;# 
   942   000FBE                     CCPR1           equ	4030	;# 
   943   000FBE                     CCPR1L          equ	4030	;# 
   944   000FBF                     CCPR1H          equ	4031	;# 
   945   000FC1                     ADCON1          equ	4033	;# 
   946   000FC2                     ADCON0          equ	4034	;# 
   947   000FC3                     ADRES           equ	4035	;# 
   948   000FC3                     ADRESL          equ	4035	;# 
   949   000FC4                     ADRESH          equ	4036	;# 
   950   000FC5                     SSPCON2         equ	4037	;# 
   951   000FC6                     SSPCON1         equ	4038	;# 
   952   000FC7                     SSPSTAT         equ	4039	;# 
   953   000FC8                     SSPADD          equ	4040	;# 
   954   000FC9                     SSPBUF          equ	4041	;# 
   955   000FCA                     T2CON           equ	4042	;# 
   956   000FCB                     PR2             equ	4043	;# 
   957   000FCB                     MEMCON          equ	4043	;# 
   958   000FCC                     TMR2            equ	4044	;# 
   959   000FCD                     T1CON           equ	4045	;# 
   960   000FCE                     TMR1            equ	4046	;# 
   961   000FCE                     TMR1L           equ	4046	;# 
   962   000FCF                     TMR1H           equ	4047	;# 
   963   000FD0                     RCON            equ	4048	;# 
   964   000FD1                     WDTCON          equ	4049	;# 
   965   000FD2                     LVDCON          equ	4050	;# 
   966   000FD3                     OSCCON          equ	4051	;# 
   967   000FD5                     T0CON           equ	4053	;# 
   968   000FD6                     TMR0            equ	4054	;# 
   969   000FD6                     TMR0L           equ	4054	;# 
   970   000FD7                     TMR0H           equ	4055	;# 
   971   000FD8                     STATUS          equ	4056	;# 
   972   000FD9                     FSR2            equ	4057	;# 
   973   000FD9                     FSR2L           equ	4057	;# 
   974   000FDA                     FSR2H           equ	4058	;# 
   975   000FDB                     PLUSW2          equ	4059	;# 
   976   000FDC                     PREINC2         equ	4060	;# 
   977   000FDD                     POSTDEC2        equ	4061	;# 
   978   000FDE                     POSTINC2        equ	4062	;# 
   979   000FDF                     INDF2           equ	4063	;# 
   980   000FE0                     BSR             equ	4064	;# 
   981   000FE1                     FSR1            equ	4065	;# 
   982   000FE1                     FSR1L           equ	4065	;# 
   983   000FE2                     FSR1H           equ	4066	;# 
   984   000FE3                     PLUSW1          equ	4067	;# 
   985   000FE4                     PREINC1         equ	4068	;# 
   986   000FE5                     POSTDEC1        equ	4069	;# 
   987   000FE6                     POSTINC1        equ	4070	;# 
   988   000FE7                     INDF1           equ	4071	;# 
   989   000FE8                     WREG            equ	4072	;# 
   990   000FE9                     FSR0            equ	4073	;# 
   991   000FE9                     FSR0L           equ	4073	;# 
   992   000FEA                     FSR0H           equ	4074	;# 
   993   000FEB                     PLUSW0          equ	4075	;# 
   994   000FEC                     PREINC0         equ	4076	;# 
   995   000FED                     POSTDEC0        equ	4077	;# 
   996   000FEE                     POSTINC0        equ	4078	;# 
   997   000FEF                     INDF0           equ	4079	;# 
   998   000FF0                     INTCON3         equ	4080	;# 
   999   000FF1                     INTCON2         equ	4081	;# 
  1000   000FF2                     INTCON          equ	4082	;# 
  1001   000FF2                     INTCON1         equ	4082	;# 
  1002   000FF3                     PROD            equ	4083	;# 
  1003   000FF3                     PRODL           equ	4083	;# 
  1004   000FF4                     PRODH           equ	4084	;# 
  1005   000FF5                     TABLAT          equ	4085	;# 
  1006   000FF6                     TBLPTR          equ	4086	;# 
  1007   000FF6                     TBLPTRL         equ	4086	;# 
  1008   000FF7                     TBLPTRH         equ	4087	;# 
  1009   000FF8                     TBLPTRU         equ	4088	;# 
  1010   000FF9                     PCLAT           equ	4089	;# 
  1011   000FF9                     PC              equ	4089	;# 
  1012   000FF9                     PCL             equ	4089	;# 
  1013   000FFA                     PCLATH          equ	4090	;# 
  1014   000FFB                     PCLATU          equ	4091	;# 
  1015   000FFC                     STKPTR          equ	4092	;# 
  1016   000FFD                     TOS             equ	4093	;# 
  1017   000FFD                     TOSL            equ	4093	;# 
  1018   000FFE                     TOSH            equ	4094	;# 
  1019   000FFF                     TOSU            equ	4095	;# 
  1020   000F80                     PORTA           equ	3968	;# 
  1021   000F81                     PORTB           equ	3969	;# 
  1022   000F82                     PORTC           equ	3970	;# 
  1023   000F83                     PORTD           equ	3971	;# 
  1024   000F84                     PORTE           equ	3972	;# 
  1025   000F89                     LATA            equ	3977	;# 
  1026   000F8A                     LATB            equ	3978	;# 
  1027   000F8B                     LATC            equ	3979	;# 
  1028   000F8C                     LATD            equ	3980	;# 
  1029   000F8D                     LATE            equ	3981	;# 
  1030   000F92                     TRISA           equ	3986	;# 
  1031   000F92                     DDRA            equ	3986	;# 
  1032   000F93                     TRISB           equ	3987	;# 
  1033   000F93                     DDRB            equ	3987	;# 
  1034   000F94                     TRISC           equ	3988	;# 
  1035   000F94                     DDRC            equ	3988	;# 
  1036   000F95                     TRISD           equ	3989	;# 
  1037   000F95                     DDRD            equ	3989	;# 
  1038   000F96                     TRISE           equ	3990	;# 
  1039   000F96                     DDRE            equ	3990	;# 
  1040   000F9D                     PIE1            equ	3997	;# 
  1041   000F9E                     PIR1            equ	3998	;# 
  1042   000F9F                     IPR1            equ	3999	;# 
  1043   000FA0                     PIE2            equ	4000	;# 
  1044   000FA1                     PIR2            equ	4001	;# 
  1045   000FA2                     IPR2            equ	4002	;# 
  1046   000FA6                     EECON1          equ	4006	;# 
  1047   000FA7                     EECON2          equ	4007	;# 
  1048   000FA8                     EEDATA          equ	4008	;# 
  1049   000FA9                     EEADR           equ	4009	;# 
  1050   000FAB                     RCSTA           equ	4011	;# 
  1051   000FAB                     RCSTA1          equ	4011	;# 
  1052   000FAC                     TXSTA           equ	4012	;# 
  1053   000FAC                     TXSTA1          equ	4012	;# 
  1054   000FAD                     TXREG           equ	4013	;# 
  1055   000FAD                     TXREG1          equ	4013	;# 
  1056   000FAE                     RCREG           equ	4014	;# 
  1057   000FAE                     RCREG1          equ	4014	;# 
  1058   000FAF                     SPBRG           equ	4015	;# 
  1059   000FAF                     SPBRG1          equ	4015	;# 
  1060   000FB1                     T3CON           equ	4017	;# 
  1061   000FB2                     TMR3            equ	4018	;# 
  1062   000FB2                     TMR3L           equ	4018	;# 
  1063   000FB3                     TMR3H           equ	4019	;# 
  1064   000FBA                     CCP2CON         equ	4026	;# 
  1065   000FBB                     CCPR2           equ	4027	;# 
  1066   000FBB                     CCPR2L          equ	4027	;# 
  1067   000FBC                     CCPR2H          equ	4028	;# 
  1068   000FBD                     CCP1CON         equ	4029	;# 
  1069   000FBE                     CCPR1           equ	4030	;# 
  1070   000FBE                     CCPR1L          equ	4030	;# 
  1071   000FBF                     CCPR1H          equ	4031	;# 
  1072   000FC1                     ADCON1          equ	4033	;# 
  1073   000FC2                     ADCON0          equ	4034	;# 
  1074   000FC3                     ADRES           equ	4035	;# 
  1075   000FC3                     ADRESL          equ	4035	;# 
  1076   000FC4                     ADRESH          equ	4036	;# 
  1077   000FC5                     SSPCON2         equ	4037	;# 
  1078   000FC6                     SSPCON1         equ	4038	;# 
  1079   000FC7                     SSPSTAT         equ	4039	;# 
  1080   000FC8                     SSPADD          equ	4040	;# 
  1081   000FC9                     SSPBUF          equ	4041	;# 
  1082   000FCA                     T2CON           equ	4042	;# 
  1083   000FCB                     PR2             equ	4043	;# 
  1084   000FCB                     MEMCON          equ	4043	;# 
  1085   000FCC                     TMR2            equ	4044	;# 
  1086   000FCD                     T1CON           equ	4045	;# 
  1087   000FCE                     TMR1            equ	4046	;# 
  1088   000FCE                     TMR1L           equ	4046	;# 
  1089   000FCF                     TMR1H           equ	4047	;# 
  1090   000FD0                     RCON            equ	4048	;# 
  1091   000FD1                     WDTCON          equ	4049	;# 
  1092   000FD2                     LVDCON          equ	4050	;# 
  1093   000FD3                     OSCCON          equ	4051	;# 
  1094   000FD5                     T0CON           equ	4053	;# 
  1095   000FD6                     TMR0            equ	4054	;# 
  1096   000FD6                     TMR0L           equ	4054	;# 
  1097   000FD7                     TMR0H           equ	4055	;# 
  1098   000FD8                     STATUS          equ	4056	;# 
  1099   000FD9                     FSR2            equ	4057	;# 
  1100   000FD9                     FSR2L           equ	4057	;# 
  1101   000FDA                     FSR2H           equ	4058	;# 
  1102   000FDB                     PLUSW2          equ	4059	;# 
  1103   000FDC                     PREINC2         equ	4060	;# 
  1104   000FDD                     POSTDEC2        equ	4061	;# 
  1105   000FDE                     POSTINC2        equ	4062	;# 
  1106   000FDF                     INDF2           equ	4063	;# 
  1107   000FE0                     BSR             equ	4064	;# 
  1108   000FE1                     FSR1            equ	4065	;# 
  1109   000FE1                     FSR1L           equ	4065	;# 
  1110   000FE2                     FSR1H           equ	4066	;# 
  1111   000FE3                     PLUSW1          equ	4067	;# 
  1112   000FE4                     PREINC1         equ	4068	;# 
  1113   000FE5                     POSTDEC1        equ	4069	;# 
  1114   000FE6                     POSTINC1        equ	4070	;# 
  1115   000FE7                     INDF1           equ	4071	;# 
  1116   000FE8                     WREG            equ	4072	;# 
  1117   000FE9                     FSR0            equ	4073	;# 
  1118   000FE9                     FSR0L           equ	4073	;# 
  1119   000FEA                     FSR0H           equ	4074	;# 
  1120   000FEB                     PLUSW0          equ	4075	;# 
  1121   000FEC                     PREINC0         equ	4076	;# 
  1122   000FED                     POSTDEC0        equ	4077	;# 
  1123   000FEE                     POSTINC0        equ	4078	;# 
  1124   000FEF                     INDF0           equ	4079	;# 
  1125   000FF0                     INTCON3         equ	4080	;# 
  1126   000FF1                     INTCON2         equ	4081	;# 
  1127   000FF2                     INTCON          equ	4082	;# 
  1128   000FF2                     INTCON1         equ	4082	;# 
  1129   000FF3                     PROD            equ	4083	;# 
  1130   000FF3                     PRODL           equ	4083	;# 
  1131   000FF4                     PRODH           equ	4084	;# 
  1132   000FF5                     TABLAT          equ	4085	;# 
  1133   000FF6                     TBLPTR          equ	4086	;# 
  1134   000FF6                     TBLPTRL         equ	4086	;# 
  1135   000FF7                     TBLPTRH         equ	4087	;# 
  1136   000FF8                     TBLPTRU         equ	4088	;# 
  1137   000FF9                     PCLAT           equ	4089	;# 
  1138   000FF9                     PC              equ	4089	;# 
  1139   000FF9                     PCL             equ	4089	;# 
  1140   000FFA                     PCLATH          equ	4090	;# 
  1141   000FFB                     PCLATU          equ	4091	;# 
  1142   000FFC                     STKPTR          equ	4092	;# 
  1143   000FFD                     TOS             equ	4093	;# 
  1144   000FFD                     TOSL            equ	4093	;# 
  1145   000FFE                     TOSH            equ	4094	;# 
  1146   000FFF                     TOSU            equ	4095	;# 
  1147   000F80                     PORTA           equ	3968	;# 
  1148   000F81                     PORTB           equ	3969	;# 
  1149   000F82                     PORTC           equ	3970	;# 
  1150   000F83                     PORTD           equ	3971	;# 
  1151   000F84                     PORTE           equ	3972	;# 
  1152   000F89                     LATA            equ	3977	;# 
  1153   000F8A                     LATB            equ	3978	;# 
  1154   000F8B                     LATC            equ	3979	;# 
  1155   000F8C                     LATD            equ	3980	;# 
  1156   000F8D                     LATE            equ	3981	;# 
  1157   000F92                     TRISA           equ	3986	;# 
  1158   000F92                     DDRA            equ	3986	;# 
  1159   000F93                     TRISB           equ	3987	;# 
  1160   000F93                     DDRB            equ	3987	;# 
  1161   000F94                     TRISC           equ	3988	;# 
  1162   000F94                     DDRC            equ	3988	;# 
  1163   000F95                     TRISD           equ	3989	;# 
  1164   000F95                     DDRD            equ	3989	;# 
  1165   000F96                     TRISE           equ	3990	;# 
  1166   000F96                     DDRE            equ	3990	;# 
  1167   000F9D                     PIE1            equ	3997	;# 
  1168   000F9E                     PIR1            equ	3998	;# 
  1169   000F9F                     IPR1            equ	3999	;# 
  1170   000FA0                     PIE2            equ	4000	;# 
  1171   000FA1                     PIR2            equ	4001	;# 
  1172   000FA2                     IPR2            equ	4002	;# 
  1173   000FA6                     EECON1          equ	4006	;# 
  1174   000FA7                     EECON2          equ	4007	;# 
  1175   000FA8                     EEDATA          equ	4008	;# 
  1176   000FA9                     EEADR           equ	4009	;# 
  1177   000FAB                     RCSTA           equ	4011	;# 
  1178   000FAB                     RCSTA1          equ	4011	;# 
  1179   000FAC                     TXSTA           equ	4012	;# 
  1180   000FAC                     TXSTA1          equ	4012	;# 
  1181   000FAD                     TXREG           equ	4013	;# 
  1182   000FAD                     TXREG1          equ	4013	;# 
  1183   000FAE                     RCREG           equ	4014	;# 
  1184   000FAE                     RCREG1          equ	4014	;# 
  1185   000FAF                     SPBRG           equ	4015	;# 
  1186   000FAF                     SPBRG1          equ	4015	;# 
  1187   000FB1                     T3CON           equ	4017	;# 
  1188   000FB2                     TMR3            equ	4018	;# 
  1189   000FB2                     TMR3L           equ	4018	;# 
  1190   000FB3                     TMR3H           equ	4019	;# 
  1191   000FBA                     CCP2CON         equ	4026	;# 
  1192   000FBB                     CCPR2           equ	4027	;# 
  1193   000FBB                     CCPR2L          equ	4027	;# 
  1194   000FBC                     CCPR2H          equ	4028	;# 
  1195   000FBD                     CCP1CON         equ	4029	;# 
  1196   000FBE                     CCPR1           equ	4030	;# 
  1197   000FBE                     CCPR1L          equ	4030	;# 
  1198   000FBF                     CCPR1H          equ	4031	;# 
  1199   000FC1                     ADCON1          equ	4033	;# 
  1200   000FC2                     ADCON0          equ	4034	;# 
  1201   000FC3                     ADRES           equ	4035	;# 
  1202   000FC3                     ADRESL          equ	4035	;# 
  1203   000FC4                     ADRESH          equ	4036	;# 
  1204   000FC5                     SSPCON2         equ	4037	;# 
  1205   000FC6                     SSPCON1         equ	4038	;# 
  1206   000FC7                     SSPSTAT         equ	4039	;# 
  1207   000FC8                     SSPADD          equ	4040	;# 
  1208   000FC9                     SSPBUF          equ	4041	;# 
  1209   000FCA                     T2CON           equ	4042	;# 
  1210   000FCB                     PR2             equ	4043	;# 
  1211   000FCB                     MEMCON          equ	4043	;# 
  1212   000FCC                     TMR2            equ	4044	;# 
  1213   000FCD                     T1CON           equ	4045	;# 
  1214   000FCE                     TMR1            equ	4046	;# 
  1215   000FCE                     TMR1L           equ	4046	;# 
  1216   000FCF                     TMR1H           equ	4047	;# 
  1217   000FD0                     RCON            equ	4048	;# 
  1218   000FD1                     WDTCON          equ	4049	;# 
  1219   000FD2                     LVDCON          equ	4050	;# 
  1220   000FD3                     OSCCON          equ	4051	;# 
  1221   000FD5                     T0CON           equ	4053	;# 
  1222   000FD6                     TMR0            equ	4054	;# 
  1223   000FD6                     TMR0L           equ	4054	;# 
  1224   000FD7                     TMR0H           equ	4055	;# 
  1225   000FD8                     STATUS          equ	4056	;# 
  1226   000FD9                     FSR2            equ	4057	;# 
  1227   000FD9                     FSR2L           equ	4057	;# 
  1228   000FDA                     FSR2H           equ	4058	;# 
  1229   000FDB                     PLUSW2          equ	4059	;# 
  1230   000FDC                     PREINC2         equ	4060	;# 
  1231   000FDD                     POSTDEC2        equ	4061	;# 
  1232   000FDE                     POSTINC2        equ	4062	;# 
  1233   000FDF                     INDF2           equ	4063	;# 
  1234   000FE0                     BSR             equ	4064	;# 
  1235   000FE1                     FSR1            equ	4065	;# 
  1236   000FE1                     FSR1L           equ	4065	;# 
  1237   000FE2                     FSR1H           equ	4066	;# 
  1238   000FE3                     PLUSW1          equ	4067	;# 
  1239   000FE4                     PREINC1         equ	4068	;# 
  1240   000FE5                     POSTDEC1        equ	4069	;# 
  1241   000FE6                     POSTINC1        equ	4070	;# 
  1242   000FE7                     INDF1           equ	4071	;# 
  1243   000FE8                     WREG            equ	4072	;# 
  1244   000FE9                     FSR0            equ	4073	;# 
  1245   000FE9                     FSR0L           equ	4073	;# 
  1246   000FEA                     FSR0H           equ	4074	;# 
  1247   000FEB                     PLUSW0          equ	4075	;# 
  1248   000FEC                     PREINC0         equ	4076	;# 
  1249   000FED                     POSTDEC0        equ	4077	;# 
  1250   000FEE                     POSTINC0        equ	4078	;# 
  1251   000FEF                     INDF0           equ	4079	;# 
  1252   000FF0                     INTCON3         equ	4080	;# 
  1253   000FF1                     INTCON2         equ	4081	;# 
  1254   000FF2                     INTCON          equ	4082	;# 
  1255   000FF2                     INTCON1         equ	4082	;# 
  1256   000FF3                     PROD            equ	4083	;# 
  1257   000FF3                     PRODL           equ	4083	;# 
  1258   000FF4                     PRODH           equ	4084	;# 
  1259   000FF5                     TABLAT          equ	4085	;# 
  1260   000FF6                     TBLPTR          equ	4086	;# 
  1261   000FF6                     TBLPTRL         equ	4086	;# 
  1262   000FF7                     TBLPTRH         equ	4087	;# 
  1263   000FF8                     TBLPTRU         equ	4088	;# 
  1264   000FF9                     PCLAT           equ	4089	;# 
  1265   000FF9                     PC              equ	4089	;# 
  1266   000FF9                     PCL             equ	4089	;# 
  1267   000FFA                     PCLATH          equ	4090	;# 
  1268   000FFB                     PCLATU          equ	4091	;# 
  1269   000FFC                     STKPTR          equ	4092	;# 
  1270   000FFD                     TOS             equ	4093	;# 
  1271   000FFD                     TOSL            equ	4093	;# 
  1272   000FFE                     TOSH            equ	4094	;# 
  1273   000FFF                     TOSU            equ	4095	;# 
  1274   000F80                     PORTA           equ	3968	;# 
  1275   000F81                     PORTB           equ	3969	;# 
  1276   000F82                     PORTC           equ	3970	;# 
  1277   000F83                     PORTD           equ	3971	;# 
  1278   000F84                     PORTE           equ	3972	;# 
  1279   000F89                     LATA            equ	3977	;# 
  1280   000F8A                     LATB            equ	3978	;# 
  1281   000F8B                     LATC            equ	3979	;# 
  1282   000F8C                     LATD            equ	3980	;# 
  1283   000F8D                     LATE            equ	3981	;# 
  1284   000F92                     TRISA           equ	3986	;# 
  1285   000F92                     DDRA            equ	3986	;# 
  1286   000F93                     TRISB           equ	3987	;# 
  1287   000F93                     DDRB            equ	3987	;# 
  1288   000F94                     TRISC           equ	3988	;# 
  1289   000F94                     DDRC            equ	3988	;# 
  1290   000F95                     TRISD           equ	3989	;# 
  1291   000F95                     DDRD            equ	3989	;# 
  1292   000F96                     TRISE           equ	3990	;# 
  1293   000F96                     DDRE            equ	3990	;# 
  1294   000F9D                     PIE1            equ	3997	;# 
  1295   000F9E                     PIR1            equ	3998	;# 
  1296   000F9F                     IPR1            equ	3999	;# 
  1297   000FA0                     PIE2            equ	4000	;# 
  1298   000FA1                     PIR2            equ	4001	;# 
  1299   000FA2                     IPR2            equ	4002	;# 
  1300   000FA6                     EECON1          equ	4006	;# 
  1301   000FA7                     EECON2          equ	4007	;# 
  1302   000FA8                     EEDATA          equ	4008	;# 
  1303   000FA9                     EEADR           equ	4009	;# 
  1304   000FAB                     RCSTA           equ	4011	;# 
  1305   000FAB                     RCSTA1          equ	4011	;# 
  1306   000FAC                     TXSTA           equ	4012	;# 
  1307   000FAC                     TXSTA1          equ	4012	;# 
  1308   000FAD                     TXREG           equ	4013	;# 
  1309   000FAD                     TXREG1          equ	4013	;# 
  1310   000FAE                     RCREG           equ	4014	;# 
  1311   000FAE                     RCREG1          equ	4014	;# 
  1312   000FAF                     SPBRG           equ	4015	;# 
  1313   000FAF                     SPBRG1          equ	4015	;# 
  1314   000FB1                     T3CON           equ	4017	;# 
  1315   000FB2                     TMR3            equ	4018	;# 
  1316   000FB2                     TMR3L           equ	4018	;# 
  1317   000FB3                     TMR3H           equ	4019	;# 
  1318   000FBA                     CCP2CON         equ	4026	;# 
  1319   000FBB                     CCPR2           equ	4027	;# 
  1320   000FBB                     CCPR2L          equ	4027	;# 
  1321   000FBC                     CCPR2H          equ	4028	;# 
  1322   000FBD                     CCP1CON         equ	4029	;# 
  1323   000FBE                     CCPR1           equ	4030	;# 
  1324   000FBE                     CCPR1L          equ	4030	;# 
  1325   000FBF                     CCPR1H          equ	4031	;# 
  1326   000FC1                     ADCON1          equ	4033	;# 
  1327   000FC2                     ADCON0          equ	4034	;# 
  1328   000FC3                     ADRES           equ	4035	;# 
  1329   000FC3                     ADRESL          equ	4035	;# 
  1330   000FC4                     ADRESH          equ	4036	;# 
  1331   000FC5                     SSPCON2         equ	4037	;# 
  1332   000FC6                     SSPCON1         equ	4038	;# 
  1333   000FC7                     SSPSTAT         equ	4039	;# 
  1334   000FC8                     SSPADD          equ	4040	;# 
  1335   000FC9                     SSPBUF          equ	4041	;# 
  1336   000FCA                     T2CON           equ	4042	;# 
  1337   000FCB                     PR2             equ	4043	;# 
  1338   000FCB                     MEMCON          equ	4043	;# 
  1339   000FCC                     TMR2            equ	4044	;# 
  1340   000FCD                     T1CON           equ	4045	;# 
  1341   000FCE                     TMR1            equ	4046	;# 
  1342   000FCE                     TMR1L           equ	4046	;# 
  1343   000FCF                     TMR1H           equ	4047	;# 
  1344   000FD0                     RCON            equ	4048	;# 
  1345   000FD1                     WDTCON          equ	4049	;# 
  1346   000FD2                     LVDCON          equ	4050	;# 
  1347   000FD3                     OSCCON          equ	4051	;# 
  1348   000FD5                     T0CON           equ	4053	;# 
  1349   000FD6                     TMR0            equ	4054	;# 
  1350   000FD6                     TMR0L           equ	4054	;# 
  1351   000FD7                     TMR0H           equ	4055	;# 
  1352   000FD8                     STATUS          equ	4056	;# 
  1353   000FD9                     FSR2            equ	4057	;# 
  1354   000FD9                     FSR2L           equ	4057	;# 
  1355   000FDA                     FSR2H           equ	4058	;# 
  1356   000FDB                     PLUSW2          equ	4059	;# 
  1357   000FDC                     PREINC2         equ	4060	;# 
  1358   000FDD                     POSTDEC2        equ	4061	;# 
  1359   000FDE                     POSTINC2        equ	4062	;# 
  1360   000FDF                     INDF2           equ	4063	;# 
  1361   000FE0                     BSR             equ	4064	;# 
  1362   000FE1                     FSR1            equ	4065	;# 
  1363   000FE1                     FSR1L           equ	4065	;# 
  1364   000FE2                     FSR1H           equ	4066	;# 
  1365   000FE3                     PLUSW1          equ	4067	;# 
  1366   000FE4                     PREINC1         equ	4068	;# 
  1367   000FE5                     POSTDEC1        equ	4069	;# 
  1368   000FE6                     POSTINC1        equ	4070	;# 
  1369   000FE7                     INDF1           equ	4071	;# 
  1370   000FE8                     WREG            equ	4072	;# 
  1371   000FE9                     FSR0            equ	4073	;# 
  1372   000FE9                     FSR0L           equ	4073	;# 
  1373   000FEA                     FSR0H           equ	4074	;# 
  1374   000FEB                     PLUSW0          equ	4075	;# 
  1375   000FEC                     PREINC0         equ	4076	;# 
  1376   000FED                     POSTDEC0        equ	4077	;# 
  1377   000FEE                     POSTINC0        equ	4078	;# 
  1378   000FEF                     INDF0           equ	4079	;# 
  1379   000FF0                     INTCON3         equ	4080	;# 
  1380   000FF1                     INTCON2         equ	4081	;# 
  1381   000FF2                     INTCON          equ	4082	;# 
  1382   000FF2                     INTCON1         equ	4082	;# 
  1383   000FF3                     PROD            equ	4083	;# 
  1384   000FF3                     PRODL           equ	4083	;# 
  1385   000FF4                     PRODH           equ	4084	;# 
  1386   000FF5                     TABLAT          equ	4085	;# 
  1387   000FF6                     TBLPTR          equ	4086	;# 
  1388   000FF6                     TBLPTRL         equ	4086	;# 
  1389   000FF7                     TBLPTRH         equ	4087	;# 
  1390   000FF8                     TBLPTRU         equ	4088	;# 
  1391   000FF9                     PCLAT           equ	4089	;# 
  1392   000FF9                     PC              equ	4089	;# 
  1393   000FF9                     PCL             equ	4089	;# 
  1394   000FFA                     PCLATH          equ	4090	;# 
  1395   000FFB                     PCLATU          equ	4091	;# 
  1396   000FFC                     STKPTR          equ	4092	;# 
  1397   000FFD                     TOS             equ	4093	;# 
  1398   000FFD                     TOSL            equ	4093	;# 
  1399   000FFE                     TOSH            equ	4094	;# 
  1400   000FFF                     TOSU            equ	4095	;# 
  1401   000F80                     PORTA           equ	3968	;# 
  1402   000F81                     PORTB           equ	3969	;# 
  1403   000F82                     PORTC           equ	3970	;# 
  1404   000F83                     PORTD           equ	3971	;# 
  1405   000F84                     PORTE           equ	3972	;# 
  1406   000F89                     LATA            equ	3977	;# 
  1407   000F8A                     LATB            equ	3978	;# 
  1408   000F8B                     LATC            equ	3979	;# 
  1409   000F8C                     LATD            equ	3980	;# 
  1410   000F8D                     LATE            equ	3981	;# 
  1411   000F92                     TRISA           equ	3986	;# 
  1412   000F92                     DDRA            equ	3986	;# 
  1413   000F93                     TRISB           equ	3987	;# 
  1414   000F93                     DDRB            equ	3987	;# 
  1415   000F94                     TRISC           equ	3988	;# 
  1416   000F94                     DDRC            equ	3988	;# 
  1417   000F95                     TRISD           equ	3989	;# 
  1418   000F95                     DDRD            equ	3989	;# 
  1419   000F96                     TRISE           equ	3990	;# 
  1420   000F96                     DDRE            equ	3990	;# 
  1421   000F9D                     PIE1            equ	3997	;# 
  1422   000F9E                     PIR1            equ	3998	;# 
  1423   000F9F                     IPR1            equ	3999	;# 
  1424   000FA0                     PIE2            equ	4000	;# 
  1425   000FA1                     PIR2            equ	4001	;# 
  1426   000FA2                     IPR2            equ	4002	;# 
  1427   000FA6                     EECON1          equ	4006	;# 
  1428   000FA7                     EECON2          equ	4007	;# 
  1429   000FA8                     EEDATA          equ	4008	;# 
  1430   000FA9                     EEADR           equ	4009	;# 
  1431   000FAB                     RCSTA           equ	4011	;# 
  1432   000FAB                     RCSTA1          equ	4011	;# 
  1433   000FAC                     TXSTA           equ	4012	;# 
  1434   000FAC                     TXSTA1          equ	4012	;# 
  1435   000FAD                     TXREG           equ	4013	;# 
  1436   000FAD                     TXREG1          equ	4013	;# 
  1437   000FAE                     RCREG           equ	4014	;# 
  1438   000FAE                     RCREG1          equ	4014	;# 
  1439   000FAF                     SPBRG           equ	4015	;# 
  1440   000FAF                     SPBRG1          equ	4015	;# 
  1441   000FB1                     T3CON           equ	4017	;# 
  1442   000FB2                     TMR3            equ	4018	;# 
  1443   000FB2                     TMR3L           equ	4018	;# 
  1444   000FB3                     TMR3H           equ	4019	;# 
  1445   000FBA                     CCP2CON         equ	4026	;# 
  1446   000FBB                     CCPR2           equ	4027	;# 
  1447   000FBB                     CCPR2L          equ	4027	;# 
  1448   000FBC                     CCPR2H          equ	4028	;# 
  1449   000FBD                     CCP1CON         equ	4029	;# 
  1450   000FBE                     CCPR1           equ	4030	;# 
  1451   000FBE                     CCPR1L          equ	4030	;# 
  1452   000FBF                     CCPR1H          equ	4031	;# 
  1453   000FC1                     ADCON1          equ	4033	;# 
  1454   000FC2                     ADCON0          equ	4034	;# 
  1455   000FC3                     ADRES           equ	4035	;# 
  1456   000FC3                     ADRESL          equ	4035	;# 
  1457   000FC4                     ADRESH          equ	4036	;# 
  1458   000FC5                     SSPCON2         equ	4037	;# 
  1459   000FC6                     SSPCON1         equ	4038	;# 
  1460   000FC7                     SSPSTAT         equ	4039	;# 
  1461   000FC8                     SSPADD          equ	4040	;# 
  1462   000FC9                     SSPBUF          equ	4041	;# 
  1463   000FCA                     T2CON           equ	4042	;# 
  1464   000FCB                     PR2             equ	4043	;# 
  1465   000FCB                     MEMCON          equ	4043	;# 
  1466   000FCC                     TMR2            equ	4044	;# 
  1467   000FCD                     T1CON           equ	4045	;# 
  1468   000FCE                     TMR1            equ	4046	;# 
  1469   000FCE                     TMR1L           equ	4046	;# 
  1470   000FCF                     TMR1H           equ	4047	;# 
  1471   000FD0                     RCON            equ	4048	;# 
  1472   000FD1                     WDTCON          equ	4049	;# 
  1473   000FD2                     LVDCON          equ	4050	;# 
  1474   000FD3                     OSCCON          equ	4051	;# 
  1475   000FD5                     T0CON           equ	4053	;# 
  1476   000FD6                     TMR0            equ	4054	;# 
  1477   000FD6                     TMR0L           equ	4054	;# 
  1478   000FD7                     TMR0H           equ	4055	;# 
  1479   000FD8                     STATUS          equ	4056	;# 
  1480   000FD9                     FSR2            equ	4057	;# 
  1481   000FD9                     FSR2L           equ	4057	;# 
  1482   000FDA                     FSR2H           equ	4058	;# 
  1483   000FDB                     PLUSW2          equ	4059	;# 
  1484   000FDC                     PREINC2         equ	4060	;# 
  1485   000FDD                     POSTDEC2        equ	4061	;# 
  1486   000FDE                     POSTINC2        equ	4062	;# 
  1487   000FDF                     INDF2           equ	4063	;# 
  1488   000FE0                     BSR             equ	4064	;# 
  1489   000FE1                     FSR1            equ	4065	;# 
  1490   000FE1                     FSR1L           equ	4065	;# 
  1491   000FE2                     FSR1H           equ	4066	;# 
  1492   000FE3                     PLUSW1          equ	4067	;# 
  1493   000FE4                     PREINC1         equ	4068	;# 
  1494   000FE5                     POSTDEC1        equ	4069	;# 
  1495   000FE6                     POSTINC1        equ	4070	;# 
  1496   000FE7                     INDF1           equ	4071	;# 
  1497   000FE8                     WREG            equ	4072	;# 
  1498   000FE9                     FSR0            equ	4073	;# 
  1499   000FE9                     FSR0L           equ	4073	;# 
  1500   000FEA                     FSR0H           equ	4074	;# 
  1501   000FEB                     PLUSW0          equ	4075	;# 
  1502   000FEC                     PREINC0         equ	4076	;# 
  1503   000FED                     POSTDEC0        equ	4077	;# 
  1504   000FEE                     POSTINC0        equ	4078	;# 
  1505   000FEF                     INDF0           equ	4079	;# 
  1506   000FF0                     INTCON3         equ	4080	;# 
  1507   000FF1                     INTCON2         equ	4081	;# 
  1508   000FF2                     INTCON          equ	4082	;# 
  1509   000FF2                     INTCON1         equ	4082	;# 
  1510   000FF3                     PROD            equ	4083	;# 
  1511   000FF3                     PRODL           equ	4083	;# 
  1512   000FF4                     PRODH           equ	4084	;# 
  1513   000FF5                     TABLAT          equ	4085	;# 
  1514   000FF6                     TBLPTR          equ	4086	;# 
  1515   000FF6                     TBLPTRL         equ	4086	;# 
  1516   000FF7                     TBLPTRH         equ	4087	;# 
  1517   000FF8                     TBLPTRU         equ	4088	;# 
  1518   000FF9                     PCLAT           equ	4089	;# 
  1519   000FF9                     PC              equ	4089	;# 
  1520   000FF9                     PCL             equ	4089	;# 
  1521   000FFA                     PCLATH          equ	4090	;# 
  1522   000FFB                     PCLATU          equ	4091	;# 
  1523   000FFC                     STKPTR          equ	4092	;# 
  1524   000FFD                     TOS             equ	4093	;# 
  1525   000FFD                     TOSL            equ	4093	;# 
  1526   000FFE                     TOSH            equ	4094	;# 
  1527   000FFF                     TOSU            equ	4095	;# 
  1528   000F80                     PORTA           equ	3968	;# 
  1529   000F81                     PORTB           equ	3969	;# 
  1530   000F82                     PORTC           equ	3970	;# 
  1531   000F83                     PORTD           equ	3971	;# 
  1532   000F84                     PORTE           equ	3972	;# 
  1533   000F89                     LATA            equ	3977	;# 
  1534   000F8A                     LATB            equ	3978	;# 
  1535   000F8B                     LATC            equ	3979	;# 
  1536   000F8C                     LATD            equ	3980	;# 
  1537   000F8D                     LATE            equ	3981	;# 
  1538   000F92                     TRISA           equ	3986	;# 
  1539   000F92                     DDRA            equ	3986	;# 
  1540   000F93                     TRISB           equ	3987	;# 
  1541   000F93                     DDRB            equ	3987	;# 
  1542   000F94                     TRISC           equ	3988	;# 
  1543   000F94                     DDRC            equ	3988	;# 
  1544   000F95                     TRISD           equ	3989	;# 
  1545   000F95                     DDRD            equ	3989	;# 
  1546   000F96                     TRISE           equ	3990	;# 
  1547   000F96                     DDRE            equ	3990	;# 
  1548   000F9D                     PIE1            equ	3997	;# 
  1549   000F9E                     PIR1            equ	3998	;# 
  1550   000F9F                     IPR1            equ	3999	;# 
  1551   000FA0                     PIE2            equ	4000	;# 
  1552   000FA1                     PIR2            equ	4001	;# 
  1553   000FA2                     IPR2            equ	4002	;# 
  1554   000FA6                     EECON1          equ	4006	;# 
  1555   000FA7                     EECON2          equ	4007	;# 
  1556   000FA8                     EEDATA          equ	4008	;# 
  1557   000FA9                     EEADR           equ	4009	;# 
  1558   000FAB                     RCSTA           equ	4011	;# 
  1559   000FAB                     RCSTA1          equ	4011	;# 
  1560   000FAC                     TXSTA           equ	4012	;# 
  1561   000FAC                     TXSTA1          equ	4012	;# 
  1562   000FAD                     TXREG           equ	4013	;# 
  1563   000FAD                     TXREG1          equ	4013	;# 
  1564   000FAE                     RCREG           equ	4014	;# 
  1565   000FAE                     RCREG1          equ	4014	;# 
  1566   000FAF                     SPBRG           equ	4015	;# 
  1567   000FAF                     SPBRG1          equ	4015	;# 
  1568   000FB1                     T3CON           equ	4017	;# 
  1569   000FB2                     TMR3            equ	4018	;# 
  1570   000FB2                     TMR3L           equ	4018	;# 
  1571   000FB3                     TMR3H           equ	4019	;# 
  1572   000FBA                     CCP2CON         equ	4026	;# 
  1573   000FBB                     CCPR2           equ	4027	;# 
  1574   000FBB                     CCPR2L          equ	4027	;# 
  1575   000FBC                     CCPR2H          equ	4028	;# 
  1576   000FBD                     CCP1CON         equ	4029	;# 
  1577   000FBE                     CCPR1           equ	4030	;# 
  1578   000FBE                     CCPR1L          equ	4030	;# 
  1579   000FBF                     CCPR1H          equ	4031	;# 
  1580   000FC1                     ADCON1          equ	4033	;# 
  1581   000FC2                     ADCON0          equ	4034	;# 
  1582   000FC3                     ADRES           equ	4035	;# 
  1583   000FC3                     ADRESL          equ	4035	;# 
  1584   000FC4                     ADRESH          equ	4036	;# 
  1585   000FC5                     SSPCON2         equ	4037	;# 
  1586   000FC6                     SSPCON1         equ	4038	;# 
  1587   000FC7                     SSPSTAT         equ	4039	;# 
  1588   000FC8                     SSPADD          equ	4040	;# 
  1589   000FC9                     SSPBUF          equ	4041	;# 
  1590   000FCA                     T2CON           equ	4042	;# 
  1591   000FCB                     PR2             equ	4043	;# 
  1592   000FCB                     MEMCON          equ	4043	;# 
  1593   000FCC                     TMR2            equ	4044	;# 
  1594   000FCD                     T1CON           equ	4045	;# 
  1595   000FCE                     TMR1            equ	4046	;# 
  1596   000FCE                     TMR1L           equ	4046	;# 
  1597   000FCF                     TMR1H           equ	4047	;# 
  1598   000FD0                     RCON            equ	4048	;# 
  1599   000FD1                     WDTCON          equ	4049	;# 
  1600   000FD2                     LVDCON          equ	4050	;# 
  1601   000FD3                     OSCCON          equ	4051	;# 
  1602   000FD5                     T0CON           equ	4053	;# 
  1603   000FD6                     TMR0            equ	4054	;# 
  1604   000FD6                     TMR0L           equ	4054	;# 
  1605   000FD7                     TMR0H           equ	4055	;# 
  1606   000FD8                     STATUS          equ	4056	;# 
  1607   000FD9                     FSR2            equ	4057	;# 
  1608   000FD9                     FSR2L           equ	4057	;# 
  1609   000FDA                     FSR2H           equ	4058	;# 
  1610   000FDB                     PLUSW2          equ	4059	;# 
  1611   000FDC                     PREINC2         equ	4060	;# 
  1612   000FDD                     POSTDEC2        equ	4061	;# 
  1613   000FDE                     POSTINC2        equ	4062	;# 
  1614   000FDF                     INDF2           equ	4063	;# 
  1615   000FE0                     BSR             equ	4064	;# 
  1616   000FE1                     FSR1            equ	4065	;# 
  1617   000FE1                     FSR1L           equ	4065	;# 
  1618   000FE2                     FSR1H           equ	4066	;# 
  1619   000FE3                     PLUSW1          equ	4067	;# 
  1620   000FE4                     PREINC1         equ	4068	;# 
  1621   000FE5                     POSTDEC1        equ	4069	;# 
  1622   000FE6                     POSTINC1        equ	4070	;# 
  1623   000FE7                     INDF1           equ	4071	;# 
  1624   000FE8                     WREG            equ	4072	;# 
  1625   000FE9                     FSR0            equ	4073	;# 
  1626   000FE9                     FSR0L           equ	4073	;# 
  1627   000FEA                     FSR0H           equ	4074	;# 
  1628   000FEB                     PLUSW0          equ	4075	;# 
  1629   000FEC                     PREINC0         equ	4076	;# 
  1630   000FED                     POSTDEC0        equ	4077	;# 
  1631   000FEE                     POSTINC0        equ	4078	;# 
  1632   000FEF                     INDF0           equ	4079	;# 
  1633   000FF0                     INTCON3         equ	4080	;# 
  1634   000FF1                     INTCON2         equ	4081	;# 
  1635   000FF2                     INTCON          equ	4082	;# 
  1636   000FF2                     INTCON1         equ	4082	;# 
  1637   000FF3                     PROD            equ	4083	;# 
  1638   000FF3                     PRODL           equ	4083	;# 
  1639   000FF4                     PRODH           equ	4084	;# 
  1640   000FF5                     TABLAT          equ	4085	;# 
  1641   000FF6                     TBLPTR          equ	4086	;# 
  1642   000FF6                     TBLPTRL         equ	4086	;# 
  1643   000FF7                     TBLPTRH         equ	4087	;# 
  1644   000FF8                     TBLPTRU         equ	4088	;# 
  1645   000FF9                     PCLAT           equ	4089	;# 
  1646   000FF9                     PC              equ	4089	;# 
  1647   000FF9                     PCL             equ	4089	;# 
  1648   000FFA                     PCLATH          equ	4090	;# 
  1649   000FFB                     PCLATU          equ	4091	;# 
  1650   000FFC                     STKPTR          equ	4092	;# 
  1651   000FFD                     TOS             equ	4093	;# 
  1652   000FFD                     TOSL            equ	4093	;# 
  1653   000FFE                     TOSH            equ	4094	;# 
  1654   000FFF                     TOSU            equ	4095	;# 
  1655   000F80                     PORTA           equ	3968	;# 
  1656   000F81                     PORTB           equ	3969	;# 
  1657   000F82                     PORTC           equ	3970	;# 
  1658   000F83                     PORTD           equ	3971	;# 
  1659   000F84                     PORTE           equ	3972	;# 
  1660   000F89                     LATA            equ	3977	;# 
  1661   000F8A                     LATB            equ	3978	;# 
  1662   000F8B                     LATC            equ	3979	;# 
  1663   000F8C                     LATD            equ	3980	;# 
  1664   000F8D                     LATE            equ	3981	;# 
  1665   000F92                     TRISA           equ	3986	;# 
  1666   000F92                     DDRA            equ	3986	;# 
  1667   000F93                     TRISB           equ	3987	;# 
  1668   000F93                     DDRB            equ	3987	;# 
  1669   000F94                     TRISC           equ	3988	;# 
  1670   000F94                     DDRC            equ	3988	;# 
  1671   000F95                     TRISD           equ	3989	;# 
  1672   000F95                     DDRD            equ	3989	;# 
  1673   000F96                     TRISE           equ	3990	;# 
  1674   000F96                     DDRE            equ	3990	;# 
  1675   000F9D                     PIE1            equ	3997	;# 
  1676   000F9E                     PIR1            equ	3998	;# 
  1677   000F9F                     IPR1            equ	3999	;# 
  1678   000FA0                     PIE2            equ	4000	;# 
  1679   000FA1                     PIR2            equ	4001	;# 
  1680   000FA2                     IPR2            equ	4002	;# 
  1681   000FA6                     EECON1          equ	4006	;# 
  1682   000FA7                     EECON2          equ	4007	;# 
  1683   000FA8                     EEDATA          equ	4008	;# 
  1684   000FA9                     EEADR           equ	4009	;# 
  1685   000FAB                     RCSTA           equ	4011	;# 
  1686   000FAB                     RCSTA1          equ	4011	;# 
  1687   000FAC                     TXSTA           equ	4012	;# 
  1688   000FAC                     TXSTA1          equ	4012	;# 
  1689   000FAD                     TXREG           equ	4013	;# 
  1690   000FAD                     TXREG1          equ	4013	;# 
  1691   000FAE                     RCREG           equ	4014	;# 
  1692   000FAE                     RCREG1          equ	4014	;# 
  1693   000FAF                     SPBRG           equ	4015	;# 
  1694   000FAF                     SPBRG1          equ	4015	;# 
  1695   000FB1                     T3CON           equ	4017	;# 
  1696   000FB2                     TMR3            equ	4018	;# 
  1697   000FB2                     TMR3L           equ	4018	;# 
  1698   000FB3                     TMR3H           equ	4019	;# 
  1699   000FBA                     CCP2CON         equ	4026	;# 
  1700   000FBB                     CCPR2           equ	4027	;# 
  1701   000FBB                     CCPR2L          equ	4027	;# 
  1702   000FBC                     CCPR2H          equ	4028	;# 
  1703   000FBD                     CCP1CON         equ	4029	;# 
  1704   000FBE                     CCPR1           equ	4030	;# 
  1705   000FBE                     CCPR1L          equ	4030	;# 
  1706   000FBF                     CCPR1H          equ	4031	;# 
  1707   000FC1                     ADCON1          equ	4033	;# 
  1708   000FC2                     ADCON0          equ	4034	;# 
  1709   000FC3                     ADRES           equ	4035	;# 
  1710   000FC3                     ADRESL          equ	4035	;# 
  1711   000FC4                     ADRESH          equ	4036	;# 
  1712   000FC5                     SSPCON2         equ	4037	;# 
  1713   000FC6                     SSPCON1         equ	4038	;# 
  1714   000FC7                     SSPSTAT         equ	4039	;# 
  1715   000FC8                     SSPADD          equ	4040	;# 
  1716   000FC9                     SSPBUF          equ	4041	;# 
  1717   000FCA                     T2CON           equ	4042	;# 
  1718   000FCB                     PR2             equ	4043	;# 
  1719   000FCB                     MEMCON          equ	4043	;# 
  1720   000FCC                     TMR2            equ	4044	;# 
  1721   000FCD                     T1CON           equ	4045	;# 
  1722   000FCE                     TMR1            equ	4046	;# 
  1723   000FCE                     TMR1L           equ	4046	;# 
  1724   000FCF                     TMR1H           equ	4047	;# 
  1725   000FD0                     RCON            equ	4048	;# 
  1726   000FD1                     WDTCON          equ	4049	;# 
  1727   000FD2                     LVDCON          equ	4050	;# 
  1728   000FD3                     OSCCON          equ	4051	;# 
  1729   000FD5                     T0CON           equ	4053	;# 
  1730   000FD6                     TMR0            equ	4054	;# 
  1731   000FD6                     TMR0L           equ	4054	;# 
  1732   000FD7                     TMR0H           equ	4055	;# 
  1733   000FD8                     STATUS          equ	4056	;# 
  1734   000FD9                     FSR2            equ	4057	;# 
  1735   000FD9                     FSR2L           equ	4057	;# 
  1736   000FDA                     FSR2H           equ	4058	;# 
  1737   000FDB                     PLUSW2          equ	4059	;# 
  1738   000FDC                     PREINC2         equ	4060	;# 
  1739   000FDD                     POSTDEC2        equ	4061	;# 
  1740   000FDE                     POSTINC2        equ	4062	;# 
  1741   000FDF                     INDF2           equ	4063	;# 
  1742   000FE0                     BSR             equ	4064	;# 
  1743   000FE1                     FSR1            equ	4065	;# 
  1744   000FE1                     FSR1L           equ	4065	;# 
  1745   000FE2                     FSR1H           equ	4066	;# 
  1746   000FE3                     PLUSW1          equ	4067	;# 
  1747   000FE4                     PREINC1         equ	4068	;# 
  1748   000FE5                     POSTDEC1        equ	4069	;# 
  1749   000FE6                     POSTINC1        equ	4070	;# 
  1750   000FE7                     INDF1           equ	4071	;# 
  1751   000FE8                     WREG            equ	4072	;# 
  1752   000FE9                     FSR0            equ	4073	;# 
  1753   000FE9                     FSR0L           equ	4073	;# 
  1754   000FEA                     FSR0H           equ	4074	;# 
  1755   000FEB                     PLUSW0          equ	4075	;# 
  1756   000FEC                     PREINC0         equ	4076	;# 
  1757   000FED                     POSTDEC0        equ	4077	;# 
  1758   000FEE                     POSTINC0        equ	4078	;# 
  1759   000FEF                     INDF0           equ	4079	;# 
  1760   000FF0                     INTCON3         equ	4080	;# 
  1761   000FF1                     INTCON2         equ	4081	;# 
  1762   000FF2                     INTCON          equ	4082	;# 
  1763   000FF2                     INTCON1         equ	4082	;# 
  1764   000FF3                     PROD            equ	4083	;# 
  1765   000FF3                     PRODL           equ	4083	;# 
  1766   000FF4                     PRODH           equ	4084	;# 
  1767   000FF5                     TABLAT          equ	4085	;# 
  1768   000FF6                     TBLPTR          equ	4086	;# 
  1769   000FF6                     TBLPTRL         equ	4086	;# 
  1770   000FF7                     TBLPTRH         equ	4087	;# 
  1771   000FF8                     TBLPTRU         equ	4088	;# 
  1772   000FF9                     PCLAT           equ	4089	;# 
  1773   000FF9                     PC              equ	4089	;# 
  1774   000FF9                     PCL             equ	4089	;# 
  1775   000FFA                     PCLATH          equ	4090	;# 
  1776   000FFB                     PCLATU          equ	4091	;# 
  1777   000FFC                     STKPTR          equ	4092	;# 
  1778   000FFD                     TOS             equ	4093	;# 
  1779   000FFD                     TOSL            equ	4093	;# 
  1780   000FFE                     TOSH            equ	4094	;# 
  1781   000FFF                     TOSU            equ	4095	;# 
  1782   000F80                     PORTA           equ	3968	;# 
  1783   000F81                     PORTB           equ	3969	;# 
  1784   000F82                     PORTC           equ	3970	;# 
  1785   000F83                     PORTD           equ	3971	;# 
  1786   000F84                     PORTE           equ	3972	;# 
  1787   000F89                     LATA            equ	3977	;# 
  1788   000F8A                     LATB            equ	3978	;# 
  1789   000F8B                     LATC            equ	3979	;# 
  1790   000F8C                     LATD            equ	3980	;# 
  1791   000F8D                     LATE            equ	3981	;# 
  1792   000F92                     TRISA           equ	3986	;# 
  1793   000F92                     DDRA            equ	3986	;# 
  1794   000F93                     TRISB           equ	3987	;# 
  1795   000F93                     DDRB            equ	3987	;# 
  1796   000F94                     TRISC           equ	3988	;# 
  1797   000F94                     DDRC            equ	3988	;# 
  1798   000F95                     TRISD           equ	3989	;# 
  1799   000F95                     DDRD            equ	3989	;# 
  1800   000F96                     TRISE           equ	3990	;# 
  1801   000F96                     DDRE            equ	3990	;# 
  1802   000F9D                     PIE1            equ	3997	;# 
  1803   000F9E                     PIR1            equ	3998	;# 
  1804   000F9F                     IPR1            equ	3999	;# 
  1805   000FA0                     PIE2            equ	4000	;# 
  1806   000FA1                     PIR2            equ	4001	;# 
  1807   000FA2                     IPR2            equ	4002	;# 
  1808   000FA6                     EECON1          equ	4006	;# 
  1809   000FA7                     EECON2          equ	4007	;# 
  1810   000FA8                     EEDATA          equ	4008	;# 
  1811   000FA9                     EEADR           equ	4009	;# 
  1812   000FAB                     RCSTA           equ	4011	;# 
  1813   000FAB                     RCSTA1          equ	4011	;# 
  1814   000FAC                     TXSTA           equ	4012	;# 
  1815   000FAC                     TXSTA1          equ	4012	;# 
  1816   000FAD                     TXREG           equ	4013	;# 
  1817   000FAD                     TXREG1          equ	4013	;# 
  1818   000FAE                     RCREG           equ	4014	;# 
  1819   000FAE                     RCREG1          equ	4014	;# 
  1820   000FAF                     SPBRG           equ	4015	;# 
  1821   000FAF                     SPBRG1          equ	4015	;# 
  1822   000FB1                     T3CON           equ	4017	;# 
  1823   000FB2                     TMR3            equ	4018	;# 
  1824   000FB2                     TMR3L           equ	4018	;# 
  1825   000FB3                     TMR3H           equ	4019	;# 
  1826   000FBA                     CCP2CON         equ	4026	;# 
  1827   000FBB                     CCPR2           equ	4027	;# 
  1828   000FBB                     CCPR2L          equ	4027	;# 
  1829   000FBC                     CCPR2H          equ	4028	;# 
  1830   000FBD                     CCP1CON         equ	4029	;# 
  1831   000FBE                     CCPR1           equ	4030	;# 
  1832   000FBE                     CCPR1L          equ	4030	;# 
  1833   000FBF                     CCPR1H          equ	4031	;# 
  1834   000FC1                     ADCON1          equ	4033	;# 
  1835   000FC2                     ADCON0          equ	4034	;# 
  1836   000FC3                     ADRES           equ	4035	;# 
  1837   000FC3                     ADRESL          equ	4035	;# 
  1838   000FC4                     ADRESH          equ	4036	;# 
  1839   000FC5                     SSPCON2         equ	4037	;# 
  1840   000FC6                     SSPCON1         equ	4038	;# 
  1841   000FC7                     SSPSTAT         equ	4039	;# 
  1842   000FC8                     SSPADD          equ	4040	;# 
  1843   000FC9                     SSPBUF          equ	4041	;# 
  1844   000FCA                     T2CON           equ	4042	;# 
  1845   000FCB                     PR2             equ	4043	;# 
  1846   000FCB                     MEMCON          equ	4043	;# 
  1847   000FCC                     TMR2            equ	4044	;# 
  1848   000FCD                     T1CON           equ	4045	;# 
  1849   000FCE                     TMR1            equ	4046	;# 
  1850   000FCE                     TMR1L           equ	4046	;# 
  1851   000FCF                     TMR1H           equ	4047	;# 
  1852   000FD0                     RCON            equ	4048	;# 
  1853   000FD1                     WDTCON          equ	4049	;# 
  1854   000FD2                     LVDCON          equ	4050	;# 
  1855   000FD3                     OSCCON          equ	4051	;# 
  1856   000FD5                     T0CON           equ	4053	;# 
  1857   000FD6                     TMR0            equ	4054	;# 
  1858   000FD6                     TMR0L           equ	4054	;# 
  1859   000FD7                     TMR0H           equ	4055	;# 
  1860   000FD8                     STATUS          equ	4056	;# 
  1861   000FD9                     FSR2            equ	4057	;# 
  1862   000FD9                     FSR2L           equ	4057	;# 
  1863   000FDA                     FSR2H           equ	4058	;# 
  1864   000FDB                     PLUSW2          equ	4059	;# 
  1865   000FDC                     PREINC2         equ	4060	;# 
  1866   000FDD                     POSTDEC2        equ	4061	;# 
  1867   000FDE                     POSTINC2        equ	4062	;# 
  1868   000FDF                     INDF2           equ	4063	;# 
  1869   000FE0                     BSR             equ	4064	;# 
  1870   000FE1                     FSR1            equ	4065	;# 
  1871   000FE1                     FSR1L           equ	4065	;# 
  1872   000FE2                     FSR1H           equ	4066	;# 
  1873   000FE3                     PLUSW1          equ	4067	;# 
  1874   000FE4                     PREINC1         equ	4068	;# 
  1875   000FE5                     POSTDEC1        equ	4069	;# 
  1876   000FE6                     POSTINC1        equ	4070	;# 
  1877   000FE7                     INDF1           equ	4071	;# 
  1878   000FE8                     WREG            equ	4072	;# 
  1879   000FE9                     FSR0            equ	4073	;# 
  1880   000FE9                     FSR0L           equ	4073	;# 
  1881   000FEA                     FSR0H           equ	4074	;# 
  1882   000FEB                     PLUSW0          equ	4075	;# 
  1883   000FEC                     PREINC0         equ	4076	;# 
  1884   000FED                     POSTDEC0        equ	4077	;# 
  1885   000FEE                     POSTINC0        equ	4078	;# 
  1886   000FEF                     INDF0           equ	4079	;# 
  1887   000FF0                     INTCON3         equ	4080	;# 
  1888   000FF1                     INTCON2         equ	4081	;# 
  1889   000FF2                     INTCON          equ	4082	;# 
  1890   000FF2                     INTCON1         equ	4082	;# 
  1891   000FF3                     PROD            equ	4083	;# 
  1892   000FF3                     PRODL           equ	4083	;# 
  1893   000FF4                     PRODH           equ	4084	;# 
  1894   000FF5                     TABLAT          equ	4085	;# 
  1895   000FF6                     TBLPTR          equ	4086	;# 
  1896   000FF6                     TBLPTRL         equ	4086	;# 
  1897   000FF7                     TBLPTRH         equ	4087	;# 
  1898   000FF8                     TBLPTRU         equ	4088	;# 
  1899   000FF9                     PCLAT           equ	4089	;# 
  1900   000FF9                     PC              equ	4089	;# 
  1901   000FF9                     PCL             equ	4089	;# 
  1902   000FFA                     PCLATH          equ	4090	;# 
  1903   000FFB                     PCLATU          equ	4091	;# 
  1904   000FFC                     STKPTR          equ	4092	;# 
  1905   000FFD                     TOS             equ	4093	;# 
  1906   000FFD                     TOSL            equ	4093	;# 
  1907   000FFE                     TOSH            equ	4094	;# 
  1908   000FFF                     TOSU            equ	4095	;# 
  1909   000F80                     PORTA           equ	3968	;# 
  1910   000F81                     PORTB           equ	3969	;# 
  1911   000F82                     PORTC           equ	3970	;# 
  1912   000F83                     PORTD           equ	3971	;# 
  1913   000F84                     PORTE           equ	3972	;# 
  1914   000F89                     LATA            equ	3977	;# 
  1915   000F8A                     LATB            equ	3978	;# 
  1916   000F8B                     LATC            equ	3979	;# 
  1917   000F8C                     LATD            equ	3980	;# 
  1918   000F8D                     LATE            equ	3981	;# 
  1919   000F92                     TRISA           equ	3986	;# 
  1920   000F92                     DDRA            equ	3986	;# 
  1921   000F93                     TRISB           equ	3987	;# 
  1922   000F93                     DDRB            equ	3987	;# 
  1923   000F94                     TRISC           equ	3988	;# 
  1924   000F94                     DDRC            equ	3988	;# 
  1925   000F95                     TRISD           equ	3989	;# 
  1926   000F95                     DDRD            equ	3989	;# 
  1927   000F96                     TRISE           equ	3990	;# 
  1928   000F96                     DDRE            equ	3990	;# 
  1929   000F9D                     PIE1            equ	3997	;# 
  1930   000F9E                     PIR1            equ	3998	;# 
  1931   000F9F                     IPR1            equ	3999	;# 
  1932   000FA0                     PIE2            equ	4000	;# 
  1933   000FA1                     PIR2            equ	4001	;# 
  1934   000FA2                     IPR2            equ	4002	;# 
  1935   000FA6                     EECON1          equ	4006	;# 
  1936   000FA7                     EECON2          equ	4007	;# 
  1937   000FA8                     EEDATA          equ	4008	;# 
  1938   000FA9                     EEADR           equ	4009	;# 
  1939   000FAB                     RCSTA           equ	4011	;# 
  1940   000FAB                     RCSTA1          equ	4011	;# 
  1941   000FAC                     TXSTA           equ	4012	;# 
  1942   000FAC                     TXSTA1          equ	4012	;# 
  1943   000FAD                     TXREG           equ	4013	;# 
  1944   000FAD                     TXREG1          equ	4013	;# 
  1945   000FAE                     RCREG           equ	4014	;# 
  1946   000FAE                     RCREG1          equ	4014	;# 
  1947   000FAF                     SPBRG           equ	4015	;# 
  1948   000FAF                     SPBRG1          equ	4015	;# 
  1949   000FB1                     T3CON           equ	4017	;# 
  1950   000FB2                     TMR3            equ	4018	;# 
  1951   000FB2                     TMR3L           equ	4018	;# 
  1952   000FB3                     TMR3H           equ	4019	;# 
  1953   000FBA                     CCP2CON         equ	4026	;# 
  1954   000FBB                     CCPR2           equ	4027	;# 
  1955   000FBB                     CCPR2L          equ	4027	;# 
  1956   000FBC                     CCPR2H          equ	4028	;# 
  1957   000FBD                     CCP1CON         equ	4029	;# 
  1958   000FBE                     CCPR1           equ	4030	;# 
  1959   000FBE                     CCPR1L          equ	4030	;# 
  1960   000FBF                     CCPR1H          equ	4031	;# 
  1961   000FC1                     ADCON1          equ	4033	;# 
  1962   000FC2                     ADCON0          equ	4034	;# 
  1963   000FC3                     ADRES           equ	4035	;# 
  1964   000FC3                     ADRESL          equ	4035	;# 
  1965   000FC4                     ADRESH          equ	4036	;# 
  1966   000FC5                     SSPCON2         equ	4037	;# 
  1967   000FC6                     SSPCON1         equ	4038	;# 
  1968   000FC7                     SSPSTAT         equ	4039	;# 
  1969   000FC8                     SSPADD          equ	4040	;# 
  1970   000FC9                     SSPBUF          equ	4041	;# 
  1971   000FCA                     T2CON           equ	4042	;# 
  1972   000FCB                     PR2             equ	4043	;# 
  1973   000FCB                     MEMCON          equ	4043	;# 
  1974   000FCC                     TMR2            equ	4044	;# 
  1975   000FCD                     T1CON           equ	4045	;# 
  1976   000FCE                     TMR1            equ	4046	;# 
  1977   000FCE                     TMR1L           equ	4046	;# 
  1978   000FCF                     TMR1H           equ	4047	;# 
  1979   000FD0                     RCON            equ	4048	;# 
  1980   000FD1                     WDTCON          equ	4049	;# 
  1981   000FD2                     LVDCON          equ	4050	;# 
  1982   000FD3                     OSCCON          equ	4051	;# 
  1983   000FD5                     T0CON           equ	4053	;# 
  1984   000FD6                     TMR0            equ	4054	;# 
  1985   000FD6                     TMR0L           equ	4054	;# 
  1986   000FD7                     TMR0H           equ	4055	;# 
  1987   000FD8                     STATUS          equ	4056	;# 
  1988   000FD9                     FSR2            equ	4057	;# 
  1989   000FD9                     FSR2L           equ	4057	;# 
  1990   000FDA                     FSR2H           equ	4058	;# 
  1991   000FDB                     PLUSW2          equ	4059	;# 
  1992   000FDC                     PREINC2         equ	4060	;# 
  1993   000FDD                     POSTDEC2        equ	4061	;# 
  1994   000FDE                     POSTINC2        equ	4062	;# 
  1995   000FDF                     INDF2           equ	4063	;# 
  1996   000FE0                     BSR             equ	4064	;# 
  1997   000FE1                     FSR1            equ	4065	;# 
  1998   000FE1                     FSR1L           equ	4065	;# 
  1999   000FE2                     FSR1H           equ	4066	;# 
  2000   000FE3                     PLUSW1          equ	4067	;# 
  2001   000FE4                     PREINC1         equ	4068	;# 
  2002   000FE5                     POSTDEC1        equ	4069	;# 
  2003   000FE6                     POSTINC1        equ	4070	;# 
  2004   000FE7                     INDF1           equ	4071	;# 
  2005   000FE8                     WREG            equ	4072	;# 
  2006   000FE9                     FSR0            equ	4073	;# 
  2007   000FE9                     FSR0L           equ	4073	;# 
  2008   000FEA                     FSR0H           equ	4074	;# 
  2009   000FEB                     PLUSW0          equ	4075	;# 
  2010   000FEC                     PREINC0         equ	4076	;# 
  2011   000FED                     POSTDEC0        equ	4077	;# 
  2012   000FEE                     POSTINC0        equ	4078	;# 
  2013   000FEF                     INDF0           equ	4079	;# 
  2014   000FF0                     INTCON3         equ	4080	;# 
  2015   000FF1                     INTCON2         equ	4081	;# 
  2016   000FF2                     INTCON          equ	4082	;# 
  2017   000FF2                     INTCON1         equ	4082	;# 
  2018   000FF3                     PROD            equ	4083	;# 
  2019   000FF3                     PRODL           equ	4083	;# 
  2020   000FF4                     PRODH           equ	4084	;# 
  2021   000FF5                     TABLAT          equ	4085	;# 
  2022   000FF6                     TBLPTR          equ	4086	;# 
  2023   000FF6                     TBLPTRL         equ	4086	;# 
  2024   000FF7                     TBLPTRH         equ	4087	;# 
  2025   000FF8                     TBLPTRU         equ	4088	;# 
  2026   000FF9                     PCLAT           equ	4089	;# 
  2027   000FF9                     PC              equ	4089	;# 
  2028   000FF9                     PCL             equ	4089	;# 
  2029   000FFA                     PCLATH          equ	4090	;# 
  2030   000FFB                     PCLATU          equ	4091	;# 
  2031   000FFC                     STKPTR          equ	4092	;# 
  2032   000FFD                     TOS             equ	4093	;# 
  2033   000FFD                     TOSL            equ	4093	;# 
  2034   000FFE                     TOSH            equ	4094	;# 
  2035   000FFF                     TOSU            equ	4095	;# 
  2036                           
  2037                           	psect	idataCOMRAM
  2038   0012E2                     __pidataCOMRAM:
  2039                           	callstack 0
  2040                           
  2041                           ;initializer for __LAT_registers
  2042   0012E2  89                 	db	137
  2043   0012E3  0F                 	db	15
  2044   0012E4  8A                 	db	138
  2045   0012E5  0F                 	db	15
  2046   0012E6  8B                 	db	139
  2047   0012E7  0F                 	db	15
  2048   0012E8  8C                 	db	140
  2049   0012E9  0F                 	db	15
  2050   0012EA  8D                 	db	141
  2051   0012EB  0F                 	db	15
  2052                           
  2053                           ;initializer for __TRIS_registers
  2054   0012EC  92                 	db	146
  2055   0012ED  0F                 	db	15
  2056   0012EE  93                 	db	147
  2057   0012EF  0F                 	db	15
  2058   0012F0  94                 	db	148
  2059   0012F1  0F                 	db	15
  2060   0012F2  95                 	db	149
  2061   0012F3  0F                 	db	15
  2062   0012F4  96                 	db	150
  2063   0012F5  0F                 	db	15
  2064                           
  2065                           ;initializer for _segment1
  2066   0012F6  00                 	db	0
  2067   0012F7  08                 	db	8
  2068   0012F8  10                 	db	16
  2069   0012F9  18                 	db	24
  2070   0012FA  00                 	db	0
  2071                           
  2072                           ;initializer for _led_arr
  2073   0012FB  00                 	db	0
  2074   0012FC  08                 	db	8
  2075   0012FD  10                 	db	16
  2076   0012FE  18                 	db	24
  2077                           
  2078                           ;initializer for _btn2
  2079   0012FF  4C                 	db	76
  2080   001300  01                 	db	1
  2081   001301  00                 	db	0
  2082                           
  2083                           ;initializer for _btn1
  2084   001302  E0                 	db	224
  2085   001303  01                 	db	1
  2086   001304  01                 	db	1
  2087                           
  2088                           ;initializer for _motor2
  2089   001305  7C                 	db	124
  2090   001306  4A                 	db	74
  2091                           
  2092                           ;initializer for _motor1
  2093   001307  08                 	db	8
  2094   001308  10                 	db	16
  2095                           
  2096                           ;initializer for _RB7f
  2097   001309  01                 	db	1
  2098                           
  2099                           ;initializer for _RB6f
  2100   00130A  01                 	db	1
  2101                           
  2102                           ;initializer for _RB5f
  2103   00130B  01                 	db	1
  2104                           
  2105                           ;initializer for _RB4f
  2106   00130C  01                 	db	1
  2107                           
  2108                           ;initializer for _relay1
  2109   00130D  08                 	db	8
  2110                           
  2111                           ;initializer for _LED_INT_LOWPR
  2112   00130E  03                 	db	3
  2113                           
  2114                           ;initializer for _LED_INT_HIGHPR
  2115   00130F  0B                 	db	11
  2116                           
  2117                           ;initializer for _LED_main
  2118   001310  13                 	db	19
  2119                           
  2120                           	psect	idataBANK0
  2121   001366                     __pidataBANK0:
  2122                           	callstack 0
  2123                           
  2124                           ;initializer for _LCD1
  2125   001366  93                 	db	147
  2126   001367  9B                 	db	155
  2127   001368  01                 	db	1
  2128   001369  A2                 	db	162
  2129   00136A  AA                 	db	170
  2130   00136B  B2                 	db	178
  2131   00136C  BA                 	db	186
  2132   00136D  A3                 	db	163
  2133   00136E  AB                 	db	171
  2134   00136F  B3                 	db	179
  2135   001370  BB                 	db	187
  2136                           
  2137                           ;initializer for __PORT_registers
  2138   001371  80                 	db	128
  2139   001372  0F                 	db	15
  2140   001373  81                 	db	129
  2141   001374  0F                 	db	15
  2142   001375  82                 	db	130
  2143   001376  0F                 	db	15
  2144   001377  83                 	db	131
  2145   001378  0F                 	db	15
  2146   001379  84                 	db	132
  2147   00137A  0F                 	db	15
  2148                           
  2149                           ;initializer for _keypad1
  2150   00137B  21                 	db	33
  2151   00137C  19                 	db	25
  2152   00137D  11                 	db	17
  2153   00137E  09                 	db	9
  2154   00137F  2B                 	db	43
  2155   001380  23                 	db	35
  2156   001381  1B                 	db	27
  2157   001382  13                 	db	19
  2158   001383  00                 	db	0
  2159                           
  2160                           ;initializer for _ADC1
  2161   001384  8A                 	db	low ___ADC
  2162   001385  13                 	db	high ___ADC
  2163   001386  00                 	db	0
  2164   001387  01                 	db	1
  2165   001388  02                 	db	2
  2166   001389  01                 	db	1
  2167                           
  2168                           	psect	smallconst
  2169   000600                     __psmallconst:
  2170                           	callstack 0
  2171   000600  00                 	db	0
  2172   000601                     _keypad_elements:
  2173                           	callstack 0
  2174   000601  31                 	db	49
  2175   000602  32                 	db	50
  2176   000603  33                 	db	51
  2177   000604  41                 	db	65
  2178   000605  34                 	db	52
  2179   000606  35                 	db	53
  2180   000607  36                 	db	54
  2181   000608  42                 	db	66
  2182   000609  37                 	db	55
  2183   00060A  38                 	db	56
  2184   00060B  39                 	db	57
  2185   00060C  43                 	db	67
  2186   00060D  2A                 	db	42
  2187   00060E  30                 	db	48
  2188   00060F  23                 	db	35
  2189   000610  44                 	db	68
  2190   000611                     __end_of_keypad_elements:
  2191                           	callstack 0
  2192   000611                     STR_1:
  2193   000611  25                 	db	37
  2194   000612  69                 	db	105	;'i'
  2195   000613  00                 	db	0
  2196   000611                     STR_2           equ	STR_1
  2197   000611                     STR_3           equ	STR_1
  2198   000614  00                 	db	0	; dummy byte at the end
  2199   000600                     __smallconst    set	__psmallconst
  2200   000600                     __mediumconst   set	__psmallconst
  2201   000002                     __activetblptr  equ	2
  2202                           
  2203                           	psect	nvCOMRAM
  2204   00006D                     __pnvCOMRAM:
  2205                           	callstack 0
  2206   00006D                     _ret:
  2207                           	callstack 0
  2208   00006D                     	ds	1
  2209   000F81                     _PORTBbits      set	3969
  2210   000FF1                     _INTCON2bits    set	4081
  2211   000FF0                     _INTCON3bits    set	4080
  2212   000F9F                     _IPR1bits       set	3999
  2213   000FD0                     _RCONbits       set	4048
  2214   000F9D                     _PIE1bits       set	3997
  2215   000F9E                     _PIR1bits       set	3998
  2216   000FA7                     _EECON2         set	4007
  2217   000FF2                     _INTCONbits     set	4082
  2218   000FF2                     _INTCON1bits    set	4082
  2219   000FA8                     _EEDATA         set	4008
  2220   000FA6                     _EECON1bits     set	4006
  2221   000FA9                     _EEADR          set	4009
  2222   000F96                     _TRISEbits      set	3990
  2223   000F92                     _TRISAbits      set	3986
  2224   000FC3                     _ADRESL         set	4035
  2225   000FC4                     _ADRESH         set	4036
  2226   000FC1                     _ADCON1bits     set	4033
  2227   000FC2                     _ADCON0bits     set	4034
  2228   000F84                     _PORTE          set	3972
  2229   000F83                     _PORTD          set	3971
  2230   000F82                     _PORTC          set	3970
  2231   000F81                     _PORTB          set	3969
  2232   000F80                     _PORTA          set	3968
  2233   000F8D                     _LATE           set	3981
  2234   000F8C                     _LATD           set	3980
  2235   000F8B                     _LATC           set	3979
  2236   000F8A                     _LATB           set	3978
  2237   000F89                     _LATA           set	3977
  2238   000F96                     _TRISE          set	3990
  2239   000F95                     _TRISD          set	3989
  2240   000F94                     _TRISC          set	3988
  2241   000F93                     _TRISB          set	3987
  2242   000F92                     _TRISA          set	3986
  2243                           
  2244                           ; #config settings
  2245                           
  2246                           	psect	cinit
  2247   0010FA                     __pcinit:
  2248                           	callstack 0
  2249   0010FA                     start_initialization:
  2250                           	callstack 0
  2251   0010FA                     __initialization:
  2252                           	callstack 0
  2253                           
  2254                           ; Initialize objects allocated to BANK0 (36 bytes)
  2255                           ; load TBLPTR registers with __pidataBANK0
  2256   0010FA  0E66               	movlw	low __pidataBANK0
  2257   0010FC  6EF6               	movwf	tblptrl,c
  2258   0010FE  0E13               	movlw	high __pidataBANK0
  2259   001100  6EF7               	movwf	tblptrh,c
  2260   001102  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2261   001104  6EF8               	movwf	tblptru,c
  2262   001106  EE00  F080         	lfsr	0,__pdataBANK0
  2263   00110A  EE10 F024          	lfsr	1,36
  2264   00110E                     copy_data0:
  2265   00110E  0009               	tblrd		*+
  2266   001110  CFF5 FFEE          	movff	tablat,postinc0
  2267   001114  50E5               	movf	postdec1,w,c
  2268   001116  50E1               	movf	fsr1l,w,c
  2269   001118  E1FA               	bnz	copy_data0
  2270                           
  2271                           ; Initialize objects allocated to COMRAM (47 bytes)
  2272                           ; load TBLPTR registers with __pidataCOMRAM
  2273   00111A  0EE2               	movlw	low __pidataCOMRAM
  2274   00111C  6EF6               	movwf	tblptrl,c
  2275   00111E  0E12               	movlw	high __pidataCOMRAM
  2276   001120  6EF7               	movwf	tblptrh,c
  2277   001122  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2278   001124  6EF8               	movwf	tblptru,c
  2279   001126  EE00  F001         	lfsr	0,__pdataCOMRAM
  2280   00112A  EE10 F02F          	lfsr	1,47
  2281   00112E                     copy_data1:
  2282   00112E  0009               	tblrd		*+
  2283   001130  CFF5 FFEE          	movff	tablat,postinc0
  2284   001134  50E5               	movf	postdec1,w,c
  2285   001136  50E1               	movf	fsr1l,w,c
  2286   001138  E1FA               	bnz	copy_data1
  2287                           
  2288                           ; Clear objects allocated to COMRAM (36 bytes)
  2289   00113A  EE00  F030         	lfsr	0,__pbssCOMRAM
  2290   00113E  0E24               	movlw	36
  2291   001140                     clear_0:
  2292   001140  6AEE               	clrf	postinc0,c
  2293   001142  06E8               	decf	wreg,f,c
  2294   001144  E1FD               	bnz	clear_0
  2295   001146                     end_of_initialization:
  2296                           	callstack 0
  2297   001146                     __end_of__initialization:
  2298                           	callstack 0
  2299   001146  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2300   001148  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2301   00114A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2302   00114C  6EF8               	movwf	tblptru,c
  2303   00114E  0100               	movlb	0
  2304   001150  EFAA  F008         	goto	_main	;jump to C main() function
  2305                           
  2306                           	psect	bssCOMRAM
  2307   000030                     __pbssCOMRAM:
  2308                           	callstack 0
  2309   000030                     _errno:
  2310                           	callstack 0
  2311   000030                     	ds	2
  2312   000032                     _RB7_handler_low:
  2313                           	callstack 0
  2314   000032                     	ds	2
  2315   000034                     _RB7_handler_high:
  2316                           	callstack 0
  2317   000034                     	ds	2
  2318   000036                     _RB6_handler_low:
  2319                           	callstack 0
  2320   000036                     	ds	2
  2321   000038                     _RB6_handler_high:
  2322                           	callstack 0
  2323   000038                     	ds	2
  2324   00003A                     _RB5_handler_low:
  2325                           	callstack 0
  2326   00003A                     	ds	2
  2327   00003C                     _RB5_handler_high:
  2328                           	callstack 0
  2329   00003C                     	ds	2
  2330   00003E                     _RB4_handler_high:
  2331                           	callstack 0
  2332   00003E                     	ds	2
  2333   000040                     _RB4_handler_low:
  2334                           	callstack 0
  2335   000040                     	ds	2
  2336   000042                     _INT2_handler:
  2337                           	callstack 0
  2338   000042                     	ds	2
  2339   000044                     _INT1_handler:
  2340                           	callstack 0
  2341   000044                     	ds	2
  2342   000046                     _INT0_handler:
  2343                           	callstack 0
  2344   000046                     	ds	2
  2345   000048                     _ADC_callback:
  2346                           	callstack 0
  2347   000048                     	ds	2
  2348   00004A                     _Iflag:
  2349                           	callstack 0
  2350   00004A                     	ds	1
  2351   00004B                     relay_turn_off@F2875:
  2352                           	callstack 0
  2353   00004B                     	ds	1
  2354   00004C                     relay_turn_on@F2870:
  2355                           	callstack 0
  2356   00004C                     	ds	1
  2357   00004D                     relay_initialize@F2865:
  2358                           	callstack 0
  2359   00004D                     	ds	1
  2360   00004E                     LED_toggle@F2885:
  2361                           	callstack 0
  2362   00004E                     	ds	1
  2363   00004F                     LED_off@F2880:
  2364                           	callstack 0
  2365   00004F                     	ds	1
  2366   000050                     LED_on@F2875:
  2367                           	callstack 0
  2368   000050                     	ds	1
  2369   000051                     LED_initialize@F2870:
  2370                           	callstack 0
  2371   000051                     	ds	1
  2372   000052                     _ADC_output:
  2373                           	callstack 0
  2374   000052                     	ds	2
  2375                           
  2376                           	psect	dataCOMRAM
  2377   000001                     __pdataCOMRAM:
  2378                           	callstack 0
  2379   000001                     __LAT_registers:
  2380                           	callstack 0
  2381   000001                     	ds	10
  2382   00000B                     __TRIS_registers:
  2383                           	callstack 0
  2384   00000B                     	ds	10
  2385   000015                     _segment1:
  2386                           	callstack 0
  2387   000015                     	ds	5
  2388   00001A                     _led_arr:
  2389                           	callstack 0
  2390   00001A                     	ds	4
  2391   00001E                     _btn2:
  2392                           	callstack 0
  2393   00001E                     	ds	3
  2394   000021                     _btn1:
  2395                           	callstack 0
  2396   000021                     	ds	3
  2397   000024                     _motor2:
  2398                           	callstack 0
  2399   000024                     	ds	2
  2400   000026                     _motor1:
  2401                           	callstack 0
  2402   000026                     	ds	2
  2403   000028                     _RB7f:
  2404                           	callstack 0
  2405   000028                     	ds	1
  2406   000029                     _RB6f:
  2407                           	callstack 0
  2408   000029                     	ds	1
  2409   00002A                     _RB5f:
  2410                           	callstack 0
  2411   00002A                     	ds	1
  2412   00002B                     _RB4f:
  2413                           	callstack 0
  2414   00002B                     	ds	1
  2415   00002C                     _relay1:
  2416                           	callstack 0
  2417   00002C                     	ds	1
  2418   00002D                     _LED_INT_LOWPR:
  2419                           	callstack 0
  2420   00002D                     	ds	1
  2421   00002E                     _LED_INT_HIGHPR:
  2422                           	callstack 0
  2423   00002E                     	ds	1
  2424   00002F                     _LED_main:
  2425                           	callstack 0
  2426   00002F                     	ds	1
  2427                           
  2428                           	psect	dataBANK0
  2429   000080                     __pdataBANK0:
  2430                           	callstack 0
  2431   000080                     _LCD1:
  2432                           	callstack 0
  2433   000080                     	ds	11
  2434   00008B                     __PORT_registers:
  2435                           	callstack 0
  2436   00008B                     	ds	10
  2437   000095                     _keypad1:
  2438                           	callstack 0
  2439   000095                     	ds	9
  2440   00009E                     _ADC1:
  2441                           	callstack 0
  2442   00009E                     	ds	6
  2443                           
  2444                           	psect	cstackBANK0
  2445   0000A4                     __pcstackBANK0:
  2446                           	callstack 0
  2447   0000A4                     LED_toggle@led:
  2448                           	callstack 0
  2449   0000A4                     ??_GPIO_pin_write_logic:
  2450   0000A4                     ??_GPIO_pin_direction_initialize:
  2451   0000A4                     ??_ADC_init:
  2452                           
  2453                           ; 1 bytes @ 0x0
  2454   0000A4                     	ds	1
  2455   0000A5                     _ADC_init$1087:
  2456                           	callstack 0
  2457   0000A5                     ??_LED_toggle:
  2458                           
  2459                           ; 1 bytes @ 0x1
  2460   0000A5                     	ds	1
  2461   0000A6                     LED_toggle@pin_local:
  2462                           	callstack 0
  2463   0000A6                     _ADC_init$1099:
  2464                           	callstack 0
  2465                           
  2466                           ; 1 bytes @ 0x2
  2467   0000A6                     	ds	1
  2468   0000A7                     _ADC_init$1100:
  2469                           	callstack 0
  2470                           
  2471                           ; 1 bytes @ 0x3
  2472   0000A7                     	ds	1
  2473   0000A8                     ADC_init@ret:
  2474                           	callstack 0
  2475                           
  2476                           ; 1 bytes @ 0x4
  2477   0000A8                     	ds	1
  2478   0000A9                     LED_initialize@led:
  2479                           	callstack 0
  2480                           
  2481                           ; 1 bytes @ 0x5
  2482   0000A9                     	ds	1
  2483   0000AA                     ??_LED_initialize:
  2484                           
  2485                           ; 1 bytes @ 0x6
  2486   0000AA                     	ds	1
  2487   0000AB                     LED_initialize@ret:
  2488                           	callstack 0
  2489                           
  2490                           ; 1 bytes @ 0x7
  2491   0000AB                     	ds	1
  2492   0000AC                     LED_initialize@pin_local:
  2493                           	callstack 0
  2494                           
  2495                           ; 1 bytes @ 0x8
  2496   0000AC                     	ds	1
  2497   0000AD                     ecu_init@ret:
  2498                           	callstack 0
  2499                           
  2500                           ; 1 bytes @ 0x9
  2501   0000AD                     	ds	1
  2502   0000AE                     application_initialize@ret:
  2503                           	callstack 0
  2504                           
  2505                           ; 1 bytes @ 0xA
  2506   0000AE                     	ds	1
  2507   0000AF                     _application_initialize$2418:
  2508                           	callstack 0
  2509                           
  2510                           ; 1 bytes @ 0xB
  2511   0000AF                     	ds	1
  2512   0000B0                     ??_main:
  2513                           
  2514                           ; 1 bytes @ 0xC
  2515   0000B0                     	ds	2
  2516                           
  2517                           	psect	cstackCOMRAM
  2518   000054                     __pcstackCOMRAM:
  2519                           	callstack 0
  2520   000054                     i2RB4_ISR@fl:
  2521                           	callstack 0
  2522   000054                     i2RB5_ISR@fl:
  2523                           	callstack 0
  2524   000054                     i2RB6_ISR@fl:
  2525                           	callstack 0
  2526   000054                     i2RB7_ISR@fl:
  2527                           	callstack 0
  2528   000054                     i2___ADC@result:
  2529                           	callstack 0
  2530   000054                     
  2531                           ; 1 bytes @ 0x0
  2532   000054                     	ds	1
  2533   000055                     ??i2_ADC_ISR:
  2534   000055                     
  2535                           ; 1 bytes @ 0x1
  2536   000055                     	ds	2
  2537   000057                     ??_InterruptManager:
  2538                           
  2539                           ; 1 bytes @ 0x3
  2540   000057                     	ds	4
  2541   00005B                     RB4_ISR@fl:
  2542                           	callstack 0
  2543   00005B                     RB5_ISR@fl:
  2544                           	callstack 0
  2545   00005B                     RB6_ISR@fl:
  2546                           	callstack 0
  2547   00005B                     RB7_ISR@fl:
  2548                           	callstack 0
  2549   00005B                     ___ADC@result:
  2550                           	callstack 0
  2551   00005B                     
  2552                           ; 1 bytes @ 0x7
  2553   00005B                     	ds	1
  2554   00005C                     ??_ADC_ISR:
  2555                           
  2556                           ; 1 bytes @ 0x8
  2557   00005C                     	ds	2
  2558   00005E                     ??_InterruptManagerLow:
  2559                           
  2560                           ; 1 bytes @ 0xA
  2561   00005E                     	ds	7
  2562   000065                     GPIO_check_access@_pin_config:
  2563                           	callstack 0
  2564   000065                     INT_ADC_init@ret:
  2565                           	callstack 0
  2566   000065                     INT_ADC_set_callback_routine@callback:
  2567                           	callstack 0
  2568   000065                     ??_ADC_set_pin_config:
  2569   000065                     
  2570                           ; 1 bytes @ 0x11
  2571   000065                     	ds	1
  2572   000066                     INT_ADC_init@priority:
  2573                           	callstack 0
  2574   000066                     ??_GPIO_check_access:
  2575                           
  2576                           ; 1 bytes @ 0x12
  2577   000066                     	ds	1
  2578   000067                     ADC_set_pin_config@channel:
  2579                           	callstack 0
  2580   000067                     GPIO_check_access@ret:
  2581                           	callstack 0
  2582   000067                     
  2583                           ; 1 bytes @ 0x13
  2584   000067                     	ds	1
  2585   000068                     ADC_set_pin_config@ret:
  2586                           	callstack 0
  2587   000068                     GPIO_pin_direction_initialize@_pin_config:
  2588                           	callstack 0
  2589   000068                     GPIO_pin_write_logic@_pin_config:
  2590                           	callstack 0
  2591   000068                     GPIO_pin_toggle_logic@_pin_config:
  2592                           	callstack 0
  2593                           
  2594                           ; 1 bytes @ 0x14
  2595   000068                     	ds	1
  2596   000069                     GPIO_pin_direction_initialize@ret:
  2597                           	callstack 0
  2598   000069                     GPIO_pin_write_logic@logic:
  2599                           	callstack 0
  2600   000069                     ??_GPIO_pin_toggle_logic:
  2601   000069                     ??_ADC_select_channel:
  2602                           
  2603                           ; 1 bytes @ 0x15
  2604   000069                     	ds	1
  2605   00006A                     ADC_select_channel@ret:
  2606                           	callstack 0
  2607   00006A                     GPIO_pin_write_logic@ret:
  2608                           	callstack 0
  2609                           
  2610                           ; 1 bytes @ 0x16
  2611   00006A                     	ds	1
  2612   00006B                     ADC_select_channel@lCH:
  2613                           	callstack 0
  2614   00006B                     GPIO_pin_initialize@_pin_config:
  2615                           	callstack 0
  2616                           
  2617                           ; 1 bytes @ 0x17
  2618   00006B                     	ds	1
  2619   00006C                     ADC_init@lADC:
  2620                           	callstack 0
  2621   00006C                     GPIO_pin_initialize@ret:
  2622                           	callstack 0
  2623   00006C                     
  2624                           ; 1 bytes @ 0x18
  2625   00006C                     	ds	1
  2626   00006D                     
  2627                           ; 1 bytes @ 0x19
  2628 ;;
  2629 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2630 ;;
  2631 ;; *************** function _main *****************
  2632 ;; Defined at:
  2633 ;;		line 25 in file "application.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  2  1115[None  ] int 
  2640 ;; Registers used:
  2641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2647 ;;      Params:         0       0       0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0
  2649 ;;      Temps:          0       2       0       0       0       0       0
  2650 ;;      Totals:         0       2       0       0       0       0       0
  2651 ;;Total ram usage:        2 bytes
  2652 ;; Hardware stack levels required when called: 12
  2653 ;; This function calls:
  2654 ;;		_LED_toggle
  2655 ;;		_application_initialize
  2656 ;; This function is called by:
  2657 ;;		Startup code after reset
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text0
  2662   001154                     __ptext0:
  2663                           	callstack 0
  2664   001154                     _main:
  2665                           	callstack 19
  2666   001154  FFFF               	dw	65535	; assembler added errata NOP
  2667                           
  2668                           ;application.c: 26:         ret = application_initialize();
  2669   001156  ECFC  F008         	call	_application_initialize	;wreg free
  2670   00115A  6E6D               	movwf	_ret^0,c
  2671   00115C                     
  2672                           ;application.c: 27:  if((STD_ReturnType)(0x00) == ret){
  2673   00115C  506D               	movf	_ret^0,w,c
  2674   00115E  A4D8               	btfss	status,2,c
  2675   001160  EFB4  F008         	goto	u6681
  2676   001164  EFB7  F008         	goto	u6680
  2677   001168                     u6681:
  2678   001168  FFFF               	dw	65535	; assembler added errata NOP
  2679   00116A  EFBA  F008         	goto	l6074
  2680   00116E                     u6680:
  2681   00116E  FFFF               	dw	65535	; assembler added errata NOP
  2682   001170  EFD1  F008         	goto	l1117
  2683   001174                     l6074:
  2684   001174  FFFF               	dw	65535	; assembler added errata NOP
  2685                           
  2686                           ;application.c: 31:   LED_toggle(&LED_main);
  2687   001176  0E2F               	movlw	low _LED_main
  2688   001178  0100               	movlb	0	; () banked
  2689   00117A  6FA4               	movwf	LED_toggle@led& (0+255),b
  2690   00117C  ECB4  F007         	call	_LED_toggle	;wreg free
  2691   001180                     
  2692                           ;application.c: 32:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  2693   001180  0E08               	movlw	8
  2694   001182  0100               	movlb	0	; () banked
  2695   001184  6FB1               	movwf	(??_main+1)& (0+255),b
  2696   001186  0E9E               	movlw	158
  2697   001188  6FB0               	movwf	??_main& (0+255),b
  2698   00118A  0E4B               	movlw	75
  2699   00118C                     u6697:
  2700   00118C  FFFF               	dw	65535	; errata NOP
  2701   00118E  2EE8               	decfsz	wreg,f,c
  2702   001190  D7FD               	bra	u6697
  2703   001192  2FB0               	decfsz	??_main& (0+255),f,b
  2704   001194  D7FB               	bra	u6697
  2705   001196  2FB1               	decfsz	(??_main+1)& (0+255),f,b
  2706   001198  D7F9               	bra	u6697
  2707   00119A  D000               	nop2	
  2708   00119C  0000               	nop	
  2709   00119E  EFBA  F008         	goto	l6074
  2710   0011A2                     l1117:
  2711   0011A2  FFFF               	dw	65535	; assembler added errata NOP
  2712   0011A4  EF67  F001         	goto	start
  2713   0011A8                     __end_of_main:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _application_initialize *****************
  2717 ;; Defined at:
  2718 ;;		line 37 in file "application.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  ret             1   10[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      unsigned char 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2732 ;;      Params:         0       0       0       0       0       0       0
  2733 ;;      Locals:         0       2       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0
  2735 ;;      Totals:         0       2       0       0       0       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 11
  2739 ;; This function calls:
  2740 ;;		_ADC_init
  2741 ;;		_ecu_init
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text1
  2748   0011F8                     __ptext1:
  2749                           	callstack 0
  2750   0011F8                     _application_initialize:
  2751                           	callstack 0
  2752   0011F8  FFFF               	dw	65535	; assembler added errata NOP
  2753   0011FA                     
  2754                           ;application.c: 40:  ret = ecu_init() &&
  2755   0011FA  0100               	movlb	0	; () banked
  2756   0011FC  6BAF               	clrf	_application_initialize$2418& (0+255),b
  2757   0011FE                     
  2758                           ; BSR set to: 0
  2759   0011FE  EC89  F009         	call	_ecu_init	;wreg free
  2760   001202  0900               	iorlw	0
  2761   001204  B4D8               	btfsc	status,2,c
  2762   001206  EF07  F009         	goto	u5751
  2763   00120A  EF0A  F009         	goto	u5750
  2764   00120E                     u5751:
  2765   00120E  FFFF               	dw	65535	; assembler added errata NOP
  2766   001210  EF1C  F009         	goto	l5468
  2767   001214                     u5750:
  2768   001214  FFFF               	dw	65535	; assembler added errata NOP
  2769   001216  0E9E               	movlw	low _ADC1
  2770   001218  6E6C               	movwf	ADC_init@lADC^0,c
  2771   00121A  EC59  F004         	call	_ADC_init	;wreg free
  2772   00121E  0900               	iorlw	0
  2773   001220  B4D8               	btfsc	status,2,c
  2774   001222  EF15  F009         	goto	u5761
  2775   001226  EF18  F009         	goto	u5760
  2776   00122A                     u5761:
  2777   00122A  FFFF               	dw	65535	; assembler added errata NOP
  2778   00122C  EF1C  F009         	goto	l5468
  2779   001230                     u5760:
  2780   001230  FFFF               	dw	65535	; assembler added errata NOP
  2781   001232  0E01               	movlw	1
  2782   001234  0100               	movlb	0	; () banked
  2783   001236  6FAF               	movwf	_application_initialize$2418& (0+255),b
  2784   001238                     l5468:
  2785   001238  FFFF               	dw	65535	; assembler added errata NOP
  2786   00123A  C0AF  F0AE         	movff	_application_initialize$2418,application_initialize@ret
  2787                           
  2788                           ;application.c: 42:     return ret;
  2789   00123E  0100               	movlb	0	; () banked
  2790   001240  51AE               	movf	application_initialize@ret& (0+255),w,b
  2791   001242                     
  2792                           ; BSR set to: 0
  2793   001242  0012               	return		;funcret
  2794   001244  FFFF               	dw	65535	; errata NOP
  2795   001246                     __end_of_application_initialize:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _ecu_init *****************
  2799 ;; Defined at:
  2800 ;;		line 136 in file "ECU_layer/ecu_init.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  ret             1    9[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      unsigned char 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2814 ;;      Params:         0       0       0       0       0       0       0
  2815 ;;      Locals:         0       1       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0
  2817 ;;      Totals:         0       1       0       0       0       0       0
  2818 ;;Total ram usage:        1 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 10
  2821 ;; This function calls:
  2822 ;;		_LED_initialize
  2823 ;; This function is called by:
  2824 ;;		_application_initialize
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text2
  2829   001312                     __ptext2:
  2830                           	callstack 0
  2831   001312                     _ecu_init:
  2832                           	callstack 0
  2833   001312  FFFF               	dw	65535	; assembler added errata NOP
  2834   001314  0E2F               	movlw	low _LED_main
  2835   001316  0100               	movlb	0	; () banked
  2836   001318  6FA9               	movwf	LED_initialize@led& (0+255),b
  2837   00131A  EC62  F007         	call	_LED_initialize	;wreg free
  2838   00131E  0E2D               	movlw	low _LED_INT_LOWPR
  2839   001320  0100               	movlb	0	; () banked
  2840   001322  6FA9               	movwf	LED_initialize@led& (0+255),b
  2841   001324  EC62  F007         	call	_LED_initialize	;wreg free
  2842   001328                     
  2843                           ;ECU_layer/ecu_init.c: 140:     ret = LED_initialize(&LED_INT_HIGHPR);
  2844   001328  0E2E               	movlw	low _LED_INT_HIGHPR
  2845   00132A  0100               	movlb	0	; () banked
  2846   00132C  6FA9               	movwf	LED_initialize@led& (0+255),b
  2847   00132E  EC62  F007         	call	_LED_initialize	;wreg free
  2848   001332  0100               	movlb	0	; () banked
  2849   001334  6FAD               	movwf	ecu_init@ret& (0+255),b
  2850   001336                     
  2851                           ; BSR set to: 0
  2852                           ;ECU_layer/ecu_init.c: 142:     return ret;
  2853   001336  51AD               	movf	ecu_init@ret& (0+255),w,b
  2854   001338                     
  2855                           ; BSR set to: 0
  2856   001338  0012               	return		;funcret
  2857   00133A  FFFF               	dw	65535	; errata NOP
  2858   00133C                     __end_of_ecu_init:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function _LED_initialize *****************
  2862 ;; Defined at:
  2863 ;;		line 14 in file "ECU_layer/LED/ecu_led.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  led             1    5[BANK0 ] PTR struct .
  2866 ;;		 -> LED_INT_HIGHPR(1), LED_INT_LOWPR(1), LED_main(1), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  pin_local       1    8[BANK0 ] struct .
  2869 ;;  ret             1    7[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      unsigned char 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2879 ;;      Params:         0       1       0       0       0       0       0
  2880 ;;      Locals:         0       2       0       0       0       0       0
  2881 ;;      Temps:          0       1       0       0       0       0       0
  2882 ;;      Totals:         0       4       0       0       0       0       0
  2883 ;;Total ram usage:        4 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 9
  2886 ;; This function calls:
  2887 ;;		_GPIO_check_access
  2888 ;;		_GPIO_pin_initialize
  2889 ;; This function is called by:
  2890 ;;		_ecu_init
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text3
  2895   000EC4                     __ptext3:
  2896                           	callstack 0
  2897   000EC4                     _LED_initialize:
  2898                           	callstack 0
  2899   000EC4  FFFF               	dw	65535	; assembler added errata NOP
  2900   000EC6                     
  2901                           ;ECU_layer/LED/ecu_led.c: 15:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2902   000EC6  0E01               	movlw	1
  2903   000EC8  0100               	movlb	0	; () banked
  2904   000ECA  6FAB               	movwf	LED_initialize@ret& (0+255),b
  2905                           
  2906                           ;ECU_layer/LED/ecu_led.c: 16:  if ( (((void*)0) == led) ){
  2907   000ECC  51A9               	movf	LED_initialize@led& (0+255),w,b
  2908   000ECE  A4D8               	btfss	status,2,c
  2909   000ED0  EF6C  F007         	goto	u5271
  2910   000ED4  EF6F  F007         	goto	u5270
  2911   000ED8                     u5271:
  2912   000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2913   000EDA  EF75  F007         	goto	l303
  2914   000EDE                     u5270:
  2915   000EDE  FFFF               	dw	65535	; assembler added errata NOP
  2916   000EE0                     l5130:
  2917   000EE0  FFFF               	dw	65535	; assembler added errata NOP
  2918                           
  2919                           ;ECU_layer/LED/ecu_led.c: 17:   ret = (STD_ReturnType)(0x00);
  2920   000EE2  0100               	movlb	0	; () banked
  2921   000EE4  6BAB               	clrf	LED_initialize@ret& (0+255),b
  2922                           
  2923                           ;ECU_layer/LED/ecu_led.c: 18:  }
  2924   000EE6  EFAF  F007         	goto	l5142
  2925   000EEA                     l303:
  2926   000EEA  FFFF               	dw	65535	; assembler added errata NOP
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;ECU_layer/LED/ecu_led.c: 20:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  2930   000EEC  C051  F0AC         	movff	LED_initialize@F2870,LED_initialize@pin_local
  2931   000EF0                     
  2932                           ; BSR set to: 0
  2933   000EF0  51A9               	movf	LED_initialize@led& (0+255),w,b
  2934   000EF2  6ED9               	movwf	fsr2l,c
  2935   000EF4  6ADA               	clrf	fsr2h,c
  2936   000EF6  50DF               	movf	223,w,c
  2937   000EF8  0B07               	andlw	7
  2938   000EFA  6FAA               	movwf	??_LED_initialize& (0+255),b
  2939   000EFC  51AC               	movf	LED_initialize@pin_local& (0+255),w,b
  2940   000EFE  19AA               	xorwf	??_LED_initialize& (0+255),w,b
  2941   000F00  0BF8               	andlw	-8
  2942   000F02  19AA               	xorwf	??_LED_initialize& (0+255),w,b
  2943   000F04  6FAC               	movwf	LED_initialize@pin_local& (0+255),b
  2944   000F06  51A9               	movf	LED_initialize@led& (0+255),w,b
  2945   000F08  6ED9               	movwf	fsr2l,c
  2946   000F0A  6ADA               	clrf	fsr2h,c
  2947   000F0C  30DF               	rrcf	223,w,c
  2948   000F0E  32E8               	rrcf	wreg,f,c
  2949   000F10  32E8               	rrcf	wreg,f,c
  2950   000F12  0B07               	andlw	7
  2951   000F14  6FAA               	movwf	??_LED_initialize& (0+255),b
  2952   000F16  47AA               	rlncf	??_LED_initialize& (0+255),f,b
  2953   000F18  47AA               	rlncf	??_LED_initialize& (0+255),f,b
  2954   000F1A  47AA               	rlncf	??_LED_initialize& (0+255),f,b
  2955   000F1C  51AC               	movf	LED_initialize@pin_local& (0+255),w,b
  2956   000F1E  19AA               	xorwf	??_LED_initialize& (0+255),w,b
  2957   000F20  0BC7               	andlw	-57
  2958   000F22  19AA               	xorwf	??_LED_initialize& (0+255),w,b
  2959   000F24  6FAC               	movwf	LED_initialize@pin_local& (0+255),b
  2960   000F26                     
  2961                           ; BSR set to: 0
  2962   000F26  9DAC               	bcf	LED_initialize@pin_local& (0+255),6,b
  2963   000F28                     
  2964                           ; BSR set to: 0
  2965   000F28  51A9               	movf	LED_initialize@led& (0+255),w,b
  2966   000F2A  6ED9               	movwf	fsr2l,c
  2967   000F2C  6ADA               	clrf	fsr2h,c
  2968   000F2E  ACDF               	btfss	indf2,6,c
  2969   000F30  D002               	bra	u5285
  2970   000F32  8FAC               	bsf	LED_initialize@pin_local& (0+255),7,b
  2971   000F34  D002               	bra	u5287
  2972   000F36                     u5285:
  2973   000F36  0100               	movlb	0	; () banked
  2974   000F38  9FAC               	bcf	LED_initialize@pin_local& (0+255),7,b
  2975   000F3A                     u5287:
  2976   000F3A                     
  2977                           ; BSR set to: 0
  2978                           ;ECU_layer/LED/ecu_led.c: 21:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  2979   000F3A  0EAC               	movlw	low LED_initialize@pin_local
  2980   000F3C  6E65               	movwf	GPIO_check_access@_pin_config^0,c
  2981   000F3E  EC49  F005         	call	_GPIO_check_access	;wreg free
  2982   000F42  06E8               	decf	wreg,f,c
  2983   000F44  A4D8               	btfss	status,2,c
  2984   000F46  EFA7  F007         	goto	u5291
  2985   000F4A  EFAA  F007         	goto	u5290
  2986   000F4E                     u5291:
  2987   000F4E  FFFF               	dw	65535	; assembler added errata NOP
  2988   000F50  EF70  F007         	goto	l5130
  2989   000F54                     u5290:
  2990   000F54  FFFF               	dw	65535	; assembler added errata NOP
  2991   000F56                     
  2992                           ;ECU_layer/LED/ecu_led.c: 22:    GPIO_pin_initialize(&pin_local);
  2993   000F56  0EAC               	movlw	low LED_initialize@pin_local
  2994   000F58  6E6B               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2995   000F5A  ECD4  F008         	call	_GPIO_pin_initialize	;wreg free
  2996   000F5E                     l5142:
  2997   000F5E  FFFF               	dw	65535	; assembler added errata NOP
  2998                           
  2999                           ;ECU_layer/LED/ecu_led.c: 27:     return ret;
  3000   000F60  0100               	movlb	0	; () banked
  3001   000F62  51AB               	movf	LED_initialize@ret& (0+255),w,b
  3002   000F64                     
  3003                           ; BSR set to: 0
  3004   000F64  0012               	return		;funcret
  3005   000F66  FFFF               	dw	65535	; errata NOP
  3006   000F68                     __end_of_LED_initialize:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _GPIO_pin_initialize *****************
  3010 ;; Defined at:
  3011 ;;		line 37 in file "MCAL_layer/GPIO/hal_gpio.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  _pin_config     1   23[COMRAM] PTR const struct .
  3014 ;;		 -> relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1),
      + 
  3015 ;;		 -> dc_motor_initialize@lpin1(1), seven_segment_initialize@lpin(4), 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  ret             1   24[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3027 ;;      Params:         1       0       0       0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 8
  3034 ;; This function calls:
  3035 ;;		_GPIO_check_access
  3036 ;;		_GPIO_pin_direction_initialize
  3037 ;;		_GPIO_pin_write_logic
  3038 ;; This function is called by:
  3039 ;;		_LED_initialize
  3040 ;;		_seven_segment_initialize
  3041 ;;		_dc_motor_initialize
  3042 ;;		_keypad_initialize
  3043 ;;		_lcd_initialize
  3044 ;;		_relay_initialize
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text4
  3049   0011A8                     __ptext4:
  3050                           	callstack 0
  3051   0011A8                     _GPIO_pin_initialize:
  3052                           	callstack 0
  3053   0011A8  FFFF               	dw	65535	; assembler added errata NOP
  3054   0011AA                     
  3055                           ;MCAL_layer/GPIO/hal_gpio.c: 39:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3056   0011AA  C06B  F065         	movff	GPIO_pin_initialize@_pin_config,GPIO_check_access@_pin_config
  3057   0011AE  EC49  F005         	call	_GPIO_check_access	;wreg free
  3058   0011B2  0900               	iorlw	0
  3059   0011B4  A4D8               	btfss	status,2,c
  3060   0011B6  EFDF  F008         	goto	u5261
  3061   0011BA  EFE2  F008         	goto	u5260
  3062   0011BE                     u5261:
  3063   0011BE  FFFF               	dw	65535	; assembler added errata NOP
  3064   0011C0  EFE6  F008         	goto	l5104
  3065   0011C4                     u5260:
  3066   0011C4  FFFF               	dw	65535	; assembler added errata NOP
  3067   0011C6                     
  3068                           ;MCAL_layer/GPIO/hal_gpio.c: 40:   ret = (STD_ReturnType)(0x00);
  3069   0011C6  6A6C               	clrf	GPIO_pin_initialize@ret^0,c
  3070                           
  3071                           ;MCAL_layer/GPIO/hal_gpio.c: 41:  }
  3072   0011C8  EFF8  F008         	goto	l5106
  3073   0011CC                     l5104:
  3074   0011CC  FFFF               	dw	65535	; assembler added errata NOP
  3075                           
  3076                           ;MCAL_layer/GPIO/hal_gpio.c: 43:   ret = GPIO_pin_direction_initialize(_pin_config);
  3077   0011CE  C06B  F068         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_direction_initialize@_pin_config
  3078   0011D2  ECDB  F005         	call	_GPIO_pin_direction_initialize	;wreg free
  3079   0011D6  6E6C               	movwf	GPIO_pin_initialize@ret^0,c
  3080                           
  3081                           ;MCAL_layer/GPIO/hal_gpio.c: 44:   ret = GPIO_pin_write_logic(_pin_config, _pin_config -
      +                          > logic);
  3082   0011D8  C06B  F068         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_write_logic@_pin_config
  3083   0011DC  506B               	movf	GPIO_pin_initialize@_pin_config^0,w,c
  3084   0011DE  6ED9               	movwf	fsr2l,c
  3085   0011E0  6ADA               	clrf	fsr2h,c
  3086   0011E2  0E00               	movlw	0
  3087   0011E4  BEDF               	btfsc	indf2,7,c
  3088   0011E6  0E01               	movlw	1
  3089   0011E8  6E69               	movwf	GPIO_pin_write_logic@logic^0,c
  3090   0011EA  EC6B  F006         	call	_GPIO_pin_write_logic	;wreg free
  3091   0011EE  6E6C               	movwf	GPIO_pin_initialize@ret^0,c
  3092   0011F0                     l5106:
  3093   0011F0  FFFF               	dw	65535	; assembler added errata NOP
  3094                           
  3095                           ;MCAL_layer/GPIO/hal_gpio.c: 46:     return ret;
  3096   0011F2  506C               	movf	GPIO_pin_initialize@ret^0,w,c
  3097   0011F4  0012               	return		;funcret
  3098   0011F6  FFFF               	dw	65535	; errata NOP
  3099   0011F8                     __end_of_GPIO_pin_initialize:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _GPIO_pin_write_logic *****************
  3103 ;; Defined at:
  3104 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  _pin_config     1   20[COMRAM] PTR const struct .
  3107 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_off@pin_local(1), 
  3108 ;;		 -> LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), 
  3109 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  3110 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  3111 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  3112 ;;  logic           1   21[COMRAM] enum E2776
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  ret             1   22[COMRAM] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      unsigned char 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3124 ;;      Params:         2       0       0       0       0       0       0
  3125 ;;      Locals:         1       0       0       0       0       0       0
  3126 ;;      Temps:          0       5       0       0       0       0       0
  3127 ;;      Totals:         3       5       0       0       0       0       0
  3128 ;;Total ram usage:        8 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 7
  3131 ;; This function calls:
  3132 ;;		_GPIO_check_access
  3133 ;; This function is called by:
  3134 ;;		_GPIO_pin_initialize
  3135 ;;		_seven_segment_write_number
  3136 ;;		_seven_segment_write_2digit_number
  3137 ;;		_dc_motor_turn_right
  3138 ;;		_dc_motor_turn_left
  3139 ;;		_dc_motor_stop
  3140 ;;		_keypad_read_number
  3141 ;;		_lcd_send_command
  3142 ;;		_lcd_send_char_data
  3143 ;;		_lcd_send_4bits
  3144 ;;		_lcd_send_8bits
  3145 ;;		_lcd_send_en
  3146 ;;		_LED_on
  3147 ;;		_LED_off
  3148 ;;		_relay_turn_on
  3149 ;;		_relay_turn_off
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text5
  3154   000CD6                     __ptext5:
  3155                           	callstack 0
  3156   000CD6                     _GPIO_pin_write_logic:
  3157                           	callstack 0
  3158   000CD6  FFFF               	dw	65535	; assembler added errata NOP
  3159   000CD8                     
  3160                           ;MCAL_layer/GPIO/hal_gpio.c: 98:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3161   000CD8  0E01               	movlw	1
  3162   000CDA  6E6A               	movwf	GPIO_pin_write_logic@ret^0,c
  3163   000CDC                     
  3164                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3165   000CDC  C068  F065         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  3166   000CE0  EC49  F005         	call	_GPIO_check_access	;wreg free
  3167   000CE4  0900               	iorlw	0
  3168   000CE6  A4D8               	btfss	status,2,c
  3169   000CE8  EF78  F006         	goto	u5191
  3170   000CEC  EF7B  F006         	goto	u5190
  3171   000CF0                     u5191:
  3172   000CF0  FFFF               	dw	65535	; assembler added errata NOP
  3173   000CF2  EFDB  F006         	goto	l5072
  3174   000CF6                     u5190:
  3175   000CF6  FFFF               	dw	65535	; assembler added errata NOP
  3176   000CF8                     l5066:
  3177   000CF8  FFFF               	dw	65535	; assembler added errata NOP
  3178                           
  3179                           ;MCAL_layer/GPIO/hal_gpio.c: 100:   ret = (STD_ReturnType)(0x00);
  3180   000CFA  6A6A               	clrf	GPIO_pin_write_logic@ret^0,c
  3181                           
  3182                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  3183   000CFC  EFF3  F006         	goto	l5074
  3184   000D00                     l5068:
  3185   000D00  FFFF               	dw	65535	; assembler added errata NOP
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3189   000D02  5068               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3190   000D04  6ED9               	movwf	fsr2l,c
  3191   000D06  6ADA               	clrf	fsr2h,c
  3192   000D08  30DF               	rrcf	223,w,c
  3193   000D0A  32E8               	rrcf	wreg,f,c
  3194   000D0C  32E8               	rrcf	wreg,f,c
  3195   000D0E  0B07               	andlw	7
  3196   000D10  6FA4               	movwf	??_GPIO_pin_write_logic& (0+255),b
  3197   000D12  0E01               	movlw	1
  3198   000D14  6FA5               	movwf	(??_GPIO_pin_write_logic+1)& (0+255),b
  3199   000D16  2BA4               	incf	??_GPIO_pin_write_logic& (0+255),f,b
  3200   000D18  EF91  F006         	goto	u5204
  3201   000D1C                     u5205:
  3202   000D1C  FFFF               	dw	65535	; assembler added errata NOP
  3203   000D1E  90D8               	bcf	status,0,c
  3204   000D20  37A5               	rlcf	(??_GPIO_pin_write_logic+1)& (0+255),f,b
  3205   000D22                     u5204:
  3206   000D22  FFFF               	dw	65535	; assembler added errata NOP
  3207   000D24  2FA4               	decfsz	??_GPIO_pin_write_logic& (0+255),f,b
  3208   000D26  EF8E  F006         	goto	u5205
  3209   000D2A  0100               	movlb	0	; () banked
  3210   000D2C  51A5               	movf	(??_GPIO_pin_write_logic+1)& (0+255),w,b
  3211   000D2E  0AFF               	xorlw	255
  3212   000D30  6FA6               	movwf	(??_GPIO_pin_write_logic+2)& (0+255),b
  3213   000D32  5068               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3214   000D34  6ED9               	movwf	fsr2l,c
  3215   000D36  6ADA               	clrf	fsr2h,c
  3216   000D38  50DF               	movf	223,w,c
  3217   000D3A  0B07               	andlw	7
  3218   000D3C  0D02               	mullw	2
  3219   000D3E  50F3               	movf	243,w,c
  3220   000D40  0F01               	addlw	low __LAT_registers
  3221   000D42  6ED9               	movwf	fsr2l,c
  3222   000D44  6ADA               	clrf	fsr2h,c
  3223   000D46  CFDE F0A7          	movff	postinc2,??_GPIO_pin_write_logic+3
  3224   000D4A  CFDD F0A8          	movff	postdec2,??_GPIO_pin_write_logic+4
  3225   000D4E  C0A7  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  3226   000D52  C0A8  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  3227   000D56  51A6               	movf	(??_GPIO_pin_write_logic+2)& (0+255),w,b
  3228   000D58  16DF               	andwf	indf2,f,c
  3229                           
  3230                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  3231   000D5A  EFF3  F006         	goto	l5074
  3232   000D5E                     l5070:
  3233   000D5E  FFFF               	dw	65535	; assembler added errata NOP
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  3237   000D60  5068               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3238   000D62  6ED9               	movwf	fsr2l,c
  3239   000D64  6ADA               	clrf	fsr2h,c
  3240   000D66  30DF               	rrcf	223,w,c
  3241   000D68  32E8               	rrcf	wreg,f,c
  3242   000D6A  32E8               	rrcf	wreg,f,c
  3243   000D6C  0B07               	andlw	7
  3244   000D6E  6FA4               	movwf	??_GPIO_pin_write_logic& (0+255),b
  3245   000D70  0E01               	movlw	1
  3246   000D72  6FA5               	movwf	(??_GPIO_pin_write_logic+1)& (0+255),b
  3247   000D74  2BA4               	incf	??_GPIO_pin_write_logic& (0+255),f,b
  3248   000D76  EFC0  F006         	goto	u5214
  3249   000D7A                     u5215:
  3250   000D7A  FFFF               	dw	65535	; assembler added errata NOP
  3251   000D7C  90D8               	bcf	status,0,c
  3252   000D7E  37A5               	rlcf	(??_GPIO_pin_write_logic+1)& (0+255),f,b
  3253   000D80                     u5214:
  3254   000D80  FFFF               	dw	65535	; assembler added errata NOP
  3255   000D82  2FA4               	decfsz	??_GPIO_pin_write_logic& (0+255),f,b
  3256   000D84  EFBD  F006         	goto	u5215
  3257   000D88  5068               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3258   000D8A  6ED9               	movwf	fsr2l,c
  3259   000D8C  6ADA               	clrf	fsr2h,c
  3260   000D8E  50DF               	movf	223,w,c
  3261   000D90  0B07               	andlw	7
  3262   000D92  0D02               	mullw	2
  3263   000D94  50F3               	movf	243,w,c
  3264   000D96  0F01               	addlw	low __LAT_registers
  3265   000D98  6ED9               	movwf	fsr2l,c
  3266   000D9A  6ADA               	clrf	fsr2h,c
  3267   000D9C  CFDE F0A6          	movff	postinc2,??_GPIO_pin_write_logic+2
  3268   000DA0  CFDD F0A7          	movff	postdec2,??_GPIO_pin_write_logic+3
  3269   000DA4  C0A6  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  3270   000DA8  C0A7  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  3271   000DAC  0100               	movlb	0	; () banked
  3272   000DAE  51A5               	movf	(??_GPIO_pin_write_logic+1)& (0+255),w,b
  3273   000DB0  12DF               	iorwf	indf2,f,c
  3274                           
  3275                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  3276   000DB2  EFF3  F006         	goto	l5074
  3277   000DB6                     l5072:
  3278   000DB6  FFFF               	dw	65535	; assembler added errata NOP
  3279   000DB8  5069               	movf	GPIO_pin_write_logic@logic^0,w,c
  3280   000DBA  0100               	movlb	0	; () banked
  3281   000DBC  6FA4               	movwf	??_GPIO_pin_write_logic& (0+255),b
  3282   000DBE  6BA5               	clrf	(??_GPIO_pin_write_logic+1)& (0+255),b
  3283                           
  3284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3285                           ; Switch size 1, requested type "simple"
  3286                           ; Number of cases is 1, Range of values is 0 to 0
  3287                           ; switch strategies available:
  3288                           ; Name         Instructions Cycles
  3289                           ; simple_byte            4     3 (average)
  3290                           ;	Chosen strategy is simple_byte
  3291   000DC0  51A5               	movf	(??_GPIO_pin_write_logic+1)& (0+255),w,b
  3292   000DC2  0A00               	xorlw	0	; case 0
  3293   000DC4  B4D8               	btfsc	status,2,c
  3294   000DC6  EFE7  F006         	goto	l6138
  3295   000DCA  EF7C  F006         	goto	l5066
  3296   000DCE                     l6138:
  3297   000DCE  FFFF               	dw	65535	; assembler added errata NOP
  3298                           
  3299                           ; BSR set to: 0
  3300                           ; Switch size 1, requested type "simple"
  3301                           ; Number of cases is 2, Range of values is 0 to 1
  3302                           ; switch strategies available:
  3303                           ; Name         Instructions Cycles
  3304                           ; simple_byte            7     4 (average)
  3305                           ;	Chosen strategy is simple_byte
  3306   000DD0  51A4               	movf	??_GPIO_pin_write_logic& (0+255),w,b
  3307   000DD2  0A00               	xorlw	0	; case 0
  3308   000DD4  B4D8               	btfsc	status,2,c
  3309   000DD6  EF80  F006         	goto	l5068
  3310   000DDA  0A01               	xorlw	1	; case 1
  3311   000DDC  B4D8               	btfsc	status,2,c
  3312   000DDE  EFAF  F006         	goto	l5070
  3313   000DE2  EF7C  F006         	goto	l5066
  3314   000DE6                     l5074:
  3315   000DE6  FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ;MCAL_layer/GPIO/hal_gpio.c: 114:  return ret;
  3318   000DE8  506A               	movf	GPIO_pin_write_logic@ret^0,w,c
  3319   000DEA  0012               	return		;funcret
  3320   000DEC  FFFF               	dw	65535	; errata NOP
  3321   000DEE                     __end_of_GPIO_pin_write_logic:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _GPIO_pin_direction_initialize *****************
  3325 ;; Defined at:
  3326 ;;		line 54 in file "MCAL_layer/GPIO/hal_gpio.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  _pin_config     1   20[COMRAM] PTR const struct .
  3329 ;;		 -> relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), 
  3330 ;;		 -> dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize@lpin(4), 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  ret             1   21[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      unsigned char 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3342 ;;      Params:         1       0       0       0       0       0       0
  3343 ;;      Locals:         1       0       0       0       0       0       0
  3344 ;;      Temps:          0       5       0       0       0       0       0
  3345 ;;      Totals:         2       5       0       0       0       0       0
  3346 ;;Total ram usage:        7 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 7
  3349 ;; This function calls:
  3350 ;;		_GPIO_check_access
  3351 ;; This function is called by:
  3352 ;;		_GPIO_pin_initialize
  3353 ;;		_keypad_initialize
  3354 ;;		_btn_initialize
  3355 ;;		_INT_INTx_initialize
  3356 ;;		_INT_RBx_initialize
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text6
  3361   000BB6                     __ptext6:
  3362                           	callstack 0
  3363   000BB6                     _GPIO_pin_direction_initialize:
  3364                           	callstack 0
  3365   000BB6  FFFF               	dw	65535	; assembler added errata NOP
  3366   000BB8                     
  3367                           ;MCAL_layer/GPIO/hal_gpio.c: 55:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3368   000BB8  0E01               	movlw	1
  3369   000BBA  6E69               	movwf	GPIO_pin_direction_initialize@ret^0,c
  3370   000BBC                     
  3371                           ;MCAL_layer/GPIO/hal_gpio.c: 56:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3372   000BBC  C068  F065         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  3373   000BC0  EC49  F005         	call	_GPIO_check_access	;wreg free
  3374   000BC4  0900               	iorlw	0
  3375   000BC6  A4D8               	btfss	status,2,c
  3376   000BC8  EFE8  F005         	goto	u5221
  3377   000BCC  EFEB  F005         	goto	u5220
  3378   000BD0                     u5221:
  3379   000BD0  FFFF               	dw	65535	; assembler added errata NOP
  3380   000BD2  EF4D  F006         	goto	l5092
  3381   000BD6                     u5220:
  3382   000BD6  FFFF               	dw	65535	; assembler added errata NOP
  3383   000BD8                     l5086:
  3384   000BD8  FFFF               	dw	65535	; assembler added errata NOP
  3385                           
  3386                           ;MCAL_layer/GPIO/hal_gpio.c: 57:   ret = (STD_ReturnType)(0x00);
  3387   000BDA  6A69               	clrf	GPIO_pin_direction_initialize@ret^0,c
  3388                           
  3389                           ;MCAL_layer/GPIO/hal_gpio.c: 58:  }
  3390   000BDC  EF67  F006         	goto	l5094
  3391   000BE0                     l5088:
  3392   000BE0  FFFF               	dw	65535	; assembler added errata NOP
  3393                           
  3394                           ;MCAL_layer/GPIO/hal_gpio.c: 62:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3395   000BE2  5068               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3396   000BE4  6ED9               	movwf	fsr2l,c
  3397   000BE6  6ADA               	clrf	fsr2h,c
  3398   000BE8  30DF               	rrcf	223,w,c
  3399   000BEA  32E8               	rrcf	wreg,f,c
  3400   000BEC  32E8               	rrcf	wreg,f,c
  3401   000BEE  0B07               	andlw	7
  3402   000BF0  0100               	movlb	0	; () banked
  3403   000BF2  6FA4               	movwf	??_GPIO_pin_direction_initialize& (0+255),b
  3404   000BF4  0E01               	movlw	1
  3405   000BF6  6FA5               	movwf	(??_GPIO_pin_direction_initialize+1)& (0+255),b
  3406   000BF8  2BA4               	incf	??_GPIO_pin_direction_initialize& (0+255),f,b
  3407   000BFA  EF02  F006         	goto	u5234
  3408   000BFE                     u5235:
  3409   000BFE  FFFF               	dw	65535	; assembler added errata NOP
  3410   000C00  90D8               	bcf	status,0,c
  3411   000C02  37A5               	rlcf	(??_GPIO_pin_direction_initialize+1)& (0+255),f,b
  3412   000C04                     u5234:
  3413   000C04  FFFF               	dw	65535	; assembler added errata NOP
  3414   000C06  2FA4               	decfsz	??_GPIO_pin_direction_initialize& (0+255),f,b
  3415   000C08  EFFF  F005         	goto	u5235
  3416   000C0C  0100               	movlb	0	; () banked
  3417   000C0E  51A5               	movf	(??_GPIO_pin_direction_initialize+1)& (0+255),w,b
  3418   000C10  0AFF               	xorlw	255
  3419   000C12  6FA6               	movwf	(??_GPIO_pin_direction_initialize+2)& (0+255),b
  3420   000C14  5068               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3421   000C16  6ED9               	movwf	fsr2l,c
  3422   000C18  6ADA               	clrf	fsr2h,c
  3423   000C1A  50DF               	movf	223,w,c
  3424   000C1C  0B07               	andlw	7
  3425   000C1E  0D02               	mullw	2
  3426   000C20  50F3               	movf	243,w,c
  3427   000C22  0F0B               	addlw	low __TRIS_registers
  3428   000C24  6ED9               	movwf	fsr2l,c
  3429   000C26  6ADA               	clrf	fsr2h,c
  3430   000C28  CFDE F0A7          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  3431   000C2C  CFDD F0A8          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  3432   000C30  C0A7  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  3433   000C34  C0A8  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  3434   000C38  51A6               	movf	(??_GPIO_pin_direction_initialize+2)& (0+255),w,b
  3435   000C3A  16DF               	andwf	indf2,f,c
  3436                           
  3437                           ;MCAL_layer/GPIO/hal_gpio.c: 63:     break;
  3438   000C3C  EF67  F006         	goto	l5094
  3439   000C40                     l5090:
  3440   000C40  FFFF               	dw	65535	; assembler added errata NOP
  3441                           
  3442                           ;MCAL_layer/GPIO/hal_gpio.c: 65:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  3443   000C42  5068               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3444   000C44  6ED9               	movwf	fsr2l,c
  3445   000C46  6ADA               	clrf	fsr2h,c
  3446   000C48  30DF               	rrcf	223,w,c
  3447   000C4A  32E8               	rrcf	wreg,f,c
  3448   000C4C  32E8               	rrcf	wreg,f,c
  3449   000C4E  0B07               	andlw	7
  3450   000C50  0100               	movlb	0	; () banked
  3451   000C52  6FA4               	movwf	??_GPIO_pin_direction_initialize& (0+255),b
  3452   000C54  0E01               	movlw	1
  3453   000C56  6FA5               	movwf	(??_GPIO_pin_direction_initialize+1)& (0+255),b
  3454   000C58  2BA4               	incf	??_GPIO_pin_direction_initialize& (0+255),f,b
  3455   000C5A  EF32  F006         	goto	u5244
  3456   000C5E                     u5245:
  3457   000C5E  FFFF               	dw	65535	; assembler added errata NOP
  3458   000C60  90D8               	bcf	status,0,c
  3459   000C62  37A5               	rlcf	(??_GPIO_pin_direction_initialize+1)& (0+255),f,b
  3460   000C64                     u5244:
  3461   000C64  FFFF               	dw	65535	; assembler added errata NOP
  3462   000C66  2FA4               	decfsz	??_GPIO_pin_direction_initialize& (0+255),f,b
  3463   000C68  EF2F  F006         	goto	u5245
  3464   000C6C  5068               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3465   000C6E  6ED9               	movwf	fsr2l,c
  3466   000C70  6ADA               	clrf	fsr2h,c
  3467   000C72  50DF               	movf	223,w,c
  3468   000C74  0B07               	andlw	7
  3469   000C76  0D02               	mullw	2
  3470   000C78  50F3               	movf	243,w,c
  3471   000C7A  0F0B               	addlw	low __TRIS_registers
  3472   000C7C  6ED9               	movwf	fsr2l,c
  3473   000C7E  6ADA               	clrf	fsr2h,c
  3474   000C80  CFDE F0A6          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  3475   000C84  CFDD F0A7          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  3476   000C88  C0A6  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  3477   000C8C  C0A7  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  3478   000C90  0100               	movlb	0	; () banked
  3479   000C92  51A5               	movf	(??_GPIO_pin_direction_initialize+1)& (0+255),w,b
  3480   000C94  12DF               	iorwf	indf2,f,c
  3481                           
  3482                           ;MCAL_layer/GPIO/hal_gpio.c: 66:     break;
  3483   000C96  EF67  F006         	goto	l5094
  3484   000C9A                     l5092:
  3485   000C9A  FFFF               	dw	65535	; assembler added errata NOP
  3486   000C9C  5068               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3487   000C9E  6ED9               	movwf	fsr2l,c
  3488   000CA0  6ADA               	clrf	fsr2h,c
  3489   000CA2  BCDF               	btfsc	indf2,6,c
  3490   000CA4  EF56  F006         	goto	u5251
  3491   000CA8  EF5A  F006         	goto	u5250
  3492   000CAC                     u5251:
  3493   000CAC  FFFF               	dw	65535	; assembler added errata NOP
  3494   000CAE  0E01               	movlw	1
  3495   000CB0  EF5C  F006         	goto	u5256
  3496   000CB4                     u5250:
  3497   000CB4  FFFF               	dw	65535	; assembler added errata NOP
  3498   000CB6  0E00               	movlw	0
  3499   000CB8                     u5256:
  3500   000CB8  FFFF               	dw	65535	; assembler added errata NOP
  3501                           
  3502                           ; Switch size 1, requested type "simple"
  3503                           ; Number of cases is 2, Range of values is 0 to 1
  3504                           ; switch strategies available:
  3505                           ; Name         Instructions Cycles
  3506                           ; simple_byte            7     4 (average)
  3507                           ;	Chosen strategy is simple_byte
  3508   000CBA  0A00               	xorlw	0	; case 0
  3509   000CBC  B4D8               	btfsc	status,2,c
  3510   000CBE  EFF0  F005         	goto	l5088
  3511   000CC2  0A01               	xorlw	1	; case 1
  3512   000CC4  B4D8               	btfsc	status,2,c
  3513   000CC6  EF20  F006         	goto	l5090
  3514   000CCA  EFEC  F005         	goto	l5086
  3515   000CCE                     l5094:
  3516   000CCE  FFFF               	dw	65535	; assembler added errata NOP
  3517                           
  3518                           ;MCAL_layer/GPIO/hal_gpio.c: 71:  return ret;
  3519   000CD0  5069               	movf	GPIO_pin_direction_initialize@ret^0,w,c
  3520   000CD2  0012               	return		;funcret
  3521   000CD4  FFFF               	dw	65535	; errata NOP
  3522   000CD6                     __end_of_GPIO_pin_direction_initialize:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _ADC_init *****************
  3526 ;; Defined at:
  3527 ;;		line 16 in file "MCAL_layer/ADC/hal_adc.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  lADC            1   24[COMRAM] PTR const struct .
  3530 ;;		 -> ADC1(6), 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  ret             1    4[BANK0 ] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      unsigned char 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3542 ;;      Params:         1       0       0       0       0       0       0
  3543 ;;      Locals:         0       4       0       0       0       0       0
  3544 ;;      Temps:          0       1       0       0       0       0       0
  3545 ;;      Totals:         1       5       0       0       0       0       0
  3546 ;;Total ram usage:        6 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 8
  3549 ;; This function calls:
  3550 ;;		_ADC_select_channel
  3551 ;;		_ADC_set_pin_config
  3552 ;;		_INT_ADC_init
  3553 ;;		_INT_ADC_set_callback_routine
  3554 ;; This function is called by:
  3555 ;;		_application_initialize
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text7
  3560   0008B2                     __ptext7:
  3561                           	callstack 0
  3562   0008B2                     _ADC_init:
  3563                           	callstack 0
  3564   0008B2  FFFF               	dw	65535	; assembler added errata NOP
  3565   0008B4                     
  3566                           ;MCAL_layer/ADC/hal_adc.c: 18:  if(((void*)0) == lADC || lADC -> channel == ADC_default)
  3567   0008B4  506C               	movf	ADC_init@lADC^0,w,c
  3568   0008B6  B4D8               	btfsc	status,2,c
  3569   0008B8  EF60  F004         	goto	u5471
  3570   0008BC  EF63  F004         	goto	u5470
  3571   0008C0                     u5471:
  3572   0008C0  FFFF               	dw	65535	; assembler added errata NOP
  3573   0008C2  EF72  F004         	goto	l454
  3574   0008C6                     u5470:
  3575   0008C6  FFFF               	dw	65535	; assembler added errata NOP
  3576   0008C8  506C               	movf	ADC_init@lADC^0,w,c
  3577   0008CA  6ED9               	movwf	fsr2l,c
  3578   0008CC  6ADA               	clrf	fsr2h,c
  3579   0008CE  0E03               	movlw	3
  3580   0008D0  26D9               	addwf	fsr2l,f,c
  3581   0008D2  28DE               	incf	postinc2,w,c
  3582   0008D4  A4D8               	btfss	status,2,c
  3583   0008D6  EF6F  F004         	goto	u5481
  3584   0008DA  EF72  F004         	goto	u5480
  3585   0008DE                     u5481:
  3586   0008DE  FFFF               	dw	65535	; assembler added errata NOP
  3587   0008E0  EF77  F004         	goto	l452
  3588   0008E4                     u5480:
  3589   0008E4                     l454:
  3590   0008E4  FFFF               	dw	65535	; assembler added errata NOP
  3591                           
  3592                           ;MCAL_layer/ADC/hal_adc.c: 19:   ret = (STD_ReturnType)(0x00);
  3593   0008E6  0100               	movlb	0	; () banked
  3594   0008E8  6BA8               	clrf	ADC_init@ret& (0+255),b
  3595   0008EA  EF44  F005         	goto	l455
  3596   0008EE                     l452:
  3597   0008EE  FFFF               	dw	65535	; assembler added errata NOP
  3598                           
  3599                           ;MCAL_layer/ADC/hal_adc.c: 22:   (ADCON0bits.ADON=0);
  3600   0008F0  90C2               	bcf	194,0,c	;volatile
  3601                           
  3602                           ;MCAL_layer/ADC/hal_adc.c: 24:   ret = ADC_select_channel(lADC -> channel) &&
  3603   0008F2  0100               	movlb	0	; () banked
  3604   0008F4  6BA5               	clrf	_ADC_init$1087& (0+255),b
  3605   0008F6                     
  3606                           ; BSR set to: 0
  3607   0008F6  506C               	movf	ADC_init@lADC^0,w,c
  3608   0008F8  6ED9               	movwf	fsr2l,c
  3609   0008FA  6ADA               	clrf	fsr2h,c
  3610   0008FC  0E03               	movlw	3
  3611   0008FE  26D9               	addwf	fsr2l,f,c
  3612   000900  50DF               	movf	indf2,w,c
  3613   000902  EC9E  F009         	call	_ADC_select_channel
  3614   000906  0900               	iorlw	0
  3615   000908  B4D8               	btfsc	status,2,c
  3616   00090A  EF89  F004         	goto	u5491
  3617   00090E  EF8C  F004         	goto	u5490
  3618   000912                     u5491:
  3619   000912  FFFF               	dw	65535	; assembler added errata NOP
  3620   000914  EFA2  F004         	goto	l5302
  3621   000918                     u5490:
  3622   000918  FFFF               	dw	65535	; assembler added errata NOP
  3623   00091A  506C               	movf	ADC_init@lADC^0,w,c
  3624   00091C  6ED9               	movwf	fsr2l,c
  3625   00091E  6ADA               	clrf	fsr2h,c
  3626   000920  0E03               	movlw	3
  3627   000922  26D9               	addwf	fsr2l,f,c
  3628   000924  50DF               	movf	indf2,w,c
  3629   000926  ECF7  F006         	call	_ADC_set_pin_config
  3630   00092A  0900               	iorlw	0
  3631   00092C  B4D8               	btfsc	status,2,c
  3632   00092E  EF9B  F004         	goto	u5501
  3633   000932  EF9E  F004         	goto	u5500
  3634   000936                     u5501:
  3635   000936  FFFF               	dw	65535	; assembler added errata NOP
  3636   000938  EFA2  F004         	goto	l5302
  3637   00093C                     u5500:
  3638   00093C  FFFF               	dw	65535	; assembler added errata NOP
  3639   00093E  0E01               	movlw	1
  3640   000940  0100               	movlb	0	; () banked
  3641   000942  6FA5               	movwf	_ADC_init$1087& (0+255),b
  3642   000944                     l5302:
  3643   000944  FFFF               	dw	65535	; assembler added errata NOP
  3644   000946  C0A5  F0A8         	movff	_ADC_init$1087,ADC_init@ret
  3645   00094A                     
  3646                           ;MCAL_layer/ADC/hal_adc.c: 29:   (ADCON1bits.ADFM=1);
  3647   00094A  8EC1               	bsf	193,7,c	;volatile
  3648   00094C                     
  3649                           ;MCAL_layer/ADC/hal_adc.c: 36:   (ADCON1bits.ADCS2 = ((uint8)(lADC -> conversion_clock >
      +                          > 2) & 0x01)); (ADCON0bits.ADCS1 = ((uint8)(lADC -> conversion_clock >> 1) & 0x01)); (AD
      +                          CON0bits.ADCS0 = ((uint8)(lADC -> conversion_clock) & 0x01));;
  3650   00094C  506C               	movf	ADC_init@lADC^0,w,c
  3651   00094E  6ED9               	movwf	fsr2l,c
  3652   000950  6ADA               	clrf	fsr2h,c
  3653   000952  0E04               	movlw	4
  3654   000954  26D9               	addwf	fsr2l,f,c
  3655   000956  50DF               	movf	indf2,w,c
  3656   000958  0100               	movlb	0	; () banked
  3657   00095A  6FA4               	movwf	??_ADC_init& (0+255),b
  3658   00095C  90D8               	bcf	status,0,c
  3659   00095E  33A4               	rrcf	??_ADC_init& (0+255),f,b
  3660   000960  90D8               	bcf	status,0,c
  3661   000962  33A4               	rrcf	??_ADC_init& (0+255),f,b
  3662   000964  0E01               	movlw	1
  3663   000966  17A4               	andwf	??_ADC_init& (0+255),f,b
  3664   000968  3BA4               	swapf	??_ADC_init& (0+255),f,b
  3665   00096A  47A4               	rlncf	??_ADC_init& (0+255),f,b
  3666   00096C  47A4               	rlncf	??_ADC_init& (0+255),f,b
  3667   00096E  50C1               	movf	193,w,c	;volatile
  3668   000970  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3669   000972  0BBF               	andlw	-65
  3670   000974  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3671   000976  6EC1               	movwf	193,c	;volatile
  3672   000978                     
  3673                           ; BSR set to: 0
  3674   000978  506C               	movf	ADC_init@lADC^0,w,c
  3675   00097A  6ED9               	movwf	fsr2l,c
  3676   00097C  6ADA               	clrf	fsr2h,c
  3677   00097E  0E04               	movlw	4
  3678   000980  26D9               	addwf	fsr2l,f,c
  3679   000982  50DF               	movf	indf2,w,c
  3680   000984  6FA4               	movwf	??_ADC_init& (0+255),b
  3681   000986  90D8               	bcf	status,0,c
  3682   000988  33A4               	rrcf	??_ADC_init& (0+255),f,b
  3683   00098A  0E01               	movlw	1
  3684   00098C  17A4               	andwf	??_ADC_init& (0+255),f,b
  3685   00098E  33A4               	rrcf	??_ADC_init& (0+255),f,b
  3686   000990  33A4               	rrcf	??_ADC_init& (0+255),f,b
  3687   000992  50C2               	movf	194,w,c	;volatile
  3688   000994  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3689   000996  0B7F               	andlw	-129
  3690   000998  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3691   00099A  6EC2               	movwf	194,c	;volatile
  3692   00099C                     
  3693                           ; BSR set to: 0
  3694   00099C  506C               	movf	ADC_init@lADC^0,w,c
  3695   00099E  6ED9               	movwf	fsr2l,c
  3696   0009A0  6ADA               	clrf	fsr2h,c
  3697   0009A2  0E04               	movlw	4
  3698   0009A4  26D9               	addwf	fsr2l,f,c
  3699   0009A6  50DF               	movf	indf2,w,c
  3700   0009A8  6FA4               	movwf	??_ADC_init& (0+255),b
  3701   0009AA  0E01               	movlw	1
  3702   0009AC  17A4               	andwf	??_ADC_init& (0+255),f,b
  3703   0009AE  3BA4               	swapf	??_ADC_init& (0+255),f,b
  3704   0009B0  47A4               	rlncf	??_ADC_init& (0+255),f,b
  3705   0009B2  47A4               	rlncf	??_ADC_init& (0+255),f,b
  3706   0009B4  50C2               	movf	194,w,c	;volatile
  3707   0009B6  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3708   0009B8  0BBF               	andlw	-65
  3709   0009BA  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3710   0009BC  6EC2               	movwf	194,c	;volatile
  3711   0009BE                     
  3712                           ; BSR set to: 0
  3713                           ;MCAL_layer/ADC/hal_adc.c: 41:   ret = ret && INT_ADC_init(lADC -> priority);
  3714   0009BE  6BA6               	clrf	_ADC_init$1099& (0+255),b
  3715   0009C0                     
  3716                           ; BSR set to: 0
  3717   0009C0  51A8               	movf	ADC_init@ret& (0+255),w,b
  3718   0009C2  B4D8               	btfsc	status,2,c
  3719   0009C4  EFE6  F004         	goto	u5511
  3720   0009C8  EFE9  F004         	goto	u5510
  3721   0009CC                     u5511:
  3722   0009CC  FFFF               	dw	65535	; assembler added errata NOP
  3723   0009CE  EFFF  F004         	goto	l5320
  3724   0009D2                     u5510:
  3725   0009D2  FFFF               	dw	65535	; assembler added errata NOP
  3726   0009D4                     
  3727                           ; BSR set to: 0
  3728   0009D4  506C               	movf	ADC_init@lADC^0,w,c
  3729   0009D6  6ED9               	movwf	fsr2l,c
  3730   0009D8  6ADA               	clrf	fsr2h,c
  3731   0009DA  0E02               	movlw	2
  3732   0009DC  26D9               	addwf	fsr2l,f,c
  3733   0009DE  50DF               	movf	indf2,w,c
  3734   0009E0  EC00  F008         	call	_INT_ADC_init
  3735   0009E4  0900               	iorlw	0
  3736   0009E6  B4D8               	btfsc	status,2,c
  3737   0009E8  EFF8  F004         	goto	u5521
  3738   0009EC  EFFB  F004         	goto	u5520
  3739   0009F0                     u5521:
  3740   0009F0  FFFF               	dw	65535	; assembler added errata NOP
  3741   0009F2  EFFF  F004         	goto	l5320
  3742   0009F6                     u5520:
  3743   0009F6  FFFF               	dw	65535	; assembler added errata NOP
  3744   0009F8  0E01               	movlw	1
  3745   0009FA  0100               	movlb	0	; () banked
  3746   0009FC  6FA6               	movwf	_ADC_init$1099& (0+255),b
  3747   0009FE                     l5320:
  3748   0009FE  FFFF               	dw	65535	; assembler added errata NOP
  3749   000A00  C0A6  F0A8         	movff	_ADC_init$1099,ADC_init@ret
  3750   000A04                     
  3751                           ;MCAL_layer/ADC/hal_adc.c: 49:   ret = ret && INT_ADC_set_callback_routine(lADC-> ADC_in
      +                          terrupt_handler) &&
  3752   000A04  0100               	movlb	0	; () banked
  3753   000A06  6BA7               	clrf	_ADC_init$1100& (0+255),b
  3754   000A08  51A8               	movf	ADC_init@ret& (0+255),w,b
  3755   000A0A  B4D8               	btfsc	status,2,c
  3756   000A0C  EF0A  F005         	goto	u5531
  3757   000A10  EF0D  F005         	goto	u5530
  3758   000A14                     u5531:
  3759   000A14  FFFF               	dw	65535	; assembler added errata NOP
  3760   000A16  EF40  F005         	goto	l5330
  3761   000A1A                     u5530:
  3762   000A1A  FFFF               	dw	65535	; assembler added errata NOP
  3763   000A1C                     
  3764                           ; BSR set to: 0
  3765   000A1C  506C               	movf	ADC_init@lADC^0,w,c
  3766   000A1E  6ED9               	movwf	fsr2l,c
  3767   000A20  6ADA               	clrf	fsr2h,c
  3768   000A22  CFDE F065          	movff	postinc2,INT_ADC_set_callback_routine@callback
  3769   000A26  CFDD F066          	movff	postdec2,INT_ADC_set_callback_routine@callback+1
  3770   000A2A  ECCE  F009         	call	_INT_ADC_set_callback_routine	;wreg free
  3771   000A2E  0900               	iorlw	0
  3772   000A30  B4D8               	btfsc	status,2,c
  3773   000A32  EF1D  F005         	goto	u5541
  3774   000A36  EF20  F005         	goto	u5540
  3775   000A3A                     u5541:
  3776   000A3A  FFFF               	dw	65535	; assembler added errata NOP
  3777   000A3C  EF40  F005         	goto	l5330
  3778   000A40                     u5540:
  3779   000A40  FFFF               	dw	65535	; assembler added errata NOP
  3780   000A42  506C               	movf	ADC_init@lADC^0,w,c
  3781   000A44  6ED9               	movwf	fsr2l,c
  3782   000A46  6ADA               	clrf	fsr2h,c
  3783   000A48  0E05               	movlw	5
  3784   000A4A  26D9               	addwf	fsr2l,f,c
  3785   000A4C  50DF               	movf	indf2,w,c
  3786   000A4E  0100               	movlb	0	; () banked
  3787   000A50  6FA4               	movwf	??_ADC_init& (0+255),b
  3788   000A52  0EFF               	movlw	255
  3789   000A54  27A4               	addwf	??_ADC_init& (0+255),f,b
  3790   000A56  0E0F               	movlw	15
  3791   000A58  17A4               	andwf	??_ADC_init& (0+255),f,b
  3792   000A5A  50C1               	movf	193,w,c	;volatile
  3793   000A5C  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3794   000A5E  0BF0               	andlw	-16
  3795   000A60  19A4               	xorwf	??_ADC_init& (0+255),w,b
  3796   000A62  6EC1               	movwf	193,c	;volatile
  3797   000A64  50C1               	movf	193,w,c	;volatile
  3798   000A66  0B0F               	andlw	15
  3799   000A68  0900               	iorlw	0
  3800   000A6A  B4D8               	btfsc	status,2,c
  3801   000A6C  EF3A  F005         	goto	u5551
  3802   000A70  EF3D  F005         	goto	u5550
  3803   000A74                     u5551:
  3804   000A74  FFFF               	dw	65535	; assembler added errata NOP
  3805   000A76  EF40  F005         	goto	l5330
  3806   000A7A                     u5550:
  3807   000A7A  FFFF               	dw	65535	; assembler added errata NOP
  3808   000A7C                     
  3809                           ; BSR set to: 0
  3810   000A7C  0E01               	movlw	1
  3811   000A7E  6FA7               	movwf	_ADC_init$1100& (0+255),b
  3812   000A80                     l5330:
  3813   000A80  FFFF               	dw	65535	; assembler added errata NOP
  3814   000A82  C0A7  F0A8         	movff	_ADC_init$1100,ADC_init@ret
  3815   000A86                     
  3816                           ;MCAL_layer/ADC/hal_adc.c: 56:   (ADCON0bits.ADON=1);
  3817   000A86  80C2               	bsf	194,0,c	;volatile
  3818   000A88                     l455:
  3819   000A88  FFFF               	dw	65535	; assembler added errata NOP
  3820                           
  3821                           ;MCAL_layer/ADC/hal_adc.c: 58:  return ret;
  3822   000A8A  0100               	movlb	0	; () banked
  3823   000A8C  51A8               	movf	ADC_init@ret& (0+255),w,b
  3824   000A8E                     
  3825                           ; BSR set to: 0
  3826   000A8E  0012               	return		;funcret
  3827   000A90  FFFF               	dw	65535	; errata NOP
  3828   000A92                     __end_of_ADC_init:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _INT_ADC_set_callback_routine *****************
  3832 ;; Defined at:
  3833 ;;		line 76 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  callback        2   17[COMRAM] PTR FTN(PTR unsigned sho
  3836 ;;		 -> i2___ADC(1), __ADC(1), 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  ret             1    0        unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      unsigned char 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3848 ;;      Params:         2       0       0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0       0       0
  3851 ;;      Totals:         2       0       0       0       0       0       0
  3852 ;;Total ram usage:        2 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 6
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_ADC_init
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text8
  3863   00139C                     __ptext8:
  3864                           	callstack 0
  3865   00139C                     _INT_ADC_set_callback_routine:
  3866                           	callstack 0
  3867   00139C  FFFF               	dw	65535	; assembler added errata NOP
  3868   00139E                     
  3869                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 78:   ADC_callback = callback;
  3870   00139E  C065  F048         	movff	INT_ADC_set_callback_routine@callback,_ADC_callback
  3871   0013A2  C066  F049         	movff	INT_ADC_set_callback_routine@callback+1,_ADC_callback+1
  3872   0013A6                     
  3873                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 79:  return ret;
  3874   0013A6  0E01               	movlw	1
  3875   0013A8  0012               	return		;funcret
  3876   0013AA  FFFF               	dw	65535	; errata NOP
  3877   0013AC                     __end_of_INT_ADC_set_callback_routine:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _INT_ADC_init *****************
  3881 ;; Defined at:
  3882 ;;		line 25 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  priority        1    wreg     unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  priority        1   18[COMRAM] unsigned char 
  3887 ;;  ret             1   17[COMRAM] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      unsigned char 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         0       0       0       0       0       0       0
  3898 ;;      Locals:         2       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0
  3900 ;;      Totals:         2       0       0       0       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; Hardware stack levels required when called: 6
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_ADC_init
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text9
  3912   001000                     __ptext9:
  3913                           	callstack 0
  3914   001000                     _INT_ADC_init:
  3915                           	callstack 0
  3916   001000  FFFF               	dw	65535	; assembler added errata NOP
  3917                           
  3918                           ;incstack = 0
  3919                           ;INT_ADC_init@priority stored from wreg
  3920   001002  6E66               	movwf	INT_ADC_init@priority^0,c
  3921   001004                     
  3922                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 26:  STD_ReturnType ret = (STD_ReturnTy
      +                          pe)(0x01);
  3923   001004  0E01               	movlw	1
  3924   001006  6E65               	movwf	INT_ADC_init@ret^0,c
  3925   001008                     
  3926                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 27:   (PIR1bits.ADIF=0);
  3927   001008  9C9E               	bcf	158,6,c	;volatile
  3928   00100A                     
  3929                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 28:   (PIE1bits.ADIE=0);
  3930   00100A  9C9D               	bcf	157,6,c	;volatile
  3931   00100C                     
  3932                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 30:   if(priority != 1 && priority != 0
      +                          )
  3933   00100C  0466               	decf	INT_ADC_init@priority^0,w,c
  3934   00100E  B4D8               	btfsc	status,2,c
  3935   001010  EF0C  F008         	goto	u5301
  3936   001014  EF0F  F008         	goto	u5300
  3937   001018                     u5301:
  3938   001018  FFFF               	dw	65535	; assembler added errata NOP
  3939   00101A  EF1E  F008         	goto	l715
  3940   00101E                     u5300:
  3941   00101E  FFFF               	dw	65535	; assembler added errata NOP
  3942   001020  5066               	movf	INT_ADC_init@priority^0,w,c
  3943   001022  B4D8               	btfsc	status,2,c
  3944   001024  EF16  F008         	goto	u5311
  3945   001028  EF19  F008         	goto	u5310
  3946   00102C                     u5311:
  3947   00102C  FFFF               	dw	65535	; assembler added errata NOP
  3948   00102E  EF1E  F008         	goto	l715
  3949   001032                     u5310:
  3950   001032  FFFF               	dw	65535	; assembler added errata NOP
  3951   001034                     l5166:
  3952   001034  FFFF               	dw	65535	; assembler added errata NOP
  3953                           
  3954                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 31:    ret = (STD_ReturnType)(0x00);
  3955   001036  6A65               	clrf	INT_ADC_init@ret^0,c
  3956   001038  EF3B  F008         	goto	l716
  3957   00103C                     l715:
  3958   00103C  FFFF               	dw	65535	; assembler added errata NOP
  3959                           
  3960                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 33:             RCONbits.IPEN=1;
  3961   00103E  8ED0               	bsf	208,7,c	;volatile
  3962   001040                     
  3963                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 35:    if(priority == 1){
  3964   001040  0466               	decf	INT_ADC_init@priority^0,w,c
  3965   001042  A4D8               	btfss	status,2,c
  3966   001044  EF26  F008         	goto	u5321
  3967   001048  EF29  F008         	goto	u5320
  3968   00104C                     u5321:
  3969   00104C  FFFF               	dw	65535	; assembler added errata NOP
  3970   00104E  EF2E  F008         	goto	l5172
  3971   001052                     u5320:
  3972   001052  FFFF               	dw	65535	; assembler added errata NOP
  3973   001054                     
  3974                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 36:     (IPR1bits.ADIP=1);
  3975   001054  8C9F               	bsf	159,6,c	;volatile
  3976                           
  3977                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 37:     INTCONbits.GIEH=1;
  3978   001056  8EF2               	bsf	242,7,c	;volatile
  3979                           
  3980                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 38:    }
  3981   001058  EF3B  F008         	goto	l716
  3982   00105C                     l5172:
  3983   00105C  FFFF               	dw	65535	; assembler added errata NOP
  3984   00105E  5066               	movf	INT_ADC_init@priority^0,w,c
  3985   001060  A4D8               	btfss	status,2,c
  3986   001062  EF35  F008         	goto	u5331
  3987   001066  EF38  F008         	goto	u5330
  3988   00106A                     u5331:
  3989   00106A  FFFF               	dw	65535	; assembler added errata NOP
  3990   00106C  EF1A  F008         	goto	l5166
  3991   001070                     u5330:
  3992   001070  FFFF               	dw	65535	; assembler added errata NOP
  3993   001072                     
  3994                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 40:     (IPR1bits.ADIP=0);
  3995   001072  9C9F               	bcf	159,6,c	;volatile
  3996                           
  3997                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 41:     INTCONbits.GIEL=1;
  3998   001074  8CF2               	bsf	242,6,c	;volatile
  3999   001076                     l716:
  4000   001076  FFFF               	dw	65535	; assembler added errata NOP
  4001                           
  4002                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 56:   (PIE1bits.ADIE=1);
  4003   001078  8C9D               	bsf	157,6,c	;volatile
  4004                           
  4005                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 58:  return ret;
  4006   00107A  5065               	movf	INT_ADC_init@ret^0,w,c
  4007   00107C  0012               	return		;funcret
  4008   00107E  FFFF               	dw	65535	; errata NOP
  4009   001080                     __end_of_INT_ADC_init:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _ADC_select_channel *****************
  4013 ;; Defined at:
  4014 ;;		line 81 in file "MCAL_layer/ADC/hal_adc.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  lCH             1    wreg     enum E2857
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  lCH             1   23[COMRAM] enum E2857
  4019 ;;  ret             1   22[COMRAM] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      unsigned char 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4029 ;;      Params:         0       0       0       0       0       0       0
  4030 ;;      Locals:         2       0       0       0       0       0       0
  4031 ;;      Temps:          1       0       0       0       0       0       0
  4032 ;;      Totals:         3       0       0       0       0       0       0
  4033 ;;Total ram usage:        3 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; Hardware stack levels required when called: 7
  4036 ;; This function calls:
  4037 ;;		_ADC_set_pin_config
  4038 ;; This function is called by:
  4039 ;;		_ADC_init
  4040 ;;		_ADC_convert
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text10
  4045   00133C                     __ptext10:
  4046                           	callstack 0
  4047   00133C                     _ADC_select_channel:
  4048                           	callstack 0
  4049   00133C  FFFF               	dw	65535	; assembler added errata NOP
  4050                           
  4051                           ;incstack = 0
  4052                           ;ADC_select_channel@lCH stored from wreg
  4053   00133E  6E6B               	movwf	ADC_select_channel@lCH^0,c
  4054   001340                     
  4055                           ;MCAL_layer/ADC/hal_adc.c: 83:   (ADCON0bits.CHS=(uint8)lCH & 0x07);
  4056   001340  C06B  F069         	movff	ADC_select_channel@lCH,??_ADC_select_channel
  4057   001344  0E07               	movlw	7
  4058   001346  1669               	andwf	??_ADC_select_channel^0,f,c
  4059   001348  4669               	rlncf	??_ADC_select_channel^0,f,c
  4060   00134A  4669               	rlncf	??_ADC_select_channel^0,f,c
  4061   00134C  4669               	rlncf	??_ADC_select_channel^0,f,c
  4062   00134E  50C2               	movf	194,w,c	;volatile
  4063   001350  1869               	xorwf	??_ADC_select_channel^0,w,c
  4064   001352  0BC7               	andlw	-57
  4065   001354  1869               	xorwf	??_ADC_select_channel^0,w,c
  4066   001356  6EC2               	movwf	194,c	;volatile
  4067   001358                     
  4068                           ;MCAL_layer/ADC/hal_adc.c: 84:   ret = ADC_set_pin_config(lCH);
  4069   001358  506B               	movf	ADC_select_channel@lCH^0,w,c
  4070   00135A  ECF7  F006         	call	_ADC_set_pin_config
  4071   00135E  6E6A               	movwf	ADC_select_channel@ret^0,c
  4072   001360                     
  4073                           ;MCAL_layer/ADC/hal_adc.c: 85:  return ret;
  4074   001360  506A               	movf	ADC_select_channel@ret^0,w,c
  4075   001362  0012               	return		;funcret
  4076   001364  FFFF               	dw	65535	; errata NOP
  4077   001366                     __end_of_ADC_select_channel:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _ADC_set_pin_config *****************
  4081 ;; Defined at:
  4082 ;;		line 156 in file "MCAL_layer/ADC/hal_adc.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  channel         1    wreg     enum E2857
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  channel         1   19[COMRAM] enum E2857
  4087 ;;  ret             1   20[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      unsigned char 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4097 ;;      Params:         0       0       0       0       0       0       0
  4098 ;;      Locals:         2       0       0       0       0       0       0
  4099 ;;      Temps:          2       0       0       0       0       0       0
  4100 ;;      Totals:         4       0       0       0       0       0       0
  4101 ;;Total ram usage:        4 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 6
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_ADC_init
  4108 ;;		_ADC_select_channel
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text11
  4113   000DEE                     __ptext11:
  4114                           	callstack 0
  4115   000DEE                     _ADC_set_pin_config:
  4116                           	callstack 0
  4117   000DEE  FFFF               	dw	65535	; assembler added errata NOP
  4118                           
  4119                           ;incstack = 0
  4120                           ;ADC_set_pin_config@channel stored from wreg
  4121   000DF0  6E67               	movwf	ADC_set_pin_config@channel^0,c
  4122   000DF2                     
  4123                           ;MCAL_layer/ADC/hal_adc.c: 157:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4124   000DF2  0E01               	movlw	1
  4125   000DF4  6E68               	movwf	ADC_set_pin_config@ret^0,c
  4126                           
  4127                           ;MCAL_layer/ADC/hal_adc.c: 158:  switch(channel){
  4128   000DF6  EF21  F007         	goto	l5114
  4129   000DFA                     l502:
  4130   000DFA  FFFF               	dw	65535	; assembler added errata NOP
  4131                           
  4132                           ;MCAL_layer/ADC/hal_adc.c: 160:    ret = (STD_ReturnType)(0x00);
  4133   000DFC  6A68               	clrf	ADC_set_pin_config@ret^0,c
  4134                           
  4135                           ;MCAL_layer/ADC/hal_adc.c: 161:    break;
  4136   000DFE  EF5E  F007         	goto	l5116
  4137   000E02                     l504:
  4138   000E02  FFFF               	dw	65535	; assembler added errata NOP
  4139                           
  4140                           ;MCAL_layer/ADC/hal_adc.c: 163:    TRISAbits.RA0=1;
  4141   000E04  8092               	bsf	146,0,c	;volatile
  4142                           
  4143                           ;MCAL_layer/ADC/hal_adc.c: 164:    break;
  4144   000E06  EF5E  F007         	goto	l5116
  4145   000E0A                     l505:
  4146   000E0A  FFFF               	dw	65535	; assembler added errata NOP
  4147                           
  4148                           ;MCAL_layer/ADC/hal_adc.c: 166:    TRISAbits.RA1=1;
  4149   000E0C  8292               	bsf	146,1,c	;volatile
  4150                           
  4151                           ;MCAL_layer/ADC/hal_adc.c: 167:    break;
  4152   000E0E  EF5E  F007         	goto	l5116
  4153   000E12                     l506:
  4154   000E12  FFFF               	dw	65535	; assembler added errata NOP
  4155                           
  4156                           ;MCAL_layer/ADC/hal_adc.c: 169:    TRISAbits.RA2=1;
  4157   000E14  8492               	bsf	146,2,c	;volatile
  4158                           
  4159                           ;MCAL_layer/ADC/hal_adc.c: 170:    break;
  4160   000E16  EF5E  F007         	goto	l5116
  4161   000E1A                     l507:
  4162   000E1A  FFFF               	dw	65535	; assembler added errata NOP
  4163                           
  4164                           ;MCAL_layer/ADC/hal_adc.c: 172:    TRISAbits.RA3=1;
  4165   000E1C  8692               	bsf	146,3,c	;volatile
  4166                           
  4167                           ;MCAL_layer/ADC/hal_adc.c: 173:    break;
  4168   000E1E  EF5E  F007         	goto	l5116
  4169   000E22                     l508:
  4170   000E22  FFFF               	dw	65535	; assembler added errata NOP
  4171                           
  4172                           ;MCAL_layer/ADC/hal_adc.c: 175:    TRISAbits.RA5=1;
  4173   000E24  8A92               	bsf	146,5,c	;volatile
  4174                           
  4175                           ;MCAL_layer/ADC/hal_adc.c: 176:    break;
  4176   000E26  EF5E  F007         	goto	l5116
  4177   000E2A                     l509:
  4178   000E2A  FFFF               	dw	65535	; assembler added errata NOP
  4179                           
  4180                           ;MCAL_layer/ADC/hal_adc.c: 178:    TRISEbits.RE0=1;
  4181   000E2C  8096               	bsf	150,0,c	;volatile
  4182                           
  4183                           ;MCAL_layer/ADC/hal_adc.c: 179:    break;
  4184   000E2E  EF5E  F007         	goto	l5116
  4185   000E32                     l510:
  4186   000E32  FFFF               	dw	65535	; assembler added errata NOP
  4187                           
  4188                           ;MCAL_layer/ADC/hal_adc.c: 181:    TRISEbits.RE1=1;
  4189   000E34  8296               	bsf	150,1,c	;volatile
  4190                           
  4191                           ;MCAL_layer/ADC/hal_adc.c: 182:    break;
  4192   000E36  EF5E  F007         	goto	l5116
  4193   000E3A                     l511:
  4194   000E3A  FFFF               	dw	65535	; assembler added errata NOP
  4195                           
  4196                           ;MCAL_layer/ADC/hal_adc.c: 184:    TRISEbits.RE2=1;
  4197   000E3C  8496               	bsf	150,2,c	;volatile
  4198                           
  4199                           ;MCAL_layer/ADC/hal_adc.c: 185:    break;
  4200   000E3E  EF5E  F007         	goto	l5116
  4201   000E42                     l5114:
  4202   000E42  FFFF               	dw	65535	; assembler added errata NOP
  4203   000E44  C067  F065         	movff	ADC_set_pin_config@channel,??_ADC_set_pin_config
  4204   000E48  6A66               	clrf	(??_ADC_set_pin_config+1)^0,c
  4205   000E4A  BE65               	btfsc	??_ADC_set_pin_config^0,7,c
  4206   000E4C  0666               	decf	(??_ADC_set_pin_config+1)^0,f,c
  4207                           
  4208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4209                           ; Switch size 1, requested type "simple"
  4210                           ; Number of cases is 2, Range of values is 0 to 255
  4211                           ; switch strategies available:
  4212                           ; Name         Instructions Cycles
  4213                           ; simple_byte            7     4 (average)
  4214                           ;	Chosen strategy is simple_byte
  4215   000E4E  5066               	movf	(??_ADC_set_pin_config+1)^0,w,c
  4216   000E50  0A00               	xorlw	0	; case 0
  4217   000E52  B4D8               	btfsc	status,2,c
  4218   000E54  EF32  F007         	goto	l6140
  4219   000E58  0AFF               	xorlw	255	; case 255
  4220   000E5A  B4D8               	btfsc	status,2,c
  4221   000E5C  EF56  F007         	goto	l6142
  4222   000E60  EFFD  F006         	goto	l502
  4223   000E64                     l6140:
  4224   000E64  FFFF               	dw	65535	; assembler added errata NOP
  4225                           
  4226                           ; Switch size 1, requested type "simple"
  4227                           ; Number of cases is 8, Range of values is 0 to 7
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte           25    13 (average)
  4231                           ;	Chosen strategy is simple_byte
  4232   000E66  5065               	movf	??_ADC_set_pin_config^0,w,c
  4233   000E68  0A00               	xorlw	0	; case 0
  4234   000E6A  B4D8               	btfsc	status,2,c
  4235   000E6C  EF01  F007         	goto	l504
  4236   000E70  0A01               	xorlw	1	; case 1
  4237   000E72  B4D8               	btfsc	status,2,c
  4238   000E74  EF05  F007         	goto	l505
  4239   000E78  0A03               	xorlw	3	; case 2
  4240   000E7A  B4D8               	btfsc	status,2,c
  4241   000E7C  EF09  F007         	goto	l506
  4242   000E80  0A01               	xorlw	1	; case 3
  4243   000E82  B4D8               	btfsc	status,2,c
  4244   000E84  EF0D  F007         	goto	l507
  4245   000E88  0A07               	xorlw	7	; case 4
  4246   000E8A  B4D8               	btfsc	status,2,c
  4247   000E8C  EF11  F007         	goto	l508
  4248   000E90  0A01               	xorlw	1	; case 5
  4249   000E92  B4D8               	btfsc	status,2,c
  4250   000E94  EF15  F007         	goto	l509
  4251   000E98  0A03               	xorlw	3	; case 6
  4252   000E9A  B4D8               	btfsc	status,2,c
  4253   000E9C  EF19  F007         	goto	l510
  4254   000EA0  0A01               	xorlw	1	; case 7
  4255   000EA2  B4D8               	btfsc	status,2,c
  4256   000EA4  EF1D  F007         	goto	l511
  4257   000EA8  EFFD  F006         	goto	l502
  4258   000EAC                     l6142:
  4259   000EAC  FFFF               	dw	65535	; assembler added errata NOP
  4260                           
  4261                           ; Switch size 1, requested type "simple"
  4262                           ; Number of cases is 1, Range of values is 255 to 255
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte            4     3 (average)
  4266                           ;	Chosen strategy is simple_byte
  4267   000EAE  5065               	movf	??_ADC_set_pin_config^0,w,c
  4268   000EB0  0AFF               	xorlw	255	; case 255
  4269   000EB2  B4D8               	btfsc	status,2,c
  4270   000EB4  EFFD  F006         	goto	l502
  4271   000EB8  EFFD  F006         	goto	l502
  4272   000EBC                     l5116:
  4273   000EBC  FFFF               	dw	65535	; assembler added errata NOP
  4274                           
  4275                           ;MCAL_layer/ADC/hal_adc.c: 190:         return ret;
  4276   000EBE  5068               	movf	ADC_set_pin_config@ret^0,w,c
  4277   000EC0  0012               	return		;funcret
  4278   000EC2  FFFF               	dw	65535	; errata NOP
  4279   000EC4                     __end_of_ADC_set_pin_config:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _LED_toggle *****************
  4283 ;; Defined at:
  4284 ;;		line 69 in file "ECU_layer/LED/ecu_led.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  led             1    0[BANK0 ] PTR struct .
  4287 ;;		 -> LED_main(1), 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  pin_local       1    2[BANK0 ] struct .
  4290 ;;  ret             1    0        unsigned char 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      unsigned char 
  4293 ;; Registers used:
  4294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4300 ;;      Params:         0       1       0       0       0       0       0
  4301 ;;      Locals:         0       1       0       0       0       0       0
  4302 ;;      Temps:          0       1       0       0       0       0       0
  4303 ;;      Totals:         0       3       0       0       0       0       0
  4304 ;;Total ram usage:        3 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 8
  4307 ;; This function calls:
  4308 ;;		_GPIO_check_access
  4309 ;;		_GPIO_pin_toggle_logic
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text12
  4316   000F68                     __ptext12:
  4317                           	callstack 0
  4318   000F68                     _LED_toggle:
  4319                           	callstack 0
  4320   000F68  FFFF               	dw	65535	; assembler added errata NOP
  4321   000F6A                     
  4322                           ;ECU_layer/LED/ecu_led.c: 71:  if ( (((void*)0) == led) ){
  4323   000F6A  0100               	movlb	0	; () banked
  4324   000F6C  51A4               	movf	LED_toggle@led& (0+255),w,b
  4325   000F6E  A4D8               	btfss	status,2,c
  4326   000F70  EFBC  F007         	goto	u5721
  4327   000F74  EFBF  F007         	goto	u5720
  4328   000F78                     u5721:
  4329   000F78  FFFF               	dw	65535	; assembler added errata NOP
  4330   000F7A  EFC3  F007         	goto	l330
  4331   000F7E                     u5720:
  4332   000F7E  FFFF               	dw	65535	; assembler added errata NOP
  4333   000F80                     l5446:
  4334   000F80  FFFF               	dw	65535	; assembler added errata NOP
  4335                           
  4336                           ;ECU_layer/LED/ecu_led.c: 73:  }
  4337   000F82  EFFD  F007         	goto	l336
  4338   000F86                     l330:
  4339   000F86  FFFF               	dw	65535	; assembler added errata NOP
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;ECU_layer/LED/ecu_led.c: 75:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  4343   000F88  C04E  F0A6         	movff	LED_toggle@F2885,LED_toggle@pin_local
  4344   000F8C                     
  4345                           ; BSR set to: 0
  4346   000F8C  51A4               	movf	LED_toggle@led& (0+255),w,b
  4347   000F8E  6ED9               	movwf	fsr2l,c
  4348   000F90  6ADA               	clrf	fsr2h,c
  4349   000F92  50DF               	movf	223,w,c
  4350   000F94  0B07               	andlw	7
  4351   000F96  6FA5               	movwf	??_LED_toggle& (0+255),b
  4352   000F98  51A6               	movf	LED_toggle@pin_local& (0+255),w,b
  4353   000F9A  19A5               	xorwf	??_LED_toggle& (0+255),w,b
  4354   000F9C  0BF8               	andlw	-8
  4355   000F9E  19A5               	xorwf	??_LED_toggle& (0+255),w,b
  4356   000FA0  6FA6               	movwf	LED_toggle@pin_local& (0+255),b
  4357   000FA2  51A4               	movf	LED_toggle@led& (0+255),w,b
  4358   000FA4  6ED9               	movwf	fsr2l,c
  4359   000FA6  6ADA               	clrf	fsr2h,c
  4360   000FA8  30DF               	rrcf	223,w,c
  4361   000FAA  32E8               	rrcf	wreg,f,c
  4362   000FAC  32E8               	rrcf	wreg,f,c
  4363   000FAE  0B07               	andlw	7
  4364   000FB0  6FA5               	movwf	??_LED_toggle& (0+255),b
  4365   000FB2  47A5               	rlncf	??_LED_toggle& (0+255),f,b
  4366   000FB4  47A5               	rlncf	??_LED_toggle& (0+255),f,b
  4367   000FB6  47A5               	rlncf	??_LED_toggle& (0+255),f,b
  4368   000FB8  51A6               	movf	LED_toggle@pin_local& (0+255),w,b
  4369   000FBA  19A5               	xorwf	??_LED_toggle& (0+255),w,b
  4370   000FBC  0BC7               	andlw	-57
  4371   000FBE  19A5               	xorwf	??_LED_toggle& (0+255),w,b
  4372   000FC0  6FA6               	movwf	LED_toggle@pin_local& (0+255),b
  4373   000FC2                     
  4374                           ; BSR set to: 0
  4375   000FC2  9DA6               	bcf	LED_toggle@pin_local& (0+255),6,b
  4376   000FC4                     
  4377                           ; BSR set to: 0
  4378   000FC4  51A4               	movf	LED_toggle@led& (0+255),w,b
  4379   000FC6  6ED9               	movwf	fsr2l,c
  4380   000FC8  6ADA               	clrf	fsr2h,c
  4381   000FCA  ACDF               	btfss	indf2,6,c
  4382   000FCC  D002               	bra	u5735
  4383   000FCE  8FA6               	bsf	LED_toggle@pin_local& (0+255),7,b
  4384   000FD0  D002               	bra	u5737
  4385   000FD2                     u5735:
  4386   000FD2  0100               	movlb	0	; () banked
  4387   000FD4  9FA6               	bcf	LED_toggle@pin_local& (0+255),7,b
  4388   000FD6                     u5737:
  4389   000FD6                     
  4390                           ; BSR set to: 0
  4391                           ;ECU_layer/LED/ecu_led.c: 76:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  4392   000FD6  0EA6               	movlw	low LED_toggle@pin_local
  4393   000FD8  6E65               	movwf	GPIO_check_access@_pin_config^0,c
  4394   000FDA  EC49  F005         	call	_GPIO_check_access	;wreg free
  4395   000FDE  06E8               	decf	wreg,f,c
  4396   000FE0  A4D8               	btfss	status,2,c
  4397   000FE2  EFF5  F007         	goto	u5741
  4398   000FE6  EFF8  F007         	goto	u5740
  4399   000FEA                     u5741:
  4400   000FEA  FFFF               	dw	65535	; assembler added errata NOP
  4401   000FEC  EFC0  F007         	goto	l5446
  4402   000FF0                     u5740:
  4403   000FF0  FFFF               	dw	65535	; assembler added errata NOP
  4404   000FF2                     
  4405                           ;ECU_layer/LED/ecu_led.c: 77:    GPIO_pin_toggle_logic(&pin_local);
  4406   000FF2  0EA6               	movlw	low LED_toggle@pin_local
  4407   000FF4  6E68               	movwf	GPIO_pin_toggle_logic@_pin_config^0,c
  4408   000FF6  EC40  F008         	call	_GPIO_pin_toggle_logic	;wreg free
  4409   000FFA                     l336:
  4410   000FFA  FFFF               	dw	65535	; assembler added errata NOP
  4411   000FFC  0012               	return		;funcret
  4412   000FFE  FFFF               	dw	65535	; errata NOP
  4413   001000                     __end_of_LED_toggle:
  4414                           	callstack 0
  4415                           
  4416 ;; *************** function _GPIO_pin_toggle_logic *****************
  4417 ;; Defined at:
  4418 ;;		line 139 in file "MCAL_layer/GPIO/hal_gpio.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  _pin_config     1   20[COMRAM] PTR const struct .
  4421 ;;		 -> LED_toggle@pin_local(1), 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  ret             1    0        unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4433 ;;      Params:         1       0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0
  4435 ;;      Temps:          4       0       0       0       0       0       0
  4436 ;;      Totals:         5       0       0       0       0       0       0
  4437 ;;Total ram usage:        5 bytes
  4438 ;; Hardware stack levels used: 1
  4439 ;; Hardware stack levels required when called: 7
  4440 ;; This function calls:
  4441 ;;		_GPIO_check_access
  4442 ;; This function is called by:
  4443 ;;		_LED_toggle
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text13
  4448   001080                     __ptext13:
  4449                           	callstack 0
  4450   001080                     _GPIO_pin_toggle_logic:
  4451                           	callstack 0
  4452   001080  FFFF               	dw	65535	; assembler added errata NOP
  4453   001082                     
  4454                           ;MCAL_layer/GPIO/hal_gpio.c: 141:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pi
      +                          n_config)) ){
  4455   001082  C068  F065         	movff	GPIO_pin_toggle_logic@_pin_config,GPIO_check_access@_pin_config
  4456   001086  EC49  F005         	call	_GPIO_check_access	;wreg free
  4457   00108A  0900               	iorlw	0
  4458   00108C  A4D8               	btfss	status,2,c
  4459   00108E  EF4B  F008         	goto	u5451
  4460   001092  EF4E  F008         	goto	u5450
  4461   001096                     u5451:
  4462   001096  FFFF               	dw	65535	; assembler added errata NOP
  4463   001098  EF51  F008         	goto	l5276
  4464   00109C                     u5450:
  4465   00109C  FFFF               	dw	65535	; assembler added errata NOP
  4466   00109E                     
  4467                           ;MCAL_layer/GPIO/hal_gpio.c: 143:  }
  4468   00109E  EF7A  F008         	goto	l651
  4469   0010A2                     l5276:
  4470   0010A2  FFFF               	dw	65535	; assembler added errata NOP
  4471                           
  4472                           ;MCAL_layer/GPIO/hal_gpio.c: 145:   (*(_LAT_registers[_pin_config -> port]) ^= (1 << _pi
      +                          n_config -> pin));
  4473   0010A4  5068               	movf	GPIO_pin_toggle_logic@_pin_config^0,w,c
  4474   0010A6  6ED9               	movwf	fsr2l,c
  4475   0010A8  6ADA               	clrf	fsr2h,c
  4476   0010AA  30DF               	rrcf	223,w,c
  4477   0010AC  32E8               	rrcf	wreg,f,c
  4478   0010AE  32E8               	rrcf	wreg,f,c
  4479   0010B0  0B07               	andlw	7
  4480   0010B2  6E69               	movwf	??_GPIO_pin_toggle_logic^0,c
  4481   0010B4  0E01               	movlw	1
  4482   0010B6  6E6A               	movwf	(??_GPIO_pin_toggle_logic+1)^0,c
  4483   0010B8  2A69               	incf	??_GPIO_pin_toggle_logic^0,f,c
  4484   0010BA  EF62  F008         	goto	u5464
  4485   0010BE                     u5465:
  4486   0010BE  FFFF               	dw	65535	; assembler added errata NOP
  4487   0010C0  90D8               	bcf	status,0,c
  4488   0010C2  366A               	rlcf	(??_GPIO_pin_toggle_logic+1)^0,f,c
  4489   0010C4                     u5464:
  4490   0010C4  FFFF               	dw	65535	; assembler added errata NOP
  4491   0010C6  2E69               	decfsz	??_GPIO_pin_toggle_logic^0,f,c
  4492   0010C8  EF5F  F008         	goto	u5465
  4493   0010CC  5068               	movf	GPIO_pin_toggle_logic@_pin_config^0,w,c
  4494   0010CE  6ED9               	movwf	fsr2l,c
  4495   0010D0  6ADA               	clrf	fsr2h,c
  4496   0010D2  50DF               	movf	223,w,c
  4497   0010D4  0B07               	andlw	7
  4498   0010D6  0D02               	mullw	2
  4499   0010D8  50F3               	movf	243,w,c
  4500   0010DA  0F01               	addlw	low __LAT_registers
  4501   0010DC  6ED9               	movwf	fsr2l,c
  4502   0010DE  6ADA               	clrf	fsr2h,c
  4503   0010E0  CFDE F06B          	movff	postinc2,??_GPIO_pin_toggle_logic+2
  4504   0010E4  CFDD F06C          	movff	postdec2,??_GPIO_pin_toggle_logic+3
  4505   0010E8  C06B  FFD9         	movff	??_GPIO_pin_toggle_logic+2,fsr2l
  4506   0010EC  C06C  FFDA         	movff	??_GPIO_pin_toggle_logic+3,fsr2h
  4507   0010F0  506A               	movf	(??_GPIO_pin_toggle_logic+1)^0,w,c
  4508   0010F2  1ADF               	xorwf	indf2,f,c
  4509   0010F4                     l651:
  4510   0010F4  FFFF               	dw	65535	; assembler added errata NOP
  4511   0010F6  0012               	return		;funcret
  4512   0010F8  FFFF               	dw	65535	; errata NOP
  4513   0010FA                     __end_of_GPIO_pin_toggle_logic:
  4514                           	callstack 0
  4515                           
  4516 ;; *************** function _GPIO_check_access *****************
  4517 ;; Defined at:
  4518 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  _pin_config     1   17[COMRAM] PTR const struct .
  4521 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_toggle@pin_local(1), 
  4522 ;;		 -> LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinc(4), 
  4523 ;;		 -> keypad_read_number@lpinr(4), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), 
  4524 ;;		 -> dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), 
  4525 ;;		 -> dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_write_nu
      +mber@lpin(4), 
  4526 ;;		 -> seven_segment_initialize@lpin(4), 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  ret             1   19[COMRAM] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      unsigned char 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4538 ;;      Params:         1       0       0       0       0       0       0
  4539 ;;      Locals:         1       0       0       0       0       0       0
  4540 ;;      Temps:          1       0       0       0       0       0       0
  4541 ;;      Totals:         3       0       0       0       0       0       0
  4542 ;;Total ram usage:        3 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 6
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_LED_initialize
  4549 ;;		_LED_toggle
  4550 ;;		_GPIO_pin_initialize
  4551 ;;		_GPIO_pin_direction_initialize
  4552 ;;		_GPIO_pin_write_logic
  4553 ;;		_GPIO_pin_toggle_logic
  4554 ;;		_seven_segment_initialize
  4555 ;;		_dc_motor_initialize
  4556 ;;		_lcd_check_access
  4557 ;;		_LED_on
  4558 ;;		_LED_off
  4559 ;;		_btn_initialize
  4560 ;;		_btn_read_state
  4561 ;;		_relay_initialize
  4562 ;;		_relay_turn_on
  4563 ;;		_relay_turn_off
  4564 ;;		_GPIO_pin_get_direction_status
  4565 ;;		_GPIO_pin_read_logic
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text14
  4570   000A92                     __ptext14:
  4571                           	callstack 0
  4572   000A92                     _GPIO_check_access:
  4573                           	callstack 0
  4574   000A92  FFFF               	dw	65535	; assembler added errata NOP
  4575   000A94                     
  4576                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4577   000A94  0E01               	movlw	1
  4578   000A96  6E67               	movwf	GPIO_check_access@ret^0,c
  4579                           
  4580                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  4581   000A98  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4582   000A9A  B4D8               	btfsc	status,2,c
  4583   000A9C  EF52  F005         	goto	u5101
  4584   000AA0  EF55  F005         	goto	u5100
  4585   000AA4                     u5101:
  4586   000AA4  FFFF               	dw	65535	; assembler added errata NOP
  4587   000AA6  EFD5  F005         	goto	l599
  4588   000AAA                     u5100:
  4589   000AAA  FFFF               	dw	65535	; assembler added errata NOP
  4590   000AAC  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4591   000AAE  6ED9               	movwf	fsr2l,c
  4592   000AB0  6ADA               	clrf	fsr2h,c
  4593   000AB2  50DF               	movf	223,w,c
  4594   000AB4  0B07               	andlw	7
  4595   000AB6  0900               	iorlw	0
  4596   000AB8  A4D8               	btfss	status,2,c
  4597   000ABA  EF61  F005         	goto	u5111
  4598   000ABE  EF64  F005         	goto	u5110
  4599   000AC2                     u5111:
  4600   000AC2  FFFF               	dw	65535	; assembler added errata NOP
  4601   000AC4  EF75  F005         	goto	l5046
  4602   000AC8                     u5110:
  4603   000AC8  FFFF               	dw	65535	; assembler added errata NOP
  4604   000ACA  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4605   000ACC  6ED9               	movwf	fsr2l,c
  4606   000ACE  6ADA               	clrf	fsr2h,c
  4607   000AD0  30DF               	rrcf	223,w,c
  4608   000AD2  32E8               	rrcf	wreg,f,c
  4609   000AD4  32E8               	rrcf	wreg,f,c
  4610   000AD6  0B07               	andlw	7
  4611   000AD8  0A07               	xorlw	7
  4612   000ADA  B4D8               	btfsc	status,2,c
  4613   000ADC  EF72  F005         	goto	u5121
  4614   000AE0  EF75  F005         	goto	u5120
  4615   000AE4                     u5121:
  4616   000AE4  FFFF               	dw	65535	; assembler added errata NOP
  4617   000AE6  EFD5  F005         	goto	l599
  4618   000AEA                     u5120:
  4619   000AEA                     l5046:
  4620   000AEA  FFFF               	dw	65535	; assembler added errata NOP
  4621   000AEC  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4622   000AEE  6ED9               	movwf	fsr2l,c
  4623   000AF0  6ADA               	clrf	fsr2h,c
  4624   000AF2  50DF               	movf	223,w,c
  4625   000AF4  0B07               	andlw	7
  4626   000AF6  06E8               	decf	wreg,f,c
  4627   000AF8  B4D8               	btfsc	status,2,c
  4628   000AFA  EF81  F005         	goto	u5131
  4629   000AFE  EF84  F005         	goto	u5130
  4630   000B02                     u5131:
  4631   000B02  FFFF               	dw	65535	; assembler added errata NOP
  4632   000B04  EFA2  F005         	goto	l5052
  4633   000B08                     u5130:
  4634   000B08  FFFF               	dw	65535	; assembler added errata NOP
  4635   000B0A  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4636   000B0C  6ED9               	movwf	fsr2l,c
  4637   000B0E  6ADA               	clrf	fsr2h,c
  4638   000B10  50DF               	movf	223,w,c
  4639   000B12  0B07               	andlw	7
  4640   000B14  0A02               	xorlw	2
  4641   000B16  B4D8               	btfsc	status,2,c
  4642   000B18  EF90  F005         	goto	u5141
  4643   000B1C  EF93  F005         	goto	u5140
  4644   000B20                     u5141:
  4645   000B20  FFFF               	dw	65535	; assembler added errata NOP
  4646   000B22  EFA2  F005         	goto	l5052
  4647   000B26                     u5140:
  4648   000B26  FFFF               	dw	65535	; assembler added errata NOP
  4649   000B28  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4650   000B2A  6ED9               	movwf	fsr2l,c
  4651   000B2C  6ADA               	clrf	fsr2h,c
  4652   000B2E  50DF               	movf	223,w,c
  4653   000B30  0B07               	andlw	7
  4654   000B32  0A03               	xorlw	3
  4655   000B34  A4D8               	btfss	status,2,c
  4656   000B36  EF9F  F005         	goto	u5151
  4657   000B3A  EFA2  F005         	goto	u5150
  4658   000B3E                     u5151:
  4659   000B3E  FFFF               	dw	65535	; assembler added errata NOP
  4660   000B40  EFB4  F005         	goto	l5054
  4661   000B44                     u5150:
  4662   000B44                     l5052:
  4663   000B44  FFFF               	dw	65535	; assembler added errata NOP
  4664   000B46  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4665   000B48  6ED9               	movwf	fsr2l,c
  4666   000B4A  6ADA               	clrf	fsr2h,c
  4667   000B4C  30DF               	rrcf	223,w,c
  4668   000B4E  32E8               	rrcf	wreg,f,c
  4669   000B50  32E8               	rrcf	wreg,f,c
  4670   000B52  0B07               	andlw	7
  4671   000B54  6E66               	movwf	??_GPIO_check_access^0,c
  4672   000B56  0E08               	movlw	8
  4673   000B58  6066               	cpfslt	??_GPIO_check_access^0,c
  4674   000B5A  EFB1  F005         	goto	u5161
  4675   000B5E  EFB4  F005         	goto	u5160
  4676   000B62                     u5161:
  4677   000B62  FFFF               	dw	65535	; assembler added errata NOP
  4678   000B64  EFD5  F005         	goto	l599
  4679   000B68                     u5160:
  4680   000B68                     l5054:
  4681   000B68  FFFF               	dw	65535	; assembler added errata NOP
  4682   000B6A  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4683   000B6C  6ED9               	movwf	fsr2l,c
  4684   000B6E  6ADA               	clrf	fsr2h,c
  4685   000B70  50DF               	movf	223,w,c
  4686   000B72  0B07               	andlw	7
  4687   000B74  0A04               	xorlw	4
  4688   000B76  A4D8               	btfss	status,2,c
  4689   000B78  EFC0  F005         	goto	u5171
  4690   000B7C  EFC3  F005         	goto	u5170
  4691   000B80                     u5171:
  4692   000B80  FFFF               	dw	65535	; assembler added errata NOP
  4693   000B82  EFD7  F005         	goto	l5058
  4694   000B86                     u5170:
  4695   000B86  FFFF               	dw	65535	; assembler added errata NOP
  4696   000B88  5065               	movf	GPIO_check_access@_pin_config^0,w,c
  4697   000B8A  6ED9               	movwf	fsr2l,c
  4698   000B8C  6ADA               	clrf	fsr2h,c
  4699   000B8E  30DF               	rrcf	223,w,c
  4700   000B90  32E8               	rrcf	wreg,f,c
  4701   000B92  32E8               	rrcf	wreg,f,c
  4702   000B94  0B07               	andlw	7
  4703   000B96  6E66               	movwf	??_GPIO_check_access^0,c
  4704   000B98  0E02               	movlw	2
  4705   000B9A  6466               	cpfsgt	??_GPIO_check_access^0,c
  4706   000B9C  EFD2  F005         	goto	u5181
  4707   000BA0  EFD5  F005         	goto	u5180
  4708   000BA4                     u5181:
  4709   000BA4  FFFF               	dw	65535	; assembler added errata NOP
  4710   000BA6  EFD7  F005         	goto	l5058
  4711   000BAA                     u5180:
  4712   000BAA                     l599:
  4713   000BAA  FFFF               	dw	65535	; assembler added errata NOP
  4714                           
  4715                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  4716   000BAC  6A67               	clrf	GPIO_check_access@ret^0,c
  4717   000BAE                     l5058:
  4718   000BAE  FFFF               	dw	65535	; assembler added errata NOP
  4719                           
  4720                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  4721   000BB0  5067               	movf	GPIO_check_access@ret^0,w,c
  4722   000BB2  0012               	return		;funcret
  4723   000BB4  FFFF               	dw	65535	; errata NOP
  4724   000BB6                     __end_of_GPIO_check_access:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _InterruptManagerLow *****************
  4728 ;; Defined at:
  4729 ;;		line 38 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4743 ;;      Params:         0       0       0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0
  4745 ;;      Temps:          7       0       0       0       0       0       0
  4746 ;;      Totals:         7       0       0       0       0       0       0
  4747 ;;Total ram usage:        7 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 5
  4750 ;; This function calls:
  4751 ;;		_ADC_ISR
  4752 ;;		_INT0_ISR
  4753 ;;		_INT1_ISR
  4754 ;;		_INT2_ISR
  4755 ;;		_RB4_ISR
  4756 ;;		_RB5_ISR
  4757 ;;		_RB6_ISR
  4758 ;;		_RB7_ISR
  4759 ;; This function is called by:
  4760 ;;		Interrupt level 1
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	intcodelo
  4765   000018                     __pintcodelo:
  4766                           	callstack 0
  4767   000018                     _InterruptManagerLow:
  4768                           	callstack 0
  4769   000018  FFFF               	dw	65535	; assembler added errata NOP
  4770                           
  4771                           ;incstack = 0
  4772   00001A  806E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4773   00001C  CFD8 F05E          	movff	status,??_InterruptManagerLow
  4774   000020  CFE8 F05F          	movff	wreg,??_InterruptManagerLow+1
  4775   000024  CFE0 F060          	movff	bsr,??_InterruptManagerLow+2
  4776   000028  CFFA F061          	movff	pclath,??_InterruptManagerLow+3
  4777   00002C  CFFB F062          	movff	pclatu,??_InterruptManagerLow+4
  4778   000030  CFD9 F063          	movff	fsr2l,??_InterruptManagerLow+5
  4779   000034  CFDA F064          	movff	fsr2h,??_InterruptManagerLow+6
  4780   000038                     
  4781                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 41:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4782   000038  A2F2               	btfss	242,1,c	;volatile
  4783   00003A  EF21  F000         	goto	i1u483_21
  4784   00003E  EF24  F000         	goto	i1u483_20
  4785   000042                     i1u483_21:
  4786   000042  FFFF               	dw	65535	; assembler added errata NOP
  4787   000044  EF30  F000         	goto	i1l4942
  4788   000048                     i1u483_20:
  4789   000048  FFFF               	dw	65535	; assembler added errata NOP
  4790   00004A  A8F2               	btfss	242,4,c	;volatile
  4791   00004C  EF2A  F000         	goto	i1u484_21
  4792   000050  EF2D  F000         	goto	i1u484_20
  4793   000054                     i1u484_21:
  4794   000054  FFFF               	dw	65535	; assembler added errata NOP
  4795   000056  EF30  F000         	goto	i1l4942
  4796   00005A                     i1u484_20:
  4797   00005A  FFFF               	dw	65535	; assembler added errata NOP
  4798   00005C                     
  4799                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 42:         INT0_ISR();
  4800   00005C  ECEE  F009         	call	_INT0_ISR	;wreg free
  4801   000060                     i1l4942:
  4802   000060  FFFF               	dw	65535	; assembler added errata NOP
  4803                           
  4804                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 43:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4805   000062  A0F0               	btfss	240,0,c	;volatile
  4806   000064  EF36  F000         	goto	i1u485_21
  4807   000068  EF39  F000         	goto	i1u485_20
  4808   00006C                     i1u485_21:
  4809   00006C  FFFF               	dw	65535	; assembler added errata NOP
  4810   00006E  EF45  F000         	goto	i1l4948
  4811   000072                     i1u485_20:
  4812   000072  FFFF               	dw	65535	; assembler added errata NOP
  4813   000074  A6F0               	btfss	240,3,c	;volatile
  4814   000076  EF3F  F000         	goto	i1u486_21
  4815   00007A  EF42  F000         	goto	i1u486_20
  4816   00007E                     i1u486_21:
  4817   00007E  FFFF               	dw	65535	; assembler added errata NOP
  4818   000080  EF45  F000         	goto	i1l4948
  4819   000084                     i1u486_20:
  4820   000084  FFFF               	dw	65535	; assembler added errata NOP
  4821   000086                     
  4822                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 44:         INT1_ISR();
  4823   000086  ECEA  F009         	call	_INT1_ISR	;wreg free
  4824   00008A                     i1l4948:
  4825   00008A  FFFF               	dw	65535	; assembler added errata NOP
  4826                           
  4827                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 45:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  4828   00008C  A2F0               	btfss	240,1,c	;volatile
  4829   00008E  EF4B  F000         	goto	i1u487_21
  4830   000092  EF4E  F000         	goto	i1u487_20
  4831   000096                     i1u487_21:
  4832   000096  FFFF               	dw	65535	; assembler added errata NOP
  4833   000098  EF5A  F000         	goto	i1l4954
  4834   00009C                     i1u487_20:
  4835   00009C  FFFF               	dw	65535	; assembler added errata NOP
  4836   00009E  A8F0               	btfss	240,4,c	;volatile
  4837   0000A0  EF54  F000         	goto	i1u488_21
  4838   0000A4  EF57  F000         	goto	i1u488_20
  4839   0000A8                     i1u488_21:
  4840   0000A8  FFFF               	dw	65535	; assembler added errata NOP
  4841   0000AA  EF5A  F000         	goto	i1l4954
  4842   0000AE                     i1u488_20:
  4843   0000AE  FFFF               	dw	65535	; assembler added errata NOP
  4844   0000B0                     
  4845                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 46:         INT2_ISR();
  4846   0000B0  ECE6  F009         	call	_INT2_ISR	;wreg free
  4847   0000B4                     i1l4954:
  4848   0000B4  FFFF               	dw	65535	; assembler added errata NOP
  4849                           
  4850                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 50:  if(INTCONbits.RBIF == 1 && INTCONbi
      +                          ts.RBIE == 1){
  4851   0000B6  A0F2               	btfss	242,0,c	;volatile
  4852   0000B8  EF60  F000         	goto	i1u489_21
  4853   0000BC  EF63  F000         	goto	i1u489_20
  4854   0000C0                     i1u489_21:
  4855   0000C0  FFFF               	dw	65535	; assembler added errata NOP
  4856   0000C2  EF40  F001         	goto	i1l5012
  4857   0000C6                     i1u489_20:
  4858   0000C6  FFFF               	dw	65535	; assembler added errata NOP
  4859   0000C8  A6F2               	btfss	242,3,c	;volatile
  4860   0000CA  EF69  F000         	goto	i1u490_21
  4861   0000CE  EF6C  F000         	goto	i1u490_20
  4862   0000D2                     i1u490_21:
  4863   0000D2  FFFF               	dw	65535	; assembler added errata NOP
  4864   0000D4  EF40  F001         	goto	i1l5012
  4865   0000D8                     i1u490_20:
  4866   0000D8  FFFF               	dw	65535	; assembler added errata NOP
  4867   0000DA  A881               	btfss	129,4,c	;volatile
  4868   0000DC  EF72  F000         	goto	i1u491_21
  4869   0000E0  EF75  F000         	goto	i1u491_20
  4870   0000E4                     i1u491_21:
  4871   0000E4  FFFF               	dw	65535	; assembler added errata NOP
  4872   0000E6  EF86  F000         	goto	i1l1071
  4873   0000EA                     i1u491_20:
  4874   0000EA  FFFF               	dw	65535	; assembler added errata NOP
  4875   0000EC  042B               	decf	_RB4f^0,w,c	;volatile
  4876   0000EE  A4D8               	btfss	status,2,c
  4877   0000F0  EF7C  F000         	goto	i1u492_21
  4878   0000F4  EF7F  F000         	goto	i1u492_20
  4879   0000F8                     i1u492_21:
  4880   0000F8  FFFF               	dw	65535	; assembler added errata NOP
  4881   0000FA  EF86  F000         	goto	i1l1071
  4882   0000FE                     i1u492_20:
  4883   0000FE  FFFF               	dw	65535	; assembler added errata NOP
  4884   000100  6A2B               	clrf	_RB4f^0,c	;volatile
  4885   000102  0E01               	movlw	1
  4886   000104  ECE2  F009         	call	_RB4_ISR
  4887   000108  EFA1  F000         	goto	i1l4970
  4888   00010C                     i1l1071:
  4889   00010C  FFFF               	dw	65535	; assembler added errata NOP
  4890   00010E  B881               	btfsc	129,4,c	;volatile
  4891   000110  EF8C  F000         	goto	i1u493_21
  4892   000114  EF8F  F000         	goto	i1u493_20
  4893   000118                     i1u493_21:
  4894   000118  FFFF               	dw	65535	; assembler added errata NOP
  4895   00011A  EFA1  F000         	goto	i1l1074
  4896   00011E                     i1u493_20:
  4897   00011E  FFFF               	dw	65535	; assembler added errata NOP
  4898   000120  502B               	movf	_RB4f^0,w,c	;volatile
  4899   000122  A4D8               	btfss	status,2,c
  4900   000124  EF96  F000         	goto	i1u494_21
  4901   000128  EF99  F000         	goto	i1u494_20
  4902   00012C                     i1u494_21:
  4903   00012C  FFFF               	dw	65535	; assembler added errata NOP
  4904   00012E  EFA1  F000         	goto	i1l1074
  4905   000132                     i1u494_20:
  4906   000132  FFFF               	dw	65535	; assembler added errata NOP
  4907   000134  0E01               	movlw	1
  4908   000136  6E2B               	movwf	_RB4f^0,c	;volatile
  4909   000138  0E00               	movlw	0
  4910   00013A  ECE2  F009         	call	_RB4_ISR
  4911   00013E  EFA1  F000         	goto	i1l4970
  4912   000142                     i1l1074:
  4913   000142                     i1l4970:
  4914   000142  FFFF               	dw	65535	; assembler added errata NOP
  4915   000144  AA81               	btfss	129,5,c	;volatile
  4916   000146  EFA7  F000         	goto	i1u495_21
  4917   00014A  EFAA  F000         	goto	i1u495_20
  4918   00014E                     i1u495_21:
  4919   00014E  FFFF               	dw	65535	; assembler added errata NOP
  4920   000150  EFBB  F000         	goto	i1l1076
  4921   000154                     i1u495_20:
  4922   000154  FFFF               	dw	65535	; assembler added errata NOP
  4923   000156  042A               	decf	_RB5f^0,w,c	;volatile
  4924   000158  A4D8               	btfss	status,2,c
  4925   00015A  EFB1  F000         	goto	i1u496_21
  4926   00015E  EFB4  F000         	goto	i1u496_20
  4927   000162                     i1u496_21:
  4928   000162  FFFF               	dw	65535	; assembler added errata NOP
  4929   000164  EFBB  F000         	goto	i1l1076
  4930   000168                     i1u496_20:
  4931   000168  FFFF               	dw	65535	; assembler added errata NOP
  4932   00016A  6A2A               	clrf	_RB5f^0,c	;volatile
  4933   00016C  0E01               	movlw	1
  4934   00016E  ECDE  F009         	call	_RB5_ISR
  4935   000172  EFD6  F000         	goto	i1l4984
  4936   000176                     i1l1076:
  4937   000176  FFFF               	dw	65535	; assembler added errata NOP
  4938   000178  BA81               	btfsc	129,5,c	;volatile
  4939   00017A  EFC1  F000         	goto	i1u497_21
  4940   00017E  EFC4  F000         	goto	i1u497_20
  4941   000182                     i1u497_21:
  4942   000182  FFFF               	dw	65535	; assembler added errata NOP
  4943   000184  EFD6  F000         	goto	i1l1079
  4944   000188                     i1u497_20:
  4945   000188  FFFF               	dw	65535	; assembler added errata NOP
  4946   00018A  502A               	movf	_RB5f^0,w,c	;volatile
  4947   00018C  A4D8               	btfss	status,2,c
  4948   00018E  EFCB  F000         	goto	i1u498_21
  4949   000192  EFCE  F000         	goto	i1u498_20
  4950   000196                     i1u498_21:
  4951   000196  FFFF               	dw	65535	; assembler added errata NOP
  4952   000198  EFD6  F000         	goto	i1l1079
  4953   00019C                     i1u498_20:
  4954   00019C  FFFF               	dw	65535	; assembler added errata NOP
  4955   00019E  0E01               	movlw	1
  4956   0001A0  6E2A               	movwf	_RB5f^0,c	;volatile
  4957   0001A2  0E00               	movlw	0
  4958   0001A4  ECDE  F009         	call	_RB5_ISR
  4959   0001A8  EFD6  F000         	goto	i1l4984
  4960   0001AC                     i1l1079:
  4961   0001AC                     i1l4984:
  4962   0001AC  FFFF               	dw	65535	; assembler added errata NOP
  4963   0001AE  AC81               	btfss	129,6,c	;volatile
  4964   0001B0  EFDC  F000         	goto	i1u499_21
  4965   0001B4  EFDF  F000         	goto	i1u499_20
  4966   0001B8                     i1u499_21:
  4967   0001B8  FFFF               	dw	65535	; assembler added errata NOP
  4968   0001BA  EFF0  F000         	goto	i1l1081
  4969   0001BE                     i1u499_20:
  4970   0001BE  FFFF               	dw	65535	; assembler added errata NOP
  4971   0001C0  0429               	decf	_RB6f^0,w,c	;volatile
  4972   0001C2  A4D8               	btfss	status,2,c
  4973   0001C4  EFE6  F000         	goto	i1u500_21
  4974   0001C8  EFE9  F000         	goto	i1u500_20
  4975   0001CC                     i1u500_21:
  4976   0001CC  FFFF               	dw	65535	; assembler added errata NOP
  4977   0001CE  EFF0  F000         	goto	i1l1081
  4978   0001D2                     i1u500_20:
  4979   0001D2  FFFF               	dw	65535	; assembler added errata NOP
  4980   0001D4  6A29               	clrf	_RB6f^0,c	;volatile
  4981   0001D6  0E01               	movlw	1
  4982   0001D8  ECDA  F009         	call	_RB6_ISR
  4983   0001DC  EF0B  F001         	goto	i1l4998
  4984   0001E0                     i1l1081:
  4985   0001E0  FFFF               	dw	65535	; assembler added errata NOP
  4986   0001E2  BC81               	btfsc	129,6,c	;volatile
  4987   0001E4  EFF6  F000         	goto	i1u501_21
  4988   0001E8  EFF9  F000         	goto	i1u501_20
  4989   0001EC                     i1u501_21:
  4990   0001EC  FFFF               	dw	65535	; assembler added errata NOP
  4991   0001EE  EF0B  F001         	goto	i1l1084
  4992   0001F2                     i1u501_20:
  4993   0001F2  FFFF               	dw	65535	; assembler added errata NOP
  4994   0001F4  5029               	movf	_RB6f^0,w,c	;volatile
  4995   0001F6  A4D8               	btfss	status,2,c
  4996   0001F8  EF00  F001         	goto	i1u502_21
  4997   0001FC  EF03  F001         	goto	i1u502_20
  4998   000200                     i1u502_21:
  4999   000200  FFFF               	dw	65535	; assembler added errata NOP
  5000   000202  EF0B  F001         	goto	i1l1084
  5001   000206                     i1u502_20:
  5002   000206  FFFF               	dw	65535	; assembler added errata NOP
  5003   000208  0E01               	movlw	1
  5004   00020A  6E29               	movwf	_RB6f^0,c	;volatile
  5005   00020C  0E00               	movlw	0
  5006   00020E  ECDA  F009         	call	_RB6_ISR
  5007   000212  EF0B  F001         	goto	i1l4998
  5008   000216                     i1l1084:
  5009   000216                     i1l4998:
  5010   000216  FFFF               	dw	65535	; assembler added errata NOP
  5011   000218  AE81               	btfss	129,7,c	;volatile
  5012   00021A  EF11  F001         	goto	i1u503_21
  5013   00021E  EF14  F001         	goto	i1u503_20
  5014   000222                     i1u503_21:
  5015   000222  FFFF               	dw	65535	; assembler added errata NOP
  5016   000224  EF25  F001         	goto	i1l1086
  5017   000228                     i1u503_20:
  5018   000228  FFFF               	dw	65535	; assembler added errata NOP
  5019   00022A  0428               	decf	_RB7f^0,w,c	;volatile
  5020   00022C  A4D8               	btfss	status,2,c
  5021   00022E  EF1B  F001         	goto	i1u504_21
  5022   000232  EF1E  F001         	goto	i1u504_20
  5023   000236                     i1u504_21:
  5024   000236  FFFF               	dw	65535	; assembler added errata NOP
  5025   000238  EF25  F001         	goto	i1l1086
  5026   00023C                     i1u504_20:
  5027   00023C  FFFF               	dw	65535	; assembler added errata NOP
  5028   00023E  6A28               	clrf	_RB7f^0,c	;volatile
  5029   000240  0E01               	movlw	1
  5030   000242  ECD6  F009         	call	_RB7_ISR
  5031   000246  EF40  F001         	goto	i1l5012
  5032   00024A                     i1l1086:
  5033   00024A  FFFF               	dw	65535	; assembler added errata NOP
  5034   00024C  BE81               	btfsc	129,7,c	;volatile
  5035   00024E  EF2B  F001         	goto	i1u505_21
  5036   000252  EF2E  F001         	goto	i1u505_20
  5037   000256                     i1u505_21:
  5038   000256  FFFF               	dw	65535	; assembler added errata NOP
  5039   000258  EF40  F001         	goto	i1l1089
  5040   00025C                     i1u505_20:
  5041   00025C  FFFF               	dw	65535	; assembler added errata NOP
  5042   00025E  5028               	movf	_RB7f^0,w,c	;volatile
  5043   000260  A4D8               	btfss	status,2,c
  5044   000262  EF35  F001         	goto	i1u506_21
  5045   000266  EF38  F001         	goto	i1u506_20
  5046   00026A                     i1u506_21:
  5047   00026A  FFFF               	dw	65535	; assembler added errata NOP
  5048   00026C  EF40  F001         	goto	i1l1089
  5049   000270                     i1u506_20:
  5050   000270  FFFF               	dw	65535	; assembler added errata NOP
  5051   000272  0E01               	movlw	1
  5052   000274  6E28               	movwf	_RB7f^0,c	;volatile
  5053   000276  0E00               	movlw	0
  5054   000278  ECD6  F009         	call	_RB7_ISR
  5055   00027C  EF40  F001         	goto	i1l5012
  5056   000280                     i1l1089:
  5057   000280                     i1l5012:
  5058   000280  FFFF               	dw	65535	; assembler added errata NOP
  5059                           
  5060                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 59:  if((PIE1bits.ADIE) == 1 && (PIR1bit
      +                          s.ADIF) == 1)
  5061   000282  AC9D               	btfss	157,6,c	;volatile
  5062   000284  EF46  F001         	goto	i1u507_21
  5063   000288  EF49  F001         	goto	i1u507_20
  5064   00028C                     i1u507_21:
  5065   00028C  FFFF               	dw	65535	; assembler added errata NOP
  5066   00028E  EF55  F001         	goto	i1l1091
  5067   000292                     i1u507_20:
  5068   000292  FFFF               	dw	65535	; assembler added errata NOP
  5069   000294  AC9E               	btfss	158,6,c	;volatile
  5070   000296  EF4F  F001         	goto	i1u508_21
  5071   00029A  EF52  F001         	goto	i1u508_20
  5072   00029E                     i1u508_21:
  5073   00029E  FFFF               	dw	65535	; assembler added errata NOP
  5074   0002A0  EF55  F001         	goto	i1l1091
  5075   0002A4                     i1u508_20:
  5076   0002A4  FFFF               	dw	65535	; assembler added errata NOP
  5077   0002A6                     
  5078                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 60:   ADC_ISR();
  5079   0002A6  EC23  F009         	call	_ADC_ISR	;wreg free
  5080   0002AA                     i1l1091:
  5081   0002AA  FFFF               	dw	65535	; assembler added errata NOP
  5082   0002AC  C064  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  5083   0002B0  C063  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  5084   0002B4  C062  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  5085   0002B8  C061  FFFA         	movff	??_InterruptManagerLow+3,pclath
  5086   0002BC  C060  FFE0         	movff	??_InterruptManagerLow+2,bsr
  5087   0002C0  C05F  FFE8         	movff	??_InterruptManagerLow+1,wreg
  5088   0002C4  C05E  FFD8         	movff	??_InterruptManagerLow,status
  5089   0002C8  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5090   0002CA  0010               	retfie	
  5091   0002CC  FFFF               	dw	65535	; errata NOP
  5092   0002CE                     __end_of_InterruptManagerLow:
  5093                           	callstack 0
  5094                           
  5095 ;; *************** function _RB7_ISR *****************
  5096 ;; Defined at:
  5097 ;;		line 78 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  fl              1    wreg     unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  fl              1    7[COMRAM] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5111 ;;      Params:         0       0       0       0       0       0       0
  5112 ;;      Locals:         1       0       0       0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0
  5114 ;;      Totals:         1       0       0       0       0       0       0
  5115 ;;Total ram usage:        1 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 3
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_InterruptManagerLow
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text16
  5126   0013AC                     __ptext16:
  5127                           	callstack 0
  5128   0013AC                     _RB7_ISR:
  5129                           	callstack 0
  5130   0013AC  FFFF               	dw	65535	; assembler added errata NOP
  5131   0013AE                     
  5132                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 79:  INTCONbits.RBIF=0;
  5133   0013AE  90F2               	bcf	242,0,c	;volatile
  5134   0013B0  0012               	return		;funcret
  5135   0013B2  FFFF               	dw	65535	; errata NOP
  5136   0013B4                     __end_of_RB7_ISR:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _RB6_ISR *****************
  5140 ;; Defined at:
  5141 ;;		line 67 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  fl              1    wreg     unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  fl              1    7[COMRAM] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5155 ;;      Params:         0       0       0       0       0       0       0
  5156 ;;      Locals:         1       0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0
  5158 ;;      Totals:         1       0       0       0       0       0       0
  5159 ;;Total ram usage:        1 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; Hardware stack levels required when called: 3
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_InterruptManagerLow
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text17
  5170   0013B4                     __ptext17:
  5171                           	callstack 0
  5172   0013B4                     _RB6_ISR:
  5173                           	callstack 0
  5174   0013B4  FFFF               	dw	65535	; assembler added errata NOP
  5175   0013B6                     
  5176                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 68:  INTCONbits.RBIF=0;
  5177   0013B6  90F2               	bcf	242,0,c	;volatile
  5178   0013B8  0012               	return		;funcret
  5179   0013BA  FFFF               	dw	65535	; errata NOP
  5180   0013BC                     __end_of_RB6_ISR:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function _RB5_ISR *****************
  5184 ;; Defined at:
  5185 ;;		line 56 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  fl              1    wreg     unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  fl              1    7[COMRAM] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5199 ;;      Params:         0       0       0       0       0       0       0
  5200 ;;      Locals:         1       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0
  5202 ;;      Totals:         1       0       0       0       0       0       0
  5203 ;;Total ram usage:        1 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 3
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_InterruptManagerLow
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text18
  5214   0013BC                     __ptext18:
  5215                           	callstack 0
  5216   0013BC                     _RB5_ISR:
  5217                           	callstack 0
  5218   0013BC  FFFF               	dw	65535	; assembler added errata NOP
  5219   0013BE                     
  5220                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 57:  INTCONbits.RBIF=0;
  5221   0013BE  90F2               	bcf	242,0,c	;volatile
  5222   0013C0  0012               	return		;funcret
  5223   0013C2  FFFF               	dw	65535	; errata NOP
  5224   0013C4                     __end_of_RB5_ISR:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _RB4_ISR *****************
  5228 ;; Defined at:
  5229 ;;		line 45 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  fl              1    wreg     unsigned char 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  fl              1    7[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5243 ;;      Params:         0       0       0       0       0       0       0
  5244 ;;      Locals:         1       0       0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0
  5246 ;;      Totals:         1       0       0       0       0       0       0
  5247 ;;Total ram usage:        1 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 3
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_InterruptManagerLow
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text19
  5258   0013C4                     __ptext19:
  5259                           	callstack 0
  5260   0013C4                     _RB4_ISR:
  5261                           	callstack 0
  5262   0013C4  FFFF               	dw	65535	; assembler added errata NOP
  5263   0013C6                     
  5264                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 46:  INTCONbits.RBIF=0;
  5265   0013C6  90F2               	bcf	242,0,c	;volatile
  5266   0013C8  0012               	return		;funcret
  5267   0013CA  FFFF               	dw	65535	; errata NOP
  5268   0013CC                     __end_of_RB4_ISR:
  5269                           	callstack 0
  5270                           
  5271 ;; *************** function _INT2_ISR *****************
  5272 ;; Defined at:
  5273 ;;		line 38 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		None
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5287 ;;      Params:         0       0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 3
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_InterruptManagerLow
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text20
  5302   0013CC                     __ptext20:
  5303                           	callstack 0
  5304   0013CC                     _INT2_ISR:
  5305                           	callstack 0
  5306   0013CC  FFFF               	dw	65535	; assembler added errata NOP
  5307   0013CE                     
  5308                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 39:  INTCON3bits.INT2IF=0;
  5309   0013CE  92F0               	bcf	240,1,c	;volatile
  5310   0013D0  0012               	return		;funcret
  5311   0013D2  FFFF               	dw	65535	; errata NOP
  5312   0013D4                     __end_of_INT2_ISR:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function _INT1_ISR *****************
  5316 ;; Defined at:
  5317 ;;		line 33 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		None
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5331 ;;      Params:         0       0       0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 3
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_InterruptManagerLow
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text21
  5346   0013D4                     __ptext21:
  5347                           	callstack 0
  5348   0013D4                     _INT1_ISR:
  5349                           	callstack 0
  5350   0013D4  FFFF               	dw	65535	; assembler added errata NOP
  5351   0013D6                     
  5352                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 34:  INTCON3bits.INT1IF=0;
  5353   0013D6  90F0               	bcf	240,0,c	;volatile
  5354   0013D8  0012               	return		;funcret
  5355   0013DA  FFFF               	dw	65535	; errata NOP
  5356   0013DC                     __end_of_INT1_ISR:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _INT0_ISR *****************
  5360 ;; Defined at:
  5361 ;;		line 28 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		None
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5375 ;;      Params:         0       0       0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 3
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_InterruptManagerLow
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text22
  5390   0013DC                     __ptext22:
  5391                           	callstack 0
  5392   0013DC                     _INT0_ISR:
  5393                           	callstack 0
  5394   0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5395   0013DE                     
  5396                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 29:  INTCONbits.INT0IF=0;
  5397   0013DE  92F2               	bcf	242,1,c	;volatile
  5398   0013E0  0012               	return		;funcret
  5399   0013E2  FFFF               	dw	65535	; errata NOP
  5400   0013E4                     __end_of_INT0_ISR:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _ADC_ISR *****************
  5404 ;; Defined at:
  5405 ;;		line 13 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5419 ;;      Params:         0       0       0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0
  5421 ;;      Temps:          2       0       0       0       0       0       0
  5422 ;;      Totals:         2       0       0       0       0       0       0
  5423 ;;Total ram usage:        2 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 4
  5426 ;; This function calls:
  5427 ;;		NULL
  5428 ;;		___ADC
  5429 ;; This function is called by:
  5430 ;;		_InterruptManagerLow
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text23
  5435   001246                     __ptext23:
  5436                           	callstack 0
  5437   001246                     _ADC_ISR:
  5438                           	callstack 0
  5439   001246  FFFF               	dw	65535	; assembler added errata NOP
  5440   001248                     
  5441                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 14:  (PIR1bits.ADIF=0);
  5442   001248  9C9E               	bcf	158,6,c	;volatile
  5443   00124A                     
  5444                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 15:  if(ADC_callback){
  5445   00124A  5048               	movf	_ADC_callback^0,w,c
  5446   00124C  1049               	iorwf	(_ADC_callback+1)^0,w,c
  5447   00124E  B4D8               	btfsc	status,2,c
  5448   001250  EF2C  F009         	goto	i1u358_21
  5449   001254  EF2F  F009         	goto	i1u358_20
  5450   001258                     i1u358_21:
  5451   001258  FFFF               	dw	65535	; assembler added errata NOP
  5452   00125A  EF47  F009         	goto	i1l712
  5453   00125E                     i1u358_20:
  5454   00125E  FFFF               	dw	65535	; assembler added errata NOP
  5455   001260                     
  5456                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 16:   ADC_output = (uint16) ( (((uint16
      +                          )(ADRESH)) << 8) | ((uint16) (ADRESL)) );
  5457   001260  50C4               	movf	196,w,c	;volatile
  5458   001262  6E5C               	movwf	??_ADC_ISR^0,c
  5459   001264  50C3               	movf	195,w,c	;volatile
  5460   001266  6E52               	movwf	_ADC_output^0,c
  5461   001268  C05C  F053         	movff	??_ADC_ISR,_ADC_output+1
  5462   00126C                     
  5463                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 17:   ADC_callback(&ADC_output);
  5464   00126C  0E52               	movlw	low _ADC_output
  5465   00126E  6E5B               	movwf	___ADC@result^0,c
  5466   001270  D802               	call	i1u359_28
  5467   001272  EF47  F009         	goto	i1u359_29
  5468   001276                     i1u359_28:
  5469   001276  FFFF               	dw	65535	; assembler added errata NOP
  5470   001278  0005               	push	
  5471   00127A  6EFA               	movwf	pclath,c
  5472   00127C  5048               	movf	_ADC_callback^0,w,c
  5473   00127E  6EFD               	movwf	tosl,c
  5474   001280  5049               	movf	(_ADC_callback+1)^0,w,c
  5475   001282  6EFE               	movwf	tosh,c
  5476   001284  50F8               	movf	tblptru,w,c
  5477   001286  6EFF               	movwf	tosu,c
  5478   001288  50FA               	movf	pclath,w,c
  5479   00128A  0012               	return		;indir
  5480   00128C  FFFF               	dw	65535	; errata NOP
  5481   00128E                     i1u359_29:
  5482   00128E                     i1l712:
  5483   00128E  FFFF               	dw	65535	; assembler added errata NOP
  5484   001290  0012               	return		;funcret
  5485   001292  FFFF               	dw	65535	; errata NOP
  5486   001294                     __end_of_ADC_ISR:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function ___ADC *****************
  5490 ;; Defined at:
  5491 ;;		line 51 in file "application.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  result          1    7[COMRAM] PTR unsigned short 
  5494 ;;		 -> ADC_output(2), 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  lresult         2    0        unsigned short 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr2l, fsr2h, status,2
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5506 ;;      Params:         1       0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0
  5509 ;;      Totals:         1       0       0       0       0       0       0
  5510 ;;Total ram usage:        1 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 3
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_ADC_ISR
  5517 ;;		i2_ADC_ISR
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text24
  5522   00138A                     __ptext24:
  5523                           	callstack 0
  5524   00138A                     ___ADC:
  5525                           	callstack 0
  5526   00138A  FFFF               	dw	65535	; assembler added errata NOP
  5527                           
  5528                           ;Skip over the trampoline to the duplicate function for level 2
  5529   00138C  A26E               	btfss	int$flags,1,c
  5530   00138E  EFCB  F009         	goto	___ADC$intlevel1
  5531   001392  EF0E  F00A         	goto	i2___ADC
  5532   001396                     ___ADC$intlevel1:
  5533                           	callstack 0
  5534   001396  FFFF               	dw	65535	; assembler added errata NOP
  5535   001398  0012               	return		;funcret
  5536   00139A  FFFF               	dw	65535	; errata NOP
  5537   00139C                     __end_of___ADC:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _InterruptManager *****************
  5541 ;; Defined at:
  5542 ;;		line 13 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5556 ;;      Params:         0       0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0
  5558 ;;      Temps:          4       0       0       0       0       0       0
  5559 ;;      Totals:         4       0       0       0       0       0       0
  5560 ;;Total ram usage:        4 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 2
  5563 ;; This function calls:
  5564 ;;		i2_ADC_ISR
  5565 ;;		i2_INT0_ISR
  5566 ;;		i2_INT1_ISR
  5567 ;;		i2_INT2_ISR
  5568 ;;		i2_RB4_ISR
  5569 ;;		i2_RB5_ISR
  5570 ;;		i2_RB6_ISR
  5571 ;;		i2_RB7_ISR
  5572 ;; This function is called by:
  5573 ;;		Interrupt level 2
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	intcode
  5578   000008                     __pintcode:
  5579                           	callstack 0
  5580   000008                     _InterruptManager:
  5581                           	callstack 0
  5582   000008  FFFF               	dw	65535	; assembler added errata NOP
  5583                           
  5584                           ;incstack = 0
  5585   00000A  826E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5586   00000C  EF0B  F003         	goto	int_func
  5587                           
  5588                           	psect	intcode_body
  5589   000616                     __pintcode_body:
  5590                           	callstack 19
  5591   000616                     int_func:
  5592                           	callstack 19
  5593   000616  FFFF               	dw	65535	; errata NOP
  5594   000618  CFFA F057          	movff	pclath,??_InterruptManager
  5595   00061C  CFFB F058          	movff	pclatu,??_InterruptManager+1
  5596   000620  CFD9 F059          	movff	fsr2l,??_InterruptManager+2
  5597   000624  CFDA F05A          	movff	fsr2h,??_InterruptManager+3
  5598   000628                     
  5599                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 16:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  5600   000628  A2F2               	btfss	242,1,c	;volatile
  5601   00062A  EF19  F003         	goto	i2u457_41
  5602   00062E  EF1C  F003         	goto	i2u457_40
  5603   000632                     i2u457_41:
  5604   000632  FFFF               	dw	65535	; assembler added errata NOP
  5605   000634  EF28  F003         	goto	i2l4860
  5606   000638                     i2u457_40:
  5607   000638  FFFF               	dw	65535	; assembler added errata NOP
  5608   00063A  A8F2               	btfss	242,4,c	;volatile
  5609   00063C  EF22  F003         	goto	i2u458_41
  5610   000640  EF25  F003         	goto	i2u458_40
  5611   000644                     i2u458_41:
  5612   000644  FFFF               	dw	65535	; assembler added errata NOP
  5613   000646  EF28  F003         	goto	i2l4860
  5614   00064A                     i2u458_40:
  5615   00064A  FFFF               	dw	65535	; assembler added errata NOP
  5616   00064C                     
  5617                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 17:         INT0_ISR();
  5618   00064C  EC0A  F00A         	call	i2_INT0_ISR	;wreg free
  5619   000650                     i2l4860:
  5620   000650  FFFF               	dw	65535	; assembler added errata NOP
  5621                           
  5622                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 18:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  5623   000652  A0F0               	btfss	240,0,c	;volatile
  5624   000654  EF2E  F003         	goto	i2u459_41
  5625   000658  EF31  F003         	goto	i2u459_40
  5626   00065C                     i2u459_41:
  5627   00065C  FFFF               	dw	65535	; assembler added errata NOP
  5628   00065E  EF3D  F003         	goto	i2l4866
  5629   000662                     i2u459_40:
  5630   000662  FFFF               	dw	65535	; assembler added errata NOP
  5631   000664  A6F0               	btfss	240,3,c	;volatile
  5632   000666  EF37  F003         	goto	i2u460_41
  5633   00066A  EF3A  F003         	goto	i2u460_40
  5634   00066E                     i2u460_41:
  5635   00066E  FFFF               	dw	65535	; assembler added errata NOP
  5636   000670  EF3D  F003         	goto	i2l4866
  5637   000674                     i2u460_40:
  5638   000674  FFFF               	dw	65535	; assembler added errata NOP
  5639   000676                     
  5640                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 19:         INT1_ISR();
  5641   000676  EC06  F00A         	call	i2_INT1_ISR	;wreg free
  5642   00067A                     i2l4866:
  5643   00067A  FFFF               	dw	65535	; assembler added errata NOP
  5644                           
  5645                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 20:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  5646   00067C  A2F0               	btfss	240,1,c	;volatile
  5647   00067E  EF43  F003         	goto	i2u461_41
  5648   000682  EF46  F003         	goto	i2u461_40
  5649   000686                     i2u461_41:
  5650   000686  FFFF               	dw	65535	; assembler added errata NOP
  5651   000688  EF52  F003         	goto	i2l4872
  5652   00068C                     i2u461_40:
  5653   00068C  FFFF               	dw	65535	; assembler added errata NOP
  5654   00068E  A8F0               	btfss	240,4,c	;volatile
  5655   000690  EF4C  F003         	goto	i2u462_41
  5656   000694  EF4F  F003         	goto	i2u462_40
  5657   000698                     i2u462_41:
  5658   000698  FFFF               	dw	65535	; assembler added errata NOP
  5659   00069A  EF52  F003         	goto	i2l4872
  5660   00069E                     i2u462_40:
  5661   00069E  FFFF               	dw	65535	; assembler added errata NOP
  5662   0006A0                     
  5663                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 21:         INT2_ISR();
  5664   0006A0  EC02  F00A         	call	i2_INT2_ISR	;wreg free
  5665   0006A4                     i2l4872:
  5666   0006A4  FFFF               	dw	65535	; assembler added errata NOP
  5667                           
  5668                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 25:  if(INTCONbits.RBIF == 1 && INTCONbi
      +                          ts.RBIE == 1){
  5669   0006A6  A0F2               	btfss	242,0,c	;volatile
  5670   0006A8  EF58  F003         	goto	i2u463_41
  5671   0006AC  EF5B  F003         	goto	i2u463_40
  5672   0006B0                     i2u463_41:
  5673   0006B0  FFFF               	dw	65535	; assembler added errata NOP
  5674   0006B2  EF38  F004         	goto	i2l4930
  5675   0006B6                     i2u463_40:
  5676   0006B6  FFFF               	dw	65535	; assembler added errata NOP
  5677   0006B8  A6F2               	btfss	242,3,c	;volatile
  5678   0006BA  EF61  F003         	goto	i2u464_41
  5679   0006BE  EF64  F003         	goto	i2u464_40
  5680   0006C2                     i2u464_41:
  5681   0006C2  FFFF               	dw	65535	; assembler added errata NOP
  5682   0006C4  EF38  F004         	goto	i2l4930
  5683   0006C8                     i2u464_40:
  5684   0006C8  FFFF               	dw	65535	; assembler added errata NOP
  5685   0006CA  A881               	btfss	129,4,c	;volatile
  5686   0006CC  EF6A  F003         	goto	i2u465_41
  5687   0006D0  EF6D  F003         	goto	i2u465_40
  5688   0006D4                     i2u465_41:
  5689   0006D4  FFFF               	dw	65535	; assembler added errata NOP
  5690   0006D6  EF7E  F003         	goto	i2l1041
  5691   0006DA                     i2u465_40:
  5692   0006DA  FFFF               	dw	65535	; assembler added errata NOP
  5693   0006DC  042B               	decf	_RB4f^0,w,c	;volatile
  5694   0006DE  A4D8               	btfss	status,2,c
  5695   0006E0  EF74  F003         	goto	i2u466_41
  5696   0006E4  EF77  F003         	goto	i2u466_40
  5697   0006E8                     i2u466_41:
  5698   0006E8  FFFF               	dw	65535	; assembler added errata NOP
  5699   0006EA  EF7E  F003         	goto	i2l1041
  5700   0006EE                     i2u466_40:
  5701   0006EE  FFFF               	dw	65535	; assembler added errata NOP
  5702   0006F0  6A2B               	clrf	_RB4f^0,c	;volatile
  5703   0006F2  0E01               	movlw	1
  5704   0006F4  ECFE  F009         	call	i2_RB4_ISR
  5705   0006F8  EF99  F003         	goto	i2l4888
  5706   0006FC                     i2l1041:
  5707   0006FC  FFFF               	dw	65535	; assembler added errata NOP
  5708   0006FE  B881               	btfsc	129,4,c	;volatile
  5709   000700  EF84  F003         	goto	i2u467_41
  5710   000704  EF87  F003         	goto	i2u467_40
  5711   000708                     i2u467_41:
  5712   000708  FFFF               	dw	65535	; assembler added errata NOP
  5713   00070A  EF99  F003         	goto	i2l1044
  5714   00070E                     i2u467_40:
  5715   00070E  FFFF               	dw	65535	; assembler added errata NOP
  5716   000710  502B               	movf	_RB4f^0,w,c	;volatile
  5717   000712  A4D8               	btfss	status,2,c
  5718   000714  EF8E  F003         	goto	i2u468_41
  5719   000718  EF91  F003         	goto	i2u468_40
  5720   00071C                     i2u468_41:
  5721   00071C  FFFF               	dw	65535	; assembler added errata NOP
  5722   00071E  EF99  F003         	goto	i2l1044
  5723   000722                     i2u468_40:
  5724   000722  FFFF               	dw	65535	; assembler added errata NOP
  5725   000724  0E01               	movlw	1
  5726   000726  6E2B               	movwf	_RB4f^0,c	;volatile
  5727   000728  0E00               	movlw	0
  5728   00072A  ECFE  F009         	call	i2_RB4_ISR
  5729   00072E  EF99  F003         	goto	i2l4888
  5730   000732                     i2l1044:
  5731   000732                     i2l4888:
  5732   000732  FFFF               	dw	65535	; assembler added errata NOP
  5733   000734  AA81               	btfss	129,5,c	;volatile
  5734   000736  EF9F  F003         	goto	i2u469_41
  5735   00073A  EFA2  F003         	goto	i2u469_40
  5736   00073E                     i2u469_41:
  5737   00073E  FFFF               	dw	65535	; assembler added errata NOP
  5738   000740  EFB3  F003         	goto	i2l1046
  5739   000744                     i2u469_40:
  5740   000744  FFFF               	dw	65535	; assembler added errata NOP
  5741   000746  042A               	decf	_RB5f^0,w,c	;volatile
  5742   000748  A4D8               	btfss	status,2,c
  5743   00074A  EFA9  F003         	goto	i2u470_41
  5744   00074E  EFAC  F003         	goto	i2u470_40
  5745   000752                     i2u470_41:
  5746   000752  FFFF               	dw	65535	; assembler added errata NOP
  5747   000754  EFB3  F003         	goto	i2l1046
  5748   000758                     i2u470_40:
  5749   000758  FFFF               	dw	65535	; assembler added errata NOP
  5750   00075A  6A2A               	clrf	_RB5f^0,c	;volatile
  5751   00075C  0E01               	movlw	1
  5752   00075E  ECFA  F009         	call	i2_RB5_ISR
  5753   000762  EFCE  F003         	goto	i2l4902
  5754   000766                     i2l1046:
  5755   000766  FFFF               	dw	65535	; assembler added errata NOP
  5756   000768  BA81               	btfsc	129,5,c	;volatile
  5757   00076A  EFB9  F003         	goto	i2u471_41
  5758   00076E  EFBC  F003         	goto	i2u471_40
  5759   000772                     i2u471_41:
  5760   000772  FFFF               	dw	65535	; assembler added errata NOP
  5761   000774  EFCE  F003         	goto	i2l1049
  5762   000778                     i2u471_40:
  5763   000778  FFFF               	dw	65535	; assembler added errata NOP
  5764   00077A  502A               	movf	_RB5f^0,w,c	;volatile
  5765   00077C  A4D8               	btfss	status,2,c
  5766   00077E  EFC3  F003         	goto	i2u472_41
  5767   000782  EFC6  F003         	goto	i2u472_40
  5768   000786                     i2u472_41:
  5769   000786  FFFF               	dw	65535	; assembler added errata NOP
  5770   000788  EFCE  F003         	goto	i2l1049
  5771   00078C                     i2u472_40:
  5772   00078C  FFFF               	dw	65535	; assembler added errata NOP
  5773   00078E  0E01               	movlw	1
  5774   000790  6E2A               	movwf	_RB5f^0,c	;volatile
  5775   000792  0E00               	movlw	0
  5776   000794  ECFA  F009         	call	i2_RB5_ISR
  5777   000798  EFCE  F003         	goto	i2l4902
  5778   00079C                     i2l1049:
  5779   00079C                     i2l4902:
  5780   00079C  FFFF               	dw	65535	; assembler added errata NOP
  5781   00079E  AC81               	btfss	129,6,c	;volatile
  5782   0007A0  EFD4  F003         	goto	i2u473_41
  5783   0007A4  EFD7  F003         	goto	i2u473_40
  5784   0007A8                     i2u473_41:
  5785   0007A8  FFFF               	dw	65535	; assembler added errata NOP
  5786   0007AA  EFE8  F003         	goto	i2l1051
  5787   0007AE                     i2u473_40:
  5788   0007AE  FFFF               	dw	65535	; assembler added errata NOP
  5789   0007B0  0429               	decf	_RB6f^0,w,c	;volatile
  5790   0007B2  A4D8               	btfss	status,2,c
  5791   0007B4  EFDE  F003         	goto	i2u474_41
  5792   0007B8  EFE1  F003         	goto	i2u474_40
  5793   0007BC                     i2u474_41:
  5794   0007BC  FFFF               	dw	65535	; assembler added errata NOP
  5795   0007BE  EFE8  F003         	goto	i2l1051
  5796   0007C2                     i2u474_40:
  5797   0007C2  FFFF               	dw	65535	; assembler added errata NOP
  5798   0007C4  6A29               	clrf	_RB6f^0,c	;volatile
  5799   0007C6  0E01               	movlw	1
  5800   0007C8  ECF6  F009         	call	i2_RB6_ISR
  5801   0007CC  EF03  F004         	goto	i2l4916
  5802   0007D0                     i2l1051:
  5803   0007D0  FFFF               	dw	65535	; assembler added errata NOP
  5804   0007D2  BC81               	btfsc	129,6,c	;volatile
  5805   0007D4  EFEE  F003         	goto	i2u475_41
  5806   0007D8  EFF1  F003         	goto	i2u475_40
  5807   0007DC                     i2u475_41:
  5808   0007DC  FFFF               	dw	65535	; assembler added errata NOP
  5809   0007DE  EF03  F004         	goto	i2l1054
  5810   0007E2                     i2u475_40:
  5811   0007E2  FFFF               	dw	65535	; assembler added errata NOP
  5812   0007E4  5029               	movf	_RB6f^0,w,c	;volatile
  5813   0007E6  A4D8               	btfss	status,2,c
  5814   0007E8  EFF8  F003         	goto	i2u476_41
  5815   0007EC  EFFB  F003         	goto	i2u476_40
  5816   0007F0                     i2u476_41:
  5817   0007F0  FFFF               	dw	65535	; assembler added errata NOP
  5818   0007F2  EF03  F004         	goto	i2l1054
  5819   0007F6                     i2u476_40:
  5820   0007F6  FFFF               	dw	65535	; assembler added errata NOP
  5821   0007F8  0E01               	movlw	1
  5822   0007FA  6E29               	movwf	_RB6f^0,c	;volatile
  5823   0007FC  0E00               	movlw	0
  5824   0007FE  ECF6  F009         	call	i2_RB6_ISR
  5825   000802  EF03  F004         	goto	i2l4916
  5826   000806                     i2l1054:
  5827   000806                     i2l4916:
  5828   000806  FFFF               	dw	65535	; assembler added errata NOP
  5829   000808  AE81               	btfss	129,7,c	;volatile
  5830   00080A  EF09  F004         	goto	i2u477_41
  5831   00080E  EF0C  F004         	goto	i2u477_40
  5832   000812                     i2u477_41:
  5833   000812  FFFF               	dw	65535	; assembler added errata NOP
  5834   000814  EF1D  F004         	goto	i2l1056
  5835   000818                     i2u477_40:
  5836   000818  FFFF               	dw	65535	; assembler added errata NOP
  5837   00081A  0428               	decf	_RB7f^0,w,c	;volatile
  5838   00081C  A4D8               	btfss	status,2,c
  5839   00081E  EF13  F004         	goto	i2u478_41
  5840   000822  EF16  F004         	goto	i2u478_40
  5841   000826                     i2u478_41:
  5842   000826  FFFF               	dw	65535	; assembler added errata NOP
  5843   000828  EF1D  F004         	goto	i2l1056
  5844   00082C                     i2u478_40:
  5845   00082C  FFFF               	dw	65535	; assembler added errata NOP
  5846   00082E  6A28               	clrf	_RB7f^0,c	;volatile
  5847   000830  0E01               	movlw	1
  5848   000832  ECF2  F009         	call	i2_RB7_ISR
  5849   000836  EF38  F004         	goto	i2l4930
  5850   00083A                     i2l1056:
  5851   00083A  FFFF               	dw	65535	; assembler added errata NOP
  5852   00083C  BE81               	btfsc	129,7,c	;volatile
  5853   00083E  EF23  F004         	goto	i2u479_41
  5854   000842  EF26  F004         	goto	i2u479_40
  5855   000846                     i2u479_41:
  5856   000846  FFFF               	dw	65535	; assembler added errata NOP
  5857   000848  EF38  F004         	goto	i2l1059
  5858   00084C                     i2u479_40:
  5859   00084C  FFFF               	dw	65535	; assembler added errata NOP
  5860   00084E  5028               	movf	_RB7f^0,w,c	;volatile
  5861   000850  A4D8               	btfss	status,2,c
  5862   000852  EF2D  F004         	goto	i2u480_41
  5863   000856  EF30  F004         	goto	i2u480_40
  5864   00085A                     i2u480_41:
  5865   00085A  FFFF               	dw	65535	; assembler added errata NOP
  5866   00085C  EF38  F004         	goto	i2l1059
  5867   000860                     i2u480_40:
  5868   000860  FFFF               	dw	65535	; assembler added errata NOP
  5869   000862  0E01               	movlw	1
  5870   000864  6E28               	movwf	_RB7f^0,c	;volatile
  5871   000866  0E00               	movlw	0
  5872   000868  ECF2  F009         	call	i2_RB7_ISR
  5873   00086C  EF38  F004         	goto	i2l4930
  5874   000870                     i2l1059:
  5875   000870                     i2l4930:
  5876   000870  FFFF               	dw	65535	; assembler added errata NOP
  5877                           
  5878                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 34:  if((PIE1bits.ADIE) == 1 && (PIR1bit
      +                          s.ADIF) == 1)
  5879   000872  AC9D               	btfss	157,6,c	;volatile
  5880   000874  EF3E  F004         	goto	i2u481_41
  5881   000878  EF41  F004         	goto	i2u481_40
  5882   00087C                     i2u481_41:
  5883   00087C  FFFF               	dw	65535	; assembler added errata NOP
  5884   00087E  EF4D  F004         	goto	i2l1061
  5885   000882                     i2u481_40:
  5886   000882  FFFF               	dw	65535	; assembler added errata NOP
  5887   000884  AC9E               	btfss	158,6,c	;volatile
  5888   000886  EF47  F004         	goto	i2u482_41
  5889   00088A  EF4A  F004         	goto	i2u482_40
  5890   00088E                     i2u482_41:
  5891   00088E  FFFF               	dw	65535	; assembler added errata NOP
  5892   000890  EF4D  F004         	goto	i2l1061
  5893   000894                     i2u482_40:
  5894   000894  FFFF               	dw	65535	; assembler added errata NOP
  5895   000896                     
  5896                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 35:   ADC_ISR();
  5897   000896  EC4A  F009         	call	i2_ADC_ISR	;wreg free
  5898   00089A                     i2l1061:
  5899   00089A  FFFF               	dw	65535	; assembler added errata NOP
  5900   00089C  C05A  FFDA         	movff	??_InterruptManager+3,fsr2h
  5901   0008A0  C059  FFD9         	movff	??_InterruptManager+2,fsr2l
  5902   0008A4  C058  FFFB         	movff	??_InterruptManager+1,pclatu
  5903   0008A8  C057  FFFA         	movff	??_InterruptManager,pclath
  5904   0008AC  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5905   0008AE  0011               	retfie		f
  5906   0008B0  FFFF               	dw	65535	; errata NOP
  5907   0008B2                     __end_of_InterruptManager:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function i2_RB7_ISR *****************
  5911 ;; Defined at:
  5912 ;;		line 78 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  fl              1    wreg     unsigned char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  fl              1    0[COMRAM] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5926 ;;      Params:         0       0       0       0       0       0       0
  5927 ;;      Locals:         1       0       0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0
  5929 ;;      Totals:         1       0       0       0       0       0       0
  5930 ;;Total ram usage:        1 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_InterruptManager
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text26
  5940   0013E4                     __ptext26:
  5941                           	callstack 0
  5942   0013E4                     i2_RB7_ISR:
  5943                           	callstack 0
  5944   0013E4  FFFF               	dw	65535	; assembler added errata NOP
  5945   0013E6                     
  5946                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 79:  INTCONbits.RBIF=0;
  5947   0013E6  90F2               	bcf	242,0,c	;volatile
  5948   0013E8  0012               	return		;funcret
  5949   0013EA  FFFF               	dw	65535	; errata NOP
  5950   0013EC                     __end_ofi2_RB7_ISR:
  5951                           	callstack 0
  5952                           
  5953 ;; *************** function i2_RB6_ISR *****************
  5954 ;; Defined at:
  5955 ;;		line 67 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  fl              1    wreg     unsigned char 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  fl              1    0[COMRAM] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5969 ;;      Params:         0       0       0       0       0       0       0
  5970 ;;      Locals:         1       0       0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0
  5972 ;;      Totals:         1       0       0       0       0       0       0
  5973 ;;Total ram usage:        1 bytes
  5974 ;; Hardware stack levels used: 1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_InterruptManager
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text27
  5983   0013EC                     __ptext27:
  5984                           	callstack 0
  5985   0013EC                     i2_RB6_ISR:
  5986                           	callstack 0
  5987   0013EC  FFFF               	dw	65535	; assembler added errata NOP
  5988   0013EE                     
  5989                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 68:  INTCONbits.RBIF=0;
  5990   0013EE  90F2               	bcf	242,0,c	;volatile
  5991   0013F0  0012               	return		;funcret
  5992   0013F2  FFFF               	dw	65535	; errata NOP
  5993   0013F4                     __end_ofi2_RB6_ISR:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function i2_RB5_ISR *****************
  5997 ;; Defined at:
  5998 ;;		line 56 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  fl              1    wreg     unsigned char 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  fl              1    0[COMRAM] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6012 ;;      Params:         0       0       0       0       0       0       0
  6013 ;;      Locals:         1       0       0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0
  6015 ;;      Totals:         1       0       0       0       0       0       0
  6016 ;;Total ram usage:        1 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_InterruptManager
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text28
  6026   0013F4                     __ptext28:
  6027                           	callstack 0
  6028   0013F4                     i2_RB5_ISR:
  6029                           	callstack 0
  6030   0013F4  FFFF               	dw	65535	; assembler added errata NOP
  6031   0013F6                     
  6032                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 57:  INTCONbits.RBIF=0;
  6033   0013F6  90F2               	bcf	242,0,c	;volatile
  6034   0013F8  0012               	return		;funcret
  6035   0013FA  FFFF               	dw	65535	; errata NOP
  6036   0013FC                     __end_ofi2_RB5_ISR:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function i2_RB4_ISR *****************
  6040 ;; Defined at:
  6041 ;;		line 45 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  fl              1    wreg     unsigned char 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  fl              1    0[COMRAM] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6055 ;;      Params:         0       0       0       0       0       0       0
  6056 ;;      Locals:         1       0       0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0
  6058 ;;      Totals:         1       0       0       0       0       0       0
  6059 ;;Total ram usage:        1 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_InterruptManager
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text29
  6069   0013FC                     __ptext29:
  6070                           	callstack 0
  6071   0013FC                     i2_RB4_ISR:
  6072                           	callstack 0
  6073   0013FC  FFFF               	dw	65535	; assembler added errata NOP
  6074   0013FE                     
  6075                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 46:  INTCONbits.RBIF=0;
  6076   0013FE  90F2               	bcf	242,0,c	;volatile
  6077   001400  0012               	return		;funcret
  6078   001402  FFFF               	dw	65535	; errata NOP
  6079   001404                     __end_ofi2_RB4_ISR:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function i2_INT2_ISR *****************
  6083 ;; Defined at:
  6084 ;;		line 38 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		None
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6098 ;;      Params:         0       0       0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0
  6101 ;;      Totals:         0       0       0       0       0       0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_InterruptManager
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text30
  6112   001404                     __ptext30:
  6113                           	callstack 0
  6114   001404                     i2_INT2_ISR:
  6115                           	callstack 0
  6116   001404  FFFF               	dw	65535	; assembler added errata NOP
  6117   001406                     
  6118                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 39:  INTCON3bits.INT2IF=0;
  6119   001406  92F0               	bcf	240,1,c	;volatile
  6120   001408  0012               	return		;funcret
  6121   00140A  FFFF               	dw	65535	; errata NOP
  6122   00140C                     __end_ofi2_INT2_ISR:
  6123                           	callstack 0
  6124                           
  6125 ;; *************** function i2_INT1_ISR *****************
  6126 ;; Defined at:
  6127 ;;		line 33 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		None
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6141 ;;      Params:         0       0       0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_InterruptManager
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text31
  6155   00140C                     __ptext31:
  6156                           	callstack 0
  6157   00140C                     i2_INT1_ISR:
  6158                           	callstack 0
  6159   00140C  FFFF               	dw	65535	; assembler added errata NOP
  6160   00140E                     
  6161                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 34:  INTCON3bits.INT1IF=0;
  6162   00140E  90F0               	bcf	240,0,c	;volatile
  6163   001410  0012               	return		;funcret
  6164   001412  FFFF               	dw	65535	; errata NOP
  6165   001414                     __end_ofi2_INT1_ISR:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function i2_INT0_ISR *****************
  6169 ;; Defined at:
  6170 ;;		line 28 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		None
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6184 ;;      Params:         0       0       0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_InterruptManager
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text32
  6198   001414                     __ptext32:
  6199                           	callstack 0
  6200   001414                     i2_INT0_ISR:
  6201                           	callstack 0
  6202   001414  FFFF               	dw	65535	; assembler added errata NOP
  6203   001416                     
  6204                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 29:  INTCONbits.INT0IF=0;
  6205   001416  92F2               	bcf	242,1,c	;volatile
  6206   001418  0012               	return		;funcret
  6207   00141A  FFFF               	dw	65535	; errata NOP
  6208   00141C                     __end_ofi2_INT0_ISR:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function i2_ADC_ISR *****************
  6212 ;; Defined at:
  6213 ;;		line 13 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6227 ;;      Params:         0       0       0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0
  6229 ;;      Temps:          2       0       0       0       0       0       0
  6230 ;;      Totals:         2       0       0       0       0       0       0
  6231 ;;Total ram usage:        2 bytes
  6232 ;; Hardware stack levels used: 1
  6233 ;; Hardware stack levels required when called: 1
  6234 ;; This function calls:
  6235 ;;		NULL
  6236 ;;		i2___ADC
  6237 ;; This function is called by:
  6238 ;;		_InterruptManager
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text33
  6243   001294                     __ptext33:
  6244                           	callstack 0
  6245   001294                     i2_ADC_ISR:
  6246                           	callstack 0
  6247   001294  FFFF               	dw	65535	; assembler added errata NOP
  6248   001296                     
  6249                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 14:  (PIR1bits.ADIF=0);
  6250   001296  9C9E               	bcf	158,6,c	;volatile
  6251   001298                     
  6252                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 15:  if(ADC_callback){
  6253   001298  5048               	movf	_ADC_callback^0,w,c
  6254   00129A  1049               	iorwf	(_ADC_callback+1)^0,w,c
  6255   00129C  B4D8               	btfsc	status,2,c
  6256   00129E  EF53  F009         	goto	i2u362_41
  6257   0012A2  EF56  F009         	goto	i2u362_40
  6258   0012A6                     i2u362_41:
  6259   0012A6  FFFF               	dw	65535	; assembler added errata NOP
  6260   0012A8  EF6E  F009         	goto	i2l712
  6261   0012AC                     i2u362_40:
  6262   0012AC  FFFF               	dw	65535	; assembler added errata NOP
  6263   0012AE                     
  6264                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 16:   ADC_output = (uint16) ( (((uint16
      +                          )(ADRESH)) << 8) | ((uint16) (ADRESL)) );
  6265   0012AE  50C4               	movf	196,w,c	;volatile
  6266   0012B0  6E55               	movwf	??i2_ADC_ISR^0,c
  6267   0012B2  50C3               	movf	195,w,c	;volatile
  6268   0012B4  6E52               	movwf	_ADC_output^0,c
  6269   0012B6  C055  F053         	movff	??i2_ADC_ISR,_ADC_output+1
  6270   0012BA                     
  6271                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 17:   ADC_callback(&ADC_output);
  6272   0012BA  0E52               	movlw	low _ADC_output
  6273   0012BC  6E54               	movwf	i2___ADC@result^0,c
  6274   0012BE  D802               	call	i2u363_48
  6275   0012C0  EF6E  F009         	goto	i2u363_49
  6276   0012C4                     i2u363_48:
  6277   0012C4  FFFF               	dw	65535	; assembler added errata NOP
  6278   0012C6  0005               	push	
  6279   0012C8  6EFA               	movwf	pclath,c
  6280   0012CA  5048               	movf	_ADC_callback^0,w,c
  6281   0012CC  6EFD               	movwf	tosl,c
  6282   0012CE  5049               	movf	(_ADC_callback+1)^0,w,c
  6283   0012D0  6EFE               	movwf	tosh,c
  6284   0012D2  50F8               	movf	tblptru,w,c
  6285   0012D4  6EFF               	movwf	tosu,c
  6286   0012D6  50FA               	movf	pclath,w,c
  6287   0012D8  0012               	return		;indir
  6288   0012DA  FFFF               	dw	65535	; errata NOP
  6289   0012DC                     i2u363_49:
  6290   0012DC                     i2l712:
  6291   0012DC  FFFF               	dw	65535	; assembler added errata NOP
  6292   0012DE  0012               	return		;funcret
  6293   0012E0  FFFF               	dw	65535	; errata NOP
  6294   0012E2                     __end_ofi2_ADC_ISR:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function i2___ADC *****************
  6298 ;; Defined at:
  6299 ;;		line 51 in file "application.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  result          1    0[COMRAM] PTR unsigned short 
  6302 ;;		 -> ADC_output(2), 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  lresult         2    0        unsigned short 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      void 
  6307 ;; Registers used:
  6308 ;;		wreg, fsr2l, fsr2h, status,2
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6314 ;;      Params:         1       0       0       0       0       0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0
  6317 ;;      Totals:         1       0       0       0       0       0       0
  6318 ;;Total ram usage:        1 bytes
  6319 ;; Hardware stack levels used: 1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_ADC_ISR
  6324 ;;		i2_ADC_ISR
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text34
  6329   00141C                     __ptext34:
  6330                           	callstack 0
  6331   00141C                     i2___ADC:
  6332                           	callstack 0
  6333   00141C  FFFF               	dw	65535	; assembler added errata NOP
  6334   00141E  0012               	return		;funcret
  6335   001420  FFFF               	dw	65535	; errata NOP
  6336   001422                     __end_ofi2___ADC:
  6337                           	callstack 0
  6338                           
  6339                           	psect	rparam
  6340   000001                     ___rparam_used  equ	1
  6341   000000                     ___param_bank   equ	0
  6342   000000                     __Lparam        equ	__Lrparam
  6343   000000                     __Hparam        equ	__Hrparam
  6344                           
  6345                           	psect	temp
  6346   00006E                     btemp:
  6347                           	callstack 0
  6348   00006E                     	ds	1
  6349   00006E                     int$flags       set	btemp
  6350   00006F                     wtemp8          set	btemp+1
  6351   00006F                     ttemp5          set	btemp+1
  6352   000072                     ttemp6          set	btemp+4
  6353   000076                     ttemp7          set	btemp+8
  6354                           
  6355                           	psect	config
  6356                           
  6357                           ; Padding undefined space
  6358   300000                     	org	3145728
  6359   300000  FF                 	db	255
  6360                           
  6361                           ;Config register CONFIG1H @ 0x300001
  6362                           ;	Oscillator Selection bits
  6363                           ;	OSC = HS, HS oscillator
  6364                           ;	Oscillator System Clock Switch Enable bit
  6365                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  6366   300001                     	org	3145729
  6367   300001  22                 	db	34
  6368                           
  6369                           ;Config register CONFIG2L @ 0x300002
  6370                           ;	Power-up Timer Enable bit
  6371                           ;	PWRT = OFF, PWRT disabled
  6372                           ;	Brown-out Reset Enable bit
  6373                           ;	BOR = OFF, Brown-out Reset disabled
  6374                           ;	Brown-out Reset Voltage bits
  6375                           ;	BORV = 20, VBOR set to 2.0V
  6376   300002                     	org	3145730
  6377   300002  0D                 	db	13
  6378                           
  6379                           ;Config register CONFIG2H @ 0x300003
  6380                           ;	Watchdog Timer Enable bit
  6381                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6382                           ;	Watchdog Timer Postscale Select bits
  6383                           ;	WDTPS = 128, 1:128
  6384   300003                     	org	3145731
  6385   300003  0E                 	db	14
  6386                           
  6387                           ; Padding undefined space
  6388   300004                     	org	3145732
  6389   300004  FF                 	db	255
  6390                           
  6391                           ;Config register CONFIG3H @ 0x300005
  6392                           ;	CCP2 Mux bit
  6393                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  6394   300005                     	org	3145733
  6395   300005  01                 	db	1
  6396                           
  6397                           ;Config register CONFIG4L @ 0x300006
  6398                           ;	Stack Full/Underflow Reset Enable bit
  6399                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  6400                           ;	Low Voltage ICSP Enable bit
  6401                           ;	LVP = OFF, Low Voltage ICSP disabled
  6402                           ;	Background Debugger Enable bit
  6403                           ;	DEBUG = 0x1, unprogrammed default
  6404   300006                     	org	3145734
  6405   300006  81                 	db	129
  6406                           
  6407                           ; Padding undefined space
  6408   300007                     	org	3145735
  6409   300007  FF                 	db	255
  6410                           
  6411                           ;Config register CONFIG5L @ 0x300008
  6412                           ;	Code Protection bit
  6413                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  6414                           ;	Code Protection bit
  6415                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  6416                           ;	Code Protection bit
  6417                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  6418                           ;	Code Protection bit
  6419                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  6420   300008                     	org	3145736
  6421   300008  0F                 	db	15
  6422                           
  6423                           ;Config register CONFIG5H @ 0x300009
  6424                           ;	Boot Block Code Protection bit
  6425                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  6426                           ;	Data EEPROM Code Protection bit
  6427                           ;	CPD = OFF, Data EEPROM not code protected
  6428   300009                     	org	3145737
  6429   300009  C0                 	db	192
  6430                           
  6431                           ;Config register CONFIG6L @ 0x30000A
  6432                           ;	Write Protection bit
  6433                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  6434                           ;	Write Protection bit
  6435                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  6436                           ;	Write Protection bit
  6437                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  6438                           ;	Write Protection bit
  6439                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  6440   30000A                     	org	3145738
  6441   30000A  0F                 	db	15
  6442                           
  6443                           ;Config register CONFIG6H @ 0x30000B
  6444                           ;	Configuration Register Write Protection bit
  6445                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  6446                           ;	Boot Block Write Protection bit
  6447                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  6448                           ;	Data EEPROM Write Protection bit
  6449                           ;	WRTD = OFF, Data EEPROM not write protected
  6450   30000B                     	org	3145739
  6451   30000B  E0                 	db	224
  6452                           
  6453                           ;Config register CONFIG7L @ 0x30000C
  6454                           ;	Table Read Protection bit
  6455                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  6456                           ;	Table Read Protection bit
  6457                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  6458                           ;	Table Read Protection bit
  6459                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  6460                           ;	Table Read Protection bit
  6461                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  6462   30000C                     	org	3145740
  6463   30000C  0F                 	db	15
  6464                           
  6465                           ;Config register CONFIG7H @ 0x30000D
  6466                           ;	Boot Block Table Read Protection bit
  6467                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  6468   30000D                     	org	3145741
  6469   30000D  40                 	db	64
  6470                           tosu	equ	0xFFF
  6471                           tosh	equ	0xFFE
  6472                           tosl	equ	0xFFD
  6473                           stkptr	equ	0xFFC
  6474                           pclatu	equ	0xFFB
  6475                           pclath	equ	0xFFA
  6476                           pcl	equ	0xFF9
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           indf0	equ	0xFEF
  6484                           postinc0	equ	0xFEE
  6485                           postdec0	equ	0xFED
  6486                           preinc0	equ	0xFEC
  6487                           plusw0	equ	0xFEB
  6488                           fsr0h	equ	0xFEA
  6489                           fsr0l	equ	0xFE9
  6490                           wreg	equ	0xFE8
  6491                           indf1	equ	0xFE7
  6492                           postinc1	equ	0xFE6
  6493                           postdec1	equ	0xFE5
  6494                           preinc1	equ	0xFE4
  6495                           plusw1	equ	0xFE3
  6496                           fsr1h	equ	0xFE2
  6497                           fsr1l	equ	0xFE1
  6498                           bsr	equ	0xFE0
  6499                           indf2	equ	0xFDF
  6500                           postinc2	equ	0xFDE
  6501                           postdec2	equ	0xFDD
  6502                           preinc2	equ	0xFDC
  6503                           plusw2	equ	0xFDB
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        83
    BSS         36
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     109
    BANK0           128     14      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC1$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), i2___ADC(), 

    __ADC@result	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    ADC_callback	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), i2___ADC(), NULL(), 

    ADC_callback$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    ADC_convert@lADC$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    ADC_init@lADC	PTR const struct . size(1) Largest target is 6
		 -> ADC1(BANK0[6]), 

    ADC_init@lADC$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    callback$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(BANK0[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(COMRAM[1]), LED_toggle@pin_local(BANK0[1]), 
		 -> relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 
		 -> seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(BANK0[1]), relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinr(COMRAM[4]), LED_initialize@pin_local(BANK0[1]), 
		 -> relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_toggle_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> LED_toggle@pin_local(BANK0[1]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LED_initialize@pin_local(BANK0[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    INT0_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_ADC_set_callback_routine@callback	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), i2___ADC(), 

    INT_INTx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_edge_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_enable@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_get_index@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_priority_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_INTx_set_callback_routine@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_check_access@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_check_access@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_enable@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_enable@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_initialize@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_initialize@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_priority_initialize@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_priority_initialize@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_set_callback_routine@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_set_callback_routine@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LED_initialize@led	PTR struct . size(1) Largest target is 1
		 -> LED_INT_HIGHPR(COMRAM[1]), LED_INT_LOWPR(COMRAM[1]), LED_main(COMRAM[1]), 

    LED_toggle@led	PTR struct . size(1) Largest target is 1
		 -> LED_main(COMRAM[1]), 

    NULL$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    RB4_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1774$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    S1827$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    S1827$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    S2867$buffer	PTR unsigned char  size(2) Largest target is 0

    S2867$source	PTR const unsigned char  size(2) Largest target is 0

    S856$0$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    S856$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _application_initialize->_ADC_init
    _LED_initialize->_GPIO_pin_initialize
    _GPIO_pin_initialize->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _GPIO_pin_direction_initialize->_GPIO_check_access
    _ADC_init->_ADC_select_channel
    _ADC_select_channel->_ADC_set_pin_config
    _LED_toggle->_GPIO_pin_toggle_logic
    _GPIO_pin_toggle_logic->_GPIO_check_access

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_ADC_ISR
    _ADC_ISR->___ADC

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->i2_ADC_ISR
    i2_ADC_ISR->i2___ADC

Critical Paths under _main in BANK0

    _main->_application_initialize
    _application_initialize->_ecu_init
    _ecu_init->_LED_initialize
    _GPIO_pin_initialize->_GPIO_pin_direction_initialize
    _GPIO_pin_initialize->_GPIO_pin_write_logic

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5031
                                             12 BANK0      2     2      0
                         _LED_toggle
             _application_initialize
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               2     2      0    3908
                                             10 BANK0      2     2      0
                           _ADC_init
                           _ecu_init
 ---------------------------------------------------------------------------------
 (2) _ecu_init                                             1     1      0    2701
                                              9 BANK0      1     1      0
                     _LED_initialize
 ---------------------------------------------------------------------------------
 (3) _LED_initialize                                       4     3      1    2658
                                              5 BANK0      4     3      1
                  _GPIO_check_access
                _GPIO_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _GPIO_pin_initialize                                  2     1      1    1972
                                             23 COMRAM     2     1      1
                  _GPIO_check_access
      _GPIO_pin_direction_initialize
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_write_logic                                 8     6      2     770
                                             20 COMRAM     3     1      2
                                              0 BANK0      5     5      0
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_direction_initialize                        7     6      1     623
                                             20 COMRAM     2     1      1
                                              0 BANK0      5     5      0
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             6     5      1    1133
                                             24 COMRAM     1     0      1
                                              0 BANK0      5     5      0
                 _ADC_select_channel
                 _ADC_set_pin_config
                       _INT_ADC_init
       _INT_ADC_set_callback_routine
 ---------------------------------------------------------------------------------
 (3) _INT_ADC_set_callback_routine                         3     1      2      68
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT_ADC_init                                         2     2      0     228
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC_select_channel                                   3     3      0     218
                                             21 COMRAM     3     3      0
                 _ADC_set_pin_config
 ---------------------------------------------------------------------------------
 (3) _ADC_set_pin_config                                   4     4      0      87
                                             17 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                           4     3      1    1123
                                              0 BANK0      3     2      1
                  _GPIO_check_access
              _GPIO_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_toggle_logic                                6     5      1     491
                                             20 COMRAM     5     4      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (6) _GPIO_check_access                                    3     2      1     382
                                             17 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  7     7      0      84
                                             10 COMRAM     7     7      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              2     2      0      24
                                              8 COMRAM     2     2      0
                                NULL *
                              ___ADC *
 ---------------------------------------------------------------------------------
 (9) ___ADC                                                3     2      1      24
                                              7 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    4     4      0     112
                                              3 COMRAM     4     4      0
                          i2_ADC_ISR
                         i2_INT0_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB4_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
 ---------------------------------------------------------------------------------
 (11) i2_RB7_ISR                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_RB6_ISR                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_RB5_ISR                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_RB4_ISR                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_INT2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_INT1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_INT0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_ADC_ISR                                           2     2      0      24
                                              1 COMRAM     2     2      0
                                NULL *
                            i2___ADC *
 ---------------------------------------------------------------------------------
 (12) i2___ADC                                             3     2      1      24
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_toggle
     _GPIO_check_access
     _GPIO_pin_toggle_logic
       _GPIO_check_access
   _application_initialize
     _ADC_init
       _ADC_select_channel
         _ADC_set_pin_config
       _ADC_set_pin_config
       _INT_ADC_init
       _INT_ADC_set_callback_routine
     _ecu_init
       _LED_initialize
         _GPIO_check_access
         _GPIO_pin_initialize
           _GPIO_check_access
           _GPIO_pin_direction_initialize
             _GPIO_check_access
           _GPIO_pin_write_logic
             _GPIO_check_access

 _InterruptManagerLow (ROOT)
   _ADC_ISR
     NULL(Fake) *
     ___ADC *
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManager (ROOT)
   i2_ADC_ISR
     NULL(Fake) *
     i2___ADC *
   i2_INT0_ISR
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB4_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     14      50     39.1%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     25     109     86.5%
BITBIGSFRlh         64      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     159      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 29 12:39:58 2025

                                         ??_InterruptManager 0057  
                                        ?_ADC_set_pin_config 0054  
                                            LED_toggle@F2885 004E  
                                                         bsr 0FE0  
                                      ??_InterruptManagerLow 005E  
                                                        l303 0EEA  
                                                        l330 0F86  
                                                        l309 0F64  
                                                        l510 0E32  
                                                        l502 0DFA  
                                                        l511 0E3A  
                                                        l336 0FFA  
                                                        l504 0E02  
                                                        l513 0EC0  
                                                        l505 0E0A  
                                                        l506 0E12  
                                                        l507 0E1A  
                                                        l427 1338  
                                                        l508 0E22  
                                                        l452 08EE  
                                                        l612 11F4  
                                                        l509 0E2A  
                                                        l470 1362  
                                                        l462 0A8E  
                                                        l454 08E4  
                                                        l622 0CD2  
                                                        l607 0BB2  
                                                        l455 0A88  
                                                        l721 107C  
                                                        l651 10F4  
                                                        l715 103C  
                                                        l716 1076  
                                                        l727 13A8  
                                                        l639 0DEA  
                                                        l599 0BAA  
                                            __end_of_ADC_ISR 1294  
                                                        _ret 006D  
                                                        tosl 0FFD  
                                                        wreg 0FE8  
                                            _RB7_handler_low 0032  
                                      relay_initialize@F2865 004D  
                                       ??_ADC_set_pin_config 0065  
                                                ?_LED_toggle 00A4  
                                     ?_GPIO_pin_toggle_logic 0068  
                                            __end_of_RB4_ISR 13CC  
                                            __end_of_RB5_ISR 13C4  
                                            __end_of_RB6_ISR 13BC  
                                            __end_of_RB7_ISR 13B4  
                                                       l1125 1242  
                                                       l1117 11A2  
                                                       l5100 11AA  
                                                       l5110 0DF2  
                                                       l5102 11C6  
                                                       _ADC1 009E  
                                                       l5040 0A94  
                                                       l5104 11CC  
                                                       l5050 0B28  
                                                       l5042 0AAC  
                                                       l5114 0E42  
                                                       l5106 11F0  
                                                       l5130 0EE0  
                                                       l5052 0B44  
                                                       l5044 0ACA  
                                                       l5116 0EBC  
                                                       l5300 093E  
                                                       l5140 0F56  
                                                       l5132 0EF0  
                                                       l5054 0B68  
                                                       l5046 0AEA  
                                                       l5150 1358  
                                                       l5310 099C  
                                                       l5302 0944  
                                                       l5070 0D5E  
                                                       l5062 0CD8  
                                                       l5134 0F26  
                                                       l5142 0F5E  
                                                       l5056 0B88  
                                                       l5048 0B0A  
                                                       l5152 1360  
                                                       l5160 100A  
                                                       l5320 09FE  
                                                       l5312 09BE  
                                                       l5304 094A  
                                                       l5072 0DB6  
                                                       l5064 0CDC  
                                                       l5136 0F28  
                                                       l5128 0EC6  
                                                       l5058 0BAE  
                                                       l5146 1340  
                                                       l5170 1054  
                                                       l5162 100C  
                                                       l5330 0A80  
                                                       l5322 0A04  
                                                       l5314 09C0  
                                                       l5306 094C  
                                                       l5090 0C40  
                                                       l5082 0BB8  
                                                       l5074 0DE6  
                                                       l5066 0CF8  
                                                       l5138 0F3A  
                                                       l6140 0E64  
                                                       l5148 1340  
                                                       l5172 105C  
                                                       l5164 1020  
                                                       l5156 1004  
                                                       l5180 13A6  
                                                       l5332 0A86  
                                                       l5324 0A1C  
                                                       l5316 09D4  
                                                       l5308 0978  
                                                       l5092 0C9A  
                                                       l5084 0BBC  
                                                       l5068 0D00  
                                                       l5270 1082  
                                                       l6142 0EAC  
                                                       l5174 1072  
                                                       l5166 1034  
                                                       l5158 1008  
                                                       l5326 0A42  
                                                       l5318 09F8  
                                                       l5094 0CCE  
                                                       l5086 0BD8  
                                                       l6070 115C  
                                                       l5272 1082  
                                                       l5168 1040  
                                                       l5176 139E  
                                                       l5328 0A7C  
                                                       l5088 0BE0  
                                                       l5280 1314  
                                                       l5274 109E  
                                                       l5450 0FC2  
                                                       l5178 139E  
                                                       l6138 0DCE  
                                                       l5098 11AA  
                                                       l5282 1314  
                                                       l6074 1174  
                                                       l5276 10A2  
                                                       l5452 0FC4  
                                                       l5444 0F6A  
                                                       l5292 08B4  
                                                       l5284 131E  
                                                       l5460 11FA  
                                                       l6076 1180  
                                                       l6068 1154  
                                                       l5454 0FD6  
                                                       l5446 0F80  
                                                       l5294 08C8  
                                                       l5286 1328  
                                                       l5462 11FE  
                                                       l5456 0FF2  
                                                       l5448 0F8C  
                                                       l5296 08F6  
                                                       l5288 1336  
                                                       l5464 1216  
                                                       l5298 091A  
                                                       l5466 1232  
                                                       l5458 11FA  
                                                       l5468 1238  
                                                       STR_1 0611  
                                                       _LCD1 0080  
                                                       _LATA 0F89  
                                                       _LATB 0F8A  
                                                       _LATC 0F8B  
                                                       _LATD 0F8C  
                                                       _LATE 0F8D  
                                                       u5100 0AAA  
                                                       u5101 0AA4  
                                                       u5110 0AC8  
                                                       u5111 0AC2  
                                                       u5120 0AEA  
                                                       u5121 0AE4  
                                                       u5130 0B08  
                                                       u5131 0B02  
                                                       u5140 0B26  
                                                       u5300 101E  
                                                       u5220 0BD6  
                                                       u5204 0D22  
                                                       u5141 0B20  
                                                       u5301 1018  
                                                       u5221 0BD0  
                                                       u5205 0D1C  
                                                       u5150 0B44  
                                                       u5310 1032  
                                                       u5214 0D80  
                                                       _RB4f 002B  
                                                       u5151 0B3E  
                                                       u5311 102C  
                                                       u5215 0D7A  
                                                       u5160 0B68  
                                                       u5320 1052  
                                                       _RB5f 002A  
                                                       u5161 0B62  
                                                       u5321 104C  
                                                       u5170 0B86  
                                                       u5330 1070  
                                                       u5250 0CB4  
                                                       u5234 0C04  
                                                       _RB6f 0029  
                                                       u5171 0B80  
                                                       u5331 106A  
                                                       u5251 0CAC  
                                                       u5235 0BFE  
                                                       u5180 0BAA  
                                                       u5500 093C  
                                                       u5244 0C64  
                                                       u5260 11C4  
                                                       _RB7f 0028  
                                                       u5181 0BA4  
                                                       u5501 0936  
                                                       u5245 0C5E  
                                                       u5261 11BE  
                                                       u5510 09D2  
                                                       u5190 0CF6  
                                                       u5270 0EDE  
                                                       u5511 09CC  
                                                       u5191 0CF0  
                                                       u5271 0ED8  
                                                       u5520 09F6  
                                                       u5256 0CB8  
                                                       u5521 09F0  
                                                       u5450 109C  
                                                       u5530 0A1A  
                                                       u5290 0F54  
                                                       u5451 1096  
                                                       u5531 0A14  
                                                       u5291 0F4E  
                                                       u5540 0A40  
                                                       u5541 0A3A  
                                                       u5285 0F36  
                                                       u5550 0A7A  
                                                       u5470 08C6  
                                                       u5551 0A74  
                                                       u5471 08C0  
                                                       u5287 0F3A  
                                                       u5464 10C4  
                                                       u5720 0F7E  
                                                       u5480 08E4  
                                                       u5465 10BE  
                                                       u5721 0F78  
                                                       u5481 08DE  
                                                       u5490 0918  
                                                       u5491 0912  
                                                       u5740 0FF0  
                                                       u5741 0FEA  
                                                       u5750 1214  
                                                       u5735 0FD2  
                                                       u5751 120E  
                                                       u5760 1230  
                                                       u5737 0FD6  
                                                       u5761 122A  
                                                       u6680 116E  
                                                       u6681 1168  
                                                       u6697 118C  
                                                       _btn1 0021  
                                                       _btn2 001E  
                                            __end_ofi2___ADC 1422  
                                                ?i2_INT0_ISR 0054  
                                                       _main 1154  
                                                ?i2_INT1_ISR 0054  
                                                ?i2_INT2_ISR 0054  
                                                       fsr2h 0FDA  
                                                       indf2 0FDF  
                                                       fsr1l 0FE1  
                                                       fsr2l 0FD9  
                                                       btemp 006E  
                                                       prodl 0FF3  
                                           _RB7_handler_high 0034  
                                                       start 02CE  
                                           __end_of_ADC_init 0A92  
                                       _GPIO_pin_write_logic 0CD6  
                                               ___param_bank 0000  
                                           __end_of_INT0_ISR 13E4  
                                           __end_of_INT1_ISR 13DC  
                                           __end_of_INT2_ISR 13D4  
                                                      ?_main 0054  
                                   ??_application_initialize 006D  
                                                      _EEADR 0FA9  
                                             __LAT_registers 0001  
                                                      i1l712 128E  
                                                      i1l800 13C8  
                                                      i1l821 13B0  
                                                      i1l814 13B8  
                                                      i1l807 13C0  
                                                      i2l712 12DC  
                                                      i2l800 1400  
                                                      i1l785 13E0  
                                                      i1l793 13D0  
                                                      i2l821 13E8  
                                                      i1l789 13D8  
                                                      i2l814 13F0  
                                                      i2l807 13F8  
                                                      i2l785 1418  
                                                      i2l793 1408  
                                                      i2l789 1410  
                                        relay_turn_off@F2875 004B  
                                                      _PORTA 0F80  
                                                      _PORTB 0F81  
                                                      _PORTC 0F82  
                                                      _PORTD 0F83  
                                                      _PORTE 0F84  
                                                      _TRISA 0F92  
                                                      _TRISB 0F93  
                                                      _TRISC 0F94  
                                                      _TRISD 0F95  
                                                      _TRISE 0F96  
                                                      _Iflag 004A  
                                                      ___ADC 138A  
                                                      _errno 0030  
                                            ___ADC$intlevel1 1396  
                                                      pclath 0FFA  
                                                      pclatu 0FFB  
                                                      tablat 0FF5  
                                                      ttemp5 006F  
                                                      ttemp6 0072  
                                                      ttemp7 0076  
                                                      status 0FD8  
                                                      wtemp8 006F  
                                      ?_GPIO_pin_write_logic 0068  
                                            __initialization 10FA  
                                                LED_on@F2875 0050  
                                               __end_of_main 11A8  
                                                  ??_ADC_ISR 005C  
                                                     ??_main 00B0  
                                              __activetblptr 0002  
                                                  ??_RB4_ISR 005B  
                                                  ??_RB5_ISR 005B  
                                                  ??_RB6_ISR 005B  
                                                  ??_RB7_ISR 005B  
                                                     ?___ADC 005B  
                                              ?_INT_ADC_init 0054  
                                          __end_ofi2_ADC_ISR 12E2  
                                                  ??i2___ADC 0055  
                                                     _ADRESH 0FC4  
                                                     _ADRESL 0FC3  
                                                     _EEDATA 0FA8  
                                                     _EECON2 0FA7  
                                               _ADC_callback 0048  
                                                     i1l1070 00DA  
                                                     i1l1071 010C  
                                                     i1l1137 1398  
                                                     i1l1081 01E0  
                                                     i1l1074 0142  
                                                     i1l1091 02AA  
                                                     i1l1084 0216  
                                                     i1l1076 0176  
                                                     i1l1086 024A  
                                                     i1l1079 01AC  
                                                     i1l2400 13AE  
                                                     i1l1089 0280  
                                                     i1l5000 022A  
                                                     i1l5010 0276  
                                                     i1l5002 023E  
                                                     i1l4060 1398  
                                                     i1l2364 13DE  
                                                     i1l2372 13CE  
                                                     i1l5004 0240  
                                                     i1l5012 0280  
                                                     i1l5014 0294  
                                                     i1l5006 025E  
                                                     i2l1040 06CA  
                                                     i1l2368 13D6  
                                                     i1l2376 13C6  
                                                     i1l2384 13BE  
                                                     i1l2392 13B6  
                                                     i1l5016 02A6  
                                                     i1l5008 0272  
                                                     i2l1041 06FC  
                                                     i2l1051 07D0  
                                                     i2l1044 0732  
                                                     i2l1061 089A  
                                                     i2l1054 0806  
                                                     i2l1046 0766  
                                                     i1l4190 1260  
                                                     i2l1056 083A  
                                                     i1l4192 126C  
                                                     i2l1137 141E  
                                                     i2l1049 079C  
                                                     i1l4186 1248  
                                                     i2l1059 0870  
                                                     i1l4188 124A  
                                                     i2l4210 1298  
                                                     i2l4212 12AE  
                                                     i2l2444 1416  
                                                     i2l2452 1406  
                                                     i1l4940 005C  
                                                     i2l4062 141E  
                                                     i2l4214 12BA  
                                                     i1l4950 009E  
                                                     i1l4942 0060  
                                                     i2l4208 1296  
                                                     i2l2448 140E  
                                          __end_ofi2_RB4_ISR 1404  
                                                     i2l4216 13FE  
                                                     i2l4224 13F6  
                                                     i2l4232 13EE  
                                                     i2l4240 13E6  
                                                     i1l4960 0100  
                                                     i1l4952 00B0  
                                                     i1l4944 0074  
                                                     i1l4936 0038  
                                                     i1l4970 0142  
                                                     i1l4962 0102  
                                                     i1l4954 00B4  
                                                     i1l4946 0086  
                                                     i1l4938 004A  
                                                     i1l4980 019E  
                                                     i1l4972 0156  
                                                     i1l4964 0120  
                                                     i1l4956 00C8  
                                                     i1l4948 008A  
                                                     i1l4990 01D6  
                                                     i1l4982 01A2  
                                                     i1l4974 016A  
                                                     i1l4966 0134  
                                                     i1l4958 00EC  
                                                     i1l4992 01F4  
                                                     i1l4984 01AC  
                                                     i1l4976 016C  
                                                     i1l4968 0138  
                                                     i1l4994 0208  
                                                     i1l4986 01C0  
                                                     i1l4978 018A  
                                                     i1l4996 020C  
                                                     i1l4988 01D4  
                                                     i1l4998 0216  
                                          __end_ofi2_RB5_ISR 13FC  
                                                     i2l4900 0792  
                                                     i2l4910 07E4  
                                                     i2l4902 079C  
                                                     i2l4920 082E  
                                                     i2l4912 07F8  
                                                     i2l4904 07B0  
                                                     i2l4922 0830  
                                                     i2l4914 07FC  
                                                     i2l4906 07C4  
                                                     i2l4930 0870  
                                                     i2l4932 0884  
                                                     i2l4924 084E  
                                                     i2l4916 0806  
                                                     i2l4908 07C6  
                                                     i2l4860 0650  
                                                     i2l4934 0896  
                                                     i2l4926 0862  
                                                     i2l4918 081A  
                                                     i2l4870 06A0  
                                                     i2l4862 0664  
                                                     i2l4854 0628  
                                          __end_ofi2_RB6_ISR 13F4  
                                                     i2l4928 0866  
                                                     i2l4880 06F2  
                                                     i2l4872 06A4  
                                                     i2l4864 0676  
                                                     i2l4856 063A  
                                                     i2l4890 0746  
                                                     i2l4882 0710  
                                                     i2l4874 06B8  
                                                     i2l4866 067A  
                                                     i2l4858 064C  
                                                     i2l4892 075A  
                                                     i2l4884 0724  
                                                     i2l4876 06DC  
                                                     i2l4868 068E  
                                                     i2l4894 075C  
                                                     i2l4886 0728  
                                                     i2l4878 06F0  
                                                     i2l4896 077A  
                                                     i2l4888 0732  
                                                     i2l4898 078E  
                                          __end_ofi2_RB7_ISR 13EC  
                           GPIO_pin_toggle_logic@_pin_config 0068  
                       INT_ADC_set_callback_routine@callback 0065  
                                           __end_of_ecu_init 133C  
                                                     clear_0 1140  
                                                     _relay1 002C  
                                                     _motor1 0026  
                                                     _motor2 0024  
                                                     isa$std 0001  
                                               __pdataCOMRAM 0001  
                                             ??_INT_ADC_init 0065  
                                               __mediumconst 0600  
                                                     tblptrh 0FF7  
                                                     tblptrl 0FF6  
                                                     tblptru 0FF8  
                                                  ?_ADC_init 006C  
                                            INT_ADC_init@ret 0065  
                                                 __accesstop 0080  
                                    __end_of__initialization 1146  
                                     ??_GPIO_pin_write_logic 00A4  
                                                  ?_INT0_ISR 0054  
                                                  ?_INT1_ISR 0054  
                                                  ?_INT2_ISR 0054  
                                              ___rparam_used 0001  
                                                  RB4_ISR@fl 005B  
                                              __end_of___ADC 139C  
                                                  RB5_ISR@fl 005B  
                                             __pcstackCOMRAM 0054  
                                                  RB6_ISR@fl 005B  
                                               __pidataBANK0 1366  
                                                  RB7_ISR@fl 005B  
                            ??_GPIO_pin_direction_initialize 00A4  
                   GPIO_pin_direction_initialize@_pin_config 0068  
                                    ??_GPIO_pin_toggle_logic 0069  
                                            __PORT_registers 008B  
                                                    ??___ADC 005C  
                                               LED_off@F2880 004F  
                                                 ??_ADC_init 00A4  
                                    LED_initialize@pin_local 00AC  
                                               ??_LED_toggle 00A5  
                                               ??i2_INT0_ISR 0054  
                                               ??i2_INT1_ISR 0054  
                                                 ??_INT0_ISR 005B  
                                               ??i2_INT2_ISR 0054  
                                                 ??_INT1_ISR 005B  
                                                 ??_INT2_ISR 005B  
                                     _application_initialize 11F8  
                                                 __pnvCOMRAM 006D  
                                  ADC_set_pin_config@channel 0067  
                                __end_of_InterruptManagerLow 02CE  
                                                    _ADC_ISR 1246  
                                         __end_of_LED_toggle 1000  
                                                    _RB4_ISR 13C4  
                                                    _RB5_ISR 13BC  
                                                    _RB6_ISR 13B4  
                                                    _RB7_ISR 13AC  
                                         __end_ofi2_INT0_ISR 141C  
                                         __end_ofi2_INT1_ISR 1414  
                                         __end_ofi2_INT2_ISR 140C  
                                                  ?_ecu_init 0054  
                                                    i2___ADC 141C  
                                              _ADC_init$1100 00A7  
                                              _ADC_init$1087 00A5  
                                              _ADC_init$1099 00A6  
                                                    __Hparam 0000  
                                        _GPIO_pin_initialize 11A8  
                                                    __Lparam 0000  
                                       __end_of_INT_ADC_init 1080  
                                               __psmallconst 0600  
                                             _LED_initialize 0EC4  
                                                    __pcinit 10FA  
                                                    __ramtop 0600  
                                                    __ptext0 1154  
                                                    __ptext1 11F8  
                                                    __ptext2 1312  
                                                    __ptext3 0EC4  
                                                    __ptext4 11A8  
                                                    __ptext5 0CD6  
                                                    __ptext6 0BB6  
                                                    __ptext7 08B2  
                                                    __ptext8 139C  
                                                    __ptext9 1000  
                                               ___ADC@result 005B  
                                                    _led_arr 001A  
                      __end_of_GPIO_pin_direction_initialize 0CD6  
                              _GPIO_pin_direction_initialize 0BB6  
                                                    _keypad1 0095  
                                       ?_GPIO_pin_initialize 006B  
                                            _keypad_elements 0601  
                                                 ??_ecu_init 006D  
                                 __end_of_ADC_select_channel 1366  
                                             __pintcode_body 0616  
                                       end_of_initialization 1146  
                                                  i2_ADC_ISR 1294  
                                              __Lmediumconst 0000  
                                                    int_func 0616  
                                                  i2_RB4_ISR 13FC  
                                                  i2_RB5_ISR 13F4  
                                                  i2_RB6_ISR 13EC  
                                                  i2_RB7_ISR 13E4  
                                                    postdec1 0FE5  
                                     __end_of_LED_initialize 0F68  
                                                    postdec2 0FDD  
                                                    postinc0 0FEE  
                                                    postinc2 0FDE  
                                                  _PORTBbits 0F81  
                                           _InterruptManager 0008  
                                      ??_GPIO_pin_initialize 006C  
                                                  _TRISAbits 0F92  
                                                  _TRISEbits 0F96  
                                                 ?i2_ADC_ISR 0054  
                                                 ?i2_RB4_ISR 0054  
                                                 ?i2_RB5_ISR 0054  
                                                 ?i2_RB6_ISR 0054  
                                                 ?i2_RB7_ISR 0054  
                                    GPIO_pin_write_logic@ret 006A  
                                               ADC_init@lADC 006C  
                                         relay_turn_on@F2870 004C  
                                            ?_LED_initialize 00A9  
                                    __end_of_keypad_elements 0611  
                                              __pidataCOMRAM 12E2  
                                               _INT0_handler 0046  
                                               _INT1_handler 0044  
                                        start_initialization 10FA  
                                               _INT2_handler 0042  
                                       GPIO_check_access@ret 0067  
                              __end_of_GPIO_pin_toggle_logic 10FA  
                             ?_GPIO_pin_direction_initialize 0068  
                                    ?_application_initialize 0054  
                                        LED_toggle@pin_local 00A6  
                                                __pdataBANK0 0080  
                                                   ?_ADC_ISR 0054  
                                                   ?_RB4_ISR 0054  
                                                   ?_RB5_ISR 0054  
                                                   ?_RB6_ISR 0054  
                                                   ?_RB7_ISR 0054  
                                                __pbssCOMRAM 0030  
                                             i2___ADC@result 0054  
                                              __pcstackBANK0 00A4  
                             __end_of_application_initialize 1246  
                                               _INT_ADC_init 1000  
                                                   ?i2___ADC 0054  
                                     GPIO_pin_initialize@ret 006C  
                       __end_of_INT_ADC_set_callback_routine 13AC  
                               _INT_ADC_set_callback_routine 139C  
                                                ??i2_ADC_ISR 0055  
                                           _RB4_handler_high 003E  
                                                ??i2_RB4_ISR 0054  
                                                ??i2_RB5_ISR 0054  
                                                ??i2_RB6_ISR 0054  
                                                ??i2_RB7_ISR 0054  
                                                i2RB4_ISR@fl 0054  
                                                i2RB5_ISR@fl 0054  
                                                  __pintcode 0008  
                                                i2RB6_ISR@fl 0054  
                            GPIO_pin_write_logic@_pin_config 0068  
                                                i2RB7_ISR@fl 0054  
                                                __pintcodelo 0018  
                                        LED_initialize@F2870 0051  
                                                __smallconst 0600  
                                 __end_of_ADC_set_pin_config 0EC4  
                                                   _ADC_init 08B2  
                                  GPIO_pin_write_logic@logic 0069  
                                            __TRIS_registers 000B  
                                                   _INT0_ISR 13DC  
                                                   _INT1_ISR 13D4  
                              ?_INT_ADC_set_callback_routine 0065  
                                                   _INT2_ISR 13CC  
                                   __end_of_InterruptManager 08B2  
                                                   _LED_main 002F  
                                                   _IPR1bits 0F9F  
                                                   _PIE1bits 0F9D  
                                                   i1u500_20 01D2  
                                                   i1u500_21 01CC  
                                                   i1u501_20 01F2  
                                                   i1u501_21 01EC  
                                                   i1u502_20 0206  
                                                   i1u502_21 0200  
                                         _ADC_select_channel 133C  
                                                   i1u503_20 0228  
                                                   i1u503_21 0222  
                                                   i1u504_20 023C  
                                                   i1u504_21 0236  
                                                   i1u505_20 025C  
                                                   i1u505_21 0256  
                                                   i1u506_20 0270  
                                                   i1u506_21 026A  
                                                   i1u507_20 0292  
                                                   i1u507_21 028C  
                                                   i1u508_20 02A4  
                                                   i1u508_21 029E  
                                                   i1u358_20 125E  
                                                   i1u358_21 1258  
                                                   i1u359_28 1276  
                                                   i1u359_29 128E  
                                                   i1u490_20 00D8  
                                                   i1u490_21 00D2  
                                                   i1u491_20 00EA  
                                                   i1u483_20 0048  
                                                   i1u491_21 00E4  
                                                   i1u483_21 0042  
                                                   i1u492_20 00FE  
                                                   i1u484_20 005A  
                                                   i1u492_21 00F8  
                                                   i1u484_21 0054  
                                                   i1u493_20 011E  
                                                   i1u485_20 0072  
                                                   i1u493_21 0118  
                                                   i1u485_21 006C  
                                                   i1u494_20 0132  
                                                   i1u486_20 0084  
                                                   i1u494_21 012C  
                                                   i1u486_21 007E  
                                                   i1u495_20 0154  
                                                   i1u487_20 009C  
                                                   i1u495_21 014E  
                                                   i1u487_21 0096  
                                                   i1u496_20 0168  
                                                   i1u488_20 00AE  
                                                   i1u496_21 0162  
                                                   i1u488_21 00A8  
                                                   i1u497_20 0188  
                                                   i1u489_20 00C6  
                                                   i1u497_21 0182  
                                                   i1u489_21 00C0  
                                                   _PIR1bits 0F9E  
                                                   i1u498_20 019C  
                                                   i1u498_21 0196  
                                                   i2u362_40 12AC  
                                                   i2u362_41 12A6  
                                                   i1u499_20 01BE  
                                                   i1u499_21 01B8  
                                                   i2u363_48 12C4  
                                                   i2u460_40 0674  
                                                   i2u363_49 12DC  
                                                   i2u460_41 066E  
                                                   i2u461_40 068C  
                                                   i2u461_41 0686  
                                                   i2u470_40 0758  
                                                   i2u462_40 069E  
                                                   i2u470_41 0752  
                                                   i2u462_41 0698  
                                                   i2u471_40 0778  
                                                   i2u463_40 06B6  
                                                   i2u471_41 0772  
                                                   i2u463_41 06B0  
                                                   i2u480_40 0860  
                                                   i2u472_40 078C  
                                                   i2u464_40 06C8  
                                                   i2u480_41 085A  
                                                   i2u472_41 0786  
                                                   i2u464_41 06C2  
                                                   i2u481_40 0882  
                                                   i2u473_40 07AE  
                                                   i2u465_40 06DA  
                                                   i2u457_40 0638  
                                                   i2u481_41 087C  
                                                   i2u473_41 07A8  
                                                   i2u465_41 06D4  
                                                   i2u457_41 0632  
                                                   i2u482_40 0894  
                                                   i2u474_40 07C2  
                                                   i2u466_40 06EE  
                                                   i2u458_40 064A  
                                                   i2u482_41 088E  
                                                   i2u474_41 07BC  
                                                   i2u466_41 06E8  
                                                   i2u458_41 0644  
                                                   i2u475_40 07E2  
                                                   i2u467_40 070E  
                                                   i2u459_40 0662  
                                                   i2u475_41 07DC  
                                                   i2u467_41 0708  
                                                   i2u459_41 065C  
                                                   i2u476_40 07F6  
                                                   i2u468_40 0722  
                                                   i2u476_41 07F0  
                                                   i2u468_41 071C  
                                                   i2u477_40 0818  
                                                   i2u469_40 0744  
                                                   i2u477_41 0812  
                                                   i2u469_41 073E  
                                                   i2u478_40 082C  
                                                   i2u478_41 0826  
                                                   i2u479_40 084C  
                                                   i2u479_41 0846  
                                                   _RCONbits 0FD0  
                           GPIO_pin_direction_initialize@ret 0069  
                                        ?_ADC_select_channel 0054  
                                _application_initialize$2418 00AF  
                                                 _ADCON0bits 0FC2  
                                                 _ADCON1bits 0FC1  
                                              LED_toggle@led 00A4  
                                                ADC_init@ret 00A8  
                                                _INTCON1bits 0FF2  
                                                _INTCON2bits 0FF1  
                                                _INTCON3bits 0FF0  
                                                  copy_data0 110E  
                                                  copy_data1 112E  
                                       ??_ADC_select_channel 0069  
                                           _RB5_handler_high 003C  
                                                 _EECON1bits 0FA6  
                                           ??_LED_initialize 00AA  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                                 _ADC_output 0052  
                                      ADC_select_channel@lCH 006B  
                                      ADC_select_channel@ret 006A  
                                __end_of_GPIO_pin_initialize 11F8  
                                          _GPIO_check_access 0A92  
                                         ?_GPIO_check_access 0065  
                             GPIO_pin_initialize@_pin_config 006B  
                                            _RB4_handler_low 0040  
                                                   _ecu_init 1312  
                                        ??_GPIO_check_access 0066  
                                                   __ptext10 133C  
                                                   __ptext11 0DEE  
                                                   __ptext20 13CC  
                                                   __ptext12 0F68  
                                                   __ptext21 13D4  
                                                   __ptext13 1080  
                                                   __ptext30 1404  
                                                   __ptext22 13DC  
                                                   __ptext14 0A92  
                                                   __ptext31 140C  
                                                   __ptext23 1246  
                                                   __ptext32 1414  
                                                   __ptext24 138A  
                                                   __ptext16 13AC  
                                                   __ptext33 1294  
                                                   __ptext17 13B4  
                                                   __ptext34 141C  
                                                   __ptext26 13E4  
                                                   __ptext18 13BC  
                                                   __ptext27 13EC  
                                                   __ptext19 13C4  
                                                   __ptext28 13F4  
                                                   __ptext29 13FC  
                                       INT_ADC_init@priority 0066  
                                                   _segment1 0015  
                             ??_INT_ADC_set_callback_routine 0067  
                                                   isa$xinst 0000  
                                  __end_of_GPIO_check_access 0BB6  
                                                   int$flags 006E  
                               __end_of_GPIO_pin_write_logic 0DEE  
                                                 _INTCONbits 0FF2  
                                            _RB5_handler_low 003A  
                                                 _LED_toggle 0F68  
                                             _LED_INT_HIGHPR 002E  
                                      _GPIO_pin_toggle_logic 1080  
                                                   intlevel1 1422  
                                                   intlevel2 1422  
                                        _InterruptManagerLow 0018  
                                                 i2_INT0_ISR 1414  
                                                 i2_INT1_ISR 140C  
                                                 i2_INT2_ISR 1404  
                                           _RB6_handler_high 0038  
                                          LED_initialize@led 00A9  
                                          LED_initialize@ret 00AB  
                                                ecu_init@ret 00AD  
                                       ?_InterruptManagerLow 0054  
                                  application_initialize@ret 00AE  
                                              _LED_INT_LOWPR 002D  
                                            _RB6_handler_low 0036  
                                      ADC_set_pin_config@ret 0068  
                               GPIO_check_access@_pin_config 0065  
                                         _ADC_set_pin_config 0DEE  
                                          ?_InterruptManager 0054  
