

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 20:11:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 17/01/2025 GMT
    49                           ; 
    50                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F452 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000FE0                     bsr             equ	4064
    83   000FE9                     fsr0            equ	4073
    84   000FEA                     fsr0h           equ	4074
    85   000FE9                     fsr0l           equ	4073
    86   000FE1                     fsr1            equ	4065
    87   000FE2                     fsr1h           equ	4066
    88   000FE1                     fsr1l           equ	4065
    89   000FD9                     fsr2            equ	4057
    90   000FDA                     fsr2h           equ	4058
    91   000FD9                     fsr2l           equ	4057
    92   000FEF                     indf0           equ	4079
    93   000FE7                     indf1           equ	4071
    94   000FDF                     indf2           equ	4063
    95   000FF2                     intcon          equ	4082
    96   000000                     nvmcon          equ	0
    97   000FF9                     pcl             equ	4089
    98   000FFA                     pclath          equ	4090
    99   000FFB                     pclatu          equ	4091
   100   000FEB                     plusw0          equ	4075
   101   000FE3                     plusw1          equ	4067
   102   000FDB                     plusw2          equ	4059
   103   000FED                     postdec0        equ	4077
   104   000FE5                     postdec1        equ	4069
   105   000FDD                     postdec2        equ	4061
   106   000FEE                     postinc0        equ	4078
   107   000FE6                     postinc1        equ	4070
   108   000FDE                     postinc2        equ	4062
   109   000FEC                     preinc0         equ	4076
   110   000FE4                     preinc1         equ	4068
   111   000FDC                     preinc2         equ	4060
   112   000FF3                     prod            equ	4083
   113   000FF4                     prodh           equ	4084
   114   000FF3                     prodl           equ	4083
   115   000FD8                     status          equ	4056
   116   000FF5                     tablat          equ	4085
   117   000FF6                     tblptr          equ	4086
   118   000FF7                     tblptrh         equ	4087
   119   000FF6                     tblptrl         equ	4086
   120   000FF8                     tblptru         equ	4088
   121   000FFD                     tosl            equ	4093
   122   000FE8                     wreg            equ	4072
   123   000F80                     PORTA           equ	3968	;# 
   124   000F81                     PORTB           equ	3969	;# 
   125   000F82                     PORTC           equ	3970	;# 
   126   000F83                     PORTD           equ	3971	;# 
   127   000F84                     PORTE           equ	3972	;# 
   128   000F89                     LATA            equ	3977	;# 
   129   000F8A                     LATB            equ	3978	;# 
   130   000F8B                     LATC            equ	3979	;# 
   131   000F8C                     LATD            equ	3980	;# 
   132   000F8D                     LATE            equ	3981	;# 
   133   000F92                     TRISA           equ	3986	;# 
   134   000F92                     DDRA            equ	3986	;# 
   135   000F93                     TRISB           equ	3987	;# 
   136   000F93                     DDRB            equ	3987	;# 
   137   000F94                     TRISC           equ	3988	;# 
   138   000F94                     DDRC            equ	3988	;# 
   139   000F95                     TRISD           equ	3989	;# 
   140   000F95                     DDRD            equ	3989	;# 
   141   000F96                     TRISE           equ	3990	;# 
   142   000F96                     DDRE            equ	3990	;# 
   143   000F9D                     PIE1            equ	3997	;# 
   144   000F9E                     PIR1            equ	3998	;# 
   145   000F9F                     IPR1            equ	3999	;# 
   146   000FA0                     PIE2            equ	4000	;# 
   147   000FA1                     PIR2            equ	4001	;# 
   148   000FA2                     IPR2            equ	4002	;# 
   149   000FA6                     EECON1          equ	4006	;# 
   150   000FA7                     EECON2          equ	4007	;# 
   151   000FA8                     EEDATA          equ	4008	;# 
   152   000FA9                     EEADR           equ	4009	;# 
   153   000FAB                     RCSTA           equ	4011	;# 
   154   000FAB                     RCSTA1          equ	4011	;# 
   155   000FAC                     TXSTA           equ	4012	;# 
   156   000FAC                     TXSTA1          equ	4012	;# 
   157   000FAD                     TXREG           equ	4013	;# 
   158   000FAD                     TXREG1          equ	4013	;# 
   159   000FAE                     RCREG           equ	4014	;# 
   160   000FAE                     RCREG1          equ	4014	;# 
   161   000FAF                     SPBRG           equ	4015	;# 
   162   000FAF                     SPBRG1          equ	4015	;# 
   163   000FB1                     T3CON           equ	4017	;# 
   164   000FB2                     TMR3            equ	4018	;# 
   165   000FB2                     TMR3L           equ	4018	;# 
   166   000FB3                     TMR3H           equ	4019	;# 
   167   000FBA                     CCP2CON         equ	4026	;# 
   168   000FBB                     CCPR2           equ	4027	;# 
   169   000FBB                     CCPR2L          equ	4027	;# 
   170   000FBC                     CCPR2H          equ	4028	;# 
   171   000FBD                     CCP1CON         equ	4029	;# 
   172   000FBE                     CCPR1           equ	4030	;# 
   173   000FBE                     CCPR1L          equ	4030	;# 
   174   000FBF                     CCPR1H          equ	4031	;# 
   175   000FC1                     ADCON1          equ	4033	;# 
   176   000FC2                     ADCON0          equ	4034	;# 
   177   000FC3                     ADRES           equ	4035	;# 
   178   000FC3                     ADRESL          equ	4035	;# 
   179   000FC4                     ADRESH          equ	4036	;# 
   180   000FC5                     SSPCON2         equ	4037	;# 
   181   000FC6                     SSPCON1         equ	4038	;# 
   182   000FC7                     SSPSTAT         equ	4039	;# 
   183   000FC8                     SSPADD          equ	4040	;# 
   184   000FC9                     SSPBUF          equ	4041	;# 
   185   000FCA                     T2CON           equ	4042	;# 
   186   000FCB                     PR2             equ	4043	;# 
   187   000FCB                     MEMCON          equ	4043	;# 
   188   000FCC                     TMR2            equ	4044	;# 
   189   000FCD                     T1CON           equ	4045	;# 
   190   000FCE                     TMR1            equ	4046	;# 
   191   000FCE                     TMR1L           equ	4046	;# 
   192   000FCF                     TMR1H           equ	4047	;# 
   193   000FD0                     RCON            equ	4048	;# 
   194   000FD1                     WDTCON          equ	4049	;# 
   195   000FD2                     LVDCON          equ	4050	;# 
   196   000FD3                     OSCCON          equ	4051	;# 
   197   000FD5                     T0CON           equ	4053	;# 
   198   000FD6                     TMR0            equ	4054	;# 
   199   000FD6                     TMR0L           equ	4054	;# 
   200   000FD7                     TMR0H           equ	4055	;# 
   201   000FD8                     STATUS          equ	4056	;# 
   202   000FD9                     FSR2            equ	4057	;# 
   203   000FD9                     FSR2L           equ	4057	;# 
   204   000FDA                     FSR2H           equ	4058	;# 
   205   000FDB                     PLUSW2          equ	4059	;# 
   206   000FDC                     PREINC2         equ	4060	;# 
   207   000FDD                     POSTDEC2        equ	4061	;# 
   208   000FDE                     POSTINC2        equ	4062	;# 
   209   000FDF                     INDF2           equ	4063	;# 
   210   000FE0                     BSR             equ	4064	;# 
   211   000FE1                     FSR1            equ	4065	;# 
   212   000FE1                     FSR1L           equ	4065	;# 
   213   000FE2                     FSR1H           equ	4066	;# 
   214   000FE3                     PLUSW1          equ	4067	;# 
   215   000FE4                     PREINC1         equ	4068	;# 
   216   000FE5                     POSTDEC1        equ	4069	;# 
   217   000FE6                     POSTINC1        equ	4070	;# 
   218   000FE7                     INDF1           equ	4071	;# 
   219   000FE8                     WREG            equ	4072	;# 
   220   000FE9                     FSR0            equ	4073	;# 
   221   000FE9                     FSR0L           equ	4073	;# 
   222   000FEA                     FSR0H           equ	4074	;# 
   223   000FEB                     PLUSW0          equ	4075	;# 
   224   000FEC                     PREINC0         equ	4076	;# 
   225   000FED                     POSTDEC0        equ	4077	;# 
   226   000FEE                     POSTINC0        equ	4078	;# 
   227   000FEF                     INDF0           equ	4079	;# 
   228   000FF0                     INTCON3         equ	4080	;# 
   229   000FF1                     INTCON2         equ	4081	;# 
   230   000FF2                     INTCON          equ	4082	;# 
   231   000FF2                     INTCON1         equ	4082	;# 
   232   000FF3                     PROD            equ	4083	;# 
   233   000FF3                     PRODL           equ	4083	;# 
   234   000FF4                     PRODH           equ	4084	;# 
   235   000FF5                     TABLAT          equ	4085	;# 
   236   000FF6                     TBLPTR          equ	4086	;# 
   237   000FF6                     TBLPTRL         equ	4086	;# 
   238   000FF7                     TBLPTRH         equ	4087	;# 
   239   000FF8                     TBLPTRU         equ	4088	;# 
   240   000FF9                     PCLAT           equ	4089	;# 
   241   000FF9                     PC              equ	4089	;# 
   242   000FF9                     PCL             equ	4089	;# 
   243   000FFA                     PCLATH          equ	4090	;# 
   244   000FFB                     PCLATU          equ	4091	;# 
   245   000FFC                     STKPTR          equ	4092	;# 
   246   000FFD                     TOS             equ	4093	;# 
   247   000FFD                     TOSL            equ	4093	;# 
   248   000FFE                     TOSH            equ	4094	;# 
   249   000FFF                     TOSU            equ	4095	;# 
   250   000F80                     PORTA           equ	3968	;# 
   251   000F81                     PORTB           equ	3969	;# 
   252   000F82                     PORTC           equ	3970	;# 
   253   000F83                     PORTD           equ	3971	;# 
   254   000F84                     PORTE           equ	3972	;# 
   255   000F89                     LATA            equ	3977	;# 
   256   000F8A                     LATB            equ	3978	;# 
   257   000F8B                     LATC            equ	3979	;# 
   258   000F8C                     LATD            equ	3980	;# 
   259   000F8D                     LATE            equ	3981	;# 
   260   000F92                     TRISA           equ	3986	;# 
   261   000F92                     DDRA            equ	3986	;# 
   262   000F93                     TRISB           equ	3987	;# 
   263   000F93                     DDRB            equ	3987	;# 
   264   000F94                     TRISC           equ	3988	;# 
   265   000F94                     DDRC            equ	3988	;# 
   266   000F95                     TRISD           equ	3989	;# 
   267   000F95                     DDRD            equ	3989	;# 
   268   000F96                     TRISE           equ	3990	;# 
   269   000F96                     DDRE            equ	3990	;# 
   270   000F9D                     PIE1            equ	3997	;# 
   271   000F9E                     PIR1            equ	3998	;# 
   272   000F9F                     IPR1            equ	3999	;# 
   273   000FA0                     PIE2            equ	4000	;# 
   274   000FA1                     PIR2            equ	4001	;# 
   275   000FA2                     IPR2            equ	4002	;# 
   276   000FA6                     EECON1          equ	4006	;# 
   277   000FA7                     EECON2          equ	4007	;# 
   278   000FA8                     EEDATA          equ	4008	;# 
   279   000FA9                     EEADR           equ	4009	;# 
   280   000FAB                     RCSTA           equ	4011	;# 
   281   000FAB                     RCSTA1          equ	4011	;# 
   282   000FAC                     TXSTA           equ	4012	;# 
   283   000FAC                     TXSTA1          equ	4012	;# 
   284   000FAD                     TXREG           equ	4013	;# 
   285   000FAD                     TXREG1          equ	4013	;# 
   286   000FAE                     RCREG           equ	4014	;# 
   287   000FAE                     RCREG1          equ	4014	;# 
   288   000FAF                     SPBRG           equ	4015	;# 
   289   000FAF                     SPBRG1          equ	4015	;# 
   290   000FB1                     T3CON           equ	4017	;# 
   291   000FB2                     TMR3            equ	4018	;# 
   292   000FB2                     TMR3L           equ	4018	;# 
   293   000FB3                     TMR3H           equ	4019	;# 
   294   000FBA                     CCP2CON         equ	4026	;# 
   295   000FBB                     CCPR2           equ	4027	;# 
   296   000FBB                     CCPR2L          equ	4027	;# 
   297   000FBC                     CCPR2H          equ	4028	;# 
   298   000FBD                     CCP1CON         equ	4029	;# 
   299   000FBE                     CCPR1           equ	4030	;# 
   300   000FBE                     CCPR1L          equ	4030	;# 
   301   000FBF                     CCPR1H          equ	4031	;# 
   302   000FC1                     ADCON1          equ	4033	;# 
   303   000FC2                     ADCON0          equ	4034	;# 
   304   000FC3                     ADRES           equ	4035	;# 
   305   000FC3                     ADRESL          equ	4035	;# 
   306   000FC4                     ADRESH          equ	4036	;# 
   307   000FC5                     SSPCON2         equ	4037	;# 
   308   000FC6                     SSPCON1         equ	4038	;# 
   309   000FC7                     SSPSTAT         equ	4039	;# 
   310   000FC8                     SSPADD          equ	4040	;# 
   311   000FC9                     SSPBUF          equ	4041	;# 
   312   000FCA                     T2CON           equ	4042	;# 
   313   000FCB                     PR2             equ	4043	;# 
   314   000FCB                     MEMCON          equ	4043	;# 
   315   000FCC                     TMR2            equ	4044	;# 
   316   000FCD                     T1CON           equ	4045	;# 
   317   000FCE                     TMR1            equ	4046	;# 
   318   000FCE                     TMR1L           equ	4046	;# 
   319   000FCF                     TMR1H           equ	4047	;# 
   320   000FD0                     RCON            equ	4048	;# 
   321   000FD1                     WDTCON          equ	4049	;# 
   322   000FD2                     LVDCON          equ	4050	;# 
   323   000FD3                     OSCCON          equ	4051	;# 
   324   000FD5                     T0CON           equ	4053	;# 
   325   000FD6                     TMR0            equ	4054	;# 
   326   000FD6                     TMR0L           equ	4054	;# 
   327   000FD7                     TMR0H           equ	4055	;# 
   328   000FD8                     STATUS          equ	4056	;# 
   329   000FD9                     FSR2            equ	4057	;# 
   330   000FD9                     FSR2L           equ	4057	;# 
   331   000FDA                     FSR2H           equ	4058	;# 
   332   000FDB                     PLUSW2          equ	4059	;# 
   333   000FDC                     PREINC2         equ	4060	;# 
   334   000FDD                     POSTDEC2        equ	4061	;# 
   335   000FDE                     POSTINC2        equ	4062	;# 
   336   000FDF                     INDF2           equ	4063	;# 
   337   000FE0                     BSR             equ	4064	;# 
   338   000FE1                     FSR1            equ	4065	;# 
   339   000FE1                     FSR1L           equ	4065	;# 
   340   000FE2                     FSR1H           equ	4066	;# 
   341   000FE3                     PLUSW1          equ	4067	;# 
   342   000FE4                     PREINC1         equ	4068	;# 
   343   000FE5                     POSTDEC1        equ	4069	;# 
   344   000FE6                     POSTINC1        equ	4070	;# 
   345   000FE7                     INDF1           equ	4071	;# 
   346   000FE8                     WREG            equ	4072	;# 
   347   000FE9                     FSR0            equ	4073	;# 
   348   000FE9                     FSR0L           equ	4073	;# 
   349   000FEA                     FSR0H           equ	4074	;# 
   350   000FEB                     PLUSW0          equ	4075	;# 
   351   000FEC                     PREINC0         equ	4076	;# 
   352   000FED                     POSTDEC0        equ	4077	;# 
   353   000FEE                     POSTINC0        equ	4078	;# 
   354   000FEF                     INDF0           equ	4079	;# 
   355   000FF0                     INTCON3         equ	4080	;# 
   356   000FF1                     INTCON2         equ	4081	;# 
   357   000FF2                     INTCON          equ	4082	;# 
   358   000FF2                     INTCON1         equ	4082	;# 
   359   000FF3                     PROD            equ	4083	;# 
   360   000FF3                     PRODL           equ	4083	;# 
   361   000FF4                     PRODH           equ	4084	;# 
   362   000FF5                     TABLAT          equ	4085	;# 
   363   000FF6                     TBLPTR          equ	4086	;# 
   364   000FF6                     TBLPTRL         equ	4086	;# 
   365   000FF7                     TBLPTRH         equ	4087	;# 
   366   000FF8                     TBLPTRU         equ	4088	;# 
   367   000FF9                     PCLAT           equ	4089	;# 
   368   000FF9                     PC              equ	4089	;# 
   369   000FF9                     PCL             equ	4089	;# 
   370   000FFA                     PCLATH          equ	4090	;# 
   371   000FFB                     PCLATU          equ	4091	;# 
   372   000FFC                     STKPTR          equ	4092	;# 
   373   000FFD                     TOS             equ	4093	;# 
   374   000FFD                     TOSL            equ	4093	;# 
   375   000FFE                     TOSH            equ	4094	;# 
   376   000FFF                     TOSU            equ	4095	;# 
   377   000F80                     PORTA           equ	3968	;# 
   378   000F81                     PORTB           equ	3969	;# 
   379   000F82                     PORTC           equ	3970	;# 
   380   000F83                     PORTD           equ	3971	;# 
   381   000F84                     PORTE           equ	3972	;# 
   382   000F89                     LATA            equ	3977	;# 
   383   000F8A                     LATB            equ	3978	;# 
   384   000F8B                     LATC            equ	3979	;# 
   385   000F8C                     LATD            equ	3980	;# 
   386   000F8D                     LATE            equ	3981	;# 
   387   000F92                     TRISA           equ	3986	;# 
   388   000F92                     DDRA            equ	3986	;# 
   389   000F93                     TRISB           equ	3987	;# 
   390   000F93                     DDRB            equ	3987	;# 
   391   000F94                     TRISC           equ	3988	;# 
   392   000F94                     DDRC            equ	3988	;# 
   393   000F95                     TRISD           equ	3989	;# 
   394   000F95                     DDRD            equ	3989	;# 
   395   000F96                     TRISE           equ	3990	;# 
   396   000F96                     DDRE            equ	3990	;# 
   397   000F9D                     PIE1            equ	3997	;# 
   398   000F9E                     PIR1            equ	3998	;# 
   399   000F9F                     IPR1            equ	3999	;# 
   400   000FA0                     PIE2            equ	4000	;# 
   401   000FA1                     PIR2            equ	4001	;# 
   402   000FA2                     IPR2            equ	4002	;# 
   403   000FA6                     EECON1          equ	4006	;# 
   404   000FA7                     EECON2          equ	4007	;# 
   405   000FA8                     EEDATA          equ	4008	;# 
   406   000FA9                     EEADR           equ	4009	;# 
   407   000FAB                     RCSTA           equ	4011	;# 
   408   000FAB                     RCSTA1          equ	4011	;# 
   409   000FAC                     TXSTA           equ	4012	;# 
   410   000FAC                     TXSTA1          equ	4012	;# 
   411   000FAD                     TXREG           equ	4013	;# 
   412   000FAD                     TXREG1          equ	4013	;# 
   413   000FAE                     RCREG           equ	4014	;# 
   414   000FAE                     RCREG1          equ	4014	;# 
   415   000FAF                     SPBRG           equ	4015	;# 
   416   000FAF                     SPBRG1          equ	4015	;# 
   417   000FB1                     T3CON           equ	4017	;# 
   418   000FB2                     TMR3            equ	4018	;# 
   419   000FB2                     TMR3L           equ	4018	;# 
   420   000FB3                     TMR3H           equ	4019	;# 
   421   000FBA                     CCP2CON         equ	4026	;# 
   422   000FBB                     CCPR2           equ	4027	;# 
   423   000FBB                     CCPR2L          equ	4027	;# 
   424   000FBC                     CCPR2H          equ	4028	;# 
   425   000FBD                     CCP1CON         equ	4029	;# 
   426   000FBE                     CCPR1           equ	4030	;# 
   427   000FBE                     CCPR1L          equ	4030	;# 
   428   000FBF                     CCPR1H          equ	4031	;# 
   429   000FC1                     ADCON1          equ	4033	;# 
   430   000FC2                     ADCON0          equ	4034	;# 
   431   000FC3                     ADRES           equ	4035	;# 
   432   000FC3                     ADRESL          equ	4035	;# 
   433   000FC4                     ADRESH          equ	4036	;# 
   434   000FC5                     SSPCON2         equ	4037	;# 
   435   000FC6                     SSPCON1         equ	4038	;# 
   436   000FC7                     SSPSTAT         equ	4039	;# 
   437   000FC8                     SSPADD          equ	4040	;# 
   438   000FC9                     SSPBUF          equ	4041	;# 
   439   000FCA                     T2CON           equ	4042	;# 
   440   000FCB                     PR2             equ	4043	;# 
   441   000FCB                     MEMCON          equ	4043	;# 
   442   000FCC                     TMR2            equ	4044	;# 
   443   000FCD                     T1CON           equ	4045	;# 
   444   000FCE                     TMR1            equ	4046	;# 
   445   000FCE                     TMR1L           equ	4046	;# 
   446   000FCF                     TMR1H           equ	4047	;# 
   447   000FD0                     RCON            equ	4048	;# 
   448   000FD1                     WDTCON          equ	4049	;# 
   449   000FD2                     LVDCON          equ	4050	;# 
   450   000FD3                     OSCCON          equ	4051	;# 
   451   000FD5                     T0CON           equ	4053	;# 
   452   000FD6                     TMR0            equ	4054	;# 
   453   000FD6                     TMR0L           equ	4054	;# 
   454   000FD7                     TMR0H           equ	4055	;# 
   455   000FD8                     STATUS          equ	4056	;# 
   456   000FD9                     FSR2            equ	4057	;# 
   457   000FD9                     FSR2L           equ	4057	;# 
   458   000FDA                     FSR2H           equ	4058	;# 
   459   000FDB                     PLUSW2          equ	4059	;# 
   460   000FDC                     PREINC2         equ	4060	;# 
   461   000FDD                     POSTDEC2        equ	4061	;# 
   462   000FDE                     POSTINC2        equ	4062	;# 
   463   000FDF                     INDF2           equ	4063	;# 
   464   000FE0                     BSR             equ	4064	;# 
   465   000FE1                     FSR1            equ	4065	;# 
   466   000FE1                     FSR1L           equ	4065	;# 
   467   000FE2                     FSR1H           equ	4066	;# 
   468   000FE3                     PLUSW1          equ	4067	;# 
   469   000FE4                     PREINC1         equ	4068	;# 
   470   000FE5                     POSTDEC1        equ	4069	;# 
   471   000FE6                     POSTINC1        equ	4070	;# 
   472   000FE7                     INDF1           equ	4071	;# 
   473   000FE8                     WREG            equ	4072	;# 
   474   000FE9                     FSR0            equ	4073	;# 
   475   000FE9                     FSR0L           equ	4073	;# 
   476   000FEA                     FSR0H           equ	4074	;# 
   477   000FEB                     PLUSW0          equ	4075	;# 
   478   000FEC                     PREINC0         equ	4076	;# 
   479   000FED                     POSTDEC0        equ	4077	;# 
   480   000FEE                     POSTINC0        equ	4078	;# 
   481   000FEF                     INDF0           equ	4079	;# 
   482   000FF0                     INTCON3         equ	4080	;# 
   483   000FF1                     INTCON2         equ	4081	;# 
   484   000FF2                     INTCON          equ	4082	;# 
   485   000FF2                     INTCON1         equ	4082	;# 
   486   000FF3                     PROD            equ	4083	;# 
   487   000FF3                     PRODL           equ	4083	;# 
   488   000FF4                     PRODH           equ	4084	;# 
   489   000FF5                     TABLAT          equ	4085	;# 
   490   000FF6                     TBLPTR          equ	4086	;# 
   491   000FF6                     TBLPTRL         equ	4086	;# 
   492   000FF7                     TBLPTRH         equ	4087	;# 
   493   000FF8                     TBLPTRU         equ	4088	;# 
   494   000FF9                     PCLAT           equ	4089	;# 
   495   000FF9                     PC              equ	4089	;# 
   496   000FF9                     PCL             equ	4089	;# 
   497   000FFA                     PCLATH          equ	4090	;# 
   498   000FFB                     PCLATU          equ	4091	;# 
   499   000FFC                     STKPTR          equ	4092	;# 
   500   000FFD                     TOS             equ	4093	;# 
   501   000FFD                     TOSL            equ	4093	;# 
   502   000FFE                     TOSH            equ	4094	;# 
   503   000FFF                     TOSU            equ	4095	;# 
   504   000F80                     PORTA           equ	3968	;# 
   505   000F81                     PORTB           equ	3969	;# 
   506   000F82                     PORTC           equ	3970	;# 
   507   000F83                     PORTD           equ	3971	;# 
   508   000F84                     PORTE           equ	3972	;# 
   509   000F89                     LATA            equ	3977	;# 
   510   000F8A                     LATB            equ	3978	;# 
   511   000F8B                     LATC            equ	3979	;# 
   512   000F8C                     LATD            equ	3980	;# 
   513   000F8D                     LATE            equ	3981	;# 
   514   000F92                     TRISA           equ	3986	;# 
   515   000F92                     DDRA            equ	3986	;# 
   516   000F93                     TRISB           equ	3987	;# 
   517   000F93                     DDRB            equ	3987	;# 
   518   000F94                     TRISC           equ	3988	;# 
   519   000F94                     DDRC            equ	3988	;# 
   520   000F95                     TRISD           equ	3989	;# 
   521   000F95                     DDRD            equ	3989	;# 
   522   000F96                     TRISE           equ	3990	;# 
   523   000F96                     DDRE            equ	3990	;# 
   524   000F9D                     PIE1            equ	3997	;# 
   525   000F9E                     PIR1            equ	3998	;# 
   526   000F9F                     IPR1            equ	3999	;# 
   527   000FA0                     PIE2            equ	4000	;# 
   528   000FA1                     PIR2            equ	4001	;# 
   529   000FA2                     IPR2            equ	4002	;# 
   530   000FA6                     EECON1          equ	4006	;# 
   531   000FA7                     EECON2          equ	4007	;# 
   532   000FA8                     EEDATA          equ	4008	;# 
   533   000FA9                     EEADR           equ	4009	;# 
   534   000FAB                     RCSTA           equ	4011	;# 
   535   000FAB                     RCSTA1          equ	4011	;# 
   536   000FAC                     TXSTA           equ	4012	;# 
   537   000FAC                     TXSTA1          equ	4012	;# 
   538   000FAD                     TXREG           equ	4013	;# 
   539   000FAD                     TXREG1          equ	4013	;# 
   540   000FAE                     RCREG           equ	4014	;# 
   541   000FAE                     RCREG1          equ	4014	;# 
   542   000FAF                     SPBRG           equ	4015	;# 
   543   000FAF                     SPBRG1          equ	4015	;# 
   544   000FB1                     T3CON           equ	4017	;# 
   545   000FB2                     TMR3            equ	4018	;# 
   546   000FB2                     TMR3L           equ	4018	;# 
   547   000FB3                     TMR3H           equ	4019	;# 
   548   000FBA                     CCP2CON         equ	4026	;# 
   549   000FBB                     CCPR2           equ	4027	;# 
   550   000FBB                     CCPR2L          equ	4027	;# 
   551   000FBC                     CCPR2H          equ	4028	;# 
   552   000FBD                     CCP1CON         equ	4029	;# 
   553   000FBE                     CCPR1           equ	4030	;# 
   554   000FBE                     CCPR1L          equ	4030	;# 
   555   000FBF                     CCPR1H          equ	4031	;# 
   556   000FC1                     ADCON1          equ	4033	;# 
   557   000FC2                     ADCON0          equ	4034	;# 
   558   000FC3                     ADRES           equ	4035	;# 
   559   000FC3                     ADRESL          equ	4035	;# 
   560   000FC4                     ADRESH          equ	4036	;# 
   561   000FC5                     SSPCON2         equ	4037	;# 
   562   000FC6                     SSPCON1         equ	4038	;# 
   563   000FC7                     SSPSTAT         equ	4039	;# 
   564   000FC8                     SSPADD          equ	4040	;# 
   565   000FC9                     SSPBUF          equ	4041	;# 
   566   000FCA                     T2CON           equ	4042	;# 
   567   000FCB                     PR2             equ	4043	;# 
   568   000FCB                     MEMCON          equ	4043	;# 
   569   000FCC                     TMR2            equ	4044	;# 
   570   000FCD                     T1CON           equ	4045	;# 
   571   000FCE                     TMR1            equ	4046	;# 
   572   000FCE                     TMR1L           equ	4046	;# 
   573   000FCF                     TMR1H           equ	4047	;# 
   574   000FD0                     RCON            equ	4048	;# 
   575   000FD1                     WDTCON          equ	4049	;# 
   576   000FD2                     LVDCON          equ	4050	;# 
   577   000FD3                     OSCCON          equ	4051	;# 
   578   000FD5                     T0CON           equ	4053	;# 
   579   000FD6                     TMR0            equ	4054	;# 
   580   000FD6                     TMR0L           equ	4054	;# 
   581   000FD7                     TMR0H           equ	4055	;# 
   582   000FD8                     STATUS          equ	4056	;# 
   583   000FD9                     FSR2            equ	4057	;# 
   584   000FD9                     FSR2L           equ	4057	;# 
   585   000FDA                     FSR2H           equ	4058	;# 
   586   000FDB                     PLUSW2          equ	4059	;# 
   587   000FDC                     PREINC2         equ	4060	;# 
   588   000FDD                     POSTDEC2        equ	4061	;# 
   589   000FDE                     POSTINC2        equ	4062	;# 
   590   000FDF                     INDF2           equ	4063	;# 
   591   000FE0                     BSR             equ	4064	;# 
   592   000FE1                     FSR1            equ	4065	;# 
   593   000FE1                     FSR1L           equ	4065	;# 
   594   000FE2                     FSR1H           equ	4066	;# 
   595   000FE3                     PLUSW1          equ	4067	;# 
   596   000FE4                     PREINC1         equ	4068	;# 
   597   000FE5                     POSTDEC1        equ	4069	;# 
   598   000FE6                     POSTINC1        equ	4070	;# 
   599   000FE7                     INDF1           equ	4071	;# 
   600   000FE8                     WREG            equ	4072	;# 
   601   000FE9                     FSR0            equ	4073	;# 
   602   000FE9                     FSR0L           equ	4073	;# 
   603   000FEA                     FSR0H           equ	4074	;# 
   604   000FEB                     PLUSW0          equ	4075	;# 
   605   000FEC                     PREINC0         equ	4076	;# 
   606   000FED                     POSTDEC0        equ	4077	;# 
   607   000FEE                     POSTINC0        equ	4078	;# 
   608   000FEF                     INDF0           equ	4079	;# 
   609   000FF0                     INTCON3         equ	4080	;# 
   610   000FF1                     INTCON2         equ	4081	;# 
   611   000FF2                     INTCON          equ	4082	;# 
   612   000FF2                     INTCON1         equ	4082	;# 
   613   000FF3                     PROD            equ	4083	;# 
   614   000FF3                     PRODL           equ	4083	;# 
   615   000FF4                     PRODH           equ	4084	;# 
   616   000FF5                     TABLAT          equ	4085	;# 
   617   000FF6                     TBLPTR          equ	4086	;# 
   618   000FF6                     TBLPTRL         equ	4086	;# 
   619   000FF7                     TBLPTRH         equ	4087	;# 
   620   000FF8                     TBLPTRU         equ	4088	;# 
   621   000FF9                     PCLAT           equ	4089	;# 
   622   000FF9                     PC              equ	4089	;# 
   623   000FF9                     PCL             equ	4089	;# 
   624   000FFA                     PCLATH          equ	4090	;# 
   625   000FFB                     PCLATU          equ	4091	;# 
   626   000FFC                     STKPTR          equ	4092	;# 
   627   000FFD                     TOS             equ	4093	;# 
   628   000FFD                     TOSL            equ	4093	;# 
   629   000FFE                     TOSH            equ	4094	;# 
   630   000FFF                     TOSU            equ	4095	;# 
   631   000F80                     PORTA           equ	3968	;# 
   632   000F81                     PORTB           equ	3969	;# 
   633   000F82                     PORTC           equ	3970	;# 
   634   000F83                     PORTD           equ	3971	;# 
   635   000F84                     PORTE           equ	3972	;# 
   636   000F89                     LATA            equ	3977	;# 
   637   000F8A                     LATB            equ	3978	;# 
   638   000F8B                     LATC            equ	3979	;# 
   639   000F8C                     LATD            equ	3980	;# 
   640   000F8D                     LATE            equ	3981	;# 
   641   000F92                     TRISA           equ	3986	;# 
   642   000F92                     DDRA            equ	3986	;# 
   643   000F93                     TRISB           equ	3987	;# 
   644   000F93                     DDRB            equ	3987	;# 
   645   000F94                     TRISC           equ	3988	;# 
   646   000F94                     DDRC            equ	3988	;# 
   647   000F95                     TRISD           equ	3989	;# 
   648   000F95                     DDRD            equ	3989	;# 
   649   000F96                     TRISE           equ	3990	;# 
   650   000F96                     DDRE            equ	3990	;# 
   651   000F9D                     PIE1            equ	3997	;# 
   652   000F9E                     PIR1            equ	3998	;# 
   653   000F9F                     IPR1            equ	3999	;# 
   654   000FA0                     PIE2            equ	4000	;# 
   655   000FA1                     PIR2            equ	4001	;# 
   656   000FA2                     IPR2            equ	4002	;# 
   657   000FA6                     EECON1          equ	4006	;# 
   658   000FA7                     EECON2          equ	4007	;# 
   659   000FA8                     EEDATA          equ	4008	;# 
   660   000FA9                     EEADR           equ	4009	;# 
   661   000FAB                     RCSTA           equ	4011	;# 
   662   000FAB                     RCSTA1          equ	4011	;# 
   663   000FAC                     TXSTA           equ	4012	;# 
   664   000FAC                     TXSTA1          equ	4012	;# 
   665   000FAD                     TXREG           equ	4013	;# 
   666   000FAD                     TXREG1          equ	4013	;# 
   667   000FAE                     RCREG           equ	4014	;# 
   668   000FAE                     RCREG1          equ	4014	;# 
   669   000FAF                     SPBRG           equ	4015	;# 
   670   000FAF                     SPBRG1          equ	4015	;# 
   671   000FB1                     T3CON           equ	4017	;# 
   672   000FB2                     TMR3            equ	4018	;# 
   673   000FB2                     TMR3L           equ	4018	;# 
   674   000FB3                     TMR3H           equ	4019	;# 
   675   000FBA                     CCP2CON         equ	4026	;# 
   676   000FBB                     CCPR2           equ	4027	;# 
   677   000FBB                     CCPR2L          equ	4027	;# 
   678   000FBC                     CCPR2H          equ	4028	;# 
   679   000FBD                     CCP1CON         equ	4029	;# 
   680   000FBE                     CCPR1           equ	4030	;# 
   681   000FBE                     CCPR1L          equ	4030	;# 
   682   000FBF                     CCPR1H          equ	4031	;# 
   683   000FC1                     ADCON1          equ	4033	;# 
   684   000FC2                     ADCON0          equ	4034	;# 
   685   000FC3                     ADRES           equ	4035	;# 
   686   000FC3                     ADRESL          equ	4035	;# 
   687   000FC4                     ADRESH          equ	4036	;# 
   688   000FC5                     SSPCON2         equ	4037	;# 
   689   000FC6                     SSPCON1         equ	4038	;# 
   690   000FC7                     SSPSTAT         equ	4039	;# 
   691   000FC8                     SSPADD          equ	4040	;# 
   692   000FC9                     SSPBUF          equ	4041	;# 
   693   000FCA                     T2CON           equ	4042	;# 
   694   000FCB                     PR2             equ	4043	;# 
   695   000FCB                     MEMCON          equ	4043	;# 
   696   000FCC                     TMR2            equ	4044	;# 
   697   000FCD                     T1CON           equ	4045	;# 
   698   000FCE                     TMR1            equ	4046	;# 
   699   000FCE                     TMR1L           equ	4046	;# 
   700   000FCF                     TMR1H           equ	4047	;# 
   701   000FD0                     RCON            equ	4048	;# 
   702   000FD1                     WDTCON          equ	4049	;# 
   703   000FD2                     LVDCON          equ	4050	;# 
   704   000FD3                     OSCCON          equ	4051	;# 
   705   000FD5                     T0CON           equ	4053	;# 
   706   000FD6                     TMR0            equ	4054	;# 
   707   000FD6                     TMR0L           equ	4054	;# 
   708   000FD7                     TMR0H           equ	4055	;# 
   709   000FD8                     STATUS          equ	4056	;# 
   710   000FD9                     FSR2            equ	4057	;# 
   711   000FD9                     FSR2L           equ	4057	;# 
   712   000FDA                     FSR2H           equ	4058	;# 
   713   000FDB                     PLUSW2          equ	4059	;# 
   714   000FDC                     PREINC2         equ	4060	;# 
   715   000FDD                     POSTDEC2        equ	4061	;# 
   716   000FDE                     POSTINC2        equ	4062	;# 
   717   000FDF                     INDF2           equ	4063	;# 
   718   000FE0                     BSR             equ	4064	;# 
   719   000FE1                     FSR1            equ	4065	;# 
   720   000FE1                     FSR1L           equ	4065	;# 
   721   000FE2                     FSR1H           equ	4066	;# 
   722   000FE3                     PLUSW1          equ	4067	;# 
   723   000FE4                     PREINC1         equ	4068	;# 
   724   000FE5                     POSTDEC1        equ	4069	;# 
   725   000FE6                     POSTINC1        equ	4070	;# 
   726   000FE7                     INDF1           equ	4071	;# 
   727   000FE8                     WREG            equ	4072	;# 
   728   000FE9                     FSR0            equ	4073	;# 
   729   000FE9                     FSR0L           equ	4073	;# 
   730   000FEA                     FSR0H           equ	4074	;# 
   731   000FEB                     PLUSW0          equ	4075	;# 
   732   000FEC                     PREINC0         equ	4076	;# 
   733   000FED                     POSTDEC0        equ	4077	;# 
   734   000FEE                     POSTINC0        equ	4078	;# 
   735   000FEF                     INDF0           equ	4079	;# 
   736   000FF0                     INTCON3         equ	4080	;# 
   737   000FF1                     INTCON2         equ	4081	;# 
   738   000FF2                     INTCON          equ	4082	;# 
   739   000FF2                     INTCON1         equ	4082	;# 
   740   000FF3                     PROD            equ	4083	;# 
   741   000FF3                     PRODL           equ	4083	;# 
   742   000FF4                     PRODH           equ	4084	;# 
   743   000FF5                     TABLAT          equ	4085	;# 
   744   000FF6                     TBLPTR          equ	4086	;# 
   745   000FF6                     TBLPTRL         equ	4086	;# 
   746   000FF7                     TBLPTRH         equ	4087	;# 
   747   000FF8                     TBLPTRU         equ	4088	;# 
   748   000FF9                     PCLAT           equ	4089	;# 
   749   000FF9                     PC              equ	4089	;# 
   750   000FF9                     PCL             equ	4089	;# 
   751   000FFA                     PCLATH          equ	4090	;# 
   752   000FFB                     PCLATU          equ	4091	;# 
   753   000FFC                     STKPTR          equ	4092	;# 
   754   000FFD                     TOS             equ	4093	;# 
   755   000FFD                     TOSL            equ	4093	;# 
   756   000FFE                     TOSH            equ	4094	;# 
   757   000FFF                     TOSU            equ	4095	;# 
   758   000F80                     PORTA           equ	3968	;# 
   759   000F81                     PORTB           equ	3969	;# 
   760   000F82                     PORTC           equ	3970	;# 
   761   000F83                     PORTD           equ	3971	;# 
   762   000F84                     PORTE           equ	3972	;# 
   763   000F89                     LATA            equ	3977	;# 
   764   000F8A                     LATB            equ	3978	;# 
   765   000F8B                     LATC            equ	3979	;# 
   766   000F8C                     LATD            equ	3980	;# 
   767   000F8D                     LATE            equ	3981	;# 
   768   000F92                     TRISA           equ	3986	;# 
   769   000F92                     DDRA            equ	3986	;# 
   770   000F93                     TRISB           equ	3987	;# 
   771   000F93                     DDRB            equ	3987	;# 
   772   000F94                     TRISC           equ	3988	;# 
   773   000F94                     DDRC            equ	3988	;# 
   774   000F95                     TRISD           equ	3989	;# 
   775   000F95                     DDRD            equ	3989	;# 
   776   000F96                     TRISE           equ	3990	;# 
   777   000F96                     DDRE            equ	3990	;# 
   778   000F9D                     PIE1            equ	3997	;# 
   779   000F9E                     PIR1            equ	3998	;# 
   780   000F9F                     IPR1            equ	3999	;# 
   781   000FA0                     PIE2            equ	4000	;# 
   782   000FA1                     PIR2            equ	4001	;# 
   783   000FA2                     IPR2            equ	4002	;# 
   784   000FA6                     EECON1          equ	4006	;# 
   785   000FA7                     EECON2          equ	4007	;# 
   786   000FA8                     EEDATA          equ	4008	;# 
   787   000FA9                     EEADR           equ	4009	;# 
   788   000FAB                     RCSTA           equ	4011	;# 
   789   000FAB                     RCSTA1          equ	4011	;# 
   790   000FAC                     TXSTA           equ	4012	;# 
   791   000FAC                     TXSTA1          equ	4012	;# 
   792   000FAD                     TXREG           equ	4013	;# 
   793   000FAD                     TXREG1          equ	4013	;# 
   794   000FAE                     RCREG           equ	4014	;# 
   795   000FAE                     RCREG1          equ	4014	;# 
   796   000FAF                     SPBRG           equ	4015	;# 
   797   000FAF                     SPBRG1          equ	4015	;# 
   798   000FB1                     T3CON           equ	4017	;# 
   799   000FB2                     TMR3            equ	4018	;# 
   800   000FB2                     TMR3L           equ	4018	;# 
   801   000FB3                     TMR3H           equ	4019	;# 
   802   000FBA                     CCP2CON         equ	4026	;# 
   803   000FBB                     CCPR2           equ	4027	;# 
   804   000FBB                     CCPR2L          equ	4027	;# 
   805   000FBC                     CCPR2H          equ	4028	;# 
   806   000FBD                     CCP1CON         equ	4029	;# 
   807   000FBE                     CCPR1           equ	4030	;# 
   808   000FBE                     CCPR1L          equ	4030	;# 
   809   000FBF                     CCPR1H          equ	4031	;# 
   810   000FC1                     ADCON1          equ	4033	;# 
   811   000FC2                     ADCON0          equ	4034	;# 
   812   000FC3                     ADRES           equ	4035	;# 
   813   000FC3                     ADRESL          equ	4035	;# 
   814   000FC4                     ADRESH          equ	4036	;# 
   815   000FC5                     SSPCON2         equ	4037	;# 
   816   000FC6                     SSPCON1         equ	4038	;# 
   817   000FC7                     SSPSTAT         equ	4039	;# 
   818   000FC8                     SSPADD          equ	4040	;# 
   819   000FC9                     SSPBUF          equ	4041	;# 
   820   000FCA                     T2CON           equ	4042	;# 
   821   000FCB                     PR2             equ	4043	;# 
   822   000FCB                     MEMCON          equ	4043	;# 
   823   000FCC                     TMR2            equ	4044	;# 
   824   000FCD                     T1CON           equ	4045	;# 
   825   000FCE                     TMR1            equ	4046	;# 
   826   000FCE                     TMR1L           equ	4046	;# 
   827   000FCF                     TMR1H           equ	4047	;# 
   828   000FD0                     RCON            equ	4048	;# 
   829   000FD1                     WDTCON          equ	4049	;# 
   830   000FD2                     LVDCON          equ	4050	;# 
   831   000FD3                     OSCCON          equ	4051	;# 
   832   000FD5                     T0CON           equ	4053	;# 
   833   000FD6                     TMR0            equ	4054	;# 
   834   000FD6                     TMR0L           equ	4054	;# 
   835   000FD7                     TMR0H           equ	4055	;# 
   836   000FD8                     STATUS          equ	4056	;# 
   837   000FD9                     FSR2            equ	4057	;# 
   838   000FD9                     FSR2L           equ	4057	;# 
   839   000FDA                     FSR2H           equ	4058	;# 
   840   000FDB                     PLUSW2          equ	4059	;# 
   841   000FDC                     PREINC2         equ	4060	;# 
   842   000FDD                     POSTDEC2        equ	4061	;# 
   843   000FDE                     POSTINC2        equ	4062	;# 
   844   000FDF                     INDF2           equ	4063	;# 
   845   000FE0                     BSR             equ	4064	;# 
   846   000FE1                     FSR1            equ	4065	;# 
   847   000FE1                     FSR1L           equ	4065	;# 
   848   000FE2                     FSR1H           equ	4066	;# 
   849   000FE3                     PLUSW1          equ	4067	;# 
   850   000FE4                     PREINC1         equ	4068	;# 
   851   000FE5                     POSTDEC1        equ	4069	;# 
   852   000FE6                     POSTINC1        equ	4070	;# 
   853   000FE7                     INDF1           equ	4071	;# 
   854   000FE8                     WREG            equ	4072	;# 
   855   000FE9                     FSR0            equ	4073	;# 
   856   000FE9                     FSR0L           equ	4073	;# 
   857   000FEA                     FSR0H           equ	4074	;# 
   858   000FEB                     PLUSW0          equ	4075	;# 
   859   000FEC                     PREINC0         equ	4076	;# 
   860   000FED                     POSTDEC0        equ	4077	;# 
   861   000FEE                     POSTINC0        equ	4078	;# 
   862   000FEF                     INDF0           equ	4079	;# 
   863   000FF0                     INTCON3         equ	4080	;# 
   864   000FF1                     INTCON2         equ	4081	;# 
   865   000FF2                     INTCON          equ	4082	;# 
   866   000FF2                     INTCON1         equ	4082	;# 
   867   000FF3                     PROD            equ	4083	;# 
   868   000FF3                     PRODL           equ	4083	;# 
   869   000FF4                     PRODH           equ	4084	;# 
   870   000FF5                     TABLAT          equ	4085	;# 
   871   000FF6                     TBLPTR          equ	4086	;# 
   872   000FF6                     TBLPTRL         equ	4086	;# 
   873   000FF7                     TBLPTRH         equ	4087	;# 
   874   000FF8                     TBLPTRU         equ	4088	;# 
   875   000FF9                     PCLAT           equ	4089	;# 
   876   000FF9                     PC              equ	4089	;# 
   877   000FF9                     PCL             equ	4089	;# 
   878   000FFA                     PCLATH          equ	4090	;# 
   879   000FFB                     PCLATU          equ	4091	;# 
   880   000FFC                     STKPTR          equ	4092	;# 
   881   000FFD                     TOS             equ	4093	;# 
   882   000FFD                     TOSL            equ	4093	;# 
   883   000FFE                     TOSH            equ	4094	;# 
   884   000FFF                     TOSU            equ	4095	;# 
   885   000F80                     PORTA           equ	3968	;# 
   886   000F81                     PORTB           equ	3969	;# 
   887   000F82                     PORTC           equ	3970	;# 
   888   000F83                     PORTD           equ	3971	;# 
   889   000F84                     PORTE           equ	3972	;# 
   890   000F89                     LATA            equ	3977	;# 
   891   000F8A                     LATB            equ	3978	;# 
   892   000F8B                     LATC            equ	3979	;# 
   893   000F8C                     LATD            equ	3980	;# 
   894   000F8D                     LATE            equ	3981	;# 
   895   000F92                     TRISA           equ	3986	;# 
   896   000F92                     DDRA            equ	3986	;# 
   897   000F93                     TRISB           equ	3987	;# 
   898   000F93                     DDRB            equ	3987	;# 
   899   000F94                     TRISC           equ	3988	;# 
   900   000F94                     DDRC            equ	3988	;# 
   901   000F95                     TRISD           equ	3989	;# 
   902   000F95                     DDRD            equ	3989	;# 
   903   000F96                     TRISE           equ	3990	;# 
   904   000F96                     DDRE            equ	3990	;# 
   905   000F9D                     PIE1            equ	3997	;# 
   906   000F9E                     PIR1            equ	3998	;# 
   907   000F9F                     IPR1            equ	3999	;# 
   908   000FA0                     PIE2            equ	4000	;# 
   909   000FA1                     PIR2            equ	4001	;# 
   910   000FA2                     IPR2            equ	4002	;# 
   911   000FA6                     EECON1          equ	4006	;# 
   912   000FA7                     EECON2          equ	4007	;# 
   913   000FA8                     EEDATA          equ	4008	;# 
   914   000FA9                     EEADR           equ	4009	;# 
   915   000FAB                     RCSTA           equ	4011	;# 
   916   000FAB                     RCSTA1          equ	4011	;# 
   917   000FAC                     TXSTA           equ	4012	;# 
   918   000FAC                     TXSTA1          equ	4012	;# 
   919   000FAD                     TXREG           equ	4013	;# 
   920   000FAD                     TXREG1          equ	4013	;# 
   921   000FAE                     RCREG           equ	4014	;# 
   922   000FAE                     RCREG1          equ	4014	;# 
   923   000FAF                     SPBRG           equ	4015	;# 
   924   000FAF                     SPBRG1          equ	4015	;# 
   925   000FB1                     T3CON           equ	4017	;# 
   926   000FB2                     TMR3            equ	4018	;# 
   927   000FB2                     TMR3L           equ	4018	;# 
   928   000FB3                     TMR3H           equ	4019	;# 
   929   000FBA                     CCP2CON         equ	4026	;# 
   930   000FBB                     CCPR2           equ	4027	;# 
   931   000FBB                     CCPR2L          equ	4027	;# 
   932   000FBC                     CCPR2H          equ	4028	;# 
   933   000FBD                     CCP1CON         equ	4029	;# 
   934   000FBE                     CCPR1           equ	4030	;# 
   935   000FBE                     CCPR1L          equ	4030	;# 
   936   000FBF                     CCPR1H          equ	4031	;# 
   937   000FC1                     ADCON1          equ	4033	;# 
   938   000FC2                     ADCON0          equ	4034	;# 
   939   000FC3                     ADRES           equ	4035	;# 
   940   000FC3                     ADRESL          equ	4035	;# 
   941   000FC4                     ADRESH          equ	4036	;# 
   942   000FC5                     SSPCON2         equ	4037	;# 
   943   000FC6                     SSPCON1         equ	4038	;# 
   944   000FC7                     SSPSTAT         equ	4039	;# 
   945   000FC8                     SSPADD          equ	4040	;# 
   946   000FC9                     SSPBUF          equ	4041	;# 
   947   000FCA                     T2CON           equ	4042	;# 
   948   000FCB                     PR2             equ	4043	;# 
   949   000FCB                     MEMCON          equ	4043	;# 
   950   000FCC                     TMR2            equ	4044	;# 
   951   000FCD                     T1CON           equ	4045	;# 
   952   000FCE                     TMR1            equ	4046	;# 
   953   000FCE                     TMR1L           equ	4046	;# 
   954   000FCF                     TMR1H           equ	4047	;# 
   955   000FD0                     RCON            equ	4048	;# 
   956   000FD1                     WDTCON          equ	4049	;# 
   957   000FD2                     LVDCON          equ	4050	;# 
   958   000FD3                     OSCCON          equ	4051	;# 
   959   000FD5                     T0CON           equ	4053	;# 
   960   000FD6                     TMR0            equ	4054	;# 
   961   000FD6                     TMR0L           equ	4054	;# 
   962   000FD7                     TMR0H           equ	4055	;# 
   963   000FD8                     STATUS          equ	4056	;# 
   964   000FD9                     FSR2            equ	4057	;# 
   965   000FD9                     FSR2L           equ	4057	;# 
   966   000FDA                     FSR2H           equ	4058	;# 
   967   000FDB                     PLUSW2          equ	4059	;# 
   968   000FDC                     PREINC2         equ	4060	;# 
   969   000FDD                     POSTDEC2        equ	4061	;# 
   970   000FDE                     POSTINC2        equ	4062	;# 
   971   000FDF                     INDF2           equ	4063	;# 
   972   000FE0                     BSR             equ	4064	;# 
   973   000FE1                     FSR1            equ	4065	;# 
   974   000FE1                     FSR1L           equ	4065	;# 
   975   000FE2                     FSR1H           equ	4066	;# 
   976   000FE3                     PLUSW1          equ	4067	;# 
   977   000FE4                     PREINC1         equ	4068	;# 
   978   000FE5                     POSTDEC1        equ	4069	;# 
   979   000FE6                     POSTINC1        equ	4070	;# 
   980   000FE7                     INDF1           equ	4071	;# 
   981   000FE8                     WREG            equ	4072	;# 
   982   000FE9                     FSR0            equ	4073	;# 
   983   000FE9                     FSR0L           equ	4073	;# 
   984   000FEA                     FSR0H           equ	4074	;# 
   985   000FEB                     PLUSW0          equ	4075	;# 
   986   000FEC                     PREINC0         equ	4076	;# 
   987   000FED                     POSTDEC0        equ	4077	;# 
   988   000FEE                     POSTINC0        equ	4078	;# 
   989   000FEF                     INDF0           equ	4079	;# 
   990   000FF0                     INTCON3         equ	4080	;# 
   991   000FF1                     INTCON2         equ	4081	;# 
   992   000FF2                     INTCON          equ	4082	;# 
   993   000FF2                     INTCON1         equ	4082	;# 
   994   000FF3                     PROD            equ	4083	;# 
   995   000FF3                     PRODL           equ	4083	;# 
   996   000FF4                     PRODH           equ	4084	;# 
   997   000FF5                     TABLAT          equ	4085	;# 
   998   000FF6                     TBLPTR          equ	4086	;# 
   999   000FF6                     TBLPTRL         equ	4086	;# 
  1000   000FF7                     TBLPTRH         equ	4087	;# 
  1001   000FF8                     TBLPTRU         equ	4088	;# 
  1002   000FF9                     PCLAT           equ	4089	;# 
  1003   000FF9                     PC              equ	4089	;# 
  1004   000FF9                     PCL             equ	4089	;# 
  1005   000FFA                     PCLATH          equ	4090	;# 
  1006   000FFB                     PCLATU          equ	4091	;# 
  1007   000FFC                     STKPTR          equ	4092	;# 
  1008   000FFD                     TOS             equ	4093	;# 
  1009   000FFD                     TOSL            equ	4093	;# 
  1010   000FFE                     TOSH            equ	4094	;# 
  1011   000FFF                     TOSU            equ	4095	;# 
  1012   000F80                     PORTA           equ	3968	;# 
  1013   000F81                     PORTB           equ	3969	;# 
  1014   000F82                     PORTC           equ	3970	;# 
  1015   000F83                     PORTD           equ	3971	;# 
  1016   000F84                     PORTE           equ	3972	;# 
  1017   000F89                     LATA            equ	3977	;# 
  1018   000F8A                     LATB            equ	3978	;# 
  1019   000F8B                     LATC            equ	3979	;# 
  1020   000F8C                     LATD            equ	3980	;# 
  1021   000F8D                     LATE            equ	3981	;# 
  1022   000F92                     TRISA           equ	3986	;# 
  1023   000F92                     DDRA            equ	3986	;# 
  1024   000F93                     TRISB           equ	3987	;# 
  1025   000F93                     DDRB            equ	3987	;# 
  1026   000F94                     TRISC           equ	3988	;# 
  1027   000F94                     DDRC            equ	3988	;# 
  1028   000F95                     TRISD           equ	3989	;# 
  1029   000F95                     DDRD            equ	3989	;# 
  1030   000F96                     TRISE           equ	3990	;# 
  1031   000F96                     DDRE            equ	3990	;# 
  1032   000F9D                     PIE1            equ	3997	;# 
  1033   000F9E                     PIR1            equ	3998	;# 
  1034   000F9F                     IPR1            equ	3999	;# 
  1035   000FA0                     PIE2            equ	4000	;# 
  1036   000FA1                     PIR2            equ	4001	;# 
  1037   000FA2                     IPR2            equ	4002	;# 
  1038   000FA6                     EECON1          equ	4006	;# 
  1039   000FA7                     EECON2          equ	4007	;# 
  1040   000FA8                     EEDATA          equ	4008	;# 
  1041   000FA9                     EEADR           equ	4009	;# 
  1042   000FAB                     RCSTA           equ	4011	;# 
  1043   000FAB                     RCSTA1          equ	4011	;# 
  1044   000FAC                     TXSTA           equ	4012	;# 
  1045   000FAC                     TXSTA1          equ	4012	;# 
  1046   000FAD                     TXREG           equ	4013	;# 
  1047   000FAD                     TXREG1          equ	4013	;# 
  1048   000FAE                     RCREG           equ	4014	;# 
  1049   000FAE                     RCREG1          equ	4014	;# 
  1050   000FAF                     SPBRG           equ	4015	;# 
  1051   000FAF                     SPBRG1          equ	4015	;# 
  1052   000FB1                     T3CON           equ	4017	;# 
  1053   000FB2                     TMR3            equ	4018	;# 
  1054   000FB2                     TMR3L           equ	4018	;# 
  1055   000FB3                     TMR3H           equ	4019	;# 
  1056   000FBA                     CCP2CON         equ	4026	;# 
  1057   000FBB                     CCPR2           equ	4027	;# 
  1058   000FBB                     CCPR2L          equ	4027	;# 
  1059   000FBC                     CCPR2H          equ	4028	;# 
  1060   000FBD                     CCP1CON         equ	4029	;# 
  1061   000FBE                     CCPR1           equ	4030	;# 
  1062   000FBE                     CCPR1L          equ	4030	;# 
  1063   000FBF                     CCPR1H          equ	4031	;# 
  1064   000FC1                     ADCON1          equ	4033	;# 
  1065   000FC2                     ADCON0          equ	4034	;# 
  1066   000FC3                     ADRES           equ	4035	;# 
  1067   000FC3                     ADRESL          equ	4035	;# 
  1068   000FC4                     ADRESH          equ	4036	;# 
  1069   000FC5                     SSPCON2         equ	4037	;# 
  1070   000FC6                     SSPCON1         equ	4038	;# 
  1071   000FC7                     SSPSTAT         equ	4039	;# 
  1072   000FC8                     SSPADD          equ	4040	;# 
  1073   000FC9                     SSPBUF          equ	4041	;# 
  1074   000FCA                     T2CON           equ	4042	;# 
  1075   000FCB                     PR2             equ	4043	;# 
  1076   000FCB                     MEMCON          equ	4043	;# 
  1077   000FCC                     TMR2            equ	4044	;# 
  1078   000FCD                     T1CON           equ	4045	;# 
  1079   000FCE                     TMR1            equ	4046	;# 
  1080   000FCE                     TMR1L           equ	4046	;# 
  1081   000FCF                     TMR1H           equ	4047	;# 
  1082   000FD0                     RCON            equ	4048	;# 
  1083   000FD1                     WDTCON          equ	4049	;# 
  1084   000FD2                     LVDCON          equ	4050	;# 
  1085   000FD3                     OSCCON          equ	4051	;# 
  1086   000FD5                     T0CON           equ	4053	;# 
  1087   000FD6                     TMR0            equ	4054	;# 
  1088   000FD6                     TMR0L           equ	4054	;# 
  1089   000FD7                     TMR0H           equ	4055	;# 
  1090   000FD8                     STATUS          equ	4056	;# 
  1091   000FD9                     FSR2            equ	4057	;# 
  1092   000FD9                     FSR2L           equ	4057	;# 
  1093   000FDA                     FSR2H           equ	4058	;# 
  1094   000FDB                     PLUSW2          equ	4059	;# 
  1095   000FDC                     PREINC2         equ	4060	;# 
  1096   000FDD                     POSTDEC2        equ	4061	;# 
  1097   000FDE                     POSTINC2        equ	4062	;# 
  1098   000FDF                     INDF2           equ	4063	;# 
  1099   000FE0                     BSR             equ	4064	;# 
  1100   000FE1                     FSR1            equ	4065	;# 
  1101   000FE1                     FSR1L           equ	4065	;# 
  1102   000FE2                     FSR1H           equ	4066	;# 
  1103   000FE3                     PLUSW1          equ	4067	;# 
  1104   000FE4                     PREINC1         equ	4068	;# 
  1105   000FE5                     POSTDEC1        equ	4069	;# 
  1106   000FE6                     POSTINC1        equ	4070	;# 
  1107   000FE7                     INDF1           equ	4071	;# 
  1108   000FE8                     WREG            equ	4072	;# 
  1109   000FE9                     FSR0            equ	4073	;# 
  1110   000FE9                     FSR0L           equ	4073	;# 
  1111   000FEA                     FSR0H           equ	4074	;# 
  1112   000FEB                     PLUSW0          equ	4075	;# 
  1113   000FEC                     PREINC0         equ	4076	;# 
  1114   000FED                     POSTDEC0        equ	4077	;# 
  1115   000FEE                     POSTINC0        equ	4078	;# 
  1116   000FEF                     INDF0           equ	4079	;# 
  1117   000FF0                     INTCON3         equ	4080	;# 
  1118   000FF1                     INTCON2         equ	4081	;# 
  1119   000FF2                     INTCON          equ	4082	;# 
  1120   000FF2                     INTCON1         equ	4082	;# 
  1121   000FF3                     PROD            equ	4083	;# 
  1122   000FF3                     PRODL           equ	4083	;# 
  1123   000FF4                     PRODH           equ	4084	;# 
  1124   000FF5                     TABLAT          equ	4085	;# 
  1125   000FF6                     TBLPTR          equ	4086	;# 
  1126   000FF6                     TBLPTRL         equ	4086	;# 
  1127   000FF7                     TBLPTRH         equ	4087	;# 
  1128   000FF8                     TBLPTRU         equ	4088	;# 
  1129   000FF9                     PCLAT           equ	4089	;# 
  1130   000FF9                     PC              equ	4089	;# 
  1131   000FF9                     PCL             equ	4089	;# 
  1132   000FFA                     PCLATH          equ	4090	;# 
  1133   000FFB                     PCLATU          equ	4091	;# 
  1134   000FFC                     STKPTR          equ	4092	;# 
  1135   000FFD                     TOS             equ	4093	;# 
  1136   000FFD                     TOSL            equ	4093	;# 
  1137   000FFE                     TOSH            equ	4094	;# 
  1138   000FFF                     TOSU            equ	4095	;# 
  1139   000F80                     PORTA           equ	3968	;# 
  1140   000F81                     PORTB           equ	3969	;# 
  1141   000F82                     PORTC           equ	3970	;# 
  1142   000F83                     PORTD           equ	3971	;# 
  1143   000F84                     PORTE           equ	3972	;# 
  1144   000F89                     LATA            equ	3977	;# 
  1145   000F8A                     LATB            equ	3978	;# 
  1146   000F8B                     LATC            equ	3979	;# 
  1147   000F8C                     LATD            equ	3980	;# 
  1148   000F8D                     LATE            equ	3981	;# 
  1149   000F92                     TRISA           equ	3986	;# 
  1150   000F92                     DDRA            equ	3986	;# 
  1151   000F93                     TRISB           equ	3987	;# 
  1152   000F93                     DDRB            equ	3987	;# 
  1153   000F94                     TRISC           equ	3988	;# 
  1154   000F94                     DDRC            equ	3988	;# 
  1155   000F95                     TRISD           equ	3989	;# 
  1156   000F95                     DDRD            equ	3989	;# 
  1157   000F96                     TRISE           equ	3990	;# 
  1158   000F96                     DDRE            equ	3990	;# 
  1159   000F9D                     PIE1            equ	3997	;# 
  1160   000F9E                     PIR1            equ	3998	;# 
  1161   000F9F                     IPR1            equ	3999	;# 
  1162   000FA0                     PIE2            equ	4000	;# 
  1163   000FA1                     PIR2            equ	4001	;# 
  1164   000FA2                     IPR2            equ	4002	;# 
  1165   000FA6                     EECON1          equ	4006	;# 
  1166   000FA7                     EECON2          equ	4007	;# 
  1167   000FA8                     EEDATA          equ	4008	;# 
  1168   000FA9                     EEADR           equ	4009	;# 
  1169   000FAB                     RCSTA           equ	4011	;# 
  1170   000FAB                     RCSTA1          equ	4011	;# 
  1171   000FAC                     TXSTA           equ	4012	;# 
  1172   000FAC                     TXSTA1          equ	4012	;# 
  1173   000FAD                     TXREG           equ	4013	;# 
  1174   000FAD                     TXREG1          equ	4013	;# 
  1175   000FAE                     RCREG           equ	4014	;# 
  1176   000FAE                     RCREG1          equ	4014	;# 
  1177   000FAF                     SPBRG           equ	4015	;# 
  1178   000FAF                     SPBRG1          equ	4015	;# 
  1179   000FB1                     T3CON           equ	4017	;# 
  1180   000FB2                     TMR3            equ	4018	;# 
  1181   000FB2                     TMR3L           equ	4018	;# 
  1182   000FB3                     TMR3H           equ	4019	;# 
  1183   000FBA                     CCP2CON         equ	4026	;# 
  1184   000FBB                     CCPR2           equ	4027	;# 
  1185   000FBB                     CCPR2L          equ	4027	;# 
  1186   000FBC                     CCPR2H          equ	4028	;# 
  1187   000FBD                     CCP1CON         equ	4029	;# 
  1188   000FBE                     CCPR1           equ	4030	;# 
  1189   000FBE                     CCPR1L          equ	4030	;# 
  1190   000FBF                     CCPR1H          equ	4031	;# 
  1191   000FC1                     ADCON1          equ	4033	;# 
  1192   000FC2                     ADCON0          equ	4034	;# 
  1193   000FC3                     ADRES           equ	4035	;# 
  1194   000FC3                     ADRESL          equ	4035	;# 
  1195   000FC4                     ADRESH          equ	4036	;# 
  1196   000FC5                     SSPCON2         equ	4037	;# 
  1197   000FC6                     SSPCON1         equ	4038	;# 
  1198   000FC7                     SSPSTAT         equ	4039	;# 
  1199   000FC8                     SSPADD          equ	4040	;# 
  1200   000FC9                     SSPBUF          equ	4041	;# 
  1201   000FCA                     T2CON           equ	4042	;# 
  1202   000FCB                     PR2             equ	4043	;# 
  1203   000FCB                     MEMCON          equ	4043	;# 
  1204   000FCC                     TMR2            equ	4044	;# 
  1205   000FCD                     T1CON           equ	4045	;# 
  1206   000FCE                     TMR1            equ	4046	;# 
  1207   000FCE                     TMR1L           equ	4046	;# 
  1208   000FCF                     TMR1H           equ	4047	;# 
  1209   000FD0                     RCON            equ	4048	;# 
  1210   000FD1                     WDTCON          equ	4049	;# 
  1211   000FD2                     LVDCON          equ	4050	;# 
  1212   000FD3                     OSCCON          equ	4051	;# 
  1213   000FD5                     T0CON           equ	4053	;# 
  1214   000FD6                     TMR0            equ	4054	;# 
  1215   000FD6                     TMR0L           equ	4054	;# 
  1216   000FD7                     TMR0H           equ	4055	;# 
  1217   000FD8                     STATUS          equ	4056	;# 
  1218   000FD9                     FSR2            equ	4057	;# 
  1219   000FD9                     FSR2L           equ	4057	;# 
  1220   000FDA                     FSR2H           equ	4058	;# 
  1221   000FDB                     PLUSW2          equ	4059	;# 
  1222   000FDC                     PREINC2         equ	4060	;# 
  1223   000FDD                     POSTDEC2        equ	4061	;# 
  1224   000FDE                     POSTINC2        equ	4062	;# 
  1225   000FDF                     INDF2           equ	4063	;# 
  1226   000FE0                     BSR             equ	4064	;# 
  1227   000FE1                     FSR1            equ	4065	;# 
  1228   000FE1                     FSR1L           equ	4065	;# 
  1229   000FE2                     FSR1H           equ	4066	;# 
  1230   000FE3                     PLUSW1          equ	4067	;# 
  1231   000FE4                     PREINC1         equ	4068	;# 
  1232   000FE5                     POSTDEC1        equ	4069	;# 
  1233   000FE6                     POSTINC1        equ	4070	;# 
  1234   000FE7                     INDF1           equ	4071	;# 
  1235   000FE8                     WREG            equ	4072	;# 
  1236   000FE9                     FSR0            equ	4073	;# 
  1237   000FE9                     FSR0L           equ	4073	;# 
  1238   000FEA                     FSR0H           equ	4074	;# 
  1239   000FEB                     PLUSW0          equ	4075	;# 
  1240   000FEC                     PREINC0         equ	4076	;# 
  1241   000FED                     POSTDEC0        equ	4077	;# 
  1242   000FEE                     POSTINC0        equ	4078	;# 
  1243   000FEF                     INDF0           equ	4079	;# 
  1244   000FF0                     INTCON3         equ	4080	;# 
  1245   000FF1                     INTCON2         equ	4081	;# 
  1246   000FF2                     INTCON          equ	4082	;# 
  1247   000FF2                     INTCON1         equ	4082	;# 
  1248   000FF3                     PROD            equ	4083	;# 
  1249   000FF3                     PRODL           equ	4083	;# 
  1250   000FF4                     PRODH           equ	4084	;# 
  1251   000FF5                     TABLAT          equ	4085	;# 
  1252   000FF6                     TBLPTR          equ	4086	;# 
  1253   000FF6                     TBLPTRL         equ	4086	;# 
  1254   000FF7                     TBLPTRH         equ	4087	;# 
  1255   000FF8                     TBLPTRU         equ	4088	;# 
  1256   000FF9                     PCLAT           equ	4089	;# 
  1257   000FF9                     PC              equ	4089	;# 
  1258   000FF9                     PCL             equ	4089	;# 
  1259   000FFA                     PCLATH          equ	4090	;# 
  1260   000FFB                     PCLATU          equ	4091	;# 
  1261   000FFC                     STKPTR          equ	4092	;# 
  1262   000FFD                     TOS             equ	4093	;# 
  1263   000FFD                     TOSL            equ	4093	;# 
  1264   000FFE                     TOSH            equ	4094	;# 
  1265   000FFF                     TOSU            equ	4095	;# 
  1266   000F80                     PORTA           equ	3968	;# 
  1267   000F81                     PORTB           equ	3969	;# 
  1268   000F82                     PORTC           equ	3970	;# 
  1269   000F83                     PORTD           equ	3971	;# 
  1270   000F84                     PORTE           equ	3972	;# 
  1271   000F89                     LATA            equ	3977	;# 
  1272   000F8A                     LATB            equ	3978	;# 
  1273   000F8B                     LATC            equ	3979	;# 
  1274   000F8C                     LATD            equ	3980	;# 
  1275   000F8D                     LATE            equ	3981	;# 
  1276   000F92                     TRISA           equ	3986	;# 
  1277   000F92                     DDRA            equ	3986	;# 
  1278   000F93                     TRISB           equ	3987	;# 
  1279   000F93                     DDRB            equ	3987	;# 
  1280   000F94                     TRISC           equ	3988	;# 
  1281   000F94                     DDRC            equ	3988	;# 
  1282   000F95                     TRISD           equ	3989	;# 
  1283   000F95                     DDRD            equ	3989	;# 
  1284   000F96                     TRISE           equ	3990	;# 
  1285   000F96                     DDRE            equ	3990	;# 
  1286   000F9D                     PIE1            equ	3997	;# 
  1287   000F9E                     PIR1            equ	3998	;# 
  1288   000F9F                     IPR1            equ	3999	;# 
  1289   000FA0                     PIE2            equ	4000	;# 
  1290   000FA1                     PIR2            equ	4001	;# 
  1291   000FA2                     IPR2            equ	4002	;# 
  1292   000FA6                     EECON1          equ	4006	;# 
  1293   000FA7                     EECON2          equ	4007	;# 
  1294   000FA8                     EEDATA          equ	4008	;# 
  1295   000FA9                     EEADR           equ	4009	;# 
  1296   000FAB                     RCSTA           equ	4011	;# 
  1297   000FAB                     RCSTA1          equ	4011	;# 
  1298   000FAC                     TXSTA           equ	4012	;# 
  1299   000FAC                     TXSTA1          equ	4012	;# 
  1300   000FAD                     TXREG           equ	4013	;# 
  1301   000FAD                     TXREG1          equ	4013	;# 
  1302   000FAE                     RCREG           equ	4014	;# 
  1303   000FAE                     RCREG1          equ	4014	;# 
  1304   000FAF                     SPBRG           equ	4015	;# 
  1305   000FAF                     SPBRG1          equ	4015	;# 
  1306   000FB1                     T3CON           equ	4017	;# 
  1307   000FB2                     TMR3            equ	4018	;# 
  1308   000FB2                     TMR3L           equ	4018	;# 
  1309   000FB3                     TMR3H           equ	4019	;# 
  1310   000FBA                     CCP2CON         equ	4026	;# 
  1311   000FBB                     CCPR2           equ	4027	;# 
  1312   000FBB                     CCPR2L          equ	4027	;# 
  1313   000FBC                     CCPR2H          equ	4028	;# 
  1314   000FBD                     CCP1CON         equ	4029	;# 
  1315   000FBE                     CCPR1           equ	4030	;# 
  1316   000FBE                     CCPR1L          equ	4030	;# 
  1317   000FBF                     CCPR1H          equ	4031	;# 
  1318   000FC1                     ADCON1          equ	4033	;# 
  1319   000FC2                     ADCON0          equ	4034	;# 
  1320   000FC3                     ADRES           equ	4035	;# 
  1321   000FC3                     ADRESL          equ	4035	;# 
  1322   000FC4                     ADRESH          equ	4036	;# 
  1323   000FC5                     SSPCON2         equ	4037	;# 
  1324   000FC6                     SSPCON1         equ	4038	;# 
  1325   000FC7                     SSPSTAT         equ	4039	;# 
  1326   000FC8                     SSPADD          equ	4040	;# 
  1327   000FC9                     SSPBUF          equ	4041	;# 
  1328   000FCA                     T2CON           equ	4042	;# 
  1329   000FCB                     PR2             equ	4043	;# 
  1330   000FCB                     MEMCON          equ	4043	;# 
  1331   000FCC                     TMR2            equ	4044	;# 
  1332   000FCD                     T1CON           equ	4045	;# 
  1333   000FCE                     TMR1            equ	4046	;# 
  1334   000FCE                     TMR1L           equ	4046	;# 
  1335   000FCF                     TMR1H           equ	4047	;# 
  1336   000FD0                     RCON            equ	4048	;# 
  1337   000FD1                     WDTCON          equ	4049	;# 
  1338   000FD2                     LVDCON          equ	4050	;# 
  1339   000FD3                     OSCCON          equ	4051	;# 
  1340   000FD5                     T0CON           equ	4053	;# 
  1341   000FD6                     TMR0            equ	4054	;# 
  1342   000FD6                     TMR0L           equ	4054	;# 
  1343   000FD7                     TMR0H           equ	4055	;# 
  1344   000FD8                     STATUS          equ	4056	;# 
  1345   000FD9                     FSR2            equ	4057	;# 
  1346   000FD9                     FSR2L           equ	4057	;# 
  1347   000FDA                     FSR2H           equ	4058	;# 
  1348   000FDB                     PLUSW2          equ	4059	;# 
  1349   000FDC                     PREINC2         equ	4060	;# 
  1350   000FDD                     POSTDEC2        equ	4061	;# 
  1351   000FDE                     POSTINC2        equ	4062	;# 
  1352   000FDF                     INDF2           equ	4063	;# 
  1353   000FE0                     BSR             equ	4064	;# 
  1354   000FE1                     FSR1            equ	4065	;# 
  1355   000FE1                     FSR1L           equ	4065	;# 
  1356   000FE2                     FSR1H           equ	4066	;# 
  1357   000FE3                     PLUSW1          equ	4067	;# 
  1358   000FE4                     PREINC1         equ	4068	;# 
  1359   000FE5                     POSTDEC1        equ	4069	;# 
  1360   000FE6                     POSTINC1        equ	4070	;# 
  1361   000FE7                     INDF1           equ	4071	;# 
  1362   000FE8                     WREG            equ	4072	;# 
  1363   000FE9                     FSR0            equ	4073	;# 
  1364   000FE9                     FSR0L           equ	4073	;# 
  1365   000FEA                     FSR0H           equ	4074	;# 
  1366   000FEB                     PLUSW0          equ	4075	;# 
  1367   000FEC                     PREINC0         equ	4076	;# 
  1368   000FED                     POSTDEC0        equ	4077	;# 
  1369   000FEE                     POSTINC0        equ	4078	;# 
  1370   000FEF                     INDF0           equ	4079	;# 
  1371   000FF0                     INTCON3         equ	4080	;# 
  1372   000FF1                     INTCON2         equ	4081	;# 
  1373   000FF2                     INTCON          equ	4082	;# 
  1374   000FF2                     INTCON1         equ	4082	;# 
  1375   000FF3                     PROD            equ	4083	;# 
  1376   000FF3                     PRODL           equ	4083	;# 
  1377   000FF4                     PRODH           equ	4084	;# 
  1378   000FF5                     TABLAT          equ	4085	;# 
  1379   000FF6                     TBLPTR          equ	4086	;# 
  1380   000FF6                     TBLPTRL         equ	4086	;# 
  1381   000FF7                     TBLPTRH         equ	4087	;# 
  1382   000FF8                     TBLPTRU         equ	4088	;# 
  1383   000FF9                     PCLAT           equ	4089	;# 
  1384   000FF9                     PC              equ	4089	;# 
  1385   000FF9                     PCL             equ	4089	;# 
  1386   000FFA                     PCLATH          equ	4090	;# 
  1387   000FFB                     PCLATU          equ	4091	;# 
  1388   000FFC                     STKPTR          equ	4092	;# 
  1389   000FFD                     TOS             equ	4093	;# 
  1390   000FFD                     TOSL            equ	4093	;# 
  1391   000FFE                     TOSH            equ	4094	;# 
  1392   000FFF                     TOSU            equ	4095	;# 
  1393   000F80                     PORTA           equ	3968	;# 
  1394   000F81                     PORTB           equ	3969	;# 
  1395   000F82                     PORTC           equ	3970	;# 
  1396   000F83                     PORTD           equ	3971	;# 
  1397   000F84                     PORTE           equ	3972	;# 
  1398   000F89                     LATA            equ	3977	;# 
  1399   000F8A                     LATB            equ	3978	;# 
  1400   000F8B                     LATC            equ	3979	;# 
  1401   000F8C                     LATD            equ	3980	;# 
  1402   000F8D                     LATE            equ	3981	;# 
  1403   000F92                     TRISA           equ	3986	;# 
  1404   000F92                     DDRA            equ	3986	;# 
  1405   000F93                     TRISB           equ	3987	;# 
  1406   000F93                     DDRB            equ	3987	;# 
  1407   000F94                     TRISC           equ	3988	;# 
  1408   000F94                     DDRC            equ	3988	;# 
  1409   000F95                     TRISD           equ	3989	;# 
  1410   000F95                     DDRD            equ	3989	;# 
  1411   000F96                     TRISE           equ	3990	;# 
  1412   000F96                     DDRE            equ	3990	;# 
  1413   000F9D                     PIE1            equ	3997	;# 
  1414   000F9E                     PIR1            equ	3998	;# 
  1415   000F9F                     IPR1            equ	3999	;# 
  1416   000FA0                     PIE2            equ	4000	;# 
  1417   000FA1                     PIR2            equ	4001	;# 
  1418   000FA2                     IPR2            equ	4002	;# 
  1419   000FA6                     EECON1          equ	4006	;# 
  1420   000FA7                     EECON2          equ	4007	;# 
  1421   000FA8                     EEDATA          equ	4008	;# 
  1422   000FA9                     EEADR           equ	4009	;# 
  1423   000FAB                     RCSTA           equ	4011	;# 
  1424   000FAB                     RCSTA1          equ	4011	;# 
  1425   000FAC                     TXSTA           equ	4012	;# 
  1426   000FAC                     TXSTA1          equ	4012	;# 
  1427   000FAD                     TXREG           equ	4013	;# 
  1428   000FAD                     TXREG1          equ	4013	;# 
  1429   000FAE                     RCREG           equ	4014	;# 
  1430   000FAE                     RCREG1          equ	4014	;# 
  1431   000FAF                     SPBRG           equ	4015	;# 
  1432   000FAF                     SPBRG1          equ	4015	;# 
  1433   000FB1                     T3CON           equ	4017	;# 
  1434   000FB2                     TMR3            equ	4018	;# 
  1435   000FB2                     TMR3L           equ	4018	;# 
  1436   000FB3                     TMR3H           equ	4019	;# 
  1437   000FBA                     CCP2CON         equ	4026	;# 
  1438   000FBB                     CCPR2           equ	4027	;# 
  1439   000FBB                     CCPR2L          equ	4027	;# 
  1440   000FBC                     CCPR2H          equ	4028	;# 
  1441   000FBD                     CCP1CON         equ	4029	;# 
  1442   000FBE                     CCPR1           equ	4030	;# 
  1443   000FBE                     CCPR1L          equ	4030	;# 
  1444   000FBF                     CCPR1H          equ	4031	;# 
  1445   000FC1                     ADCON1          equ	4033	;# 
  1446   000FC2                     ADCON0          equ	4034	;# 
  1447   000FC3                     ADRES           equ	4035	;# 
  1448   000FC3                     ADRESL          equ	4035	;# 
  1449   000FC4                     ADRESH          equ	4036	;# 
  1450   000FC5                     SSPCON2         equ	4037	;# 
  1451   000FC6                     SSPCON1         equ	4038	;# 
  1452   000FC7                     SSPSTAT         equ	4039	;# 
  1453   000FC8                     SSPADD          equ	4040	;# 
  1454   000FC9                     SSPBUF          equ	4041	;# 
  1455   000FCA                     T2CON           equ	4042	;# 
  1456   000FCB                     PR2             equ	4043	;# 
  1457   000FCB                     MEMCON          equ	4043	;# 
  1458   000FCC                     TMR2            equ	4044	;# 
  1459   000FCD                     T1CON           equ	4045	;# 
  1460   000FCE                     TMR1            equ	4046	;# 
  1461   000FCE                     TMR1L           equ	4046	;# 
  1462   000FCF                     TMR1H           equ	4047	;# 
  1463   000FD0                     RCON            equ	4048	;# 
  1464   000FD1                     WDTCON          equ	4049	;# 
  1465   000FD2                     LVDCON          equ	4050	;# 
  1466   000FD3                     OSCCON          equ	4051	;# 
  1467   000FD5                     T0CON           equ	4053	;# 
  1468   000FD6                     TMR0            equ	4054	;# 
  1469   000FD6                     TMR0L           equ	4054	;# 
  1470   000FD7                     TMR0H           equ	4055	;# 
  1471   000FD8                     STATUS          equ	4056	;# 
  1472   000FD9                     FSR2            equ	4057	;# 
  1473   000FD9                     FSR2L           equ	4057	;# 
  1474   000FDA                     FSR2H           equ	4058	;# 
  1475   000FDB                     PLUSW2          equ	4059	;# 
  1476   000FDC                     PREINC2         equ	4060	;# 
  1477   000FDD                     POSTDEC2        equ	4061	;# 
  1478   000FDE                     POSTINC2        equ	4062	;# 
  1479   000FDF                     INDF2           equ	4063	;# 
  1480   000FE0                     BSR             equ	4064	;# 
  1481   000FE1                     FSR1            equ	4065	;# 
  1482   000FE1                     FSR1L           equ	4065	;# 
  1483   000FE2                     FSR1H           equ	4066	;# 
  1484   000FE3                     PLUSW1          equ	4067	;# 
  1485   000FE4                     PREINC1         equ	4068	;# 
  1486   000FE5                     POSTDEC1        equ	4069	;# 
  1487   000FE6                     POSTINC1        equ	4070	;# 
  1488   000FE7                     INDF1           equ	4071	;# 
  1489   000FE8                     WREG            equ	4072	;# 
  1490   000FE9                     FSR0            equ	4073	;# 
  1491   000FE9                     FSR0L           equ	4073	;# 
  1492   000FEA                     FSR0H           equ	4074	;# 
  1493   000FEB                     PLUSW0          equ	4075	;# 
  1494   000FEC                     PREINC0         equ	4076	;# 
  1495   000FED                     POSTDEC0        equ	4077	;# 
  1496   000FEE                     POSTINC0        equ	4078	;# 
  1497   000FEF                     INDF0           equ	4079	;# 
  1498   000FF0                     INTCON3         equ	4080	;# 
  1499   000FF1                     INTCON2         equ	4081	;# 
  1500   000FF2                     INTCON          equ	4082	;# 
  1501   000FF2                     INTCON1         equ	4082	;# 
  1502   000FF3                     PROD            equ	4083	;# 
  1503   000FF3                     PRODL           equ	4083	;# 
  1504   000FF4                     PRODH           equ	4084	;# 
  1505   000FF5                     TABLAT          equ	4085	;# 
  1506   000FF6                     TBLPTR          equ	4086	;# 
  1507   000FF6                     TBLPTRL         equ	4086	;# 
  1508   000FF7                     TBLPTRH         equ	4087	;# 
  1509   000FF8                     TBLPTRU         equ	4088	;# 
  1510   000FF9                     PCLAT           equ	4089	;# 
  1511   000FF9                     PC              equ	4089	;# 
  1512   000FF9                     PCL             equ	4089	;# 
  1513   000FFA                     PCLATH          equ	4090	;# 
  1514   000FFB                     PCLATU          equ	4091	;# 
  1515   000FFC                     STKPTR          equ	4092	;# 
  1516   000FFD                     TOS             equ	4093	;# 
  1517   000FFD                     TOSL            equ	4093	;# 
  1518   000FFE                     TOSH            equ	4094	;# 
  1519   000FFF                     TOSU            equ	4095	;# 
  1520   000F80                     PORTA           equ	3968	;# 
  1521   000F81                     PORTB           equ	3969	;# 
  1522   000F82                     PORTC           equ	3970	;# 
  1523   000F83                     PORTD           equ	3971	;# 
  1524   000F84                     PORTE           equ	3972	;# 
  1525   000F89                     LATA            equ	3977	;# 
  1526   000F8A                     LATB            equ	3978	;# 
  1527   000F8B                     LATC            equ	3979	;# 
  1528   000F8C                     LATD            equ	3980	;# 
  1529   000F8D                     LATE            equ	3981	;# 
  1530   000F92                     TRISA           equ	3986	;# 
  1531   000F92                     DDRA            equ	3986	;# 
  1532   000F93                     TRISB           equ	3987	;# 
  1533   000F93                     DDRB            equ	3987	;# 
  1534   000F94                     TRISC           equ	3988	;# 
  1535   000F94                     DDRC            equ	3988	;# 
  1536   000F95                     TRISD           equ	3989	;# 
  1537   000F95                     DDRD            equ	3989	;# 
  1538   000F96                     TRISE           equ	3990	;# 
  1539   000F96                     DDRE            equ	3990	;# 
  1540   000F9D                     PIE1            equ	3997	;# 
  1541   000F9E                     PIR1            equ	3998	;# 
  1542   000F9F                     IPR1            equ	3999	;# 
  1543   000FA0                     PIE2            equ	4000	;# 
  1544   000FA1                     PIR2            equ	4001	;# 
  1545   000FA2                     IPR2            equ	4002	;# 
  1546   000FA6                     EECON1          equ	4006	;# 
  1547   000FA7                     EECON2          equ	4007	;# 
  1548   000FA8                     EEDATA          equ	4008	;# 
  1549   000FA9                     EEADR           equ	4009	;# 
  1550   000FAB                     RCSTA           equ	4011	;# 
  1551   000FAB                     RCSTA1          equ	4011	;# 
  1552   000FAC                     TXSTA           equ	4012	;# 
  1553   000FAC                     TXSTA1          equ	4012	;# 
  1554   000FAD                     TXREG           equ	4013	;# 
  1555   000FAD                     TXREG1          equ	4013	;# 
  1556   000FAE                     RCREG           equ	4014	;# 
  1557   000FAE                     RCREG1          equ	4014	;# 
  1558   000FAF                     SPBRG           equ	4015	;# 
  1559   000FAF                     SPBRG1          equ	4015	;# 
  1560   000FB1                     T3CON           equ	4017	;# 
  1561   000FB2                     TMR3            equ	4018	;# 
  1562   000FB2                     TMR3L           equ	4018	;# 
  1563   000FB3                     TMR3H           equ	4019	;# 
  1564   000FBA                     CCP2CON         equ	4026	;# 
  1565   000FBB                     CCPR2           equ	4027	;# 
  1566   000FBB                     CCPR2L          equ	4027	;# 
  1567   000FBC                     CCPR2H          equ	4028	;# 
  1568   000FBD                     CCP1CON         equ	4029	;# 
  1569   000FBE                     CCPR1           equ	4030	;# 
  1570   000FBE                     CCPR1L          equ	4030	;# 
  1571   000FBF                     CCPR1H          equ	4031	;# 
  1572   000FC1                     ADCON1          equ	4033	;# 
  1573   000FC2                     ADCON0          equ	4034	;# 
  1574   000FC3                     ADRES           equ	4035	;# 
  1575   000FC3                     ADRESL          equ	4035	;# 
  1576   000FC4                     ADRESH          equ	4036	;# 
  1577   000FC5                     SSPCON2         equ	4037	;# 
  1578   000FC6                     SSPCON1         equ	4038	;# 
  1579   000FC7                     SSPSTAT         equ	4039	;# 
  1580   000FC8                     SSPADD          equ	4040	;# 
  1581   000FC9                     SSPBUF          equ	4041	;# 
  1582   000FCA                     T2CON           equ	4042	;# 
  1583   000FCB                     PR2             equ	4043	;# 
  1584   000FCB                     MEMCON          equ	4043	;# 
  1585   000FCC                     TMR2            equ	4044	;# 
  1586   000FCD                     T1CON           equ	4045	;# 
  1587   000FCE                     TMR1            equ	4046	;# 
  1588   000FCE                     TMR1L           equ	4046	;# 
  1589   000FCF                     TMR1H           equ	4047	;# 
  1590   000FD0                     RCON            equ	4048	;# 
  1591   000FD1                     WDTCON          equ	4049	;# 
  1592   000FD2                     LVDCON          equ	4050	;# 
  1593   000FD3                     OSCCON          equ	4051	;# 
  1594   000FD5                     T0CON           equ	4053	;# 
  1595   000FD6                     TMR0            equ	4054	;# 
  1596   000FD6                     TMR0L           equ	4054	;# 
  1597   000FD7                     TMR0H           equ	4055	;# 
  1598   000FD8                     STATUS          equ	4056	;# 
  1599   000FD9                     FSR2            equ	4057	;# 
  1600   000FD9                     FSR2L           equ	4057	;# 
  1601   000FDA                     FSR2H           equ	4058	;# 
  1602   000FDB                     PLUSW2          equ	4059	;# 
  1603   000FDC                     PREINC2         equ	4060	;# 
  1604   000FDD                     POSTDEC2        equ	4061	;# 
  1605   000FDE                     POSTINC2        equ	4062	;# 
  1606   000FDF                     INDF2           equ	4063	;# 
  1607   000FE0                     BSR             equ	4064	;# 
  1608   000FE1                     FSR1            equ	4065	;# 
  1609   000FE1                     FSR1L           equ	4065	;# 
  1610   000FE2                     FSR1H           equ	4066	;# 
  1611   000FE3                     PLUSW1          equ	4067	;# 
  1612   000FE4                     PREINC1         equ	4068	;# 
  1613   000FE5                     POSTDEC1        equ	4069	;# 
  1614   000FE6                     POSTINC1        equ	4070	;# 
  1615   000FE7                     INDF1           equ	4071	;# 
  1616   000FE8                     WREG            equ	4072	;# 
  1617   000FE9                     FSR0            equ	4073	;# 
  1618   000FE9                     FSR0L           equ	4073	;# 
  1619   000FEA                     FSR0H           equ	4074	;# 
  1620   000FEB                     PLUSW0          equ	4075	;# 
  1621   000FEC                     PREINC0         equ	4076	;# 
  1622   000FED                     POSTDEC0        equ	4077	;# 
  1623   000FEE                     POSTINC0        equ	4078	;# 
  1624   000FEF                     INDF0           equ	4079	;# 
  1625   000FF0                     INTCON3         equ	4080	;# 
  1626   000FF1                     INTCON2         equ	4081	;# 
  1627   000FF2                     INTCON          equ	4082	;# 
  1628   000FF2                     INTCON1         equ	4082	;# 
  1629   000FF3                     PROD            equ	4083	;# 
  1630   000FF3                     PRODL           equ	4083	;# 
  1631   000FF4                     PRODH           equ	4084	;# 
  1632   000FF5                     TABLAT          equ	4085	;# 
  1633   000FF6                     TBLPTR          equ	4086	;# 
  1634   000FF6                     TBLPTRL         equ	4086	;# 
  1635   000FF7                     TBLPTRH         equ	4087	;# 
  1636   000FF8                     TBLPTRU         equ	4088	;# 
  1637   000FF9                     PCLAT           equ	4089	;# 
  1638   000FF9                     PC              equ	4089	;# 
  1639   000FF9                     PCL             equ	4089	;# 
  1640   000FFA                     PCLATH          equ	4090	;# 
  1641   000FFB                     PCLATU          equ	4091	;# 
  1642   000FFC                     STKPTR          equ	4092	;# 
  1643   000FFD                     TOS             equ	4093	;# 
  1644   000FFD                     TOSL            equ	4093	;# 
  1645   000FFE                     TOSH            equ	4094	;# 
  1646   000FFF                     TOSU            equ	4095	;# 
  1647   000F80                     PORTA           equ	3968	;# 
  1648   000F81                     PORTB           equ	3969	;# 
  1649   000F82                     PORTC           equ	3970	;# 
  1650   000F83                     PORTD           equ	3971	;# 
  1651   000F84                     PORTE           equ	3972	;# 
  1652   000F89                     LATA            equ	3977	;# 
  1653   000F8A                     LATB            equ	3978	;# 
  1654   000F8B                     LATC            equ	3979	;# 
  1655   000F8C                     LATD            equ	3980	;# 
  1656   000F8D                     LATE            equ	3981	;# 
  1657   000F92                     TRISA           equ	3986	;# 
  1658   000F92                     DDRA            equ	3986	;# 
  1659   000F93                     TRISB           equ	3987	;# 
  1660   000F93                     DDRB            equ	3987	;# 
  1661   000F94                     TRISC           equ	3988	;# 
  1662   000F94                     DDRC            equ	3988	;# 
  1663   000F95                     TRISD           equ	3989	;# 
  1664   000F95                     DDRD            equ	3989	;# 
  1665   000F96                     TRISE           equ	3990	;# 
  1666   000F96                     DDRE            equ	3990	;# 
  1667   000F9D                     PIE1            equ	3997	;# 
  1668   000F9E                     PIR1            equ	3998	;# 
  1669   000F9F                     IPR1            equ	3999	;# 
  1670   000FA0                     PIE2            equ	4000	;# 
  1671   000FA1                     PIR2            equ	4001	;# 
  1672   000FA2                     IPR2            equ	4002	;# 
  1673   000FA6                     EECON1          equ	4006	;# 
  1674   000FA7                     EECON2          equ	4007	;# 
  1675   000FA8                     EEDATA          equ	4008	;# 
  1676   000FA9                     EEADR           equ	4009	;# 
  1677   000FAB                     RCSTA           equ	4011	;# 
  1678   000FAB                     RCSTA1          equ	4011	;# 
  1679   000FAC                     TXSTA           equ	4012	;# 
  1680   000FAC                     TXSTA1          equ	4012	;# 
  1681   000FAD                     TXREG           equ	4013	;# 
  1682   000FAD                     TXREG1          equ	4013	;# 
  1683   000FAE                     RCREG           equ	4014	;# 
  1684   000FAE                     RCREG1          equ	4014	;# 
  1685   000FAF                     SPBRG           equ	4015	;# 
  1686   000FAF                     SPBRG1          equ	4015	;# 
  1687   000FB1                     T3CON           equ	4017	;# 
  1688   000FB2                     TMR3            equ	4018	;# 
  1689   000FB2                     TMR3L           equ	4018	;# 
  1690   000FB3                     TMR3H           equ	4019	;# 
  1691   000FBA                     CCP2CON         equ	4026	;# 
  1692   000FBB                     CCPR2           equ	4027	;# 
  1693   000FBB                     CCPR2L          equ	4027	;# 
  1694   000FBC                     CCPR2H          equ	4028	;# 
  1695   000FBD                     CCP1CON         equ	4029	;# 
  1696   000FBE                     CCPR1           equ	4030	;# 
  1697   000FBE                     CCPR1L          equ	4030	;# 
  1698   000FBF                     CCPR1H          equ	4031	;# 
  1699   000FC1                     ADCON1          equ	4033	;# 
  1700   000FC2                     ADCON0          equ	4034	;# 
  1701   000FC3                     ADRES           equ	4035	;# 
  1702   000FC3                     ADRESL          equ	4035	;# 
  1703   000FC4                     ADRESH          equ	4036	;# 
  1704   000FC5                     SSPCON2         equ	4037	;# 
  1705   000FC6                     SSPCON1         equ	4038	;# 
  1706   000FC7                     SSPSTAT         equ	4039	;# 
  1707   000FC8                     SSPADD          equ	4040	;# 
  1708   000FC9                     SSPBUF          equ	4041	;# 
  1709   000FCA                     T2CON           equ	4042	;# 
  1710   000FCB                     PR2             equ	4043	;# 
  1711   000FCB                     MEMCON          equ	4043	;# 
  1712   000FCC                     TMR2            equ	4044	;# 
  1713   000FCD                     T1CON           equ	4045	;# 
  1714   000FCE                     TMR1            equ	4046	;# 
  1715   000FCE                     TMR1L           equ	4046	;# 
  1716   000FCF                     TMR1H           equ	4047	;# 
  1717   000FD0                     RCON            equ	4048	;# 
  1718   000FD1                     WDTCON          equ	4049	;# 
  1719   000FD2                     LVDCON          equ	4050	;# 
  1720   000FD3                     OSCCON          equ	4051	;# 
  1721   000FD5                     T0CON           equ	4053	;# 
  1722   000FD6                     TMR0            equ	4054	;# 
  1723   000FD6                     TMR0L           equ	4054	;# 
  1724   000FD7                     TMR0H           equ	4055	;# 
  1725   000FD8                     STATUS          equ	4056	;# 
  1726   000FD9                     FSR2            equ	4057	;# 
  1727   000FD9                     FSR2L           equ	4057	;# 
  1728   000FDA                     FSR2H           equ	4058	;# 
  1729   000FDB                     PLUSW2          equ	4059	;# 
  1730   000FDC                     PREINC2         equ	4060	;# 
  1731   000FDD                     POSTDEC2        equ	4061	;# 
  1732   000FDE                     POSTINC2        equ	4062	;# 
  1733   000FDF                     INDF2           equ	4063	;# 
  1734   000FE0                     BSR             equ	4064	;# 
  1735   000FE1                     FSR1            equ	4065	;# 
  1736   000FE1                     FSR1L           equ	4065	;# 
  1737   000FE2                     FSR1H           equ	4066	;# 
  1738   000FE3                     PLUSW1          equ	4067	;# 
  1739   000FE4                     PREINC1         equ	4068	;# 
  1740   000FE5                     POSTDEC1        equ	4069	;# 
  1741   000FE6                     POSTINC1        equ	4070	;# 
  1742   000FE7                     INDF1           equ	4071	;# 
  1743   000FE8                     WREG            equ	4072	;# 
  1744   000FE9                     FSR0            equ	4073	;# 
  1745   000FE9                     FSR0L           equ	4073	;# 
  1746   000FEA                     FSR0H           equ	4074	;# 
  1747   000FEB                     PLUSW0          equ	4075	;# 
  1748   000FEC                     PREINC0         equ	4076	;# 
  1749   000FED                     POSTDEC0        equ	4077	;# 
  1750   000FEE                     POSTINC0        equ	4078	;# 
  1751   000FEF                     INDF0           equ	4079	;# 
  1752   000FF0                     INTCON3         equ	4080	;# 
  1753   000FF1                     INTCON2         equ	4081	;# 
  1754   000FF2                     INTCON          equ	4082	;# 
  1755   000FF2                     INTCON1         equ	4082	;# 
  1756   000FF3                     PROD            equ	4083	;# 
  1757   000FF3                     PRODL           equ	4083	;# 
  1758   000FF4                     PRODH           equ	4084	;# 
  1759   000FF5                     TABLAT          equ	4085	;# 
  1760   000FF6                     TBLPTR          equ	4086	;# 
  1761   000FF6                     TBLPTRL         equ	4086	;# 
  1762   000FF7                     TBLPTRH         equ	4087	;# 
  1763   000FF8                     TBLPTRU         equ	4088	;# 
  1764   000FF9                     PCLAT           equ	4089	;# 
  1765   000FF9                     PC              equ	4089	;# 
  1766   000FF9                     PCL             equ	4089	;# 
  1767   000FFA                     PCLATH          equ	4090	;# 
  1768   000FFB                     PCLATU          equ	4091	;# 
  1769   000FFC                     STKPTR          equ	4092	;# 
  1770   000FFD                     TOS             equ	4093	;# 
  1771   000FFD                     TOSL            equ	4093	;# 
  1772   000FFE                     TOSH            equ	4094	;# 
  1773   000FFF                     TOSU            equ	4095	;# 
  1774                           
  1775                           	psect	idataCOMRAM
  1776   0013E0                     __pidataCOMRAM:
  1777                           	callstack 0
  1778                           
  1779                           ;initializer for __PORT_registers
  1780   0013E0  80                 	db	128
  1781   0013E1  0F                 	db	15
  1782   0013E2  81                 	db	129
  1783   0013E3  0F                 	db	15
  1784   0013E4  82                 	db	130
  1785   0013E5  0F                 	db	15
  1786   0013E6  83                 	db	131
  1787   0013E7  0F                 	db	15
  1788   0013E8  84                 	db	132
  1789   0013E9  0F                 	db	15
  1790                           
  1791                           ;initializer for __LAT_registers
  1792   0013EA  89                 	db	137
  1793   0013EB  0F                 	db	15
  1794   0013EC  8A                 	db	138
  1795   0013ED  0F                 	db	15
  1796   0013EE  8B                 	db	139
  1797   0013EF  0F                 	db	15
  1798   0013F0  8C                 	db	140
  1799   0013F1  0F                 	db	15
  1800   0013F2  8D                 	db	141
  1801   0013F3  0F                 	db	15
  1802                           
  1803                           ;initializer for __TRIS_registers
  1804   0013F4  92                 	db	146
  1805   0013F5  0F                 	db	15
  1806   0013F6  93                 	db	147
  1807   0013F7  0F                 	db	15
  1808   0013F8  94                 	db	148
  1809   0013F9  0F                 	db	15
  1810   0013FA  95                 	db	149
  1811   0013FB  0F                 	db	15
  1812   0013FC  96                 	db	150
  1813   0013FD  0F                 	db	15
  1814                           
  1815                           ;initializer for _first_int
  1816   0013FE  00                 	db	0
  1817   0013FF  00                 	db	0
  1818   001400  00                 	db	0
  1819   001401  00                 	db	0
  1820   001402  59                 	db	89
  1821   001403  00                 	db	0
  1822                           
  1823                           ;initializer for _segment1
  1824   001404  00                 	db	0
  1825   001405  08                 	db	8
  1826   001406  10                 	db	16
  1827   001407  18                 	db	24
  1828   001408  00                 	db	0
  1829                           
  1830                           ;initializer for _led_arr
  1831   001409  00                 	db	0
  1832   00140A  08                 	db	8
  1833   00140B  10                 	db	16
  1834   00140C  18                 	db	24
  1835                           
  1836                           ;initializer for _btn2
  1837   00140D  4C                 	db	76
  1838   00140E  01                 	db	1
  1839   00140F  00                 	db	0
  1840                           
  1841                           ;initializer for _btn1
  1842   001410  E0                 	db	224
  1843   001411  01                 	db	1
  1844   001412  01                 	db	1
  1845                           
  1846                           ;initializer for _motor2
  1847   001413  7C                 	db	124
  1848   001414  4A                 	db	74
  1849                           
  1850                           ;initializer for _motor1
  1851   001415  08                 	db	8
  1852   001416  10                 	db	16
  1853                           
  1854                           ;initializer for _i
  1855   001417  5A                 	db	90
  1856                           
  1857                           ;initializer for _seg_units_en
  1858   001418  8B                 	db	139
  1859                           
  1860                           ;initializer for _RB7f
  1861   001419  01                 	db	1
  1862                           
  1863                           ;initializer for _RB6f
  1864   00141A  01                 	db	1
  1865                           
  1866                           ;initializer for _RB5f
  1867   00141B  01                 	db	1
  1868                           
  1869                           ;initializer for _RB4f
  1870   00141C  01                 	db	1
  1871                           
  1872                           ;initializer for _testing
  1873   00141D  8B                 	db	139
  1874                           
  1875                           ;initializer for _relay1
  1876   00141E  08                 	db	8
  1877                           
  1878                           ;initializer for _second_int
  1879   00141F  00                 	db	0
  1880   001420  00                 	db	0
  1881   001421  49                 	db	73
  1882   001422  01                 	db	1
  1883   001423  00                 	db	0
  1884                           
  1885                           ;initializer for _LED_NOK
  1886   001424  08                 	db	8
  1887                           
  1888                           	psect	idataBANK0
  1889   001468                     __pidataBANK0:
  1890                           	callstack 0
  1891                           
  1892                           ;initializer for _LCD1
  1893   001468  93                 	db	147
  1894   001469  9B                 	db	155
  1895   00146A  01                 	db	1
  1896   00146B  A2                 	db	162
  1897   00146C  AA                 	db	170
  1898   00146D  B2                 	db	178
  1899   00146E  BA                 	db	186
  1900   00146F  A3                 	db	163
  1901   001470  AB                 	db	171
  1902   001471  B3                 	db	179
  1903   001472  BB                 	db	187
  1904                           
  1905                           ;initializer for _keypad1
  1906   001473  21                 	db	33
  1907   001474  19                 	db	25
  1908   001475  11                 	db	17
  1909   001476  09                 	db	9
  1910   001477  2B                 	db	43
  1911   001478  23                 	db	35
  1912   001479  1B                 	db	27
  1913   00147A  13                 	db	19
  1914   00147B  00                 	db	0
  1915                           
  1916                           	psect	smallconst
  1917   000600                     __psmallconst:
  1918                           	callstack 0
  1919   000600  00                 	db	0
  1920   000601                     _keypad_elements:
  1921                           	callstack 0
  1922   000601  31                 	db	49
  1923   000602  32                 	db	50
  1924   000603  33                 	db	51
  1925   000604  41                 	db	65
  1926   000605  34                 	db	52
  1927   000606  35                 	db	53
  1928   000607  36                 	db	54
  1929   000608  42                 	db	66
  1930   000609  37                 	db	55
  1931   00060A  38                 	db	56
  1932   00060B  39                 	db	57
  1933   00060C  43                 	db	67
  1934   00060D  2A                 	db	42
  1935   00060E  30                 	db	48
  1936   00060F  23                 	db	35
  1937   000610  44                 	db	68
  1938   000611                     __end_of_keypad_elements:
  1939                           	callstack 0
  1940   000F81                     _PORTBbits      set	3969
  1941   000FF1                     _INTCON2bits    set	4081
  1942   000FD0                     _RCONbits       set	4048
  1943   000FF0                     _INTCON3bits    set	4080
  1944   000FF2                     _INTCONbits     set	4082
  1945   000F84                     _PORTE          set	3972
  1946   000F83                     _PORTD          set	3971
  1947   000F82                     _PORTC          set	3970
  1948   000F81                     _PORTB          set	3969
  1949   000F80                     _PORTA          set	3968
  1950   000F8D                     _LATE           set	3981
  1951   000F8C                     _LATD           set	3980
  1952   000F8B                     _LATC           set	3979
  1953   000F8A                     _LATB           set	3978
  1954   000F89                     _LATA           set	3977
  1955   000F96                     _TRISE          set	3990
  1956   000F95                     _TRISD          set	3989
  1957   000F94                     _TRISC          set	3988
  1958   000F93                     _TRISB          set	3987
  1959   000F92                     _TRISA          set	3986
  1960   000611                     STR_1:
  1961   000611  25                 	db	37
  1962   000612  69                 	db	105	;'i'
  1963   000613  00                 	db	0
  1964   000611                     STR_2           equ	STR_1
  1965   000611                     STR_3           equ	STR_1
  1966   000614  00                 	db	0	; dummy byte at the end
  1967   000600                     __smallconst    set	__psmallconst
  1968   000600                     __mediumconst   set	__psmallconst
  1969   000002                     __activetblptr  equ	2
  1970                           
  1971                           ; #config settings
  1972                           
  1973                           	psect	cinit
  1974   001386                     __pcinit:
  1975                           	callstack 0
  1976   001386                     start_initialization:
  1977                           	callstack 0
  1978   001386                     __initialization:
  1979                           	callstack 0
  1980                           
  1981                           ; Initialize objects allocated to BANK0 (20 bytes)
  1982                           ; load TBLPTR registers with __pidataBANK0
  1983   001386  0E68               	movlw	low __pidataBANK0
  1984   001388  6EF6               	movwf	tblptrl,c
  1985   00138A  0E14               	movlw	high __pidataBANK0
  1986   00138C  6EF7               	movwf	tblptrh,c
  1987   00138E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1988   001390  6EF8               	movwf	tblptru,c
  1989   001392  EE00  F080         	lfsr	0,__pdataBANK0
  1990   001396  EE10 F014          	lfsr	1,20
  1991   00139A                     copy_data0:
  1992   00139A  0009               	tblrd		*+
  1993   00139C  CFF5 FFEE          	movff	tablat,postinc0
  1994   0013A0  50E5               	movf	postdec1,w,c
  1995   0013A2  50E1               	movf	fsr1l,w,c
  1996   0013A4  E1FA               	bnz	copy_data0
  1997                           
  1998                           ; Initialize objects allocated to COMRAM (69 bytes)
  1999                           ; load TBLPTR registers with __pidataCOMRAM
  2000   0013A6  0EE0               	movlw	low __pidataCOMRAM
  2001   0013A8  6EF6               	movwf	tblptrl,c
  2002   0013AA  0E13               	movlw	high __pidataCOMRAM
  2003   0013AC  6EF7               	movwf	tblptrh,c
  2004   0013AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2005   0013B0  6EF8               	movwf	tblptru,c
  2006   0013B2  EE00  F001         	lfsr	0,__pdataCOMRAM
  2007   0013B6  EE10 F045          	lfsr	1,69
  2008   0013BA                     copy_data1:
  2009   0013BA  0009               	tblrd		*+
  2010   0013BC  CFF5 FFEE          	movff	tablat,postinc0
  2011   0013C0  50E5               	movf	postdec1,w,c
  2012   0013C2  50E1               	movf	fsr1l,w,c
  2013   0013C4  E1FA               	bnz	copy_data1
  2014                           
  2015                           ; Clear objects allocated to COMRAM (36 bytes)
  2016   0013C6  EE00  F046         	lfsr	0,__pbssCOMRAM
  2017   0013CA  0E24               	movlw	36
  2018   0013CC                     clear_0:
  2019   0013CC  6AEE               	clrf	postinc0,c
  2020   0013CE  06E8               	decf	wreg,f,c
  2021   0013D0  E1FD               	bnz	clear_0
  2022   0013D2                     end_of_initialization:
  2023                           	callstack 0
  2024   0013D2                     __end_of__initialization:
  2025                           	callstack 0
  2026   0013D2  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2027   0013D4  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2028   0013D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2029   0013D8  6EF8               	movwf	tblptru,c
  2030   0013DA  0100               	movlb	0
  2031   0013DC  EF13  F00A         	goto	_main	;jump to C main() function
  2032                           
  2033                           	psect	bssCOMRAM
  2034   000046                     __pbssCOMRAM:
  2035                           	callstack 0
  2036   000046                     _errno:
  2037                           	callstack 0
  2038   000046                     	ds	2
  2039   000048                     _RB7_handler_low:
  2040                           	callstack 0
  2041   000048                     	ds	2
  2042   00004A                     _RB7_handler_high:
  2043                           	callstack 0
  2044   00004A                     	ds	2
  2045   00004C                     _RB6_handler_low:
  2046                           	callstack 0
  2047   00004C                     	ds	2
  2048   00004E                     _RB6_handler_high:
  2049                           	callstack 0
  2050   00004E                     	ds	2
  2051   000050                     _RB5_handler_low:
  2052                           	callstack 0
  2053   000050                     	ds	2
  2054   000052                     _RB5_handler_high:
  2055                           	callstack 0
  2056   000052                     	ds	2
  2057   000054                     _RB4_handler_low:
  2058                           	callstack 0
  2059   000054                     	ds	2
  2060   000056                     _RB4_handler_high:
  2061                           	callstack 0
  2062   000056                     	ds	2
  2063   000058                     _INT2_handler:
  2064                           	callstack 0
  2065   000058                     	ds	2
  2066   00005A                     _INT1_handler:
  2067                           	callstack 0
  2068   00005A                     	ds	2
  2069   00005C                     _INT0_handler:
  2070                           	callstack 0
  2071   00005C                     	ds	2
  2072   00005E                     _prev:
  2073                           	callstack 0
  2074   00005E                     	ds	1
  2075   00005F                     _knum:
  2076                           	callstack 0
  2077   00005F                     	ds	1
  2078   000060                     _j:
  2079                           	callstack 0
  2080   000060                     	ds	1
  2081   000061                     _Iflag:
  2082                           	callstack 0
  2083   000061                     	ds	1
  2084   000062                     relay_turn_off@F2875:
  2085                           	callstack 0
  2086   000062                     	ds	1
  2087   000063                     relay_turn_on@F2870:
  2088                           	callstack 0
  2089   000063                     	ds	1
  2090   000064                     relay_initialize@F2865:
  2091                           	callstack 0
  2092   000064                     	ds	1
  2093   000065                     LED_toggle@F2885:
  2094                           	callstack 0
  2095   000065                     	ds	1
  2096   000066                     LED_off@F2880:
  2097                           	callstack 0
  2098   000066                     	ds	1
  2099   000067                     LED_on@F2875:
  2100                           	callstack 0
  2101   000067                     	ds	1
  2102   000068                     LED_initialize@F2870:
  2103                           	callstack 0
  2104   000068                     	ds	1
  2105   000069                     _LED_OK:
  2106                           	callstack 0
  2107   000069                     	ds	1
  2108                           
  2109                           	psect	dataCOMRAM
  2110   000001                     __pdataCOMRAM:
  2111                           	callstack 0
  2112   000001                     __PORT_registers:
  2113                           	callstack 0
  2114   000001                     	ds	10
  2115   00000B                     __LAT_registers:
  2116                           	callstack 0
  2117   00000B                     	ds	10
  2118   000015                     __TRIS_registers:
  2119                           	callstack 0
  2120   000015                     	ds	10
  2121   00001F                     _first_int:
  2122                           	callstack 0
  2123   00001F                     	ds	6
  2124   000025                     _segment1:
  2125                           	callstack 0
  2126   000025                     	ds	5
  2127   00002A                     _led_arr:
  2128                           	callstack 0
  2129   00002A                     	ds	4
  2130   00002E                     _btn2:
  2131                           	callstack 0
  2132   00002E                     	ds	3
  2133   000031                     _btn1:
  2134                           	callstack 0
  2135   000031                     	ds	3
  2136   000034                     _motor2:
  2137                           	callstack 0
  2138   000034                     	ds	2
  2139   000036                     _motor1:
  2140                           	callstack 0
  2141   000036                     	ds	2
  2142   000038                     _i:
  2143                           	callstack 0
  2144   000038                     	ds	1
  2145   000039                     _seg_units_en:
  2146                           	callstack 0
  2147   000039                     	ds	1
  2148   00003A                     _RB7f:
  2149                           	callstack 0
  2150   00003A                     	ds	1
  2151   00003B                     _RB6f:
  2152                           	callstack 0
  2153   00003B                     	ds	1
  2154   00003C                     _RB5f:
  2155                           	callstack 0
  2156   00003C                     	ds	1
  2157   00003D                     _RB4f:
  2158                           	callstack 0
  2159   00003D                     	ds	1
  2160   00003E                     _testing:
  2161                           	callstack 0
  2162   00003E                     	ds	1
  2163   00003F                     _relay1:
  2164                           	callstack 0
  2165   00003F                     	ds	1
  2166   000040                     _second_int:
  2167                           	callstack 0
  2168   000040                     	ds	5
  2169   000045                     _LED_NOK:
  2170                           	callstack 0
  2171   000045                     	ds	1
  2172                           
  2173                           	psect	dataBANK0
  2174   000080                     __pdataBANK0:
  2175                           	callstack 0
  2176   000080                     _LCD1:
  2177                           	callstack 0
  2178   000080                     	ds	11
  2179   00008B                     _keypad1:
  2180                           	callstack 0
  2181   00008B                     	ds	9
  2182                           
  2183                           	psect	cstackBANK0
  2184   000094                     __pcstackBANK0:
  2185                           	callstack 0
  2186   000094                     LED_on@led:
  2187                           	callstack 0
  2188   000094                     _INT_INTx_initialize$1352:
  2189                           	callstack 0
  2190                           
  2191                           ; 1 bytes @ 0x0
  2192   000094                     	ds	1
  2193   000095                     INT_INTx_initialize@ret:
  2194                           	callstack 0
  2195   000095                     ??_LED_on:
  2196                           
  2197                           ; 1 bytes @ 0x1
  2198   000095                     	ds	1
  2199   000096                     LED_on@pin_local:
  2200                           	callstack 0
  2201                           
  2202                           ; 1 bytes @ 0x2
  2203   000096                     	ds	1
  2204                           
  2205                           	psect	cstackCOMRAM
  2206   00006A                     __pcstackCOMRAM:
  2207                           	callstack 0
  2208   00006A                     i2RB5_ISR@fl:
  2209                           	callstack 0
  2210   00006A                     i2RB6_ISR@fl:
  2211                           	callstack 0
  2212   00006A                     i2RB7_ISR@fl:
  2213                           	callstack 0
  2214   00006A                     
  2215                           ; 1 bytes @ 0x0
  2216   00006A                     	ds	1
  2217   00006B                     RB5_ISR@fl:
  2218                           	callstack 0
  2219   00006B                     RB6_ISR@fl:
  2220                           	callstack 0
  2221   00006B                     RB7_ISR@fl:
  2222                           	callstack 0
  2223   00006B                     
  2224                           ; 1 bytes @ 0x1
  2225   00006B                     	ds	1
  2226   00006C                     ??_InterruptManagerLow:
  2227                           
  2228                           ; 1 bytes @ 0x2
  2229   00006C                     	ds	3
  2230   00006F                     GPIO_check_access@_pin_config:
  2231                           	callstack 0
  2232   00006F                     INT_INTx_check_access@lint:
  2233                           	callstack 0
  2234   00006F                     INT_INTx_get_index@lint:
  2235                           	callstack 0
  2236                           
  2237                           ; 1 bytes @ 0x5
  2238   00006F                     	ds	1
  2239   000070                     INT_INTx_check_access@ret:
  2240                           	callstack 0
  2241   000070                     INT_INTx_get_index@ind:
  2242                           	callstack 0
  2243   000070                     ??_GPIO_check_access:
  2244   000070                     
  2245                           ; 1 bytes @ 0x6
  2246   000070                     	ds	1
  2247   000071                     GPIO_check_access@ret:
  2248                           	callstack 0
  2249   000071                     INT_INTx_enable@lint:
  2250                           	callstack 0
  2251   000071                     INT_INTx_disable@lint:
  2252                           	callstack 0
  2253   000071                     INT_INTx_priority_initialize@lint:
  2254                           	callstack 0
  2255   000071                     INT_INTx_edge_initialize@lint:
  2256                           	callstack 0
  2257   000071                     INT_INTx_clear_flag@lint:
  2258                           	callstack 0
  2259   000071                     INT_INTx_set_callback_routine@lint:
  2260                           	callstack 0
  2261                           
  2262                           ; 1 bytes @ 0x7
  2263   000071                     	ds	1
  2264   000072                     GPIO_pin_direction_initialize@_pin_config:
  2265                           	callstack 0
  2266   000072                     GPIO_pin_write_logic@_pin_config:
  2267                           	callstack 0
  2268   000072                     ??_INT_INTx_disable:
  2269   000072                     ??_INT_INTx_clear_flag:
  2270   000072                     ??_INT_INTx_set_callback_routine:
  2271   000072                     ??_INT_INTx_priority_initialize:
  2272   000072                     ??_INT_INTx_edge_initialize:
  2273   000072                     ??_INT_INTx_enable:
  2274                           
  2275                           ; 1 bytes @ 0x8
  2276   000072                     	ds	1
  2277   000073                     GPIO_pin_write_logic@logic:
  2278                           	callstack 0
  2279   000073                     ??_GPIO_pin_direction_initialize:
  2280                           
  2281                           ; 1 bytes @ 0x9
  2282   000073                     	ds	1
  2283   000074                     INT_INTx_enable@ind:
  2284                           	callstack 0
  2285   000074                     INT_INTx_disable@ind:
  2286                           	callstack 0
  2287   000074                     INT_INTx_priority_initialize@ind:
  2288                           	callstack 0
  2289   000074                     INT_INTx_edge_initialize@ind:
  2290                           	callstack 0
  2291   000074                     INT_INTx_clear_flag@ind:
  2292                           	callstack 0
  2293   000074                     INT_INTx_set_callback_routine@ind:
  2294                           	callstack 0
  2295   000074                     ??_GPIO_pin_write_logic:
  2296                           
  2297                           ; 1 bytes @ 0xA
  2298   000074                     	ds	1
  2299   000075                     INT_INTx_enable@ret:
  2300                           	callstack 0
  2301   000075                     INT_INTx_disable@ret:
  2302                           	callstack 0
  2303   000075                     INT_INTx_priority_initialize@ret:
  2304                           	callstack 0
  2305   000075                     INT_INTx_edge_initialize@ret:
  2306                           	callstack 0
  2307   000075                     INT_INTx_clear_flag@ret:
  2308                           	callstack 0
  2309   000075                     INT_INTx_set_callback_routine@ret:
  2310                           	callstack 0
  2311                           
  2312                           ; 1 bytes @ 0xB
  2313   000075                     	ds	3
  2314   000078                     GPIO_pin_direction_initialize@ret:
  2315                           	callstack 0
  2316                           
  2317                           ; 1 bytes @ 0xE
  2318   000078                     	ds	1
  2319   000079                     GPIO_pin_write_logic@ret:
  2320                           	callstack 0
  2321   000079                     INT_INTx_initialize@lint:
  2322                           	callstack 0
  2323                           
  2324                           ; 1 bytes @ 0xF
  2325   000079                     	ds	1
  2326   00007A                     
  2327                           ; 1 bytes @ 0x10
  2328 ;;
  2329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2330 ;;
  2331 ;; *************** function _main *****************
  2332 ;; Defined at:
  2333 ;;		line 37 in file "application.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  ret             1    0        unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2  969[None  ] int 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2347 ;;      Params:         0       0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels required when called: 7
  2353 ;; This function calls:
  2354 ;;		_INT_INTx_initialize
  2355 ;;		_LED_on
  2356 ;; This function is called by:
  2357 ;;		Startup code after reset
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text0
  2362   001426                     __ptext0:
  2363                           	callstack 0
  2364   001426                     _main:
  2365                           	callstack 24
  2366   001426  FFFF               	dw	65535	; assembler added errata NOP
  2367                           
  2368                           ;application.c: 39:     if(INT_INTx_initialize(&second_int))
  2369   001428  0E40               	movlw	low _second_int
  2370   00142A  6E79               	movwf	INT_INTx_initialize@lint^0,c
  2371   00142C  EC6C  F005         	call	_INT_INTx_initialize	;wreg free
  2372   001430  0900               	iorlw	0
  2373   001432  B4D8               	btfsc	status,2,c
  2374   001434  EF1E  F00A         	goto	u5971
  2375   001438  EF21  F00A         	goto	u5970
  2376   00143C                     u5971:
  2377   00143C  FFFF               	dw	65535	; assembler added errata NOP
  2378   00143E  EF29  F00A         	goto	l5795
  2379   001442                     u5970:
  2380   001442  FFFF               	dw	65535	; assembler added errata NOP
  2381   001444                     
  2382                           ;application.c: 40:         LED_on(&LED_OK);
  2383   001444  0E69               	movlw	low _LED_OK
  2384   001446  0100               	movlb	0	; () banked
  2385   001448  6F94               	movwf	LED_on@led& (0+255),b
  2386   00144A  ECB0  F008         	call	_LED_on	;wreg free
  2387   00144E  EF2F  F00A         	goto	l972
  2388   001452                     l5795:
  2389   001452  FFFF               	dw	65535	; assembler added errata NOP
  2390                           
  2391                           ;application.c: 42:         LED_on(&LED_NOK);
  2392   001454  0E45               	movlw	low _LED_NOK
  2393   001456  0100               	movlb	0	; () banked
  2394   001458  6F94               	movwf	LED_on@led& (0+255),b
  2395   00145A  ECB0  F008         	call	_LED_on	;wreg free
  2396   00145E                     l972:
  2397   00145E  FFFF               	dw	65535	; assembler added errata NOP
  2398   001460  EF2F  F00A         	goto	l972
  2399   001464  EF42  F001         	goto	start
  2400   001468                     __end_of_main:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _LED_on *****************
  2404 ;; Defined at:
  2405 ;;		line 33 in file "ECU_layer/LED/ecu_led.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  led             1    0[BANK0 ] PTR struct .
  2408 ;;		 -> LED_NOK(1), LED_OK(1), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  pin_local       1    2[BANK0 ] struct .
  2411 ;;  ret             1    0        unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      unsigned char 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2421 ;;      Params:         0       1       0       0       0       0       0
  2422 ;;      Locals:         0       1       0       0       0       0       0
  2423 ;;      Temps:          0       1       0       0       0       0       0
  2424 ;;      Totals:         0       3       0       0       0       0       0
  2425 ;;Total ram usage:        3 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 6
  2428 ;; This function calls:
  2429 ;;		_GPIO_check_access
  2430 ;;		_GPIO_pin_write_logic
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text1
  2437   001160                     __ptext1:
  2438                           	callstack 0
  2439   001160                     _LED_on:
  2440                           	callstack 0
  2441   001160  FFFF               	dw	65535	; assembler added errata NOP
  2442   001162                     
  2443                           ;ECU_layer/LED/ecu_led.c: 35:  if ( (((void*)0) == led) ){
  2444   001162  0100               	movlb	0	; () banked
  2445   001164  5194               	movf	LED_on@led& (0+255),w,b
  2446   001166  A4D8               	btfss	status,2,c
  2447   001168  EFB8  F008         	goto	u5021
  2448   00116C  EFBB  F008         	goto	u5020
  2449   001170                     u5021:
  2450   001170  FFFF               	dw	65535	; assembler added errata NOP
  2451   001172  EFBF  F008         	goto	l312
  2452   001176                     u5020:
  2453   001176  FFFF               	dw	65535	; assembler added errata NOP
  2454   001178                     l5169:
  2455   001178  FFFF               	dw	65535	; assembler added errata NOP
  2456                           
  2457                           ;ECU_layer/LED/ecu_led.c: 37:  }
  2458   00117A  EFFB  F008         	goto	l318
  2459   00117E                     l312:
  2460   00117E  FFFF               	dw	65535	; assembler added errata NOP
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;ECU_layer/LED/ecu_led.c: 39:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  2464   001180  C067  F096         	movff	LED_on@F2875,LED_on@pin_local
  2465   001184                     
  2466                           ; BSR set to: 0
  2467   001184  5194               	movf	LED_on@led& (0+255),w,b
  2468   001186  6ED9               	movwf	fsr2l,c
  2469   001188  6ADA               	clrf	fsr2h,c
  2470   00118A  50DF               	movf	223,w,c
  2471   00118C  0B07               	andlw	7
  2472   00118E  6F95               	movwf	??_LED_on& (0+255),b
  2473   001190  5196               	movf	LED_on@pin_local& (0+255),w,b
  2474   001192  1995               	xorwf	??_LED_on& (0+255),w,b
  2475   001194  0BF8               	andlw	-8
  2476   001196  1995               	xorwf	??_LED_on& (0+255),w,b
  2477   001198  6F96               	movwf	LED_on@pin_local& (0+255),b
  2478   00119A  5194               	movf	LED_on@led& (0+255),w,b
  2479   00119C  6ED9               	movwf	fsr2l,c
  2480   00119E  6ADA               	clrf	fsr2h,c
  2481   0011A0  30DF               	rrcf	223,w,c
  2482   0011A2  32E8               	rrcf	wreg,f,c
  2483   0011A4  32E8               	rrcf	wreg,f,c
  2484   0011A6  0B07               	andlw	7
  2485   0011A8  6F95               	movwf	??_LED_on& (0+255),b
  2486   0011AA  4795               	rlncf	??_LED_on& (0+255),f,b
  2487   0011AC  4795               	rlncf	??_LED_on& (0+255),f,b
  2488   0011AE  4795               	rlncf	??_LED_on& (0+255),f,b
  2489   0011B0  5196               	movf	LED_on@pin_local& (0+255),w,b
  2490   0011B2  1995               	xorwf	??_LED_on& (0+255),w,b
  2491   0011B4  0BC7               	andlw	-57
  2492   0011B6  1995               	xorwf	??_LED_on& (0+255),w,b
  2493   0011B8  6F96               	movwf	LED_on@pin_local& (0+255),b
  2494   0011BA                     
  2495                           ; BSR set to: 0
  2496   0011BA  9D96               	bcf	LED_on@pin_local& (0+255),6,b
  2497   0011BC                     
  2498                           ; BSR set to: 0
  2499   0011BC  5194               	movf	LED_on@led& (0+255),w,b
  2500   0011BE  6ED9               	movwf	fsr2l,c
  2501   0011C0  6ADA               	clrf	fsr2h,c
  2502   0011C2  ACDF               	btfss	indf2,6,c
  2503   0011C4  D002               	bra	u5035
  2504   0011C6  8F96               	bsf	LED_on@pin_local& (0+255),7,b
  2505   0011C8  D002               	bra	u5037
  2506   0011CA                     u5035:
  2507   0011CA  0100               	movlb	0	; () banked
  2508   0011CC  9F96               	bcf	LED_on@pin_local& (0+255),7,b
  2509   0011CE                     u5037:
  2510   0011CE                     
  2511                           ; BSR set to: 0
  2512                           ;ECU_layer/LED/ecu_led.c: 40:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  2513   0011CE  0E96               	movlw	low LED_on@pin_local
  2514   0011D0  6E6F               	movwf	GPIO_check_access@_pin_config^0,c
  2515   0011D2  ECDA  F004         	call	_GPIO_check_access	;wreg free
  2516   0011D6  06E8               	decf	wreg,f,c
  2517   0011D8  A4D8               	btfss	status,2,c
  2518   0011DA  EFF1  F008         	goto	u5041
  2519   0011DE  EFF4  F008         	goto	u5040
  2520   0011E2                     u5041:
  2521   0011E2  FFFF               	dw	65535	; assembler added errata NOP
  2522   0011E4  EFBC  F008         	goto	l5169
  2523   0011E8                     u5040:
  2524   0011E8  FFFF               	dw	65535	; assembler added errata NOP
  2525   0011EA                     
  2526                           ;ECU_layer/LED/ecu_led.c: 41:    GPIO_pin_write_logic(&pin_local, GPIO_HIGH);
  2527   0011EA  0E96               	movlw	low LED_on@pin_local
  2528   0011EC  6E72               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2529   0011EE  0E01               	movlw	1
  2530   0011F0  6E73               	movwf	GPIO_pin_write_logic@logic^0,c
  2531   0011F2  EC86  F006         	call	_GPIO_pin_write_logic	;wreg free
  2532   0011F6                     l318:
  2533   0011F6  FFFF               	dw	65535	; assembler added errata NOP
  2534   0011F8  0012               	return		;funcret
  2535   0011FA  FFFF               	dw	65535	; errata NOP
  2536   0011FC                     __end_of_LED_on:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _GPIO_pin_write_logic *****************
  2540 ;; Defined at:
  2541 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2544 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_off@pin_local(1), 
  2545 ;;		 -> LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), 
  2546 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  2547 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  2548 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  2549 ;;  logic           1    9[COMRAM] enum E2776
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  ret             1   15[COMRAM] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      unsigned char 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2561 ;;      Params:         2       0       0       0       0       0       0
  2562 ;;      Locals:         1       0       0       0       0       0       0
  2563 ;;      Temps:          5       0       0       0       0       0       0
  2564 ;;      Totals:         8       0       0       0       0       0       0
  2565 ;;Total ram usage:        8 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 5
  2568 ;; This function calls:
  2569 ;;		_GPIO_check_access
  2570 ;; This function is called by:
  2571 ;;		_LED_on
  2572 ;;		_seven_segment_write_number
  2573 ;;		_seven_segment_write_2digit_number
  2574 ;;		_dc_motor_turn_right
  2575 ;;		_dc_motor_turn_left
  2576 ;;		_dc_motor_stop
  2577 ;;		_keypad_read_number
  2578 ;;		_lcd_send_command
  2579 ;;		_lcd_send_char_data
  2580 ;;		_lcd_send_4bits
  2581 ;;		_lcd_send_8bits
  2582 ;;		_lcd_send_en
  2583 ;;		_LED_off
  2584 ;;		_relay_turn_on
  2585 ;;		_relay_turn_off
  2586 ;;		_GPIO_pin_initialize
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text2
  2591   000D0C                     __ptext2:
  2592                           	callstack 0
  2593   000D0C                     _GPIO_pin_write_logic:
  2594                           	callstack 0
  2595   000D0C  FFFF               	dw	65535	; assembler added errata NOP
  2596   000D0E                     
  2597                           ;MCAL_layer/GPIO/hal_gpio.c: 98:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2598   000D0E  0E01               	movlw	1
  2599   000D10  6E79               	movwf	GPIO_pin_write_logic@ret^0,c
  2600   000D12                     
  2601                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  2602   000D12  C072  F06F         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  2603   000D16  ECDA  F004         	call	_GPIO_check_access	;wreg free
  2604   000D1A  0900               	iorlw	0
  2605   000D1C  A4D8               	btfss	status,2,c
  2606   000D1E  EF93  F006         	goto	u4511
  2607   000D22  EF96  F006         	goto	u4510
  2608   000D26                     u4511:
  2609   000D26  FFFF               	dw	65535	; assembler added errata NOP
  2610   000D28  EFF4  F006         	goto	l4745
  2611   000D2C                     u4510:
  2612   000D2C  FFFF               	dw	65535	; assembler added errata NOP
  2613   000D2E                     l4739:
  2614   000D2E  FFFF               	dw	65535	; assembler added errata NOP
  2615                           
  2616                           ;MCAL_layer/GPIO/hal_gpio.c: 100:   ret = (STD_ReturnType)(0x00);
  2617   000D30  6A79               	clrf	GPIO_pin_write_logic@ret^0,c
  2618                           
  2619                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  2620   000D32  EF0B  F007         	goto	l4747
  2621   000D36                     l4741:
  2622   000D36  FFFF               	dw	65535	; assembler added errata NOP
  2623                           
  2624                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  2625   000D38  5072               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2626   000D3A  6ED9               	movwf	fsr2l,c
  2627   000D3C  6ADA               	clrf	fsr2h,c
  2628   000D3E  30DF               	rrcf	223,w,c
  2629   000D40  32E8               	rrcf	wreg,f,c
  2630   000D42  32E8               	rrcf	wreg,f,c
  2631   000D44  0B07               	andlw	7
  2632   000D46  6E74               	movwf	??_GPIO_pin_write_logic^0,c
  2633   000D48  0E01               	movlw	1
  2634   000D4A  6E75               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  2635   000D4C  2A74               	incf	??_GPIO_pin_write_logic^0,f,c
  2636   000D4E  EFAC  F006         	goto	u4524
  2637   000D52                     u4525:
  2638   000D52  FFFF               	dw	65535	; assembler added errata NOP
  2639   000D54  90D8               	bcf	status,0,c
  2640   000D56  3675               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  2641   000D58                     u4524:
  2642   000D58  FFFF               	dw	65535	; assembler added errata NOP
  2643   000D5A  2E74               	decfsz	??_GPIO_pin_write_logic^0,f,c
  2644   000D5C  EFA9  F006         	goto	u4525
  2645   000D60  5075               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2646   000D62  0AFF               	xorlw	255
  2647   000D64  6E76               	movwf	(??_GPIO_pin_write_logic+2)^0,c
  2648   000D66  5072               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2649   000D68  6ED9               	movwf	fsr2l,c
  2650   000D6A  6ADA               	clrf	fsr2h,c
  2651   000D6C  50DF               	movf	223,w,c
  2652   000D6E  0B07               	andlw	7
  2653   000D70  0D02               	mullw	2
  2654   000D72  50F3               	movf	243,w,c
  2655   000D74  0F0B               	addlw	low __LAT_registers
  2656   000D76  6ED9               	movwf	fsr2l,c
  2657   000D78  6ADA               	clrf	fsr2h,c
  2658   000D7A  CFDE F077          	movff	postinc2,??_GPIO_pin_write_logic+3
  2659   000D7E  CFDD F078          	movff	postdec2,??_GPIO_pin_write_logic+4
  2660   000D82  C077  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  2661   000D86  C078  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  2662   000D8A  5076               	movf	(??_GPIO_pin_write_logic+2)^0,w,c
  2663   000D8C  16DF               	andwf	indf2,f,c
  2664                           
  2665                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  2666   000D8E  EF0B  F007         	goto	l4747
  2667   000D92                     l4743:
  2668   000D92  FFFF               	dw	65535	; assembler added errata NOP
  2669                           
  2670                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  2671   000D94  5072               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2672   000D96  6ED9               	movwf	fsr2l,c
  2673   000D98  6ADA               	clrf	fsr2h,c
  2674   000D9A  30DF               	rrcf	223,w,c
  2675   000D9C  32E8               	rrcf	wreg,f,c
  2676   000D9E  32E8               	rrcf	wreg,f,c
  2677   000DA0  0B07               	andlw	7
  2678   000DA2  6E74               	movwf	??_GPIO_pin_write_logic^0,c
  2679   000DA4  0E01               	movlw	1
  2680   000DA6  6E75               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  2681   000DA8  2A74               	incf	??_GPIO_pin_write_logic^0,f,c
  2682   000DAA  EFDA  F006         	goto	u4534
  2683   000DAE                     u4535:
  2684   000DAE  FFFF               	dw	65535	; assembler added errata NOP
  2685   000DB0  90D8               	bcf	status,0,c
  2686   000DB2  3675               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  2687   000DB4                     u4534:
  2688   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  2689   000DB6  2E74               	decfsz	??_GPIO_pin_write_logic^0,f,c
  2690   000DB8  EFD7  F006         	goto	u4535
  2691   000DBC  5072               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  2692   000DBE  6ED9               	movwf	fsr2l,c
  2693   000DC0  6ADA               	clrf	fsr2h,c
  2694   000DC2  50DF               	movf	223,w,c
  2695   000DC4  0B07               	andlw	7
  2696   000DC6  0D02               	mullw	2
  2697   000DC8  50F3               	movf	243,w,c
  2698   000DCA  0F0B               	addlw	low __LAT_registers
  2699   000DCC  6ED9               	movwf	fsr2l,c
  2700   000DCE  6ADA               	clrf	fsr2h,c
  2701   000DD0  CFDE F076          	movff	postinc2,??_GPIO_pin_write_logic+2
  2702   000DD4  CFDD F077          	movff	postdec2,??_GPIO_pin_write_logic+3
  2703   000DD8  C076  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  2704   000DDC  C077  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  2705   000DE0  5075               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2706   000DE2  12DF               	iorwf	indf2,f,c
  2707                           
  2708                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  2709   000DE4  EF0B  F007         	goto	l4747
  2710   000DE8                     l4745:
  2711   000DE8  FFFF               	dw	65535	; assembler added errata NOP
  2712   000DEA  5073               	movf	GPIO_pin_write_logic@logic^0,w,c
  2713   000DEC  6E74               	movwf	??_GPIO_pin_write_logic^0,c
  2714   000DEE  6A75               	clrf	(??_GPIO_pin_write_logic+1)^0,c
  2715                           
  2716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2717                           ; Switch size 1, requested type "simple"
  2718                           ; Number of cases is 1, Range of values is 0 to 0
  2719                           ; switch strategies available:
  2720                           ; Name         Instructions Cycles
  2721                           ; simple_byte            4     3 (average)
  2722                           ;	Chosen strategy is simple_byte
  2723   000DF0  5075               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  2724   000DF2  0A00               	xorlw	0	; case 0
  2725   000DF4  B4D8               	btfsc	status,2,c
  2726   000DF6  EFFF  F006         	goto	l6003
  2727   000DFA  EF97  F006         	goto	l4739
  2728   000DFE                     l6003:
  2729   000DFE  FFFF               	dw	65535	; assembler added errata NOP
  2730                           
  2731                           ; Switch size 1, requested type "simple"
  2732                           ; Number of cases is 2, Range of values is 0 to 1
  2733                           ; switch strategies available:
  2734                           ; Name         Instructions Cycles
  2735                           ; simple_byte            7     4 (average)
  2736                           ;	Chosen strategy is simple_byte
  2737   000E00  5074               	movf	??_GPIO_pin_write_logic^0,w,c
  2738   000E02  0A00               	xorlw	0	; case 0
  2739   000E04  B4D8               	btfsc	status,2,c
  2740   000E06  EF9B  F006         	goto	l4741
  2741   000E0A  0A01               	xorlw	1	; case 1
  2742   000E0C  B4D8               	btfsc	status,2,c
  2743   000E0E  EFC9  F006         	goto	l4743
  2744   000E12  EF97  F006         	goto	l4739
  2745   000E16                     l4747:
  2746   000E16  FFFF               	dw	65535	; assembler added errata NOP
  2747                           
  2748                           ;MCAL_layer/GPIO/hal_gpio.c: 114:  return ret;
  2749   000E18  5079               	movf	GPIO_pin_write_logic@ret^0,w,c
  2750   000E1A  0012               	return		;funcret
  2751   000E1C  FFFF               	dw	65535	; errata NOP
  2752   000E1E                     __end_of_GPIO_pin_write_logic:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _INT_INTx_initialize *****************
  2756 ;; Defined at:
  2757 ;;		line 85 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  lint            1   15[COMRAM] PTR const struct .
  2760 ;;		 -> second_int(5), 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  ret             1    1[BANK0 ] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      unsigned char 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2772 ;;      Params:         1       0       0       0       0       0       0
  2773 ;;      Locals:         0       2       0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0
  2775 ;;      Totals:         1       2       0       0       0       0       0
  2776 ;;Total ram usage:        3 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 6
  2779 ;; This function calls:
  2780 ;;		_GPIO_pin_direction_initialize
  2781 ;;		_INT_INTx_check_access
  2782 ;;		_INT_INTx_clear_flag
  2783 ;;		_INT_INTx_disable
  2784 ;;		_INT_INTx_edge_initialize
  2785 ;;		_INT_INTx_enable
  2786 ;;		_INT_INTx_priority_initialize
  2787 ;;		_INT_INTx_set_callback_routine
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text3
  2794   000AD8                     __ptext3:
  2795                           	callstack 0
  2796   000AD8                     _INT_INTx_initialize:
  2797                           	callstack 0
  2798   000AD8  FFFF               	dw	65535	; assembler added errata NOP
  2799   000ADA                     
  2800                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 87:  if(((void*)0) == lint || (STD_Retu
      +                          rnType)(0x00) == INT_INTx_check_access(lint))
  2801   000ADA  5079               	movf	INT_INTx_initialize@lint^0,w,c
  2802   000ADC  B4D8               	btfsc	status,2,c
  2803   000ADE  EF73  F005         	goto	u5071
  2804   000AE2  EF76  F005         	goto	u5070
  2805   000AE6                     u5071:
  2806   000AE6  FFFF               	dw	65535	; assembler added errata NOP
  2807   000AE8  EF84  F005         	goto	l664
  2808   000AEC                     u5070:
  2809   000AEC  FFFF               	dw	65535	; assembler added errata NOP
  2810   000AEE  C079  F06F         	movff	INT_INTx_initialize@lint,INT_INTx_check_access@lint
  2811   000AF2  EC54  F008         	call	_INT_INTx_check_access	;wreg free
  2812   000AF6  0900               	iorlw	0
  2813   000AF8  A4D8               	btfss	status,2,c
  2814   000AFA  EF81  F005         	goto	u5081
  2815   000AFE  EF84  F005         	goto	u5080
  2816   000B02                     u5081:
  2817   000B02  FFFF               	dw	65535	; assembler added errata NOP
  2818   000B04  EF89  F005         	goto	l662
  2819   000B08                     u5080:
  2820   000B08                     l664:
  2821   000B08  FFFF               	dw	65535	; assembler added errata NOP
  2822                           
  2823                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 88:   ret = (STD_ReturnType)(0x00);
  2824   000B0A  0100               	movlb	0	; () banked
  2825   000B0C  6B95               	clrf	INT_INTx_initialize@ret& (0+255),b
  2826   000B0E  EFF5  F005         	goto	l665
  2827   000B12                     l662:
  2828   000B12  FFFF               	dw	65535	; assembler added errata NOP
  2829                           
  2830                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 91:   ret = INT_INTx_disable(lint)&&
  2831   000B14  0100               	movlb	0	; () banked
  2832   000B16  6B94               	clrf	_INT_INTx_initialize$1352& (0+255),b
  2833   000B18                     
  2834                           ; BSR set to: 0
  2835   000B18  C079  F071         	movff	INT_INTx_initialize@lint,INT_INTx_disable@lint
  2836   000B1C  ECFE  F008         	call	_INT_INTx_disable	;wreg free
  2837   000B20  0900               	iorlw	0
  2838   000B22  B4D8               	btfsc	status,2,c
  2839   000B24  EF96  F005         	goto	u5091
  2840   000B28  EF99  F005         	goto	u5090
  2841   000B2C                     u5091:
  2842   000B2C  FFFF               	dw	65535	; assembler added errata NOP
  2843   000B2E  EFF2  F005         	goto	l5217
  2844   000B32                     u5090:
  2845   000B32  FFFF               	dw	65535	; assembler added errata NOP
  2846   000B34  C079  F071         	movff	INT_INTx_initialize@lint,INT_INTx_clear_flag@lint
  2847   000B38  EC44  F009         	call	_INT_INTx_clear_flag	;wreg free
  2848   000B3C  0900               	iorlw	0
  2849   000B3E  B4D8               	btfsc	status,2,c
  2850   000B40  EFA4  F005         	goto	u5101
  2851   000B44  EFA7  F005         	goto	u5100
  2852   000B48                     u5101:
  2853   000B48  FFFF               	dw	65535	; assembler added errata NOP
  2854   000B4A  EFF2  F005         	goto	l5217
  2855   000B4E                     u5100:
  2856   000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2857   000B50  5079               	movf	INT_INTx_initialize@lint^0,w,c
  2858   000B52  0F02               	addlw	2
  2859   000B54  6E72               	movwf	GPIO_pin_direction_initialize@_pin_config^0,c
  2860   000B56  ECFA  F005         	call	_GPIO_pin_direction_initialize	;wreg free
  2861   000B5A  0900               	iorlw	0
  2862   000B5C  B4D8               	btfsc	status,2,c
  2863   000B5E  EFB3  F005         	goto	u5111
  2864   000B62  EFB6  F005         	goto	u5110
  2865   000B66                     u5111:
  2866   000B66  FFFF               	dw	65535	; assembler added errata NOP
  2867   000B68  EFF2  F005         	goto	l5217
  2868   000B6C                     u5110:
  2869   000B6C  FFFF               	dw	65535	; assembler added errata NOP
  2870   000B6E  C079  F071         	movff	INT_INTx_initialize@lint,INT_INTx_set_callback_routine@lint
  2871   000B72  ECEB  F007         	call	_INT_INTx_set_callback_routine	;wreg free
  2872   000B76  0900               	iorlw	0
  2873   000B78  B4D8               	btfsc	status,2,c
  2874   000B7A  EFC1  F005         	goto	u5121
  2875   000B7E  EFC4  F005         	goto	u5120
  2876   000B82                     u5121:
  2877   000B82  FFFF               	dw	65535	; assembler added errata NOP
  2878   000B84  EFF2  F005         	goto	l5217
  2879   000B88                     u5120:
  2880   000B88  FFFF               	dw	65535	; assembler added errata NOP
  2881   000B8A  C079  F071         	movff	INT_INTx_initialize@lint,INT_INTx_priority_initialize@lint
  2882   000B8E  EC7E  F007         	call	_INT_INTx_priority_initialize	;wreg free
  2883   000B92  0900               	iorlw	0
  2884   000B94  B4D8               	btfsc	status,2,c
  2885   000B96  EFCF  F005         	goto	u5131
  2886   000B9A  EFD2  F005         	goto	u5130
  2887   000B9E                     u5131:
  2888   000B9E  FFFF               	dw	65535	; assembler added errata NOP
  2889   000BA0  EFF2  F005         	goto	l5217
  2890   000BA4                     u5130:
  2891   000BA4  FFFF               	dw	65535	; assembler added errata NOP
  2892   000BA6  C079  F071         	movff	INT_INTx_initialize@lint,INT_INTx_edge_initialize@lint
  2893   000BAA  EC34  F004         	call	_INT_INTx_edge_initialize	;wreg free
  2894   000BAE  0900               	iorlw	0
  2895   000BB0  B4D8               	btfsc	status,2,c
  2896   000BB2  EFDD  F005         	goto	u5141
  2897   000BB6  EFE0  F005         	goto	u5140
  2898   000BBA                     u5141:
  2899   000BBA  FFFF               	dw	65535	; assembler added errata NOP
  2900   000BBC  EFF2  F005         	goto	l5217
  2901   000BC0                     u5140:
  2902   000BC0  FFFF               	dw	65535	; assembler added errata NOP
  2903   000BC2  C079  F071         	movff	INT_INTx_initialize@lint,INT_INTx_enable@lint
  2904   000BC6  EC0F  F007         	call	_INT_INTx_enable	;wreg free
  2905   000BCA  0900               	iorlw	0
  2906   000BCC  B4D8               	btfsc	status,2,c
  2907   000BCE  EFEB  F005         	goto	u5151
  2908   000BD2  EFEE  F005         	goto	u5150
  2909   000BD6                     u5151:
  2910   000BD6  FFFF               	dw	65535	; assembler added errata NOP
  2911   000BD8  EFF2  F005         	goto	l5217
  2912   000BDC                     u5150:
  2913   000BDC  FFFF               	dw	65535	; assembler added errata NOP
  2914   000BDE  0E01               	movlw	1
  2915   000BE0  0100               	movlb	0	; () banked
  2916   000BE2  6F94               	movwf	_INT_INTx_initialize$1352& (0+255),b
  2917   000BE4                     l5217:
  2918   000BE4  FFFF               	dw	65535	; assembler added errata NOP
  2919   000BE6  C094  F095         	movff	_INT_INTx_initialize$1352,INT_INTx_initialize@ret
  2920   000BEA                     l665:
  2921   000BEA  FFFF               	dw	65535	; assembler added errata NOP
  2922                           
  2923                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 107:  return ret;
  2924   000BEC  0100               	movlb	0	; () banked
  2925   000BEE  5195               	movf	INT_INTx_initialize@ret& (0+255),w,b
  2926   000BF0                     
  2927                           ; BSR set to: 0
  2928   000BF0  0012               	return		;funcret
  2929   000BF2  FFFF               	dw	65535	; errata NOP
  2930   000BF4                     __end_of_INT_INTx_initialize:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _INT_INTx_set_callback_routine *****************
  2934 ;; Defined at:
  2935 ;;		line 442 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  lint            1    7[COMRAM] PTR const struct .
  2938 ;;		 -> second_int(5), 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  ret             1   11[COMRAM] unsigned char 
  2941 ;;  ind             1   10[COMRAM] enum E2851
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      unsigned char 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2951 ;;      Params:         1       0       0       0       0       0       0
  2952 ;;      Locals:         2       0       0       0       0       0       0
  2953 ;;      Temps:          2       0       0       0       0       0       0
  2954 ;;      Totals:         5       0       0       0       0       0       0
  2955 ;;Total ram usage:        5 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 5
  2958 ;; This function calls:
  2959 ;;		_INT_INTx_get_index
  2960 ;; This function is called by:
  2961 ;;		_INT_INTx_initialize
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text4
  2966   000FD6                     __ptext4:
  2967                           	callstack 0
  2968   000FD6                     _INT_INTx_set_callback_routine:
  2969                           	callstack 0
  2970   000FD6  FFFF               	dw	65535	; assembler added errata NOP
  2971   000FD8                     
  2972                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 443:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  2973   000FD8  0E01               	movlw	1
  2974   000FDA  6E75               	movwf	INT_INTx_set_callback_routine@ret^0,c
  2975   000FDC                     
  2976                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 445:  if(((void*)0) == lint)
  2977   000FDC  5071               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2978   000FDE  A4D8               	btfss	status,2,c
  2979   000FE0  EFF4  F007         	goto	u4791
  2980   000FE4  EFF7  F007         	goto	u4790
  2981   000FE8                     u4791:
  2982   000FE8  FFFF               	dw	65535	; assembler added errata NOP
  2983   000FEA  EFFC  F007         	goto	l4935
  2984   000FEE                     u4790:
  2985   000FEE  FFFF               	dw	65535	; assembler added errata NOP
  2986   000FF0                     l4933:
  2987   000FF0  FFFF               	dw	65535	; assembler added errata NOP
  2988                           
  2989                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 446:   ret = (STD_ReturnType)(0x00);
  2990   000FF2  6A75               	clrf	INT_INTx_set_callback_routine@ret^0,c
  2991   000FF4  EF50  F008         	goto	l4951
  2992   000FF8                     l4935:
  2993   000FF8  FFFF               	dw	65535	; assembler added errata NOP
  2994   000FFA  5071               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  2995   000FFC  6ED9               	movwf	fsr2l,c
  2996   000FFE  6ADA               	clrf	fsr2h,c
  2997   001000  50DE               	movf	postinc2,w,c
  2998   001002  10DE               	iorwf	postinc2,w,c
  2999   001004  A4D8               	btfss	status,2,c
  3000   001006  EF07  F008         	goto	u4801
  3001   00100A  EF0A  F008         	goto	u4800
  3002   00100E                     u4801:
  3003   00100E  FFFF               	dw	65535	; assembler added errata NOP
  3004   001010  EF0D  F008         	goto	l4939
  3005   001014                     u4800:
  3006   001014  FFFF               	dw	65535	; assembler added errata NOP
  3007   001016  EF50  F008         	goto	l4951
  3008   00101A                     l4939:
  3009   00101A  FFFF               	dw	65535	; assembler added errata NOP
  3010                           
  3011                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 450:   ind = INT_INTx_get_index(lint);
  3012   00101C  C071  F06F         	movff	INT_INTx_set_callback_routine@lint,INT_INTx_get_index@lint
  3013   001020  EC8A  F009         	call	_INT_INTx_get_index	;wreg free
  3014   001024  6E74               	movwf	INT_INTx_set_callback_routine@ind^0,c
  3015                           
  3016                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 451:   switch(ind){
  3017   001026  EF33  F008         	goto	l4949
  3018   00102A                     l4941:
  3019   00102A  FFFF               	dw	65535	; assembler added errata NOP
  3020                           
  3021                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 453:     INT0_handler = lint -> ext_int
      +                          errupt_handler;
  3022   00102C  5071               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  3023   00102E  6ED9               	movwf	fsr2l,c
  3024   001030  6ADA               	clrf	fsr2h,c
  3025   001032  CFDE F05C          	movff	postinc2,_INT0_handler
  3026   001036  CFDD F05D          	movff	postdec2,_INT0_handler+1
  3027                           
  3028                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 454:     break;
  3029   00103A  EF50  F008         	goto	l4951
  3030   00103E                     l4943:
  3031   00103E  FFFF               	dw	65535	; assembler added errata NOP
  3032                           
  3033                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 456:     INT1_handler = lint -> ext_int
      +                          errupt_handler;
  3034   001040  5071               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  3035   001042  6ED9               	movwf	fsr2l,c
  3036   001044  6ADA               	clrf	fsr2h,c
  3037   001046  CFDE F05A          	movff	postinc2,_INT1_handler
  3038   00104A  CFDD F05B          	movff	postdec2,_INT1_handler+1
  3039                           
  3040                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 457:     break;
  3041   00104E  EF50  F008         	goto	l4951
  3042   001052                     l4945:
  3043   001052  FFFF               	dw	65535	; assembler added errata NOP
  3044                           
  3045                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 459:     INT2_handler = lint -> ext_int
      +                          errupt_handler;
  3046   001054  5071               	movf	INT_INTx_set_callback_routine@lint^0,w,c
  3047   001056  6ED9               	movwf	fsr2l,c
  3048   001058  6ADA               	clrf	fsr2h,c
  3049   00105A  CFDE F058          	movff	postinc2,_INT2_handler
  3050   00105E  CFDD F059          	movff	postdec2,_INT2_handler+1
  3051                           
  3052                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 460:     break;
  3053   001062  EF50  F008         	goto	l4951
  3054   001066                     l4949:
  3055   001066  FFFF               	dw	65535	; assembler added errata NOP
  3056   001068  C074  F072         	movff	INT_INTx_set_callback_routine@ind,??_INT_INTx_set_callback_routine
  3057   00106C  6A73               	clrf	(??_INT_INTx_set_callback_routine+1)^0,c
  3058   00106E  BE72               	btfsc	??_INT_INTx_set_callback_routine^0,7,c
  3059   001070  0673               	decf	(??_INT_INTx_set_callback_routine+1)^0,f,c
  3060                           
  3061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3062                           ; Switch size 1, requested type "simple"
  3063                           ; Number of cases is 1, Range of values is 0 to 0
  3064                           ; switch strategies available:
  3065                           ; Name         Instructions Cycles
  3066                           ; simple_byte            4     3 (average)
  3067                           ;	Chosen strategy is simple_byte
  3068   001072  5073               	movf	(??_INT_INTx_set_callback_routine+1)^0,w,c
  3069   001074  0A00               	xorlw	0	; case 0
  3070   001076  B4D8               	btfsc	status,2,c
  3071   001078  EF40  F008         	goto	l6005
  3072   00107C  EFF8  F007         	goto	l4933
  3073   001080                     l6005:
  3074   001080  FFFF               	dw	65535	; assembler added errata NOP
  3075                           
  3076                           ; Switch size 1, requested type "simple"
  3077                           ; Number of cases is 3, Range of values is 0 to 2
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte           10     6 (average)
  3081                           ;	Chosen strategy is simple_byte
  3082   001082  5072               	movf	??_INT_INTx_set_callback_routine^0,w,c
  3083   001084  0A00               	xorlw	0	; case 0
  3084   001086  B4D8               	btfsc	status,2,c
  3085   001088  EF15  F008         	goto	l4941
  3086   00108C  0A01               	xorlw	1	; case 1
  3087   00108E  B4D8               	btfsc	status,2,c
  3088   001090  EF1F  F008         	goto	l4943
  3089   001094  0A03               	xorlw	3	; case 2
  3090   001096  B4D8               	btfsc	status,2,c
  3091   001098  EF29  F008         	goto	l4945
  3092   00109C  EFF8  F007         	goto	l4933
  3093   0010A0                     l4951:
  3094   0010A0  FFFF               	dw	65535	; assembler added errata NOP
  3095                           
  3096                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 466:  return ret;
  3097   0010A2  5075               	movf	INT_INTx_set_callback_routine@ret^0,w,c
  3098   0010A4  0012               	return		;funcret
  3099   0010A6  FFFF               	dw	65535	; errata NOP
  3100   0010A8                     __end_of_INT_INTx_set_callback_routine:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _INT_INTx_priority_initialize *****************
  3104 ;; Defined at:
  3105 ;;		line 255 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  lint            1    7[COMRAM] PTR const struct .
  3108 ;;		 -> second_int(5), 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  ret             1   11[COMRAM] unsigned char 
  3111 ;;  ind             1   10[COMRAM] enum E2851
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      unsigned char 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3121 ;;      Params:         1       0       0       0       0       0       0
  3122 ;;      Locals:         2       0       0       0       0       0       0
  3123 ;;      Temps:          2       0       0       0       0       0       0
  3124 ;;      Totals:         5       0       0       0       0       0       0
  3125 ;;Total ram usage:        5 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 5
  3128 ;; This function calls:
  3129 ;;		_INT_INTx_get_index
  3130 ;; This function is called by:
  3131 ;;		_INT_INTx_initialize
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text5
  3136   000EFC                     __ptext5:
  3137                           	callstack 0
  3138   000EFC                     _INT_INTx_priority_initialize:
  3139                           	callstack 0
  3140   000EFC  FFFF               	dw	65535	; assembler added errata NOP
  3141   000EFE                     
  3142                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 256:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3143   000EFE  0E01               	movlw	1
  3144   000F00  6E75               	movwf	INT_INTx_priority_initialize@ret^0,c
  3145   000F02                     
  3146                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 258:  if(((void*)0) == lint)
  3147   000F02  5071               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3148   000F04  A4D8               	btfss	status,2,c
  3149   000F06  EF87  F007         	goto	u4811
  3150   000F0A  EF8A  F007         	goto	u4810
  3151   000F0E                     u4811:
  3152   000F0E  FFFF               	dw	65535	; assembler added errata NOP
  3153   000F10  EF8F  F007         	goto	l722
  3154   000F14                     u4810:
  3155   000F14  FFFF               	dw	65535	; assembler added errata NOP
  3156   000F16                     l4963:
  3157   000F16  FFFF               	dw	65535	; assembler added errata NOP
  3158                           
  3159                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 259:   ret = (STD_ReturnType)(0x00);
  3160   000F18  6A75               	clrf	INT_INTx_priority_initialize@ret^0,c
  3161   000F1A  EFE7  F007         	goto	l4979
  3162   000F1E                     l722:
  3163   000F1E  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 261:             RCONbits.IPEN=1;
  3166   000F20  8ED0               	bsf	208,7,c	;volatile
  3167   000F22                     
  3168                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 262:    ind = INT_INTx_get_index(lint);
  3169   000F22  C071  F06F         	movff	INT_INTx_priority_initialize@lint,INT_INTx_get_index@lint
  3170   000F26  EC8A  F009         	call	_INT_INTx_get_index	;wreg free
  3171   000F2A  6E74               	movwf	INT_INTx_priority_initialize@ind^0,c
  3172                           
  3173                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 263:   switch(ind){
  3174   000F2C  EFCA  F007         	goto	l4977
  3175   000F30                     l729:
  3176   000F30  FFFF               	dw	65535	; assembler added errata NOP
  3177                           
  3178                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 269:       INTCON3bits.INT1IP=1;
  3179   000F32  8CF0               	bsf	240,6,c	;volatile
  3180                           
  3181                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 270:       break;
  3182   000F34  EFE7  F007         	goto	l4979
  3183   000F38                     l731:
  3184   000F38  FFFF               	dw	65535	; assembler added errata NOP
  3185                           
  3186                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 272:       INTCON3bits.INT1IP=0;
  3187   000F3A  9CF0               	bcf	240,6,c	;volatile
  3188                           
  3189                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 273:       break;
  3190   000F3C  EFE7  F007         	goto	l4979
  3191   000F40                     l4969:
  3192   000F40  FFFF               	dw	65535	; assembler added errata NOP
  3193   000F42  5071               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3194   000F44  6ED9               	movwf	fsr2l,c
  3195   000F46  6ADA               	clrf	fsr2h,c
  3196   000F48  0E04               	movlw	4
  3197   000F4A  26D9               	addwf	fsr2l,f,c
  3198   000F4C  50DF               	movf	indf2,w,c
  3199                           
  3200                           ; Switch size 1, requested type "simple"
  3201                           ; Number of cases is 2, Range of values is 0 to 1
  3202                           ; switch strategies available:
  3203                           ; Name         Instructions Cycles
  3204                           ; simple_byte            7     4 (average)
  3205                           ;	Chosen strategy is simple_byte
  3206   000F4E  0A00               	xorlw	0	; case 0
  3207   000F50  B4D8               	btfsc	status,2,c
  3208   000F52  EF9C  F007         	goto	l731
  3209   000F56  0A01               	xorlw	1	; case 1
  3210   000F58  B4D8               	btfsc	status,2,c
  3211   000F5A  EF98  F007         	goto	l729
  3212   000F5E  EF8B  F007         	goto	l4963
  3213   000F62                     l735:
  3214   000F62  FFFF               	dw	65535	; assembler added errata NOP
  3215                           
  3216                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 282:       INTCON3bits.INT2IP=1;
  3217   000F64  8EF0               	bsf	240,7,c	;volatile
  3218                           
  3219                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 283:       break;
  3220   000F66  EFE7  F007         	goto	l4979
  3221   000F6A                     l737:
  3222   000F6A  FFFF               	dw	65535	; assembler added errata NOP
  3223                           
  3224                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 285:       INTCON3bits.INT2IP=0;
  3225   000F6C  9EF0               	bcf	240,7,c	;volatile
  3226                           
  3227                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 286:       break;
  3228   000F6E  EFE7  F007         	goto	l4979
  3229   000F72                     l4973:
  3230   000F72  FFFF               	dw	65535	; assembler added errata NOP
  3231   000F74  5071               	movf	INT_INTx_priority_initialize@lint^0,w,c
  3232   000F76  6ED9               	movwf	fsr2l,c
  3233   000F78  6ADA               	clrf	fsr2h,c
  3234   000F7A  0E04               	movlw	4
  3235   000F7C  26D9               	addwf	fsr2l,f,c
  3236   000F7E  50DF               	movf	indf2,w,c
  3237                           
  3238                           ; Switch size 1, requested type "simple"
  3239                           ; Number of cases is 2, Range of values is 0 to 1
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte            7     4 (average)
  3243                           ;	Chosen strategy is simple_byte
  3244   000F80  0A00               	xorlw	0	; case 0
  3245   000F82  B4D8               	btfsc	status,2,c
  3246   000F84  EFB5  F007         	goto	l737
  3247   000F88  0A01               	xorlw	1	; case 1
  3248   000F8A  B4D8               	btfsc	status,2,c
  3249   000F8C  EFB1  F007         	goto	l735
  3250   000F90  EF8B  F007         	goto	l4963
  3251   000F94                     l4977:
  3252   000F94  FFFF               	dw	65535	; assembler added errata NOP
  3253   000F96  C074  F072         	movff	INT_INTx_priority_initialize@ind,??_INT_INTx_priority_initialize
  3254   000F9A  6A73               	clrf	(??_INT_INTx_priority_initialize+1)^0,c
  3255   000F9C  BE72               	btfsc	??_INT_INTx_priority_initialize^0,7,c
  3256   000F9E  0673               	decf	(??_INT_INTx_priority_initialize+1)^0,f,c
  3257                           
  3258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3259                           ; Switch size 1, requested type "simple"
  3260                           ; Number of cases is 1, Range of values is 0 to 0
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte            4     3 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265   000FA0  5073               	movf	(??_INT_INTx_priority_initialize+1)^0,w,c
  3266   000FA2  0A00               	xorlw	0	; case 0
  3267   000FA4  B4D8               	btfsc	status,2,c
  3268   000FA6  EFD7  F007         	goto	l6007
  3269   000FAA  EF8B  F007         	goto	l4963
  3270   000FAE                     l6007:
  3271   000FAE  FFFF               	dw	65535	; assembler added errata NOP
  3272                           
  3273                           ; Switch size 1, requested type "simple"
  3274                           ; Number of cases is 3, Range of values is 0 to 2
  3275                           ; switch strategies available:
  3276                           ; Name         Instructions Cycles
  3277                           ; simple_byte           10     6 (average)
  3278                           ;	Chosen strategy is simple_byte
  3279   000FB0  5072               	movf	??_INT_INTx_priority_initialize^0,w,c
  3280   000FB2  0A00               	xorlw	0	; case 0
  3281   000FB4  B4D8               	btfsc	status,2,c
  3282   000FB6  EFE7  F007         	goto	l4979
  3283   000FBA  0A01               	xorlw	1	; case 1
  3284   000FBC  B4D8               	btfsc	status,2,c
  3285   000FBE  EFA0  F007         	goto	l4969
  3286   000FC2  0A03               	xorlw	3	; case 2
  3287   000FC4  B4D8               	btfsc	status,2,c
  3288   000FC6  EFB9  F007         	goto	l4973
  3289   000FCA  EF8B  F007         	goto	l4963
  3290   000FCE                     l4979:
  3291   000FCE  FFFF               	dw	65535	; assembler added errata NOP
  3292                           
  3293                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 297:  return ret;
  3294   000FD0  5075               	movf	INT_INTx_priority_initialize@ret^0,w,c
  3295   000FD2  0012               	return		;funcret
  3296   000FD4  FFFF               	dw	65535	; errata NOP
  3297   000FD6                     __end_of_INT_INTx_priority_initialize:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _INT_INTx_enable *****************
  3301 ;; Defined at:
  3302 ;;		line 114 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  lint            1    7[COMRAM] PTR const struct .
  3305 ;;		 -> second_int(5), 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  ret             1   11[COMRAM] unsigned char 
  3308 ;;  ind             1   10[COMRAM] enum E2851
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      unsigned char 
  3311 ;; Registers used:
  3312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3318 ;;      Params:         1       0       0       0       0       0       0
  3319 ;;      Locals:         2       0       0       0       0       0       0
  3320 ;;      Temps:          2       0       0       0       0       0       0
  3321 ;;      Totals:         5       0       0       0       0       0       0
  3322 ;;Total ram usage:        5 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 5
  3325 ;; This function calls:
  3326 ;;		_INT_INTx_get_index
  3327 ;; This function is called by:
  3328 ;;		_INT_INTx_initialize
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text6
  3333   000E1E                     __ptext6:
  3334                           	callstack 0
  3335   000E1E                     _INT_INTx_enable:
  3336                           	callstack 0
  3337   000E1E  FFFF               	dw	65535	; assembler added errata NOP
  3338   000E20                     
  3339                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 115:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3340   000E20  0E01               	movlw	1
  3341   000E22  6E75               	movwf	INT_INTx_enable@ret^0,c
  3342   000E24                     
  3343                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 117:  if(((void*)0) == lint)
  3344   000E24  5071               	movf	INT_INTx_enable@lint^0,w,c
  3345   000E26  A4D8               	btfss	status,2,c
  3346   000E28  EF18  F007         	goto	u4831
  3347   000E2C  EF1B  F007         	goto	u4830
  3348   000E30                     u4831:
  3349   000E30  FFFF               	dw	65535	; assembler added errata NOP
  3350   000E32  EF20  F007         	goto	l5037
  3351   000E36                     u4830:
  3352   000E36  FFFF               	dw	65535	; assembler added errata NOP
  3353   000E38                     l5035:
  3354   000E38  FFFF               	dw	65535	; assembler added errata NOP
  3355                           
  3356                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 118:   ret = (STD_ReturnType)(0x00);
  3357   000E3A  6A75               	clrf	INT_INTx_enable@ret^0,c
  3358   000E3C  EF7A  F007         	goto	l5051
  3359   000E40                     l5037:
  3360   000E40  FFFF               	dw	65535	; assembler added errata NOP
  3361                           
  3362                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 120:   ind = INT_INTx_get_index(lint);
  3363   000E42  C071  F06F         	movff	INT_INTx_enable@lint,INT_INTx_get_index@lint
  3364   000E46  EC8A  F009         	call	_INT_INTx_get_index	;wreg free
  3365   000E4A  6E74               	movwf	INT_INTx_enable@ind^0,c
  3366                           
  3367                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 121:   switch(ind) {
  3368   000E4C  EF5D  F007         	goto	l5049
  3369   000E50                     l674:
  3370   000E50  FFFF               	dw	65535	; assembler added errata NOP
  3371                           
  3372                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 123:     INTCONbits.INT0IE=1;
  3373   000E52  88F2               	bsf	242,4,c	;volatile
  3374                           
  3375                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 125:                                 IN
      +                          TCONbits.GIEH=1;
  3376   000E54  8EF2               	bsf	242,7,c	;volatile
  3377                           
  3378                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 129:     break;
  3379   000E56  EF7A  F007         	goto	l5051
  3380   000E5A                     l676:
  3381   000E5A  FFFF               	dw	65535	; assembler added errata NOP
  3382                           
  3383                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 131:     INTCON3bits.INT1IE=1;
  3384   000E5C  86F0               	bsf	240,3,c	;volatile
  3385   000E5E                     
  3386                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 133:     if (lint -> priority == 1)
  3387   000E5E  5071               	movf	INT_INTx_enable@lint^0,w,c
  3388   000E60  6ED9               	movwf	fsr2l,c
  3389   000E62  6ADA               	clrf	fsr2h,c
  3390   000E64  0E04               	movlw	4
  3391   000E66  26D9               	addwf	fsr2l,f,c
  3392   000E68  04DE               	decf	postinc2,w,c
  3393   000E6A  A4D8               	btfss	status,2,c
  3394   000E6C  EF3A  F007         	goto	u4841
  3395   000E70  EF3D  F007         	goto	u4840
  3396   000E74                     u4841:
  3397   000E74  FFFF               	dw	65535	; assembler added errata NOP
  3398   000E76  EF41  F007         	goto	l677
  3399   000E7A                     u4840:
  3400   000E7A  FFFF               	dw	65535	; assembler added errata NOP
  3401   000E7C                     
  3402                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 134:                                   
      +                            INTCONbits.GIEH=1;
  3403   000E7C  8EF2               	bsf	242,7,c	;volatile
  3404   000E7E  EF7A  F007         	goto	l5051
  3405   000E82                     l677:
  3406   000E82  FFFF               	dw	65535	; assembler added errata NOP
  3407                           
  3408                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 136:                                   
      +                            INTCONbits.GIEL=1;
  3409   000E84  8CF2               	bsf	242,6,c	;volatile
  3410   000E86  EF7A  F007         	goto	l5051
  3411   000E8A                     l679:
  3412   000E8A  FFFF               	dw	65535	; assembler added errata NOP
  3413                           
  3414                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 142:     INTCON3bits.INT2IE=1;
  3415   000E8C  88F0               	bsf	240,4,c	;volatile
  3416   000E8E                     
  3417                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 144:     if (lint -> priority == 1)
  3418   000E8E  5071               	movf	INT_INTx_enable@lint^0,w,c
  3419   000E90  6ED9               	movwf	fsr2l,c
  3420   000E92  6ADA               	clrf	fsr2h,c
  3421   000E94  0E04               	movlw	4
  3422   000E96  26D9               	addwf	fsr2l,f,c
  3423   000E98  04DE               	decf	postinc2,w,c
  3424   000E9A  A4D8               	btfss	status,2,c
  3425   000E9C  EF52  F007         	goto	u4851
  3426   000EA0  EF55  F007         	goto	u4850
  3427   000EA4                     u4851:
  3428   000EA4  FFFF               	dw	65535	; assembler added errata NOP
  3429   000EA6  EF59  F007         	goto	l680
  3430   000EAA                     u4850:
  3431   000EAA  FFFF               	dw	65535	; assembler added errata NOP
  3432   000EAC                     
  3433                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 145:                                   
      +                            INTCONbits.GIEH=1;
  3434   000EAC  8EF2               	bsf	242,7,c	;volatile
  3435   000EAE  EF7A  F007         	goto	l5051
  3436   000EB2                     l680:
  3437   000EB2  FFFF               	dw	65535	; assembler added errata NOP
  3438                           
  3439                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 147:                                   
      +                            INTCONbits.GIEL=1;
  3440   000EB4  8CF2               	bsf	242,6,c	;volatile
  3441   000EB6  EF7A  F007         	goto	l5051
  3442   000EBA                     l5049:
  3443   000EBA  FFFF               	dw	65535	; assembler added errata NOP
  3444   000EBC  C074  F072         	movff	INT_INTx_enable@ind,??_INT_INTx_enable
  3445   000EC0  6A73               	clrf	(??_INT_INTx_enable+1)^0,c
  3446   000EC2  BE72               	btfsc	??_INT_INTx_enable^0,7,c
  3447   000EC4  0673               	decf	(??_INT_INTx_enable+1)^0,f,c
  3448                           
  3449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3450                           ; Switch size 1, requested type "simple"
  3451                           ; Number of cases is 1, Range of values is 0 to 0
  3452                           ; switch strategies available:
  3453                           ; Name         Instructions Cycles
  3454                           ; simple_byte            4     3 (average)
  3455                           ;	Chosen strategy is simple_byte
  3456   000EC6  5073               	movf	(??_INT_INTx_enable+1)^0,w,c
  3457   000EC8  0A00               	xorlw	0	; case 0
  3458   000ECA  B4D8               	btfsc	status,2,c
  3459   000ECC  EF6A  F007         	goto	l6009
  3460   000ED0  EF1C  F007         	goto	l5035
  3461   000ED4                     l6009:
  3462   000ED4  FFFF               	dw	65535	; assembler added errata NOP
  3463                           
  3464                           ; Switch size 1, requested type "simple"
  3465                           ; Number of cases is 3, Range of values is 0 to 2
  3466                           ; switch strategies available:
  3467                           ; Name         Instructions Cycles
  3468                           ; simple_byte           10     6 (average)
  3469                           ;	Chosen strategy is simple_byte
  3470   000ED6  5072               	movf	??_INT_INTx_enable^0,w,c
  3471   000ED8  0A00               	xorlw	0	; case 0
  3472   000EDA  B4D8               	btfsc	status,2,c
  3473   000EDC  EF28  F007         	goto	l674
  3474   000EE0  0A01               	xorlw	1	; case 1
  3475   000EE2  B4D8               	btfsc	status,2,c
  3476   000EE4  EF2D  F007         	goto	l676
  3477   000EE8  0A03               	xorlw	3	; case 2
  3478   000EEA  B4D8               	btfsc	status,2,c
  3479   000EEC  EF45  F007         	goto	l679
  3480   000EF0  EF1C  F007         	goto	l5035
  3481   000EF4                     l5051:
  3482   000EF4  FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 157:  return ret;
  3485   000EF6  5075               	movf	INT_INTx_enable@ret^0,w,c
  3486   000EF8  0012               	return		;funcret
  3487   000EFA  FFFF               	dw	65535	; errata NOP
  3488   000EFC                     __end_of_INT_INTx_enable:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function _INT_INTx_edge_initialize *****************
  3492 ;; Defined at:
  3493 ;;		line 331 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  lint            1    7[COMRAM] PTR const struct .
  3496 ;;		 -> second_int(5), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  ret             1   11[COMRAM] unsigned char 
  3499 ;;  ind             1   10[COMRAM] enum E2851
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      unsigned char 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3509 ;;      Params:         1       0       0       0       0       0       0
  3510 ;;      Locals:         2       0       0       0       0       0       0
  3511 ;;      Temps:          2       0       0       0       0       0       0
  3512 ;;      Totals:         5       0       0       0       0       0       0
  3513 ;;Total ram usage:        5 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 5
  3516 ;; This function calls:
  3517 ;;		_INT_INTx_get_index
  3518 ;; This function is called by:
  3519 ;;		_INT_INTx_initialize
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text7
  3524   000868                     __ptext7:
  3525                           	callstack 0
  3526   000868                     _INT_INTx_edge_initialize:
  3527                           	callstack 0
  3528   000868  FFFF               	dw	65535	; assembler added errata NOP
  3529   00086A                     
  3530                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 332:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3531   00086A  0E01               	movlw	1
  3532   00086C  6E75               	movwf	INT_INTx_edge_initialize@ret^0,c
  3533   00086E                     
  3534                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 334:  if(((void*)0) == lint)
  3535   00086E  5071               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3536   000870  A4D8               	btfss	status,2,c
  3537   000872  EF3D  F004         	goto	u4821
  3538   000876  EF40  F004         	goto	u4820
  3539   00087A                     u4821:
  3540   00087A  FFFF               	dw	65535	; assembler added errata NOP
  3541   00087C  EF45  F004         	goto	l4993
  3542   000880                     u4820:
  3543   000880  FFFF               	dw	65535	; assembler added errata NOP
  3544   000882                     l4991:
  3545   000882  FFFF               	dw	65535	; assembler added errata NOP
  3546                           
  3547                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 335:   ret = (STD_ReturnType)(0x00);
  3548   000884  6A75               	clrf	INT_INTx_edge_initialize@ret^0,c
  3549   000886  EFD6  F004         	goto	l5011
  3550   00088A                     l4993:
  3551   00088A  FFFF               	dw	65535	; assembler added errata NOP
  3552                           
  3553                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 337:   ind = INT_INTx_get_index(lint);
  3554   00088C  C071  F06F         	movff	INT_INTx_edge_initialize@lint,INT_INTx_get_index@lint
  3555   000890  EC8A  F009         	call	_INT_INTx_get_index	;wreg free
  3556   000894  6E74               	movwf	INT_INTx_edge_initialize@ind^0,c
  3557                           
  3558                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 338:   switch(ind){
  3559   000896  EFB9  F004         	goto	l5009
  3560   00089A                     l758:
  3561   00089A  FFFF               	dw	65535	; assembler added errata NOP
  3562                           
  3563                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 342:       INTCON2bits.INTEDG0=0;
  3564   00089C  9CF1               	bcf	241,6,c	;volatile
  3565                           
  3566                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 343:       break;
  3567   00089E  EFD6  F004         	goto	l5011
  3568   0008A2                     l760:
  3569   0008A2  FFFF               	dw	65535	; assembler added errata NOP
  3570                           
  3571                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 345:       INTCON2bits.INTEDG0=1;
  3572   0008A4  8CF1               	bsf	241,6,c	;volatile
  3573                           
  3574                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 346:       break;
  3575   0008A6  EFD6  F004         	goto	l5011
  3576   0008AA                     l4997:
  3577   0008AA  FFFF               	dw	65535	; assembler added errata NOP
  3578   0008AC  5071               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3579   0008AE  6ED9               	movwf	fsr2l,c
  3580   0008B0  6ADA               	clrf	fsr2h,c
  3581   0008B2  0E03               	movlw	3
  3582   0008B4  26D9               	addwf	fsr2l,f,c
  3583   0008B6  50DF               	movf	indf2,w,c
  3584   0008B8  6E72               	movwf	??_INT_INTx_edge_initialize^0,c
  3585   0008BA  6A73               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3586                           
  3587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3588                           ; Switch size 1, requested type "simple"
  3589                           ; Number of cases is 1, Range of values is 0 to 0
  3590                           ; switch strategies available:
  3591                           ; Name         Instructions Cycles
  3592                           ; simple_byte            4     3 (average)
  3593                           ;	Chosen strategy is simple_byte
  3594   0008BC  5073               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3595   0008BE  0A00               	xorlw	0	; case 0
  3596   0008C0  B4D8               	btfsc	status,2,c
  3597   0008C2  EF65  F004         	goto	l6011
  3598   0008C6  EF41  F004         	goto	l4991
  3599   0008CA                     l6011:
  3600   0008CA  FFFF               	dw	65535	; assembler added errata NOP
  3601                           
  3602                           ; Switch size 1, requested type "simple"
  3603                           ; Number of cases is 2, Range of values is 0 to 1
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte            7     4 (average)
  3607                           ;	Chosen strategy is simple_byte
  3608   0008CC  5072               	movf	??_INT_INTx_edge_initialize^0,w,c
  3609   0008CE  0A00               	xorlw	0	; case 0
  3610   0008D0  B4D8               	btfsc	status,2,c
  3611   0008D2  EF4D  F004         	goto	l758
  3612   0008D6  0A01               	xorlw	1	; case 1
  3613   0008D8  B4D8               	btfsc	status,2,c
  3614   0008DA  EF51  F004         	goto	l760
  3615   0008DE  EF41  F004         	goto	l4991
  3616   0008E2                     l765:
  3617   0008E2  FFFF               	dw	65535	; assembler added errata NOP
  3618                           
  3619                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 355:       INTCON2bits.INTEDG1=0;
  3620   0008E4  9AF1               	bcf	241,5,c	;volatile
  3621                           
  3622                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 356:       break;
  3623   0008E6  EFD6  F004         	goto	l5011
  3624   0008EA                     l767:
  3625   0008EA  FFFF               	dw	65535	; assembler added errata NOP
  3626                           
  3627                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 358:       INTCON2bits.INTEDG1=1;
  3628   0008EC  8AF1               	bsf	241,5,c	;volatile
  3629                           
  3630                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 359:       break;
  3631   0008EE  EFD6  F004         	goto	l5011
  3632   0008F2                     l5001:
  3633   0008F2  FFFF               	dw	65535	; assembler added errata NOP
  3634   0008F4  5071               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3635   0008F6  6ED9               	movwf	fsr2l,c
  3636   0008F8  6ADA               	clrf	fsr2h,c
  3637   0008FA  0E03               	movlw	3
  3638   0008FC  26D9               	addwf	fsr2l,f,c
  3639   0008FE  50DF               	movf	indf2,w,c
  3640   000900  6E72               	movwf	??_INT_INTx_edge_initialize^0,c
  3641   000902  6A73               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3642                           
  3643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3644                           ; Switch size 1, requested type "simple"
  3645                           ; Number of cases is 1, Range of values is 0 to 0
  3646                           ; switch strategies available:
  3647                           ; Name         Instructions Cycles
  3648                           ; simple_byte            4     3 (average)
  3649                           ;	Chosen strategy is simple_byte
  3650   000904  5073               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3651   000906  0A00               	xorlw	0	; case 0
  3652   000908  B4D8               	btfsc	status,2,c
  3653   00090A  EF89  F004         	goto	l6013
  3654   00090E  EF41  F004         	goto	l4991
  3655   000912                     l6013:
  3656   000912  FFFF               	dw	65535	; assembler added errata NOP
  3657                           
  3658                           ; Switch size 1, requested type "simple"
  3659                           ; Number of cases is 2, Range of values is 0 to 1
  3660                           ; switch strategies available:
  3661                           ; Name         Instructions Cycles
  3662                           ; simple_byte            7     4 (average)
  3663                           ;	Chosen strategy is simple_byte
  3664   000914  5072               	movf	??_INT_INTx_edge_initialize^0,w,c
  3665   000916  0A00               	xorlw	0	; case 0
  3666   000918  B4D8               	btfsc	status,2,c
  3667   00091A  EF71  F004         	goto	l765
  3668   00091E  0A01               	xorlw	1	; case 1
  3669   000920  B4D8               	btfsc	status,2,c
  3670   000922  EF75  F004         	goto	l767
  3671   000926  EF41  F004         	goto	l4991
  3672   00092A                     l771:
  3673   00092A  FFFF               	dw	65535	; assembler added errata NOP
  3674                           
  3675                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 368:       INTCON2bits.INTEDG2=0;
  3676   00092C  98F1               	bcf	241,4,c	;volatile
  3677                           
  3678                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 369:       break;
  3679   00092E  EFD6  F004         	goto	l5011
  3680   000932                     l773:
  3681   000932  FFFF               	dw	65535	; assembler added errata NOP
  3682                           
  3683                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 371:       INTCON2bits.INTEDG2=1;
  3684   000934  88F1               	bsf	241,4,c	;volatile
  3685                           
  3686                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 372:       break;
  3687   000936  EFD6  F004         	goto	l5011
  3688   00093A                     l5005:
  3689   00093A  FFFF               	dw	65535	; assembler added errata NOP
  3690   00093C  5071               	movf	INT_INTx_edge_initialize@lint^0,w,c
  3691   00093E  6ED9               	movwf	fsr2l,c
  3692   000940  6ADA               	clrf	fsr2h,c
  3693   000942  0E03               	movlw	3
  3694   000944  26D9               	addwf	fsr2l,f,c
  3695   000946  50DF               	movf	indf2,w,c
  3696   000948  6E72               	movwf	??_INT_INTx_edge_initialize^0,c
  3697   00094A  6A73               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3698                           
  3699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3700                           ; Switch size 1, requested type "simple"
  3701                           ; Number of cases is 1, Range of values is 0 to 0
  3702                           ; switch strategies available:
  3703                           ; Name         Instructions Cycles
  3704                           ; simple_byte            4     3 (average)
  3705                           ;	Chosen strategy is simple_byte
  3706   00094C  5073               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3707   00094E  0A00               	xorlw	0	; case 0
  3708   000950  B4D8               	btfsc	status,2,c
  3709   000952  EFAD  F004         	goto	l6015
  3710   000956  EF41  F004         	goto	l4991
  3711   00095A                     l6015:
  3712   00095A  FFFF               	dw	65535	; assembler added errata NOP
  3713                           
  3714                           ; Switch size 1, requested type "simple"
  3715                           ; Number of cases is 2, Range of values is 0 to 1
  3716                           ; switch strategies available:
  3717                           ; Name         Instructions Cycles
  3718                           ; simple_byte            7     4 (average)
  3719                           ;	Chosen strategy is simple_byte
  3720   00095C  5072               	movf	??_INT_INTx_edge_initialize^0,w,c
  3721   00095E  0A00               	xorlw	0	; case 0
  3722   000960  B4D8               	btfsc	status,2,c
  3723   000962  EF95  F004         	goto	l771
  3724   000966  0A01               	xorlw	1	; case 1
  3725   000968  B4D8               	btfsc	status,2,c
  3726   00096A  EF99  F004         	goto	l773
  3727   00096E  EF41  F004         	goto	l4991
  3728   000972                     l5009:
  3729   000972  FFFF               	dw	65535	; assembler added errata NOP
  3730   000974  C074  F072         	movff	INT_INTx_edge_initialize@ind,??_INT_INTx_edge_initialize
  3731   000978  6A73               	clrf	(??_INT_INTx_edge_initialize+1)^0,c
  3732   00097A  BE72               	btfsc	??_INT_INTx_edge_initialize^0,7,c
  3733   00097C  0673               	decf	(??_INT_INTx_edge_initialize+1)^0,f,c
  3734                           
  3735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3736                           ; Switch size 1, requested type "simple"
  3737                           ; Number of cases is 1, Range of values is 0 to 0
  3738                           ; switch strategies available:
  3739                           ; Name         Instructions Cycles
  3740                           ; simple_byte            4     3 (average)
  3741                           ;	Chosen strategy is simple_byte
  3742   00097E  5073               	movf	(??_INT_INTx_edge_initialize+1)^0,w,c
  3743   000980  0A00               	xorlw	0	; case 0
  3744   000982  B4D8               	btfsc	status,2,c
  3745   000984  EFC6  F004         	goto	l6017
  3746   000988  EF41  F004         	goto	l4991
  3747   00098C                     l6017:
  3748   00098C  FFFF               	dw	65535	; assembler added errata NOP
  3749                           
  3750                           ; Switch size 1, requested type "simple"
  3751                           ; Number of cases is 3, Range of values is 0 to 2
  3752                           ; switch strategies available:
  3753                           ; Name         Instructions Cycles
  3754                           ; simple_byte           10     6 (average)
  3755                           ;	Chosen strategy is simple_byte
  3756   00098E  5072               	movf	??_INT_INTx_edge_initialize^0,w,c
  3757   000990  0A00               	xorlw	0	; case 0
  3758   000992  B4D8               	btfsc	status,2,c
  3759   000994  EF55  F004         	goto	l4997
  3760   000998  0A01               	xorlw	1	; case 1
  3761   00099A  B4D8               	btfsc	status,2,c
  3762   00099C  EF79  F004         	goto	l5001
  3763   0009A0  0A03               	xorlw	3	; case 2
  3764   0009A2  B4D8               	btfsc	status,2,c
  3765   0009A4  EF9D  F004         	goto	l5005
  3766   0009A8  EF41  F004         	goto	l4991
  3767   0009AC                     l5011:
  3768   0009AC  FFFF               	dw	65535	; assembler added errata NOP
  3769                           
  3770                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 383:  return ret;
  3771   0009AE  5075               	movf	INT_INTx_edge_initialize@ret^0,w,c
  3772   0009B0  0012               	return		;funcret
  3773   0009B2  FFFF               	dw	65535	; errata NOP
  3774   0009B4                     __end_of_INT_INTx_edge_initialize:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _INT_INTx_disable *****************
  3778 ;; Defined at:
  3779 ;;		line 163 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  lint            1    7[COMRAM] PTR const struct .
  3782 ;;		 -> second_int(5), 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  ret             1   11[COMRAM] unsigned char 
  3785 ;;  ind             1   10[COMRAM] enum E2851
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      unsigned char 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3795 ;;      Params:         1       0       0       0       0       0       0
  3796 ;;      Locals:         2       0       0       0       0       0       0
  3797 ;;      Temps:          2       0       0       0       0       0       0
  3798 ;;      Totals:         5       0       0       0       0       0       0
  3799 ;;Total ram usage:        5 bytes
  3800 ;; Hardware stack levels used: 1
  3801 ;; Hardware stack levels required when called: 5
  3802 ;; This function calls:
  3803 ;;		_INT_INTx_get_index
  3804 ;; This function is called by:
  3805 ;;		_INT_INTx_initialize
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text8
  3810   0011FC                     __ptext8:
  3811                           	callstack 0
  3812   0011FC                     _INT_INTx_disable:
  3813                           	callstack 0
  3814   0011FC  FFFF               	dw	65535	; assembler added errata NOP
  3815   0011FE                     
  3816                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 164:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3817   0011FE  0E01               	movlw	1
  3818   001200  6E75               	movwf	INT_INTx_disable@ret^0,c
  3819   001202                     
  3820                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 166:  if(((void*)0) == lint)
  3821   001202  5071               	movf	INT_INTx_disable@lint^0,w,c
  3822   001204  A4D8               	btfss	status,2,c
  3823   001206  EF07  F009         	goto	u4771
  3824   00120A  EF0A  F009         	goto	u4770
  3825   00120E                     u4771:
  3826   00120E  FFFF               	dw	65535	; assembler added errata NOP
  3827   001210  EF0F  F009         	goto	l4895
  3828   001214                     u4770:
  3829   001214  FFFF               	dw	65535	; assembler added errata NOP
  3830   001216                     l4893:
  3831   001216  FFFF               	dw	65535	; assembler added errata NOP
  3832                           
  3833                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 167:   ret = (STD_ReturnType)(0x00);
  3834   001218  6A75               	clrf	INT_INTx_disable@ret^0,c
  3835   00121A  EF40  F009         	goto	l4901
  3836   00121E                     l4895:
  3837   00121E  FFFF               	dw	65535	; assembler added errata NOP
  3838                           
  3839                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 169:   ind = INT_INTx_get_index(lint);
  3840   001220  C071  F06F         	movff	INT_INTx_disable@lint,INT_INTx_get_index@lint
  3841   001224  EC8A  F009         	call	_INT_INTx_get_index	;wreg free
  3842   001228  6E74               	movwf	INT_INTx_disable@ind^0,c
  3843                           
  3844                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 170:   switch(ind){
  3845   00122A  EF23  F009         	goto	l4899
  3846   00122E                     l689:
  3847   00122E  FFFF               	dw	65535	; assembler added errata NOP
  3848                           
  3849                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 172:     INTCONbits.INT0IE=0;
  3850   001230  98F2               	bcf	242,4,c	;volatile
  3851                           
  3852                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 173:     break;
  3853   001232  EF40  F009         	goto	l4901
  3854   001236                     l691:
  3855   001236  FFFF               	dw	65535	; assembler added errata NOP
  3856                           
  3857                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 175:     INTCON3bits.INT1IE=0;
  3858   001238  96F0               	bcf	240,3,c	;volatile
  3859                           
  3860                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 176:     break;
  3861   00123A  EF40  F009         	goto	l4901
  3862   00123E                     l692:
  3863   00123E  FFFF               	dw	65535	; assembler added errata NOP
  3864                           
  3865                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 178:     INTCON3bits.INT2IE=0;
  3866   001240  98F0               	bcf	240,4,c	;volatile
  3867                           
  3868                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 179:     break;
  3869   001242  EF40  F009         	goto	l4901
  3870   001246                     l4899:
  3871   001246  FFFF               	dw	65535	; assembler added errata NOP
  3872   001248  C074  F072         	movff	INT_INTx_disable@ind,??_INT_INTx_disable
  3873   00124C  6A73               	clrf	(??_INT_INTx_disable+1)^0,c
  3874   00124E  BE72               	btfsc	??_INT_INTx_disable^0,7,c
  3875   001250  0673               	decf	(??_INT_INTx_disable+1)^0,f,c
  3876                           
  3877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3878                           ; Switch size 1, requested type "simple"
  3879                           ; Number of cases is 1, Range of values is 0 to 0
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte            4     3 (average)
  3883                           ;	Chosen strategy is simple_byte
  3884   001252  5073               	movf	(??_INT_INTx_disable+1)^0,w,c
  3885   001254  0A00               	xorlw	0	; case 0
  3886   001256  B4D8               	btfsc	status,2,c
  3887   001258  EF30  F009         	goto	l6019
  3888   00125C  EF0B  F009         	goto	l4893
  3889   001260                     l6019:
  3890   001260  FFFF               	dw	65535	; assembler added errata NOP
  3891                           
  3892                           ; Switch size 1, requested type "simple"
  3893                           ; Number of cases is 3, Range of values is 0 to 2
  3894                           ; switch strategies available:
  3895                           ; Name         Instructions Cycles
  3896                           ; simple_byte           10     6 (average)
  3897                           ;	Chosen strategy is simple_byte
  3898   001262  5072               	movf	??_INT_INTx_disable^0,w,c
  3899   001264  0A00               	xorlw	0	; case 0
  3900   001266  B4D8               	btfsc	status,2,c
  3901   001268  EF17  F009         	goto	l689
  3902   00126C  0A01               	xorlw	1	; case 1
  3903   00126E  B4D8               	btfsc	status,2,c
  3904   001270  EF1B  F009         	goto	l691
  3905   001274  0A03               	xorlw	3	; case 2
  3906   001276  B4D8               	btfsc	status,2,c
  3907   001278  EF1F  F009         	goto	l692
  3908   00127C  EF0B  F009         	goto	l4893
  3909   001280                     l4901:
  3910   001280  FFFF               	dw	65535	; assembler added errata NOP
  3911                           
  3912                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 185:  return ret;
  3913   001282  5075               	movf	INT_INTx_disable@ret^0,w,c
  3914   001284  0012               	return		;funcret
  3915   001286  FFFF               	dw	65535	; errata NOP
  3916   001288                     __end_of_INT_INTx_disable:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _INT_INTx_clear_flag *****************
  3920 ;; Defined at:
  3921 ;;		line 389 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  lint            1    7[COMRAM] PTR const struct .
  3924 ;;		 -> second_int(5), 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  ret             1   11[COMRAM] unsigned char 
  3927 ;;  ind             1   10[COMRAM] enum E2851
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      unsigned char 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3937 ;;      Params:         1       0       0       0       0       0       0
  3938 ;;      Locals:         2       0       0       0       0       0       0
  3939 ;;      Temps:          2       0       0       0       0       0       0
  3940 ;;      Totals:         5       0       0       0       0       0       0
  3941 ;;Total ram usage:        5 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 5
  3944 ;; This function calls:
  3945 ;;		_INT_INTx_get_index
  3946 ;; This function is called by:
  3947 ;;		_INT_INTx_initialize
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text9
  3952   001288                     __ptext9:
  3953                           	callstack 0
  3954   001288                     _INT_INTx_clear_flag:
  3955                           	callstack 0
  3956   001288  FFFF               	dw	65535	; assembler added errata NOP
  3957   00128A                     
  3958                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 390:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  3959   00128A  0E01               	movlw	1
  3960   00128C  6E75               	movwf	INT_INTx_clear_flag@ret^0,c
  3961   00128E                     
  3962                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 392:  if(((void*)0) == lint)
  3963   00128E  5071               	movf	INT_INTx_clear_flag@lint^0,w,c
  3964   001290  A4D8               	btfss	status,2,c
  3965   001292  EF4D  F009         	goto	u4781
  3966   001296  EF50  F009         	goto	u4780
  3967   00129A                     u4781:
  3968   00129A  FFFF               	dw	65535	; assembler added errata NOP
  3969   00129C  EF55  F009         	goto	l4915
  3970   0012A0                     u4780:
  3971   0012A0  FFFF               	dw	65535	; assembler added errata NOP
  3972   0012A2                     l4913:
  3973   0012A2  FFFF               	dw	65535	; assembler added errata NOP
  3974                           
  3975                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 393:   ret = (STD_ReturnType)(0x00);
  3976   0012A4  6A75               	clrf	INT_INTx_clear_flag@ret^0,c
  3977   0012A6  EF86  F009         	goto	l4921
  3978   0012AA                     l4915:
  3979   0012AA  FFFF               	dw	65535	; assembler added errata NOP
  3980                           
  3981                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 395:   ind = INT_INTx_get_index(lint);
  3982   0012AC  C071  F06F         	movff	INT_INTx_clear_flag@lint,INT_INTx_get_index@lint
  3983   0012B0  EC8A  F009         	call	_INT_INTx_get_index	;wreg free
  3984   0012B4  6E74               	movwf	INT_INTx_clear_flag@ind^0,c
  3985                           
  3986                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 396:   switch(ind){
  3987   0012B6  EF69  F009         	goto	l4919
  3988   0012BA                     l782:
  3989   0012BA  FFFF               	dw	65535	; assembler added errata NOP
  3990                           
  3991                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 398:     INTCONbits.INT0IF=0;
  3992   0012BC  92F2               	bcf	242,1,c	;volatile
  3993                           
  3994                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 399:     break;
  3995   0012BE  EF86  F009         	goto	l4921
  3996   0012C2                     l784:
  3997   0012C2  FFFF               	dw	65535	; assembler added errata NOP
  3998                           
  3999                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 401:     INTCON3bits.INT1IF=0;
  4000   0012C4  90F0               	bcf	240,0,c	;volatile
  4001                           
  4002                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 402:     break;
  4003   0012C6  EF86  F009         	goto	l4921
  4004   0012CA                     l785:
  4005   0012CA  FFFF               	dw	65535	; assembler added errata NOP
  4006                           
  4007                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 404:     INTCON3bits.INT2IF=0;
  4008   0012CC  92F0               	bcf	240,1,c	;volatile
  4009                           
  4010                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 405:     break;
  4011   0012CE  EF86  F009         	goto	l4921
  4012   0012D2                     l4919:
  4013   0012D2  FFFF               	dw	65535	; assembler added errata NOP
  4014   0012D4  C074  F072         	movff	INT_INTx_clear_flag@ind,??_INT_INTx_clear_flag
  4015   0012D8  6A73               	clrf	(??_INT_INTx_clear_flag+1)^0,c
  4016   0012DA  BE72               	btfsc	??_INT_INTx_clear_flag^0,7,c
  4017   0012DC  0673               	decf	(??_INT_INTx_clear_flag+1)^0,f,c
  4018                           
  4019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4020                           ; Switch size 1, requested type "simple"
  4021                           ; Number of cases is 1, Range of values is 0 to 0
  4022                           ; switch strategies available:
  4023                           ; Name         Instructions Cycles
  4024                           ; simple_byte            4     3 (average)
  4025                           ;	Chosen strategy is simple_byte
  4026   0012DE  5073               	movf	(??_INT_INTx_clear_flag+1)^0,w,c
  4027   0012E0  0A00               	xorlw	0	; case 0
  4028   0012E2  B4D8               	btfsc	status,2,c
  4029   0012E4  EF76  F009         	goto	l6021
  4030   0012E8  EF51  F009         	goto	l4913
  4031   0012EC                     l6021:
  4032   0012EC  FFFF               	dw	65535	; assembler added errata NOP
  4033                           
  4034                           ; Switch size 1, requested type "simple"
  4035                           ; Number of cases is 3, Range of values is 0 to 2
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           10     6 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040   0012EE  5072               	movf	??_INT_INTx_clear_flag^0,w,c
  4041   0012F0  0A00               	xorlw	0	; case 0
  4042   0012F2  B4D8               	btfsc	status,2,c
  4043   0012F4  EF5D  F009         	goto	l782
  4044   0012F8  0A01               	xorlw	1	; case 1
  4045   0012FA  B4D8               	btfsc	status,2,c
  4046   0012FC  EF61  F009         	goto	l784
  4047   001300  0A03               	xorlw	3	; case 2
  4048   001302  B4D8               	btfsc	status,2,c
  4049   001304  EF65  F009         	goto	l785
  4050   001308  EF51  F009         	goto	l4913
  4051   00130C                     l4921:
  4052   00130C  FFFF               	dw	65535	; assembler added errata NOP
  4053                           
  4054                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 411:  return ret;
  4055   00130E  5075               	movf	INT_INTx_clear_flag@ret^0,w,c
  4056   001310  0012               	return		;funcret
  4057   001312  FFFF               	dw	65535	; errata NOP
  4058   001314                     __end_of_INT_INTx_clear_flag:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _INT_INTx_get_index *****************
  4062 ;; Defined at:
  4063 ;;		line 544 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  lint            1    5[COMRAM] PTR const struct .
  4066 ;;		 -> second_int(5), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  ind             1    6[COMRAM] enum E2851
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      enum E2851
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:         1       0       0       0       0       0       0
  4079 ;;      Locals:         1       0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0
  4081 ;;      Totals:         2       0       0       0       0       0       0
  4082 ;;Total ram usage:        2 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 4
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_INT_INTx_enable
  4089 ;;		_INT_INTx_disable
  4090 ;;		_INT_INTx_priority_initialize
  4091 ;;		_INT_INTx_edge_initialize
  4092 ;;		_INT_INTx_clear_flag
  4093 ;;		_INT_INTx_set_callback_routine
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text10
  4098   001314                     __ptext10:
  4099                           	callstack 0
  4100   001314                     _INT_INTx_get_index:
  4101                           	callstack 0
  4102   001314  FFFF               	dw	65535	; assembler added errata NOP
  4103   001316                     
  4104                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 546:  if(((void*)0) == lint){
  4105   001316  506F               	movf	INT_INTx_get_index@lint^0,w,c
  4106   001318  A4D8               	btfss	status,2,c
  4107   00131A  EF91  F009         	goto	u4501
  4108   00131E  EF94  F009         	goto	u4500
  4109   001322                     u4501:
  4110   001322  FFFF               	dw	65535	; assembler added errata NOP
  4111   001324  EFA7  F009         	goto	l4729
  4112   001328                     u4500:
  4113   001328  FFFF               	dw	65535	; assembler added errata NOP
  4114   00132A                     l4721:
  4115   00132A  FFFF               	dw	65535	; assembler added errata NOP
  4116                           
  4117                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 547:   ind = NA;
  4118   00132C  6870               	setf	INT_INTx_get_index@ind^0,c
  4119                           
  4120                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 548:  }
  4121   00132E  EFBF  F009         	goto	l4731
  4122   001332                     l850:
  4123   001332  FFFF               	dw	65535	; assembler added errata NOP
  4124                           
  4125                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 552:     ind = INT0_I;
  4126   001334  6A70               	clrf	INT_INTx_get_index@ind^0,c
  4127                           
  4128                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 553:     break;
  4129   001336  EFBF  F009         	goto	l4731
  4130   00133A                     l4723:
  4131   00133A  FFFF               	dw	65535	; assembler added errata NOP
  4132                           
  4133                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 555:     ind = INT1_I;
  4134   00133C  0E01               	movlw	1
  4135   00133E  6E70               	movwf	INT_INTx_get_index@ind^0,c
  4136                           
  4137                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 556:     break;
  4138   001340  EFBF  F009         	goto	l4731
  4139   001344                     l4725:
  4140   001344  FFFF               	dw	65535	; assembler added errata NOP
  4141                           
  4142                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 558:     ind = INT2_I;
  4143   001346  0E02               	movlw	2
  4144   001348  6E70               	movwf	INT_INTx_get_index@ind^0,c
  4145                           
  4146                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 559:     break;
  4147   00134A  EFBF  F009         	goto	l4731
  4148   00134E                     l4729:
  4149   00134E  FFFF               	dw	65535	; assembler added errata NOP
  4150   001350  506F               	movf	INT_INTx_get_index@lint^0,w,c
  4151   001352  6ED9               	movwf	fsr2l,c
  4152   001354  6ADA               	clrf	fsr2h,c
  4153   001356  0E02               	movlw	2
  4154   001358  26D9               	addwf	fsr2l,f,c
  4155   00135A  30DF               	rrcf	223,w,c
  4156   00135C  32E8               	rrcf	wreg,f,c
  4157   00135E  32E8               	rrcf	wreg,f,c
  4158   001360  0B07               	andlw	7
  4159                           
  4160                           ; Switch size 1, requested type "simple"
  4161                           ; Number of cases is 3, Range of values is 0 to 2
  4162                           ; switch strategies available:
  4163                           ; Name         Instructions Cycles
  4164                           ; simple_byte           10     6 (average)
  4165                           ;	Chosen strategy is simple_byte
  4166   001362  0A00               	xorlw	0	; case 0
  4167   001364  B4D8               	btfsc	status,2,c
  4168   001366  EF99  F009         	goto	l850
  4169   00136A  0A01               	xorlw	1	; case 1
  4170   00136C  B4D8               	btfsc	status,2,c
  4171   00136E  EF9D  F009         	goto	l4723
  4172   001372  0A03               	xorlw	3	; case 2
  4173   001374  B4D8               	btfsc	status,2,c
  4174   001376  EFA2  F009         	goto	l4725
  4175   00137A  EF95  F009         	goto	l4721
  4176   00137E                     l4731:
  4177   00137E  FFFF               	dw	65535	; assembler added errata NOP
  4178                           
  4179                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 565:  return ind;
  4180   001380  5070               	movf	INT_INTx_get_index@ind^0,w,c
  4181   001382  0012               	return		;funcret
  4182   001384  FFFF               	dw	65535	; errata NOP
  4183   001386                     __end_of_INT_INTx_get_index:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _INT_INTx_check_access *****************
  4187 ;; Defined at:
  4188 ;;		line 417 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  lint            1    5[COMRAM] PTR const struct .
  4191 ;;		 -> second_int(5), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  ret             1    6[COMRAM] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      unsigned char 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4203 ;;      Params:         1       0       0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0
  4206 ;;      Totals:         2       0       0       0       0       0       0
  4207 ;;Total ram usage:        2 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 4
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_INT_INTx_initialize
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text11
  4218   0010A8                     __ptext11:
  4219                           	callstack 0
  4220   0010A8                     _INT_INTx_check_access:
  4221                           	callstack 0
  4222   0010A8  FFFF               	dw	65535	; assembler added errata NOP
  4223   0010AA                     
  4224                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 418:  STD_ReturnType ret = (STD_ReturnT
      +                          ype)(0x01);
  4225   0010AA  0E01               	movlw	1
  4226   0010AC  6E70               	movwf	INT_INTx_check_access@ret^0,c
  4227                           
  4228                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 419:  if(((void*)0) == lint || (lint ->
      +                           Ipin.port != PORTB_I) || ( (lint -> Ipin.pin != PIN0)
  4229   0010AE  506F               	movf	INT_INTx_check_access@lint^0,w,c
  4230   0010B0  B4D8               	btfsc	status,2,c
  4231   0010B2  EF5D  F008         	goto	u4721
  4232   0010B6  EF60  F008         	goto	u4720
  4233   0010BA                     u4721:
  4234   0010BA  FFFF               	dw	65535	; assembler added errata NOP
  4235   0010BC  EFAA  F008         	goto	l792
  4236   0010C0                     u4720:
  4237   0010C0  FFFF               	dw	65535	; assembler added errata NOP
  4238   0010C2  506F               	movf	INT_INTx_check_access@lint^0,w,c
  4239   0010C4  6ED9               	movwf	fsr2l,c
  4240   0010C6  6ADA               	clrf	fsr2h,c
  4241   0010C8  0E02               	movlw	2
  4242   0010CA  26D9               	addwf	fsr2l,f,c
  4243   0010CC  50DF               	movf	223,w,c
  4244   0010CE  0B07               	andlw	7
  4245   0010D0  06E8               	decf	wreg,f,c
  4246   0010D2  A4D8               	btfss	status,2,c
  4247   0010D4  EF6E  F008         	goto	u4731
  4248   0010D8  EF71  F008         	goto	u4730
  4249   0010DC                     u4731:
  4250   0010DC  FFFF               	dw	65535	; assembler added errata NOP
  4251   0010DE  EFAA  F008         	goto	l792
  4252   0010E2                     u4730:
  4253   0010E2  FFFF               	dw	65535	; assembler added errata NOP
  4254   0010E4  506F               	movf	INT_INTx_check_access@lint^0,w,c
  4255   0010E6  6ED9               	movwf	fsr2l,c
  4256   0010E8  6ADA               	clrf	fsr2h,c
  4257   0010EA  0E02               	movlw	2
  4258   0010EC  26D9               	addwf	fsr2l,f,c
  4259   0010EE  30DF               	rrcf	223,w,c
  4260   0010F0  32E8               	rrcf	wreg,f,c
  4261   0010F2  32E8               	rrcf	wreg,f,c
  4262   0010F4  0B07               	andlw	7
  4263   0010F6  0900               	iorlw	0
  4264   0010F8  B4D8               	btfsc	status,2,c
  4265   0010FA  EF81  F008         	goto	u4741
  4266   0010FE  EF84  F008         	goto	u4740
  4267   001102                     u4741:
  4268   001102  FFFF               	dw	65535	; assembler added errata NOP
  4269   001104  EFAC  F008         	goto	l4885
  4270   001108                     u4740:
  4271   001108  FFFF               	dw	65535	; assembler added errata NOP
  4272   00110A  506F               	movf	INT_INTx_check_access@lint^0,w,c
  4273   00110C  6ED9               	movwf	fsr2l,c
  4274   00110E  6ADA               	clrf	fsr2h,c
  4275   001110  0E02               	movlw	2
  4276   001112  26D9               	addwf	fsr2l,f,c
  4277   001114  30DF               	rrcf	223,w,c
  4278   001116  32E8               	rrcf	wreg,f,c
  4279   001118  32E8               	rrcf	wreg,f,c
  4280   00111A  0B07               	andlw	7
  4281   00111C  06E8               	decf	wreg,f,c
  4282   00111E  B4D8               	btfsc	status,2,c
  4283   001120  EF94  F008         	goto	u4751
  4284   001124  EF97  F008         	goto	u4750
  4285   001128                     u4751:
  4286   001128  FFFF               	dw	65535	; assembler added errata NOP
  4287   00112A  EFAC  F008         	goto	l4885
  4288   00112E                     u4750:
  4289   00112E  FFFF               	dw	65535	; assembler added errata NOP
  4290   001130  506F               	movf	INT_INTx_check_access@lint^0,w,c
  4291   001132  6ED9               	movwf	fsr2l,c
  4292   001134  6ADA               	clrf	fsr2h,c
  4293   001136  0E02               	movlw	2
  4294   001138  26D9               	addwf	fsr2l,f,c
  4295   00113A  30DF               	rrcf	223,w,c
  4296   00113C  32E8               	rrcf	wreg,f,c
  4297   00113E  32E8               	rrcf	wreg,f,c
  4298   001140  0B07               	andlw	7
  4299   001142  0A02               	xorlw	2
  4300   001144  B4D8               	btfsc	status,2,c
  4301   001146  EFA7  F008         	goto	u4761
  4302   00114A  EFAA  F008         	goto	u4760
  4303   00114E                     u4761:
  4304   00114E  FFFF               	dw	65535	; assembler added errata NOP
  4305   001150  EFAC  F008         	goto	l4885
  4306   001154                     u4760:
  4307   001154                     l792:
  4308   001154  FFFF               	dw	65535	; assembler added errata NOP
  4309                           
  4310                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 420:   && (lint -> Ipin.pin != PIN1) &&
      +                           (lint -> Ipin.pin != PIN2)) ){;MCAL_layer/Interrupt/mcal_external_interrupt.c: 421:   r
      +                          et = (STD_ReturnType)(0x00);
  4311   001156  6A70               	clrf	INT_INTx_check_access@ret^0,c
  4312   001158                     l4885:
  4313   001158  FFFF               	dw	65535	; assembler added errata NOP
  4314                           
  4315                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 423:  return ret;
  4316   00115A  5070               	movf	INT_INTx_check_access@ret^0,w,c
  4317   00115C  0012               	return		;funcret
  4318   00115E  FFFF               	dw	65535	; errata NOP
  4319   001160                     __end_of_INT_INTx_check_access:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _GPIO_pin_direction_initialize *****************
  4323 ;; Defined at:
  4324 ;;		line 54 in file "MCAL_layer/GPIO/hal_gpio.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  4327 ;;		 -> second_int(5), relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinc(4), 
  4328 ;;		 -> keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize
      +@lpin(4), 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  ret             1   14[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      unsigned char 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4340 ;;      Params:         1       0       0       0       0       0       0
  4341 ;;      Locals:         1       0       0       0       0       0       0
  4342 ;;      Temps:          5       0       0       0       0       0       0
  4343 ;;      Totals:         7       0       0       0       0       0       0
  4344 ;;Total ram usage:        7 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 5
  4347 ;; This function calls:
  4348 ;;		_GPIO_check_access
  4349 ;; This function is called by:
  4350 ;;		_INT_INTx_initialize
  4351 ;;		_keypad_initialize
  4352 ;;		_btn_initialize
  4353 ;;		_GPIO_pin_initialize
  4354 ;;		_INT_RBx_initialize
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text12
  4359   000BF4                     __ptext12:
  4360                           	callstack 0
  4361   000BF4                     _GPIO_pin_direction_initialize:
  4362                           	callstack 0
  4363   000BF4  FFFF               	dw	65535	; assembler added errata NOP
  4364   000BF6                     
  4365                           ;MCAL_layer/GPIO/hal_gpio.c: 55:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4366   000BF6  0E01               	movlw	1
  4367   000BF8  6E78               	movwf	GPIO_pin_direction_initialize@ret^0,c
  4368   000BFA                     
  4369                           ;MCAL_layer/GPIO/hal_gpio.c: 56:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  4370   000BFA  C072  F06F         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  4371   000BFE  ECDA  F004         	call	_GPIO_check_access	;wreg free
  4372   000C02  0900               	iorlw	0
  4373   000C04  A4D8               	btfss	status,2,c
  4374   000C06  EF07  F006         	goto	u4541
  4375   000C0A  EF0A  F006         	goto	u4540
  4376   000C0E                     u4541:
  4377   000C0E  FFFF               	dw	65535	; assembler added errata NOP
  4378   000C10  EF68  F006         	goto	l4765
  4379   000C14                     u4540:
  4380   000C14  FFFF               	dw	65535	; assembler added errata NOP
  4381   000C16                     l4759:
  4382   000C16  FFFF               	dw	65535	; assembler added errata NOP
  4383                           
  4384                           ;MCAL_layer/GPIO/hal_gpio.c: 57:   ret = (STD_ReturnType)(0x00);
  4385   000C18  6A78               	clrf	GPIO_pin_direction_initialize@ret^0,c
  4386                           
  4387                           ;MCAL_layer/GPIO/hal_gpio.c: 58:  }
  4388   000C1A  EF82  F006         	goto	l4767
  4389   000C1E                     l4761:
  4390   000C1E  FFFF               	dw	65535	; assembler added errata NOP
  4391                           
  4392                           ;MCAL_layer/GPIO/hal_gpio.c: 62:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  4393   000C20  5072               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4394   000C22  6ED9               	movwf	fsr2l,c
  4395   000C24  6ADA               	clrf	fsr2h,c
  4396   000C26  30DF               	rrcf	223,w,c
  4397   000C28  32E8               	rrcf	wreg,f,c
  4398   000C2A  32E8               	rrcf	wreg,f,c
  4399   000C2C  0B07               	andlw	7
  4400   000C2E  6E73               	movwf	??_GPIO_pin_direction_initialize^0,c
  4401   000C30  0E01               	movlw	1
  4402   000C32  6E74               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  4403   000C34  2A73               	incf	??_GPIO_pin_direction_initialize^0,f,c
  4404   000C36  EF20  F006         	goto	u4554
  4405   000C3A                     u4555:
  4406   000C3A  FFFF               	dw	65535	; assembler added errata NOP
  4407   000C3C  90D8               	bcf	status,0,c
  4408   000C3E  3674               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  4409   000C40                     u4554:
  4410   000C40  FFFF               	dw	65535	; assembler added errata NOP
  4411   000C42  2E73               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  4412   000C44  EF1D  F006         	goto	u4555
  4413   000C48  5074               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  4414   000C4A  0AFF               	xorlw	255
  4415   000C4C  6E75               	movwf	(??_GPIO_pin_direction_initialize+2)^0,c
  4416   000C4E  5072               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4417   000C50  6ED9               	movwf	fsr2l,c
  4418   000C52  6ADA               	clrf	fsr2h,c
  4419   000C54  50DF               	movf	223,w,c
  4420   000C56  0B07               	andlw	7
  4421   000C58  0D02               	mullw	2
  4422   000C5A  50F3               	movf	243,w,c
  4423   000C5C  0F15               	addlw	low __TRIS_registers
  4424   000C5E  6ED9               	movwf	fsr2l,c
  4425   000C60  6ADA               	clrf	fsr2h,c
  4426   000C62  CFDE F076          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  4427   000C66  CFDD F077          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  4428   000C6A  C076  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  4429   000C6E  C077  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  4430   000C72  5075               	movf	(??_GPIO_pin_direction_initialize+2)^0,w,c
  4431   000C74  16DF               	andwf	indf2,f,c
  4432                           
  4433                           ;MCAL_layer/GPIO/hal_gpio.c: 63:     break;
  4434   000C76  EF82  F006         	goto	l4767
  4435   000C7A                     l4763:
  4436   000C7A  FFFF               	dw	65535	; assembler added errata NOP
  4437                           
  4438                           ;MCAL_layer/GPIO/hal_gpio.c: 65:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  4439   000C7C  5072               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4440   000C7E  6ED9               	movwf	fsr2l,c
  4441   000C80  6ADA               	clrf	fsr2h,c
  4442   000C82  30DF               	rrcf	223,w,c
  4443   000C84  32E8               	rrcf	wreg,f,c
  4444   000C86  32E8               	rrcf	wreg,f,c
  4445   000C88  0B07               	andlw	7
  4446   000C8A  6E73               	movwf	??_GPIO_pin_direction_initialize^0,c
  4447   000C8C  0E01               	movlw	1
  4448   000C8E  6E74               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  4449   000C90  2A73               	incf	??_GPIO_pin_direction_initialize^0,f,c
  4450   000C92  EF4E  F006         	goto	u4564
  4451   000C96                     u4565:
  4452   000C96  FFFF               	dw	65535	; assembler added errata NOP
  4453   000C98  90D8               	bcf	status,0,c
  4454   000C9A  3674               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  4455   000C9C                     u4564:
  4456   000C9C  FFFF               	dw	65535	; assembler added errata NOP
  4457   000C9E  2E73               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  4458   000CA0  EF4B  F006         	goto	u4565
  4459   000CA4  5072               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4460   000CA6  6ED9               	movwf	fsr2l,c
  4461   000CA8  6ADA               	clrf	fsr2h,c
  4462   000CAA  50DF               	movf	223,w,c
  4463   000CAC  0B07               	andlw	7
  4464   000CAE  0D02               	mullw	2
  4465   000CB0  50F3               	movf	243,w,c
  4466   000CB2  0F15               	addlw	low __TRIS_registers
  4467   000CB4  6ED9               	movwf	fsr2l,c
  4468   000CB6  6ADA               	clrf	fsr2h,c
  4469   000CB8  CFDE F075          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  4470   000CBC  CFDD F076          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  4471   000CC0  C075  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  4472   000CC4  C076  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  4473   000CC8  5074               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  4474   000CCA  12DF               	iorwf	indf2,f,c
  4475                           
  4476                           ;MCAL_layer/GPIO/hal_gpio.c: 66:     break;
  4477   000CCC  EF82  F006         	goto	l4767
  4478   000CD0                     l4765:
  4479   000CD0  FFFF               	dw	65535	; assembler added errata NOP
  4480   000CD2  5072               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  4481   000CD4  6ED9               	movwf	fsr2l,c
  4482   000CD6  6ADA               	clrf	fsr2h,c
  4483   000CD8  BCDF               	btfsc	indf2,6,c
  4484   000CDA  EF71  F006         	goto	u4571
  4485   000CDE  EF75  F006         	goto	u4570
  4486   000CE2                     u4571:
  4487   000CE2  FFFF               	dw	65535	; assembler added errata NOP
  4488   000CE4  0E01               	movlw	1
  4489   000CE6  EF77  F006         	goto	u4576
  4490   000CEA                     u4570:
  4491   000CEA  FFFF               	dw	65535	; assembler added errata NOP
  4492   000CEC  0E00               	movlw	0
  4493   000CEE                     u4576:
  4494   000CEE  FFFF               	dw	65535	; assembler added errata NOP
  4495                           
  4496                           ; Switch size 1, requested type "simple"
  4497                           ; Number of cases is 2, Range of values is 0 to 1
  4498                           ; switch strategies available:
  4499                           ; Name         Instructions Cycles
  4500                           ; simple_byte            7     4 (average)
  4501                           ;	Chosen strategy is simple_byte
  4502   000CF0  0A00               	xorlw	0	; case 0
  4503   000CF2  B4D8               	btfsc	status,2,c
  4504   000CF4  EF0F  F006         	goto	l4761
  4505   000CF8  0A01               	xorlw	1	; case 1
  4506   000CFA  B4D8               	btfsc	status,2,c
  4507   000CFC  EF3D  F006         	goto	l4763
  4508   000D00  EF0B  F006         	goto	l4759
  4509   000D04                     l4767:
  4510   000D04  FFFF               	dw	65535	; assembler added errata NOP
  4511                           
  4512                           ;MCAL_layer/GPIO/hal_gpio.c: 71:  return ret;
  4513   000D06  5078               	movf	GPIO_pin_direction_initialize@ret^0,w,c
  4514   000D08  0012               	return		;funcret
  4515   000D0A  FFFF               	dw	65535	; errata NOP
  4516   000D0C                     __end_of_GPIO_pin_direction_initialize:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function _GPIO_check_access *****************
  4520 ;; Defined at:
  4521 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  _pin_config     1    5[COMRAM] PTR const struct .
  4524 ;;		 -> second_int(5), relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), 
  4525 ;;		 -> LED_toggle@pin_local(1), LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), 
  4526 ;;		 -> keypad_read_number@lpinc(4), keypad_read_number@lpinr(4), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4)
      +, 
  4527 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  4528 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  4529 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  ret             1    7[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4541 ;;      Params:         1       0       0       0       0       0       0
  4542 ;;      Locals:         1       0       0       0       0       0       0
  4543 ;;      Temps:          1       0       0       0       0       0       0
  4544 ;;      Totals:         3       0       0       0       0       0       0
  4545 ;;Total ram usage:        3 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 4
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_LED_on
  4552 ;;		_GPIO_pin_direction_initialize
  4553 ;;		_GPIO_pin_write_logic
  4554 ;;		_seven_segment_initialize
  4555 ;;		_dc_motor_initialize
  4556 ;;		_lcd_check_access
  4557 ;;		_LED_initialize
  4558 ;;		_LED_off
  4559 ;;		_LED_toggle
  4560 ;;		_btn_initialize
  4561 ;;		_btn_read_state
  4562 ;;		_relay_initialize
  4563 ;;		_relay_turn_on
  4564 ;;		_relay_turn_off
  4565 ;;		_GPIO_pin_initialize
  4566 ;;		_GPIO_pin_get_direction_status
  4567 ;;		_GPIO_pin_read_logic
  4568 ;;		_GPIO_pin_toggle_logic
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text13
  4573   0009B4                     __ptext13:
  4574                           	callstack 0
  4575   0009B4                     _GPIO_check_access:
  4576                           	callstack 0
  4577   0009B4  FFFF               	dw	65535	; assembler added errata NOP
  4578   0009B6                     
  4579                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4580   0009B6  0E01               	movlw	1
  4581   0009B8  6E71               	movwf	GPIO_check_access@ret^0,c
  4582                           
  4583                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  4584   0009BA  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4585   0009BC  B4D8               	btfsc	status,2,c
  4586   0009BE  EFE3  F004         	goto	u4401
  4587   0009C2  EFE6  F004         	goto	u4400
  4588   0009C6                     u4401:
  4589   0009C6  FFFF               	dw	65535	; assembler added errata NOP
  4590   0009C8  EF66  F005         	goto	l474
  4591   0009CC                     u4400:
  4592   0009CC  FFFF               	dw	65535	; assembler added errata NOP
  4593   0009CE  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4594   0009D0  6ED9               	movwf	fsr2l,c
  4595   0009D2  6ADA               	clrf	fsr2h,c
  4596   0009D4  50DF               	movf	223,w,c
  4597   0009D6  0B07               	andlw	7
  4598   0009D8  0900               	iorlw	0
  4599   0009DA  A4D8               	btfss	status,2,c
  4600   0009DC  EFF2  F004         	goto	u4411
  4601   0009E0  EFF5  F004         	goto	u4410
  4602   0009E4                     u4411:
  4603   0009E4  FFFF               	dw	65535	; assembler added errata NOP
  4604   0009E6  EF06  F005         	goto	l4689
  4605   0009EA                     u4410:
  4606   0009EA  FFFF               	dw	65535	; assembler added errata NOP
  4607   0009EC  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4608   0009EE  6ED9               	movwf	fsr2l,c
  4609   0009F0  6ADA               	clrf	fsr2h,c
  4610   0009F2  30DF               	rrcf	223,w,c
  4611   0009F4  32E8               	rrcf	wreg,f,c
  4612   0009F6  32E8               	rrcf	wreg,f,c
  4613   0009F8  0B07               	andlw	7
  4614   0009FA  0A07               	xorlw	7
  4615   0009FC  B4D8               	btfsc	status,2,c
  4616   0009FE  EF03  F005         	goto	u4421
  4617   000A02  EF06  F005         	goto	u4420
  4618   000A06                     u4421:
  4619   000A06  FFFF               	dw	65535	; assembler added errata NOP
  4620   000A08  EF66  F005         	goto	l474
  4621   000A0C                     u4420:
  4622   000A0C                     l4689:
  4623   000A0C  FFFF               	dw	65535	; assembler added errata NOP
  4624   000A0E  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4625   000A10  6ED9               	movwf	fsr2l,c
  4626   000A12  6ADA               	clrf	fsr2h,c
  4627   000A14  50DF               	movf	223,w,c
  4628   000A16  0B07               	andlw	7
  4629   000A18  06E8               	decf	wreg,f,c
  4630   000A1A  B4D8               	btfsc	status,2,c
  4631   000A1C  EF12  F005         	goto	u4431
  4632   000A20  EF15  F005         	goto	u4430
  4633   000A24                     u4431:
  4634   000A24  FFFF               	dw	65535	; assembler added errata NOP
  4635   000A26  EF33  F005         	goto	l4695
  4636   000A2A                     u4430:
  4637   000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4638   000A2C  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4639   000A2E  6ED9               	movwf	fsr2l,c
  4640   000A30  6ADA               	clrf	fsr2h,c
  4641   000A32  50DF               	movf	223,w,c
  4642   000A34  0B07               	andlw	7
  4643   000A36  0A02               	xorlw	2
  4644   000A38  B4D8               	btfsc	status,2,c
  4645   000A3A  EF21  F005         	goto	u4441
  4646   000A3E  EF24  F005         	goto	u4440
  4647   000A42                     u4441:
  4648   000A42  FFFF               	dw	65535	; assembler added errata NOP
  4649   000A44  EF33  F005         	goto	l4695
  4650   000A48                     u4440:
  4651   000A48  FFFF               	dw	65535	; assembler added errata NOP
  4652   000A4A  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4653   000A4C  6ED9               	movwf	fsr2l,c
  4654   000A4E  6ADA               	clrf	fsr2h,c
  4655   000A50  50DF               	movf	223,w,c
  4656   000A52  0B07               	andlw	7
  4657   000A54  0A03               	xorlw	3
  4658   000A56  A4D8               	btfss	status,2,c
  4659   000A58  EF30  F005         	goto	u4451
  4660   000A5C  EF33  F005         	goto	u4450
  4661   000A60                     u4451:
  4662   000A60  FFFF               	dw	65535	; assembler added errata NOP
  4663   000A62  EF45  F005         	goto	l4697
  4664   000A66                     u4450:
  4665   000A66                     l4695:
  4666   000A66  FFFF               	dw	65535	; assembler added errata NOP
  4667   000A68  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4668   000A6A  6ED9               	movwf	fsr2l,c
  4669   000A6C  6ADA               	clrf	fsr2h,c
  4670   000A6E  30DF               	rrcf	223,w,c
  4671   000A70  32E8               	rrcf	wreg,f,c
  4672   000A72  32E8               	rrcf	wreg,f,c
  4673   000A74  0B07               	andlw	7
  4674   000A76  6E70               	movwf	??_GPIO_check_access^0,c
  4675   000A78  0E08               	movlw	8
  4676   000A7A  6070               	cpfslt	??_GPIO_check_access^0,c
  4677   000A7C  EF42  F005         	goto	u4461
  4678   000A80  EF45  F005         	goto	u4460
  4679   000A84                     u4461:
  4680   000A84  FFFF               	dw	65535	; assembler added errata NOP
  4681   000A86  EF66  F005         	goto	l474
  4682   000A8A                     u4460:
  4683   000A8A                     l4697:
  4684   000A8A  FFFF               	dw	65535	; assembler added errata NOP
  4685   000A8C  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4686   000A8E  6ED9               	movwf	fsr2l,c
  4687   000A90  6ADA               	clrf	fsr2h,c
  4688   000A92  50DF               	movf	223,w,c
  4689   000A94  0B07               	andlw	7
  4690   000A96  0A04               	xorlw	4
  4691   000A98  A4D8               	btfss	status,2,c
  4692   000A9A  EF51  F005         	goto	u4471
  4693   000A9E  EF54  F005         	goto	u4470
  4694   000AA2                     u4471:
  4695   000AA2  FFFF               	dw	65535	; assembler added errata NOP
  4696   000AA4  EF68  F005         	goto	l4701
  4697   000AA8                     u4470:
  4698   000AA8  FFFF               	dw	65535	; assembler added errata NOP
  4699   000AAA  506F               	movf	GPIO_check_access@_pin_config^0,w,c
  4700   000AAC  6ED9               	movwf	fsr2l,c
  4701   000AAE  6ADA               	clrf	fsr2h,c
  4702   000AB0  30DF               	rrcf	223,w,c
  4703   000AB2  32E8               	rrcf	wreg,f,c
  4704   000AB4  32E8               	rrcf	wreg,f,c
  4705   000AB6  0B07               	andlw	7
  4706   000AB8  6E70               	movwf	??_GPIO_check_access^0,c
  4707   000ABA  0E02               	movlw	2
  4708   000ABC  6470               	cpfsgt	??_GPIO_check_access^0,c
  4709   000ABE  EF63  F005         	goto	u4481
  4710   000AC2  EF66  F005         	goto	u4480
  4711   000AC6                     u4481:
  4712   000AC6  FFFF               	dw	65535	; assembler added errata NOP
  4713   000AC8  EF68  F005         	goto	l4701
  4714   000ACC                     u4480:
  4715   000ACC                     l474:
  4716   000ACC  FFFF               	dw	65535	; assembler added errata NOP
  4717                           
  4718                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  4719   000ACE  6A71               	clrf	GPIO_check_access@ret^0,c
  4720   000AD0                     l4701:
  4721   000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4722                           
  4723                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  4724   000AD2  5071               	movf	GPIO_check_access@ret^0,w,c
  4725   000AD4  0012               	return		;funcret
  4726   000AD6  FFFF               	dw	65535	; errata NOP
  4727   000AD8                     __end_of_GPIO_check_access:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function _InterruptManagerLow *****************
  4731 ;; Defined at:
  4732 ;;		line 26 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4746 ;;      Params:         0       0       0       0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0
  4748 ;;      Temps:          3       0       0       0       0       0       0
  4749 ;;      Totals:         3       0       0       0       0       0       0
  4750 ;;Total ram usage:        3 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 3
  4753 ;; This function calls:
  4754 ;;		_INT0_ISR
  4755 ;;		_INT1_ISR
  4756 ;;		_INT2_ISR
  4757 ;;		_RB5_ISR
  4758 ;;		_RB6_ISR
  4759 ;;		_RB7_ISR
  4760 ;; This function is called by:
  4761 ;;		Interrupt level 1
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	intcodelo
  4766   000018                     __pintcodelo:
  4767                           	callstack 0
  4768   000018                     _InterruptManagerLow:
  4769                           	callstack 0
  4770   000018  FFFF               	dw	65535	; assembler added errata NOP
  4771                           
  4772                           ;incstack = 0
  4773   00001A  807A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4774   00001C  CFD8 F06C          	movff	status,??_InterruptManagerLow
  4775   000020  CFE8 F06D          	movff	wreg,??_InterruptManagerLow+1
  4776   000024  CFE0 F06E          	movff	bsr,??_InterruptManagerLow+2
  4777   000028                     
  4778                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 27:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4779   000028  A2F2               	btfss	242,1,c	;volatile
  4780   00002A  EF19  F000         	goto	i1u233_21
  4781   00002E  EF1C  F000         	goto	i1u233_20
  4782   000032                     i1u233_21:
  4783   000032  FFFF               	dw	65535	; assembler added errata NOP
  4784   000034  EF28  F000         	goto	i1l3285
  4785   000038                     i1u233_20:
  4786   000038  FFFF               	dw	65535	; assembler added errata NOP
  4787   00003A  A8F2               	btfss	242,4,c	;volatile
  4788   00003C  EF22  F000         	goto	i1u234_21
  4789   000040  EF25  F000         	goto	i1u234_20
  4790   000044                     i1u234_21:
  4791   000044  FFFF               	dw	65535	; assembler added errata NOP
  4792   000046  EF28  F000         	goto	i1l3285
  4793   00004A                     i1u234_20:
  4794   00004A  FFFF               	dw	65535	; assembler added errata NOP
  4795   00004C                     
  4796                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 28:         INT0_ISR();
  4797   00004C  EC52  F00A         	call	_INT0_ISR	;wreg free
  4798   000050                     i1l3285:
  4799   000050  FFFF               	dw	65535	; assembler added errata NOP
  4800                           
  4801                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 29:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4802   000052  A0F0               	btfss	240,0,c	;volatile
  4803   000054  EF2E  F000         	goto	i1u235_21
  4804   000058  EF31  F000         	goto	i1u235_20
  4805   00005C                     i1u235_21:
  4806   00005C  FFFF               	dw	65535	; assembler added errata NOP
  4807   00005E  EF3D  F000         	goto	i1l3291
  4808   000062                     i1u235_20:
  4809   000062  FFFF               	dw	65535	; assembler added errata NOP
  4810   000064  A6F0               	btfss	240,3,c	;volatile
  4811   000066  EF37  F000         	goto	i1u236_21
  4812   00006A  EF3A  F000         	goto	i1u236_20
  4813   00006E                     i1u236_21:
  4814   00006E  FFFF               	dw	65535	; assembler added errata NOP
  4815   000070  EF3D  F000         	goto	i1l3291
  4816   000074                     i1u236_20:
  4817   000074  FFFF               	dw	65535	; assembler added errata NOP
  4818   000076                     
  4819                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 30:         INT1_ISR();
  4820   000076  EC4E  F00A         	call	_INT1_ISR	;wreg free
  4821   00007A                     i1l3291:
  4822   00007A  FFFF               	dw	65535	; assembler added errata NOP
  4823                           
  4824                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 31:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  4825   00007C  A2F0               	btfss	240,1,c	;volatile
  4826   00007E  EF43  F000         	goto	i1u237_21
  4827   000082  EF46  F000         	goto	i1u237_20
  4828   000086                     i1u237_21:
  4829   000086  FFFF               	dw	65535	; assembler added errata NOP
  4830   000088  EF52  F000         	goto	i1l3297
  4831   00008C                     i1u237_20:
  4832   00008C  FFFF               	dw	65535	; assembler added errata NOP
  4833   00008E  A8F0               	btfss	240,4,c	;volatile
  4834   000090  EF4C  F000         	goto	i1u238_21
  4835   000094  EF4F  F000         	goto	i1u238_20
  4836   000098                     i1u238_21:
  4837   000098  FFFF               	dw	65535	; assembler added errata NOP
  4838   00009A  EF52  F000         	goto	i1l3297
  4839   00009E                     i1u238_20:
  4840   00009E  FFFF               	dw	65535	; assembler added errata NOP
  4841   0000A0                     
  4842                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 32:         INT2_ISR();
  4843   0000A0  EC4A  F00A         	call	_INT2_ISR	;wreg free
  4844   0000A4                     i1l3297:
  4845   0000A4  FFFF               	dw	65535	; assembler added errata NOP
  4846                           
  4847                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 34:  if(INTCONbits.RBIF == 1 && INTCONbi
      +                          ts.RBIE == 1){
  4848   0000A6  A0F2               	btfss	242,0,c	;volatile
  4849   0000A8  EF58  F000         	goto	i1u239_21
  4850   0000AC  EF5B  F000         	goto	i1u239_20
  4851   0000B0                     i1u239_21:
  4852   0000B0  FFFF               	dw	65535	; assembler added errata NOP
  4853   0000B2  EF38  F001         	goto	i1l939
  4854   0000B6                     i1u239_20:
  4855   0000B6  FFFF               	dw	65535	; assembler added errata NOP
  4856   0000B8  A6F2               	btfss	242,3,c	;volatile
  4857   0000BA  EF61  F000         	goto	i1u240_21
  4858   0000BE  EF64  F000         	goto	i1u240_20
  4859   0000C2                     i1u240_21:
  4860   0000C2  FFFF               	dw	65535	; assembler added errata NOP
  4861   0000C4  EF38  F001         	goto	i1l939
  4862   0000C8                     i1u240_20:
  4863   0000C8  FFFF               	dw	65535	; assembler added errata NOP
  4864   0000CA  A881               	btfss	129,4,c	;volatile
  4865   0000CC  EF6A  F000         	goto	i1u241_21
  4866   0000D0  EF6D  F000         	goto	i1u241_20
  4867   0000D4                     i1u241_21:
  4868   0000D4  FFFF               	dw	65535	; assembler added errata NOP
  4869   0000D6  EF7E  F000         	goto	i1l920
  4870   0000DA                     i1u241_20:
  4871   0000DA  FFFF               	dw	65535	; assembler added errata NOP
  4872   0000DC  043D               	decf	_RB4f^0,w,c	;volatile
  4873   0000DE  A4D8               	btfss	status,2,c
  4874   0000E0  EF74  F000         	goto	i1u242_21
  4875   0000E4  EF77  F000         	goto	i1u242_20
  4876   0000E8                     i1u242_21:
  4877   0000E8  FFFF               	dw	65535	; assembler added errata NOP
  4878   0000EA  EF7E  F000         	goto	i1l920
  4879   0000EE                     i1u242_20:
  4880   0000EE  FFFF               	dw	65535	; assembler added errata NOP
  4881   0000F0  6A3D               	clrf	_RB4f^0,c	;volatile
  4882   0000F2  0E00               	movlw	0
  4883   0000F4  EC46  F00A         	call	_RB5_ISR
  4884   0000F8  EF99  F000         	goto	i1l3313
  4885   0000FC                     i1l920:
  4886   0000FC  FFFF               	dw	65535	; assembler added errata NOP
  4887   0000FE  B881               	btfsc	129,4,c	;volatile
  4888   000100  EF84  F000         	goto	i1u243_21
  4889   000104  EF87  F000         	goto	i1u243_20
  4890   000108                     i1u243_21:
  4891   000108  FFFF               	dw	65535	; assembler added errata NOP
  4892   00010A  EF99  F000         	goto	i1l923
  4893   00010E                     i1u243_20:
  4894   00010E  FFFF               	dw	65535	; assembler added errata NOP
  4895   000110  503D               	movf	_RB4f^0,w,c	;volatile
  4896   000112  A4D8               	btfss	status,2,c
  4897   000114  EF8E  F000         	goto	i1u244_21
  4898   000118  EF91  F000         	goto	i1u244_20
  4899   00011C                     i1u244_21:
  4900   00011C  FFFF               	dw	65535	; assembler added errata NOP
  4901   00011E  EF99  F000         	goto	i1l923
  4902   000122                     i1u244_20:
  4903   000122  FFFF               	dw	65535	; assembler added errata NOP
  4904   000124  0E01               	movlw	1
  4905   000126  6E3D               	movwf	_RB4f^0,c	;volatile
  4906   000128  0E01               	movlw	1
  4907   00012A  EC46  F00A         	call	_RB5_ISR
  4908   00012E  EF99  F000         	goto	i1l3313
  4909   000132                     i1l923:
  4910   000132                     i1l3313:
  4911   000132  FFFF               	dw	65535	; assembler added errata NOP
  4912   000134  AA81               	btfss	129,5,c	;volatile
  4913   000136  EF9F  F000         	goto	i1u245_21
  4914   00013A  EFA2  F000         	goto	i1u245_20
  4915   00013E                     i1u245_21:
  4916   00013E  FFFF               	dw	65535	; assembler added errata NOP
  4917   000140  EFB3  F000         	goto	i1l925
  4918   000144                     i1u245_20:
  4919   000144  FFFF               	dw	65535	; assembler added errata NOP
  4920   000146  043C               	decf	_RB5f^0,w,c	;volatile
  4921   000148  A4D8               	btfss	status,2,c
  4922   00014A  EFA9  F000         	goto	i1u246_21
  4923   00014E  EFAC  F000         	goto	i1u246_20
  4924   000152                     i1u246_21:
  4925   000152  FFFF               	dw	65535	; assembler added errata NOP
  4926   000154  EFB3  F000         	goto	i1l925
  4927   000158                     i1u246_20:
  4928   000158  FFFF               	dw	65535	; assembler added errata NOP
  4929   00015A  6A3C               	clrf	_RB5f^0,c	;volatile
  4930   00015C  0E00               	movlw	0
  4931   00015E  EC46  F00A         	call	_RB5_ISR
  4932   000162  EFCE  F000         	goto	i1l3327
  4933   000166                     i1l925:
  4934   000166  FFFF               	dw	65535	; assembler added errata NOP
  4935   000168  BA81               	btfsc	129,5,c	;volatile
  4936   00016A  EFB9  F000         	goto	i1u247_21
  4937   00016E  EFBC  F000         	goto	i1u247_20
  4938   000172                     i1u247_21:
  4939   000172  FFFF               	dw	65535	; assembler added errata NOP
  4940   000174  EFCE  F000         	goto	i1l928
  4941   000178                     i1u247_20:
  4942   000178  FFFF               	dw	65535	; assembler added errata NOP
  4943   00017A  503C               	movf	_RB5f^0,w,c	;volatile
  4944   00017C  A4D8               	btfss	status,2,c
  4945   00017E  EFC3  F000         	goto	i1u248_21
  4946   000182  EFC6  F000         	goto	i1u248_20
  4947   000186                     i1u248_21:
  4948   000186  FFFF               	dw	65535	; assembler added errata NOP
  4949   000188  EFCE  F000         	goto	i1l928
  4950   00018C                     i1u248_20:
  4951   00018C  FFFF               	dw	65535	; assembler added errata NOP
  4952   00018E  0E01               	movlw	1
  4953   000190  6E3C               	movwf	_RB5f^0,c	;volatile
  4954   000192  0E01               	movlw	1
  4955   000194  EC46  F00A         	call	_RB5_ISR
  4956   000198  EFCE  F000         	goto	i1l3327
  4957   00019C                     i1l928:
  4958   00019C                     i1l3327:
  4959   00019C  FFFF               	dw	65535	; assembler added errata NOP
  4960   00019E  AC81               	btfss	129,6,c	;volatile
  4961   0001A0  EFD4  F000         	goto	i1u249_21
  4962   0001A4  EFD7  F000         	goto	i1u249_20
  4963   0001A8                     i1u249_21:
  4964   0001A8  FFFF               	dw	65535	; assembler added errata NOP
  4965   0001AA  EFE8  F000         	goto	i1l930
  4966   0001AE                     i1u249_20:
  4967   0001AE  FFFF               	dw	65535	; assembler added errata NOP
  4968   0001B0  043B               	decf	_RB6f^0,w,c	;volatile
  4969   0001B2  A4D8               	btfss	status,2,c
  4970   0001B4  EFDE  F000         	goto	i1u250_21
  4971   0001B8  EFE1  F000         	goto	i1u250_20
  4972   0001BC                     i1u250_21:
  4973   0001BC  FFFF               	dw	65535	; assembler added errata NOP
  4974   0001BE  EFE8  F000         	goto	i1l930
  4975   0001C2                     i1u250_20:
  4976   0001C2  FFFF               	dw	65535	; assembler added errata NOP
  4977   0001C4  6A3B               	clrf	_RB6f^0,c	;volatile
  4978   0001C6  0E00               	movlw	0
  4979   0001C8  EC42  F00A         	call	_RB6_ISR
  4980   0001CC  EF03  F001         	goto	i1l3341
  4981   0001D0                     i1l930:
  4982   0001D0  FFFF               	dw	65535	; assembler added errata NOP
  4983   0001D2  BC81               	btfsc	129,6,c	;volatile
  4984   0001D4  EFEE  F000         	goto	i1u251_21
  4985   0001D8  EFF1  F000         	goto	i1u251_20
  4986   0001DC                     i1u251_21:
  4987   0001DC  FFFF               	dw	65535	; assembler added errata NOP
  4988   0001DE  EF03  F001         	goto	i1l933
  4989   0001E2                     i1u251_20:
  4990   0001E2  FFFF               	dw	65535	; assembler added errata NOP
  4991   0001E4  503B               	movf	_RB6f^0,w,c	;volatile
  4992   0001E6  A4D8               	btfss	status,2,c
  4993   0001E8  EFF8  F000         	goto	i1u252_21
  4994   0001EC  EFFB  F000         	goto	i1u252_20
  4995   0001F0                     i1u252_21:
  4996   0001F0  FFFF               	dw	65535	; assembler added errata NOP
  4997   0001F2  EF03  F001         	goto	i1l933
  4998   0001F6                     i1u252_20:
  4999   0001F6  FFFF               	dw	65535	; assembler added errata NOP
  5000   0001F8  0E01               	movlw	1
  5001   0001FA  6E3B               	movwf	_RB6f^0,c	;volatile
  5002   0001FC  0E01               	movlw	1
  5003   0001FE  EC42  F00A         	call	_RB6_ISR
  5004   000202  EF03  F001         	goto	i1l3341
  5005   000206                     i1l933:
  5006   000206                     i1l3341:
  5007   000206  FFFF               	dw	65535	; assembler added errata NOP
  5008   000208  AE81               	btfss	129,7,c	;volatile
  5009   00020A  EF09  F001         	goto	i1u253_21
  5010   00020E  EF0C  F001         	goto	i1u253_20
  5011   000212                     i1u253_21:
  5012   000212  FFFF               	dw	65535	; assembler added errata NOP
  5013   000214  EF1D  F001         	goto	i1l935
  5014   000218                     i1u253_20:
  5015   000218  FFFF               	dw	65535	; assembler added errata NOP
  5016   00021A  043A               	decf	_RB7f^0,w,c	;volatile
  5017   00021C  A4D8               	btfss	status,2,c
  5018   00021E  EF13  F001         	goto	i1u254_21
  5019   000222  EF16  F001         	goto	i1u254_20
  5020   000226                     i1u254_21:
  5021   000226  FFFF               	dw	65535	; assembler added errata NOP
  5022   000228  EF1D  F001         	goto	i1l935
  5023   00022C                     i1u254_20:
  5024   00022C  FFFF               	dw	65535	; assembler added errata NOP
  5025   00022E  6A3A               	clrf	_RB7f^0,c	;volatile
  5026   000230  0E00               	movlw	0
  5027   000232  EC3E  F00A         	call	_RB7_ISR
  5028   000236  EF38  F001         	goto	i1l939
  5029   00023A                     i1l935:
  5030   00023A  FFFF               	dw	65535	; assembler added errata NOP
  5031   00023C  BE81               	btfsc	129,7,c	;volatile
  5032   00023E  EF23  F001         	goto	i1u255_21
  5033   000242  EF26  F001         	goto	i1u255_20
  5034   000246                     i1u255_21:
  5035   000246  FFFF               	dw	65535	; assembler added errata NOP
  5036   000248  EF38  F001         	goto	i1l938
  5037   00024C                     i1u255_20:
  5038   00024C  FFFF               	dw	65535	; assembler added errata NOP
  5039   00024E  503A               	movf	_RB7f^0,w,c	;volatile
  5040   000250  A4D8               	btfss	status,2,c
  5041   000252  EF2D  F001         	goto	i1u256_21
  5042   000256  EF30  F001         	goto	i1u256_20
  5043   00025A                     i1u256_21:
  5044   00025A  FFFF               	dw	65535	; assembler added errata NOP
  5045   00025C  EF38  F001         	goto	i1l938
  5046   000260                     i1u256_20:
  5047   000260  FFFF               	dw	65535	; assembler added errata NOP
  5048   000262  0E01               	movlw	1
  5049   000264  6E3A               	movwf	_RB7f^0,c	;volatile
  5050   000266  0E01               	movlw	1
  5051   000268  EC3E  F00A         	call	_RB7_ISR
  5052   00026C  EF38  F001         	goto	i1l939
  5053   000270                     i1l938:
  5054   000270                     i1l939:
  5055   000270  FFFF               	dw	65535	; assembler added errata NOP
  5056   000272  C06E  FFE0         	movff	??_InterruptManagerLow+2,bsr
  5057   000276  C06D  FFE8         	movff	??_InterruptManagerLow+1,wreg
  5058   00027A  C06C  FFD8         	movff	??_InterruptManagerLow,status
  5059   00027E  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5060   000280  0010               	retfie	
  5061   000282  FFFF               	dw	65535	; errata NOP
  5062   000284                     __end_of_InterruptManagerLow:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _RB7_ISR *****************
  5066 ;; Defined at:
  5067 ;;		line 70 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  fl              1    wreg     unsigned char 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  fl              1    1[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5081 ;;      Params:         0       0       0       0       0       0       0
  5082 ;;      Locals:         1       0       0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0
  5084 ;;      Totals:         1       0       0       0       0       0       0
  5085 ;;Total ram usage:        1 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 2
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_InterruptManagerLow
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text15
  5096   00147C                     __ptext15:
  5097                           	callstack 0
  5098   00147C                     _RB7_ISR:
  5099                           	callstack 0
  5100   00147C  FFFF               	dw	65535	; assembler added errata NOP
  5101   00147E                     
  5102                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 71:  INTCONbits.RBIF=0;
  5103   00147E  90F2               	bcf	242,0,c	;volatile
  5104   001480  0012               	return		;funcret
  5105   001482  FFFF               	dw	65535	; errata NOP
  5106   001484                     __end_of_RB7_ISR:
  5107                           	callstack 0
  5108                           
  5109 ;; *************** function _RB6_ISR *****************
  5110 ;; Defined at:
  5111 ;;		line 59 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  fl              1    wreg     unsigned char 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  fl              1    1[COMRAM] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5125 ;;      Params:         0       0       0       0       0       0       0
  5126 ;;      Locals:         1       0       0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0
  5128 ;;      Totals:         1       0       0       0       0       0       0
  5129 ;;Total ram usage:        1 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_InterruptManagerLow
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text16
  5140   001484                     __ptext16:
  5141                           	callstack 0
  5142   001484                     _RB6_ISR:
  5143                           	callstack 0
  5144   001484  FFFF               	dw	65535	; assembler added errata NOP
  5145   001486                     
  5146                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 60:  INTCONbits.RBIF=0;
  5147   001486  90F2               	bcf	242,0,c	;volatile
  5148   001488  0012               	return		;funcret
  5149   00148A  FFFF               	dw	65535	; errata NOP
  5150   00148C                     __end_of_RB6_ISR:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function _RB5_ISR *****************
  5154 ;; Defined at:
  5155 ;;		line 48 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  fl              1    wreg     unsigned char 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  fl              1    1[COMRAM] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      void 
  5162 ;; Registers used:
  5163 ;;		wreg
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5169 ;;      Params:         0       0       0       0       0       0       0
  5170 ;;      Locals:         1       0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0
  5172 ;;      Totals:         1       0       0       0       0       0       0
  5173 ;;Total ram usage:        1 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_InterruptManagerLow
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text17
  5184   00148C                     __ptext17:
  5185                           	callstack 0
  5186   00148C                     _RB5_ISR:
  5187                           	callstack 0
  5188   00148C  FFFF               	dw	65535	; assembler added errata NOP
  5189   00148E                     
  5190                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 49:  INTCONbits.RBIF=0;
  5191   00148E  90F2               	bcf	242,0,c	;volatile
  5192   001490  0012               	return		;funcret
  5193   001492  FFFF               	dw	65535	; errata NOP
  5194   001494                     __end_of_RB5_ISR:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function _INT2_ISR *****************
  5198 ;; Defined at:
  5199 ;;		line 32 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		None
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5213 ;;      Params:         0       0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 2
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_InterruptManagerLow
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text18
  5228   001494                     __ptext18:
  5229                           	callstack 0
  5230   001494                     _INT2_ISR:
  5231                           	callstack 0
  5232   001494  FFFF               	dw	65535	; assembler added errata NOP
  5233   001496                     
  5234                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 33:  INTCON3bits.INT2IF=0;
  5235   001496  92F0               	bcf	240,1,c	;volatile
  5236   001498  0012               	return		;funcret
  5237   00149A  FFFF               	dw	65535	; errata NOP
  5238   00149C                     __end_of_INT2_ISR:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function _INT1_ISR *****************
  5242 ;; Defined at:
  5243 ;;		line 27 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		None
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5257 ;;      Params:         0       0       0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0
  5260 ;;      Totals:         0       0       0       0       0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 2
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_InterruptManagerLow
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text19
  5272   00149C                     __ptext19:
  5273                           	callstack 0
  5274   00149C                     _INT1_ISR:
  5275                           	callstack 0
  5276   00149C  FFFF               	dw	65535	; assembler added errata NOP
  5277   00149E                     
  5278                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 28:  INTCON3bits.INT1IF=0;
  5279   00149E  90F0               	bcf	240,0,c	;volatile
  5280   0014A0  0012               	return		;funcret
  5281   0014A2  FFFF               	dw	65535	; errata NOP
  5282   0014A4                     __end_of_INT1_ISR:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function _INT0_ISR *****************
  5286 ;; Defined at:
  5287 ;;		line 22 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		None
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5301 ;;      Params:         0       0       0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0
  5304 ;;      Totals:         0       0       0       0       0       0       0
  5305 ;;Total ram usage:        0 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 2
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_InterruptManagerLow
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text20
  5316   0014A4                     __ptext20:
  5317                           	callstack 0
  5318   0014A4                     _INT0_ISR:
  5319                           	callstack 0
  5320   0014A4  FFFF               	dw	65535	; assembler added errata NOP
  5321   0014A6                     
  5322                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 23:  INTCONbits.INT0IF=0;
  5323   0014A6  92F2               	bcf	242,1,c	;volatile
  5324   0014A8  0012               	return		;funcret
  5325   0014AA  FFFF               	dw	65535	; errata NOP
  5326   0014AC                     __end_of_INT0_ISR:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function _InterruptManager *****************
  5330 ;; Defined at:
  5331 ;;		line 11 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5345 ;;      Params:         0       0       0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0
  5348 ;;      Totals:         0       0       0       0       0       0       0
  5349 ;;Total ram usage:        0 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 1
  5352 ;; This function calls:
  5353 ;;		i2_INT0_ISR
  5354 ;;		i2_INT1_ISR
  5355 ;;		i2_INT2_ISR
  5356 ;;		i2_RB5_ISR
  5357 ;;		i2_RB6_ISR
  5358 ;;		i2_RB7_ISR
  5359 ;; This function is called by:
  5360 ;;		Interrupt level 2
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	intcode
  5365   000008                     __pintcode:
  5366                           	callstack 0
  5367   000008                     _InterruptManager:
  5368                           	callstack 0
  5369   000008  FFFF               	dw	65535	; assembler added errata NOP
  5370                           
  5371                           ;incstack = 0
  5372   00000A  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5373   00000C  EF0B  F003         	goto	int_func
  5374                           
  5375                           	psect	intcode_body
  5376   000616                     __pintcode_body:
  5377                           	callstack 24
  5378   000616                     int_func:
  5379                           	callstack 24
  5380   000616  FFFF               	dw	65535	; errata NOP
  5381   000618                     
  5382                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 12:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  5383   000618  A2F2               	btfss	242,1,c	;volatile
  5384   00061A  EF11  F003         	goto	i2u415_41
  5385   00061E  EF14  F003         	goto	i2u415_40
  5386   000622                     i2u415_41:
  5387   000622  FFFF               	dw	65535	; assembler added errata NOP
  5388   000624  EF20  F003         	goto	i2l4559
  5389   000628                     i2u415_40:
  5390   000628  FFFF               	dw	65535	; assembler added errata NOP
  5391   00062A  A8F2               	btfss	242,4,c	;volatile
  5392   00062C  EF1A  F003         	goto	i2u416_41
  5393   000630  EF1D  F003         	goto	i2u416_40
  5394   000634                     i2u416_41:
  5395   000634  FFFF               	dw	65535	; assembler added errata NOP
  5396   000636  EF20  F003         	goto	i2l4559
  5397   00063A                     i2u416_40:
  5398   00063A  FFFF               	dw	65535	; assembler added errata NOP
  5399   00063C                     
  5400                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 13:         INT0_ISR();
  5401   00063C  EC6A  F00A         	call	i2_INT0_ISR	;wreg free
  5402   000640                     i2l4559:
  5403   000640  FFFF               	dw	65535	; assembler added errata NOP
  5404                           
  5405                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 14:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  5406   000642  A0F0               	btfss	240,0,c	;volatile
  5407   000644  EF26  F003         	goto	i2u417_41
  5408   000648  EF29  F003         	goto	i2u417_40
  5409   00064C                     i2u417_41:
  5410   00064C  FFFF               	dw	65535	; assembler added errata NOP
  5411   00064E  EF35  F003         	goto	i2l4565
  5412   000652                     i2u417_40:
  5413   000652  FFFF               	dw	65535	; assembler added errata NOP
  5414   000654  A6F0               	btfss	240,3,c	;volatile
  5415   000656  EF2F  F003         	goto	i2u418_41
  5416   00065A  EF32  F003         	goto	i2u418_40
  5417   00065E                     i2u418_41:
  5418   00065E  FFFF               	dw	65535	; assembler added errata NOP
  5419   000660  EF35  F003         	goto	i2l4565
  5420   000664                     i2u418_40:
  5421   000664  FFFF               	dw	65535	; assembler added errata NOP
  5422   000666                     
  5423                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 15:         INT1_ISR();
  5424   000666  EC66  F00A         	call	i2_INT1_ISR	;wreg free
  5425   00066A                     i2l4565:
  5426   00066A  FFFF               	dw	65535	; assembler added errata NOP
  5427                           
  5428                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 16:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  5429   00066C  A2F0               	btfss	240,1,c	;volatile
  5430   00066E  EF3B  F003         	goto	i2u419_41
  5431   000672  EF3E  F003         	goto	i2u419_40
  5432   000676                     i2u419_41:
  5433   000676  FFFF               	dw	65535	; assembler added errata NOP
  5434   000678  EF4A  F003         	goto	i2l4571
  5435   00067C                     i2u419_40:
  5436   00067C  FFFF               	dw	65535	; assembler added errata NOP
  5437   00067E  A8F0               	btfss	240,4,c	;volatile
  5438   000680  EF44  F003         	goto	i2u420_41
  5439   000684  EF47  F003         	goto	i2u420_40
  5440   000688                     i2u420_41:
  5441   000688  FFFF               	dw	65535	; assembler added errata NOP
  5442   00068A  EF4A  F003         	goto	i2l4571
  5443   00068E                     i2u420_40:
  5444   00068E  FFFF               	dw	65535	; assembler added errata NOP
  5445   000690                     
  5446                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 17:         INT2_ISR();
  5447   000690  EC62  F00A         	call	i2_INT2_ISR	;wreg free
  5448   000694                     i2l4571:
  5449   000694  FFFF               	dw	65535	; assembler added errata NOP
  5450                           
  5451                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 19:  if(INTCONbits.RBIF == 1 && INTCONbi
      +                          ts.RBIE == 1){
  5452   000696  A0F2               	btfss	242,0,c	;volatile
  5453   000698  EF50  F003         	goto	i2u421_41
  5454   00069C  EF53  F003         	goto	i2u421_40
  5455   0006A0                     i2u421_41:
  5456   0006A0  FFFF               	dw	65535	; assembler added errata NOP
  5457   0006A2  EF30  F004         	goto	i2l910
  5458   0006A6                     i2u421_40:
  5459   0006A6  FFFF               	dw	65535	; assembler added errata NOP
  5460   0006A8  A6F2               	btfss	242,3,c	;volatile
  5461   0006AA  EF59  F003         	goto	i2u422_41
  5462   0006AE  EF5C  F003         	goto	i2u422_40
  5463   0006B2                     i2u422_41:
  5464   0006B2  FFFF               	dw	65535	; assembler added errata NOP
  5465   0006B4  EF30  F004         	goto	i2l910
  5466   0006B8                     i2u422_40:
  5467   0006B8  FFFF               	dw	65535	; assembler added errata NOP
  5468   0006BA  A881               	btfss	129,4,c	;volatile
  5469   0006BC  EF62  F003         	goto	i2u423_41
  5470   0006C0  EF65  F003         	goto	i2u423_40
  5471   0006C4                     i2u423_41:
  5472   0006C4  FFFF               	dw	65535	; assembler added errata NOP
  5473   0006C6  EF76  F003         	goto	i2l891
  5474   0006CA                     i2u423_40:
  5475   0006CA  FFFF               	dw	65535	; assembler added errata NOP
  5476   0006CC  043D               	decf	_RB4f^0,w,c	;volatile
  5477   0006CE  A4D8               	btfss	status,2,c
  5478   0006D0  EF6C  F003         	goto	i2u424_41
  5479   0006D4  EF6F  F003         	goto	i2u424_40
  5480   0006D8                     i2u424_41:
  5481   0006D8  FFFF               	dw	65535	; assembler added errata NOP
  5482   0006DA  EF76  F003         	goto	i2l891
  5483   0006DE                     i2u424_40:
  5484   0006DE  FFFF               	dw	65535	; assembler added errata NOP
  5485   0006E0  6A3D               	clrf	_RB4f^0,c	;volatile
  5486   0006E2  0E00               	movlw	0
  5487   0006E4  EC5E  F00A         	call	i2_RB5_ISR
  5488   0006E8  EF91  F003         	goto	i2l4587
  5489   0006EC                     i2l891:
  5490   0006EC  FFFF               	dw	65535	; assembler added errata NOP
  5491   0006EE  B881               	btfsc	129,4,c	;volatile
  5492   0006F0  EF7C  F003         	goto	i2u425_41
  5493   0006F4  EF7F  F003         	goto	i2u425_40
  5494   0006F8                     i2u425_41:
  5495   0006F8  FFFF               	dw	65535	; assembler added errata NOP
  5496   0006FA  EF91  F003         	goto	i2l894
  5497   0006FE                     i2u425_40:
  5498   0006FE  FFFF               	dw	65535	; assembler added errata NOP
  5499   000700  503D               	movf	_RB4f^0,w,c	;volatile
  5500   000702  A4D8               	btfss	status,2,c
  5501   000704  EF86  F003         	goto	i2u426_41
  5502   000708  EF89  F003         	goto	i2u426_40
  5503   00070C                     i2u426_41:
  5504   00070C  FFFF               	dw	65535	; assembler added errata NOP
  5505   00070E  EF91  F003         	goto	i2l894
  5506   000712                     i2u426_40:
  5507   000712  FFFF               	dw	65535	; assembler added errata NOP
  5508   000714  0E01               	movlw	1
  5509   000716  6E3D               	movwf	_RB4f^0,c	;volatile
  5510   000718  0E01               	movlw	1
  5511   00071A  EC5E  F00A         	call	i2_RB5_ISR
  5512   00071E  EF91  F003         	goto	i2l4587
  5513   000722                     i2l894:
  5514   000722                     i2l4587:
  5515   000722  FFFF               	dw	65535	; assembler added errata NOP
  5516   000724  AA81               	btfss	129,5,c	;volatile
  5517   000726  EF97  F003         	goto	i2u427_41
  5518   00072A  EF9A  F003         	goto	i2u427_40
  5519   00072E                     i2u427_41:
  5520   00072E  FFFF               	dw	65535	; assembler added errata NOP
  5521   000730  EFAB  F003         	goto	i2l896
  5522   000734                     i2u427_40:
  5523   000734  FFFF               	dw	65535	; assembler added errata NOP
  5524   000736  043C               	decf	_RB5f^0,w,c	;volatile
  5525   000738  A4D8               	btfss	status,2,c
  5526   00073A  EFA1  F003         	goto	i2u428_41
  5527   00073E  EFA4  F003         	goto	i2u428_40
  5528   000742                     i2u428_41:
  5529   000742  FFFF               	dw	65535	; assembler added errata NOP
  5530   000744  EFAB  F003         	goto	i2l896
  5531   000748                     i2u428_40:
  5532   000748  FFFF               	dw	65535	; assembler added errata NOP
  5533   00074A  6A3C               	clrf	_RB5f^0,c	;volatile
  5534   00074C  0E00               	movlw	0
  5535   00074E  EC5E  F00A         	call	i2_RB5_ISR
  5536   000752  EFC6  F003         	goto	i2l4601
  5537   000756                     i2l896:
  5538   000756  FFFF               	dw	65535	; assembler added errata NOP
  5539   000758  BA81               	btfsc	129,5,c	;volatile
  5540   00075A  EFB1  F003         	goto	i2u429_41
  5541   00075E  EFB4  F003         	goto	i2u429_40
  5542   000762                     i2u429_41:
  5543   000762  FFFF               	dw	65535	; assembler added errata NOP
  5544   000764  EFC6  F003         	goto	i2l899
  5545   000768                     i2u429_40:
  5546   000768  FFFF               	dw	65535	; assembler added errata NOP
  5547   00076A  503C               	movf	_RB5f^0,w,c	;volatile
  5548   00076C  A4D8               	btfss	status,2,c
  5549   00076E  EFBB  F003         	goto	i2u430_41
  5550   000772  EFBE  F003         	goto	i2u430_40
  5551   000776                     i2u430_41:
  5552   000776  FFFF               	dw	65535	; assembler added errata NOP
  5553   000778  EFC6  F003         	goto	i2l899
  5554   00077C                     i2u430_40:
  5555   00077C  FFFF               	dw	65535	; assembler added errata NOP
  5556   00077E  0E01               	movlw	1
  5557   000780  6E3C               	movwf	_RB5f^0,c	;volatile
  5558   000782  0E01               	movlw	1
  5559   000784  EC5E  F00A         	call	i2_RB5_ISR
  5560   000788  EFC6  F003         	goto	i2l4601
  5561   00078C                     i2l899:
  5562   00078C                     i2l4601:
  5563   00078C  FFFF               	dw	65535	; assembler added errata NOP
  5564   00078E  AC81               	btfss	129,6,c	;volatile
  5565   000790  EFCC  F003         	goto	i2u431_41
  5566   000794  EFCF  F003         	goto	i2u431_40
  5567   000798                     i2u431_41:
  5568   000798  FFFF               	dw	65535	; assembler added errata NOP
  5569   00079A  EFE0  F003         	goto	i2l901
  5570   00079E                     i2u431_40:
  5571   00079E  FFFF               	dw	65535	; assembler added errata NOP
  5572   0007A0  043B               	decf	_RB6f^0,w,c	;volatile
  5573   0007A2  A4D8               	btfss	status,2,c
  5574   0007A4  EFD6  F003         	goto	i2u432_41
  5575   0007A8  EFD9  F003         	goto	i2u432_40
  5576   0007AC                     i2u432_41:
  5577   0007AC  FFFF               	dw	65535	; assembler added errata NOP
  5578   0007AE  EFE0  F003         	goto	i2l901
  5579   0007B2                     i2u432_40:
  5580   0007B2  FFFF               	dw	65535	; assembler added errata NOP
  5581   0007B4  6A3B               	clrf	_RB6f^0,c	;volatile
  5582   0007B6  0E00               	movlw	0
  5583   0007B8  EC5A  F00A         	call	i2_RB6_ISR
  5584   0007BC  EFFB  F003         	goto	i2l4615
  5585   0007C0                     i2l901:
  5586   0007C0  FFFF               	dw	65535	; assembler added errata NOP
  5587   0007C2  BC81               	btfsc	129,6,c	;volatile
  5588   0007C4  EFE6  F003         	goto	i2u433_41
  5589   0007C8  EFE9  F003         	goto	i2u433_40
  5590   0007CC                     i2u433_41:
  5591   0007CC  FFFF               	dw	65535	; assembler added errata NOP
  5592   0007CE  EFFB  F003         	goto	i2l904
  5593   0007D2                     i2u433_40:
  5594   0007D2  FFFF               	dw	65535	; assembler added errata NOP
  5595   0007D4  503B               	movf	_RB6f^0,w,c	;volatile
  5596   0007D6  A4D8               	btfss	status,2,c
  5597   0007D8  EFF0  F003         	goto	i2u434_41
  5598   0007DC  EFF3  F003         	goto	i2u434_40
  5599   0007E0                     i2u434_41:
  5600   0007E0  FFFF               	dw	65535	; assembler added errata NOP
  5601   0007E2  EFFB  F003         	goto	i2l904
  5602   0007E6                     i2u434_40:
  5603   0007E6  FFFF               	dw	65535	; assembler added errata NOP
  5604   0007E8  0E01               	movlw	1
  5605   0007EA  6E3B               	movwf	_RB6f^0,c	;volatile
  5606   0007EC  0E01               	movlw	1
  5607   0007EE  EC5A  F00A         	call	i2_RB6_ISR
  5608   0007F2  EFFB  F003         	goto	i2l4615
  5609   0007F6                     i2l904:
  5610   0007F6                     i2l4615:
  5611   0007F6  FFFF               	dw	65535	; assembler added errata NOP
  5612   0007F8  AE81               	btfss	129,7,c	;volatile
  5613   0007FA  EF01  F004         	goto	i2u435_41
  5614   0007FE  EF04  F004         	goto	i2u435_40
  5615   000802                     i2u435_41:
  5616   000802  FFFF               	dw	65535	; assembler added errata NOP
  5617   000804  EF15  F004         	goto	i2l906
  5618   000808                     i2u435_40:
  5619   000808  FFFF               	dw	65535	; assembler added errata NOP
  5620   00080A  043A               	decf	_RB7f^0,w,c	;volatile
  5621   00080C  A4D8               	btfss	status,2,c
  5622   00080E  EF0B  F004         	goto	i2u436_41
  5623   000812  EF0E  F004         	goto	i2u436_40
  5624   000816                     i2u436_41:
  5625   000816  FFFF               	dw	65535	; assembler added errata NOP
  5626   000818  EF15  F004         	goto	i2l906
  5627   00081C                     i2u436_40:
  5628   00081C  FFFF               	dw	65535	; assembler added errata NOP
  5629   00081E  6A3A               	clrf	_RB7f^0,c	;volatile
  5630   000820  0E00               	movlw	0
  5631   000822  EC56  F00A         	call	i2_RB7_ISR
  5632   000826  EF30  F004         	goto	i2l910
  5633   00082A                     i2l906:
  5634   00082A  FFFF               	dw	65535	; assembler added errata NOP
  5635   00082C  BE81               	btfsc	129,7,c	;volatile
  5636   00082E  EF1B  F004         	goto	i2u437_41
  5637   000832  EF1E  F004         	goto	i2u437_40
  5638   000836                     i2u437_41:
  5639   000836  FFFF               	dw	65535	; assembler added errata NOP
  5640   000838  EF30  F004         	goto	i2l909
  5641   00083C                     i2u437_40:
  5642   00083C  FFFF               	dw	65535	; assembler added errata NOP
  5643   00083E  503A               	movf	_RB7f^0,w,c	;volatile
  5644   000840  A4D8               	btfss	status,2,c
  5645   000842  EF25  F004         	goto	i2u438_41
  5646   000846  EF28  F004         	goto	i2u438_40
  5647   00084A                     i2u438_41:
  5648   00084A  FFFF               	dw	65535	; assembler added errata NOP
  5649   00084C  EF30  F004         	goto	i2l909
  5650   000850                     i2u438_40:
  5651   000850  FFFF               	dw	65535	; assembler added errata NOP
  5652   000852  0E01               	movlw	1
  5653   000854  6E3A               	movwf	_RB7f^0,c	;volatile
  5654   000856  0E01               	movlw	1
  5655   000858  EC56  F00A         	call	i2_RB7_ISR
  5656   00085C  EF30  F004         	goto	i2l910
  5657   000860                     i2l909:
  5658   000860                     i2l910:
  5659   000860  FFFF               	dw	65535	; assembler added errata NOP
  5660   000862  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5661   000864  0011               	retfie		f
  5662   000866  FFFF               	dw	65535	; errata NOP
  5663   000868                     __end_of_InterruptManager:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function i2_RB7_ISR *****************
  5667 ;; Defined at:
  5668 ;;		line 70 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  fl              1    wreg     unsigned char 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  fl              1    0[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5682 ;;      Params:         0       0       0       0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0
  5685 ;;      Totals:         1       0       0       0       0       0       0
  5686 ;;Total ram usage:        1 bytes
  5687 ;; Hardware stack levels used: 1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_InterruptManager
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text22
  5696   0014AC                     __ptext22:
  5697                           	callstack 0
  5698   0014AC                     i2_RB7_ISR:
  5699                           	callstack 0
  5700   0014AC  FFFF               	dw	65535	; assembler added errata NOP
  5701   0014AE                     
  5702                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 71:  INTCONbits.RBIF=0;
  5703   0014AE  90F2               	bcf	242,0,c	;volatile
  5704   0014B0  0012               	return		;funcret
  5705   0014B2  FFFF               	dw	65535	; errata NOP
  5706   0014B4                     __end_ofi2_RB7_ISR:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function i2_RB6_ISR *****************
  5710 ;; Defined at:
  5711 ;;		line 59 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  fl              1    wreg     unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  fl              1    0[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5725 ;;      Params:         0       0       0       0       0       0       0
  5726 ;;      Locals:         1       0       0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0
  5728 ;;      Totals:         1       0       0       0       0       0       0
  5729 ;;Total ram usage:        1 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_InterruptManager
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text23
  5739   0014B4                     __ptext23:
  5740                           	callstack 0
  5741   0014B4                     i2_RB6_ISR:
  5742                           	callstack 0
  5743   0014B4  FFFF               	dw	65535	; assembler added errata NOP
  5744   0014B6                     
  5745                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 60:  INTCONbits.RBIF=0;
  5746   0014B6  90F2               	bcf	242,0,c	;volatile
  5747   0014B8  0012               	return		;funcret
  5748   0014BA  FFFF               	dw	65535	; errata NOP
  5749   0014BC                     __end_ofi2_RB6_ISR:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function i2_RB5_ISR *****************
  5753 ;; Defined at:
  5754 ;;		line 48 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  fl              1    wreg     unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  fl              1    0[COMRAM] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5768 ;;      Params:         0       0       0       0       0       0       0
  5769 ;;      Locals:         1       0       0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0
  5771 ;;      Totals:         1       0       0       0       0       0       0
  5772 ;;Total ram usage:        1 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_InterruptManager
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text24
  5782   0014BC                     __ptext24:
  5783                           	callstack 0
  5784   0014BC                     i2_RB5_ISR:
  5785                           	callstack 0
  5786   0014BC  FFFF               	dw	65535	; assembler added errata NOP
  5787   0014BE                     
  5788                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 49:  INTCONbits.RBIF=0;
  5789   0014BE  90F2               	bcf	242,0,c	;volatile
  5790   0014C0  0012               	return		;funcret
  5791   0014C2  FFFF               	dw	65535	; errata NOP
  5792   0014C4                     __end_ofi2_RB5_ISR:
  5793                           	callstack 0
  5794                           
  5795 ;; *************** function i2_INT2_ISR *****************
  5796 ;; Defined at:
  5797 ;;		line 32 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		None
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5811 ;;      Params:         0       0       0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0
  5814 ;;      Totals:         0       0       0       0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_InterruptManager
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text25
  5825   0014C4                     __ptext25:
  5826                           	callstack 0
  5827   0014C4                     i2_INT2_ISR:
  5828                           	callstack 0
  5829   0014C4  FFFF               	dw	65535	; assembler added errata NOP
  5830   0014C6                     
  5831                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 33:  INTCON3bits.INT2IF=0;
  5832   0014C6  92F0               	bcf	240,1,c	;volatile
  5833   0014C8  0012               	return		;funcret
  5834   0014CA  FFFF               	dw	65535	; errata NOP
  5835   0014CC                     __end_ofi2_INT2_ISR:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function i2_INT1_ISR *****************
  5839 ;; Defined at:
  5840 ;;		line 27 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		None
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5854 ;;      Params:         0       0       0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0
  5857 ;;      Totals:         0       0       0       0       0       0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_InterruptManager
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text26
  5868   0014CC                     __ptext26:
  5869                           	callstack 0
  5870   0014CC                     i2_INT1_ISR:
  5871                           	callstack 0
  5872   0014CC  FFFF               	dw	65535	; assembler added errata NOP
  5873   0014CE                     
  5874                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 28:  INTCON3bits.INT1IF=0;
  5875   0014CE  90F0               	bcf	240,0,c	;volatile
  5876   0014D0  0012               	return		;funcret
  5877   0014D2  FFFF               	dw	65535	; errata NOP
  5878   0014D4                     __end_ofi2_INT1_ISR:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function i2_INT0_ISR *****************
  5882 ;; Defined at:
  5883 ;;		line 22 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		None
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5897 ;;      Params:         0       0       0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0
  5900 ;;      Totals:         0       0       0       0       0       0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_InterruptManager
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text27
  5911   0014D4                     __ptext27:
  5912                           	callstack 0
  5913   0014D4                     i2_INT0_ISR:
  5914                           	callstack 0
  5915   0014D4  FFFF               	dw	65535	; assembler added errata NOP
  5916   0014D6                     
  5917                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 23:  INTCONbits.INT0IF=0;
  5918   0014D6  92F2               	bcf	242,1,c	;volatile
  5919   0014D8  0012               	return		;funcret
  5920   0014DA  FFFF               	dw	65535	; errata NOP
  5921   0014DC                     __end_ofi2_INT0_ISR:
  5922                           	callstack 0
  5923                           
  5924                           	psect	rparam
  5925   000001                     ___rparam_used  equ	1
  5926   000000                     ___param_bank   equ	0
  5927   000000                     __Lparam        equ	__Lrparam
  5928   000000                     __Hparam        equ	__Hrparam
  5929                           
  5930                           	psect	temp
  5931   00007A                     btemp:
  5932                           	callstack 0
  5933   00007A                     	ds	1
  5934   00007A                     int$flags       set	btemp
  5935   00007B                     wtemp8          set	btemp+1
  5936   00007B                     ttemp5          set	btemp+1
  5937   00007E                     ttemp6          set	btemp+4
  5938   000082                     ttemp7          set	btemp+8
  5939                           
  5940                           	psect	config
  5941                           
  5942                           ; Padding undefined space
  5943   300000                     	org	3145728
  5944   300000  FF                 	db	255
  5945                           
  5946                           ;Config register CONFIG1H @ 0x300001
  5947                           ;	Oscillator Selection bits
  5948                           ;	OSC = HS, HS oscillator
  5949                           ;	Oscillator System Clock Switch Enable bit
  5950                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  5951   300001                     	org	3145729
  5952   300001  22                 	db	34
  5953                           
  5954                           ;Config register CONFIG2L @ 0x300002
  5955                           ;	Power-up Timer Enable bit
  5956                           ;	PWRT = OFF, PWRT disabled
  5957                           ;	Brown-out Reset Enable bit
  5958                           ;	BOR = OFF, Brown-out Reset disabled
  5959                           ;	Brown-out Reset Voltage bits
  5960                           ;	BORV = 20, VBOR set to 2.0V
  5961   300002                     	org	3145730
  5962   300002  0D                 	db	13
  5963                           
  5964                           ;Config register CONFIG2H @ 0x300003
  5965                           ;	Watchdog Timer Enable bit
  5966                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5967                           ;	Watchdog Timer Postscale Select bits
  5968                           ;	WDTPS = 128, 1:128
  5969   300003                     	org	3145731
  5970   300003  0E                 	db	14
  5971                           
  5972                           ; Padding undefined space
  5973   300004                     	org	3145732
  5974   300004  FF                 	db	255
  5975                           
  5976                           ;Config register CONFIG3H @ 0x300005
  5977                           ;	CCP2 Mux bit
  5978                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  5979   300005                     	org	3145733
  5980   300005  01                 	db	1
  5981                           
  5982                           ;Config register CONFIG4L @ 0x300006
  5983                           ;	Stack Full/Underflow Reset Enable bit
  5984                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  5985                           ;	Low Voltage ICSP Enable bit
  5986                           ;	LVP = OFF, Low Voltage ICSP disabled
  5987                           ;	Background Debugger Enable bit
  5988                           ;	DEBUG = 0x1, unprogrammed default
  5989   300006                     	org	3145734
  5990   300006  81                 	db	129
  5991                           
  5992                           ; Padding undefined space
  5993   300007                     	org	3145735
  5994   300007  FF                 	db	255
  5995                           
  5996                           ;Config register CONFIG5L @ 0x300008
  5997                           ;	Code Protection bit
  5998                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  5999                           ;	Code Protection bit
  6000                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  6001                           ;	Code Protection bit
  6002                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  6003                           ;	Code Protection bit
  6004                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  6005   300008                     	org	3145736
  6006   300008  0F                 	db	15
  6007                           
  6008                           ;Config register CONFIG5H @ 0x300009
  6009                           ;	Boot Block Code Protection bit
  6010                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  6011                           ;	Data EEPROM Code Protection bit
  6012                           ;	CPD = OFF, Data EEPROM not code protected
  6013   300009                     	org	3145737
  6014   300009  C0                 	db	192
  6015                           
  6016                           ;Config register CONFIG6L @ 0x30000A
  6017                           ;	Write Protection bit
  6018                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  6019                           ;	Write Protection bit
  6020                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  6021                           ;	Write Protection bit
  6022                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  6023                           ;	Write Protection bit
  6024                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  6025   30000A                     	org	3145738
  6026   30000A  0F                 	db	15
  6027                           
  6028                           ;Config register CONFIG6H @ 0x30000B
  6029                           ;	Configuration Register Write Protection bit
  6030                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  6031                           ;	Boot Block Write Protection bit
  6032                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  6033                           ;	Data EEPROM Write Protection bit
  6034                           ;	WRTD = OFF, Data EEPROM not write protected
  6035   30000B                     	org	3145739
  6036   30000B  E0                 	db	224
  6037                           
  6038                           ;Config register CONFIG7L @ 0x30000C
  6039                           ;	Table Read Protection bit
  6040                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  6041                           ;	Table Read Protection bit
  6042                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  6043                           ;	Table Read Protection bit
  6044                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  6045                           ;	Table Read Protection bit
  6046                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  6047   30000C                     	org	3145740
  6048   30000C  0F                 	db	15
  6049                           
  6050                           ;Config register CONFIG7H @ 0x30000D
  6051                           ;	Boot Block Table Read Protection bit
  6052                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  6053   30000D                     	org	3145741
  6054   30000D  40                 	db	64
  6055                           tosu	equ	0xFFF
  6056                           tosh	equ	0xFFE
  6057                           tosl	equ	0xFFD
  6058                           stkptr	equ	0xFFC
  6059                           pclatu	equ	0xFFB
  6060                           pclath	equ	0xFFA
  6061                           pcl	equ	0xFF9
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           indf0	equ	0xFEF
  6069                           postinc0	equ	0xFEE
  6070                           postdec0	equ	0xFED
  6071                           preinc0	equ	0xFEC
  6072                           plusw0	equ	0xFEB
  6073                           fsr0h	equ	0xFEA
  6074                           fsr0l	equ	0xFE9
  6075                           wreg	equ	0xFE8
  6076                           indf1	equ	0xFE7
  6077                           postinc1	equ	0xFE6
  6078                           postdec1	equ	0xFE5
  6079                           preinc1	equ	0xFE4
  6080                           plusw1	equ	0xFE3
  6081                           fsr1h	equ	0xFE2
  6082                           fsr1l	equ	0xFE1
  6083                           bsr	equ	0xFE0
  6084                           indf2	equ	0xFDF
  6085                           postinc2	equ	0xFDE
  6086                           postdec2	equ	0xFDD
  6087                           preinc2	equ	0xFDC
  6088                           plusw2	equ	0xFDB
  6089                           fsr2h	equ	0xFDA
  6090                           fsr2l	equ	0xFD9
  6091                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        89
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16     121
    BANK0           128      3      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    first_int$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    first_int$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(BANK0[1]), LED_toggle@pin_local(COMRAM[1]), 
		 -> relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), second_int(COMRAM[5]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), second_int(COMRAM[5]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(BANK0[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    INT0_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_check_access@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_clear_flag@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_disable@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_edge_initialize@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_edge_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_enable@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_enable@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_get_index@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_get_index@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_initialize@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_priority_initialize@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_priority_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_INTx_set_callback_routine@lint	PTR const struct . size(1) Largest target is 5
		 -> second_int(COMRAM[5]), 

    INT_INTx_set_callback_routine@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_check_access@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_check_access@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_enable@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_enable@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_initialize@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_initialize@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_priority_initialize@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_priority_initialize@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_set_callback_routine@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT_RBx_set_callback_routine@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LED_on@led	PTR struct . size(1) Largest target is 1
		 -> LED_NOK(COMRAM[1]), LED_OK(COMRAM[1]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    RB4_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1077$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1130$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1130$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2207$buffer	PTR unsigned char  size(2) Largest target is 0

    S2207$source	PTR const unsigned char  size(2) Largest target is 0

    second_int$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_INT_INTx_initialize
    _LED_on->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _INT_INTx_initialize->_GPIO_pin_direction_initialize
    _INT_INTx_set_callback_routine->_INT_INTx_get_index
    _INT_INTx_priority_initialize->_INT_INTx_get_index
    _INT_INTx_enable->_INT_INTx_get_index
    _INT_INTx_edge_initialize->_INT_INTx_get_index
    _INT_INTx_disable->_INT_INTx_get_index
    _INT_INTx_clear_flag->_INT_INTx_get_index
    _GPIO_pin_direction_initialize->_GPIO_check_access

Critical Paths under _InterruptManagerLow in COMRAM

    _InterruptManagerLow->_RB5_ISR
    _InterruptManagerLow->_RB6_ISR
    _InterruptManagerLow->_RB7_ISR

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->i2_RB5_ISR
    _InterruptManager->i2_RB6_ISR
    _InterruptManager->i2_RB7_ISR

Critical Paths under _main in BANK0

    _main->_LED_on

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4573
                _INT_INTx_initialize
                             _LED_on
 ---------------------------------------------------------------------------------
 (1) _LED_on                                               4     3      1    1411
                                              0 BANK0      3     2      1
                  _GPIO_check_access
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_write_logic                                 8     6      2     770
                                              8 COMRAM     8     6      2
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (1) _INT_INTx_initialize                                  3     2      1    3159
                                             15 COMRAM     1     0      1
                                              0 BANK0      2     2      0
      _GPIO_pin_direction_initialize
              _INT_INTx_check_access
                _INT_INTx_clear_flag
                   _INT_INTx_disable
           _INT_INTx_edge_initialize
                    _INT_INTx_enable
       _INT_INTx_priority_initialize
      _INT_INTx_set_callback_routine
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_set_callback_routine                        5     4      1     395
                                              7 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_priority_initialize                         5     4      1     339
                                              7 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_enable                                      5     4      1     333
                                              7 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_edge_initialize                             5     4      1     373
                                              7 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_disable                                     5     4      1     271
                                              7 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_clear_flag                                  5     4      1     271
                                              7 COMRAM     5     4      1
                 _INT_INTx_get_index
 ---------------------------------------------------------------------------------
 (3) _INT_INTx_get_index                                   2     1      1     129
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _INT_INTx_check_access                                2     1      1     195
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_direction_initialize                        7     6      1     623
                                              8 COMRAM     7     6      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (3) _GPIO_check_access                                    3     2      1     382
                                              5 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManagerLow                                  3     3      0      45
                                              2 COMRAM     3     3      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManager                                     0     0      0      66
                         i2_INT0_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
 ---------------------------------------------------------------------------------
 (7) i2_RB7_ISR                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_RB6_ISR                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_RB5_ISR                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_INT2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_INT1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_INT0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_INTx_initialize
     _GPIO_pin_direction_initialize
       _GPIO_check_access
     _INT_INTx_check_access
     _INT_INTx_clear_flag
       _INT_INTx_get_index
     _INT_INTx_disable
       _INT_INTx_get_index
     _INT_INTx_edge_initialize
       _INT_INTx_get_index
     _INT_INTx_enable
       _INT_INTx_get_index
     _INT_INTx_priority_initialize
       _INT_INTx_get_index
     _INT_INTx_set_callback_routine
       _INT_INTx_get_index
   _LED_on
     _GPIO_check_access
     _GPIO_pin_write_logic
       _GPIO_check_access

 _InterruptManagerLow (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManager (ROOT)
   i2_INT0_ISR
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      3      23     18.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     16     121     96.0%
STACK                0      0       0      0.0%
DATA                 0      0     144      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 20:11:28 2025

                                         ??_InterruptManager 006B  
                                                          _i 0038  
                                                          _j 0060  
                                            LED_toggle@F2885 0065  
                                                         bsr 0FE0  
                                      ??_InterruptManagerLow 006C  
                                 __end_of_INT_INTx_get_index 1386  
                                                        l312 117E  
                                                        l318 11F6  
                                                        l514 0E1A  
                                                        l482 0AD4  
                                                        l474 0ACC  
                                                        l722 0F1E  
                                                        l731 0F38  
                                                        l740 0FD2  
                                                        l812 10A4  
                                                        l662 0B12  
                                                        l735 0F62  
                                                        l760 08A2  
                                                        l680 0EB2  
                                                        l664 0B08  
                                                        l497 0D08  
                                                        l737 0F6A  
                                                        l729 0F30  
                                                        l665 0BEA  
                                                        l850 1332  
                                                        l674 0E50  
                                                        l691 1236  
                                                        l771 092A  
                                                        l683 0EF8  
                                                        l692 123E  
                                                        l676 0E5A  
                                                        l668 0BF0  
                                                        l773 0932  
                                                        l765 08E2  
                                                        l677 0E82  
                                                        l782 12BA  
                                                        l694 1284  
                                                        l758 089A  
                                                        l855 1382  
                                                        l767 08EA  
                                                        l679 0E8A  
                                                        l792 1154  
                                                        l784 12C2  
                                                        l776 09B0  
                                                        l793 115C  
                                                        l785 12CA  
                                                        l689 122E  
                                                        l787 1310  
                                                        l972 145E  
                              ?_INT_INTx_priority_initialize 0071  
                                                        wreg 0FE8  
                                            _RB7_handler_low 0048  
                                      relay_initialize@F2865 0064  
                                INT_INTx_edge_initialize@ind 0074  
                                INT_INTx_edge_initialize@ret 0075  
                                            __end_of_RB5_ISR 1494  
                                            __end_of_RB6_ISR 148C  
                                            __end_of_RB7_ISR 1484  
                                                       l5001 08F2  
                                                       l5011 09AC  
                                                       l5005 093A  
                                                       l5031 0E20  
                                                       l5009 0972  
                                                       l5041 0E7C  
                                                       l5033 0E24  
                                                       l5201 0B18  
                                                       l6011 08CA  
                                                       l5043 0E8E  
                                                       l5051 0EF4  
                                                       l5035 0E38  
                                                       l5211 0BA6  
                                                       l5203 0B34  
                                                       l6003 0DFE  
                                                       l6021 12EC  
                                                       l6013 0912  
                                                       l5045 0EAC  
                                                       l5037 0E40  
                                                       l6005 1080  
                                                       l5213 0BC2  
                                                       l5205 0B50  
                                                       l6015 095A  
                                                       l5039 0E5E  
                                                       l6007 0FAE  
                                                       l5215 0BDE  
                                                       l5207 0B6E  
                                                       l6017 098C  
                                                       l6009 0ED4  
                                                       l5049 0EBA  
                                                       l5209 0B8A  
                                                       l5217 0BE4  
                                                       l6019 1260  
                                                       l5171 1184  
                                                       l4701 0AD0  
                                                       l5173 11BA  
                                                       l5175 11BC  
                                                       l5167 1162  
                                                       l4721 132A  
                                                       l5177 11CE  
                                                       l5169 1178  
                                                       l4723 133A  
                                                       l4731 137E  
                                                       l5179 11EA  
                                                       l4725 1344  
                                                       l4717 1316  
                                                       l4901 1280  
                                                       l5197 0ADA  
                                                       l4741 0D36  
                                                       l4719 1316  
                                                       l4911 128E  
                                                       l5199 0AEE  
                                                       l4743 0D92  
                                                       l4735 0D0E  
                                                       l4761 0C1E  
                                                       l4729 134E  
                                                       l4921 130C  
                                                       l4913 12A2  
                                                       l4745 0DE8  
                                                       l4737 0D12  
                                                       l4691 0A2C  
                                                       l4683 09B6  
                                                       l4763 0C7A  
                                                       l4755 0BF6  
                                                       l4915 12AA  
                                                       l4931 0FDC  
                                                       l4747 0E16  
                                                       l4739 0D2E  
                                                       l4693 0A4A  
                                                       l4685 09CE  
                                                       l4765 0CD0  
                                                       l4757 0BFA  
                                                       l4909 128A  
                                                       l4941 102A  
                                                       l4933 0FF0  
                                                       l4695 0A66  
                                                       l4687 09EC  
                                                       l4767 0D04  
                                                       l4759 0C16  
                                                       l4919 12D2  
                                                       l4943 103E  
                                                       l4951 10A0  
                                                       l4935 0FF8  
                                                       l4697 0A8A  
                                                       l4689 0A0C  
                                                       l4881 110A  
                                                       l4961 0F02  
                                                       l4945 1052  
                                                       l4929 0FD8  
                                                       l4699 0AAA  
                                                       l4883 1130  
                                                       l4875 10AA  
                                                       l4891 1202  
                                                       l4963 0F16  
                                                       l4939 101A  
                                                       l4885 1158  
                                                       l4877 10C2  
                                                       l4893 1216  
                                                       l4973 0F72  
                                                       l4965 0F22  
                                                       l4949 1066  
                                                       l4879 10E4  
                                                       l4895 121E  
                                                       l4991 0882  
                                                       l4959 0EFE  
                                                       l5791 1426  
                                                       l4889 11FE  
                                                       l4993 088A  
                                                       l4969 0F40  
                                                       l4977 0F94  
                                                       l5793 1444  
                                                       l4899 1246  
                                                       l4987 086A  
                                                       l4979 0FCE  
                                                       l5795 1452  
                                                       l4997 08AA  
                                                       l4989 086E  
                                                       l5789 1426  
                                                       STR_1 0611  
                                                       _LCD1 0080  
                                                       _LATA 0F89  
                                                       _LATB 0F8A  
                                                       _LATC 0F8B  
                                                       _LATD 0F8C  
                                                       _LATE 0F8D  
                                                       u5100 0B4E  
                                                       u5020 1176  
                                                       u5101 0B48  
                                                       u5021 1170  
                                                       u5110 0B6C  
                                                       u5111 0B66  
                                                       u4400 09CC  
                                                       u5120 0B88  
                                                       u5040 11E8  
                                                       u4401 09C6  
                                                       u5121 0B82  
                                                       u5041 11E2  
                                                       u4410 09EA  
                                                       u5130 0BA4  
                                                       u4411 09E4  
                                                       u5131 0B9E  
                                                       u5035 11CA  
                                                       u4420 0A0C  
                                                       u4500 1328  
                                                       u5140 0BC0  
                                                       u4421 0A06  
                                                       u4501 1322  
                                                       u5141 0BBA  
                                                       u5037 11CE  
                                                       u4430 0A2A  
                                                       u5150 0BDC  
                                                       u5070 0AEC  
                                                       u4510 0D2C  
                                                       _RB4f 003D  
                                                       u4431 0A24  
                                                       u5151 0BD6  
                                                       u5071 0AE6  
                                                       u4511 0D26  
                                                       u4440 0A48  
                                                       u5080 0B08  
                                                       _RB5f 003C  
                                                       u4441 0A42  
                                                       u5081 0B02  
                                                       u4450 0A66  
                                                       u5090 0B32  
                                                       _RB6f 003B  
                                                       u4451 0A60  
                                                       u5091 0B2C  
                                                       u4460 0A8A  
                                                       u4540 0C14  
                                                       u4524 0D58  
                                                       _RB7f 003A  
                                                       u4461 0A84  
                                                       u4541 0C0E  
                                                       u4525 0D52  
                                                       u4470 0AA8  
                                                       u4534 0DB4  
                                                       u4471 0AA2  
                                                       u4535 0DAE  
                                                       u4480 0ACC  
                                                       u4720 10C0  
                                                       u4800 1014  
                                                       u4481 0AC6  
                                                       u4721 10BA  
                                                       u4801 100E  
                                                       u4570 0CEA  
                                                       u4554 0C40  
                                                       u4730 10E2  
                                                       u4810 0F14  
                                                       u4571 0CE2  
                                                       u4555 0C3A  
                                                       u4731 10DC  
                                                       u4811 0F0E  
                                                       u4564 0C9C  
                                                       u4740 1108  
                                                       u4820 0880  
                                                       u4565 0C96  
                                                       u4741 1102  
                                                       u4821 087A  
                                                       u4750 112E  
                                                       u4830 0E36  
                                                       u4751 1128  
                                                       u4831 0E30  
                                                       u4576 0CEE  
                                                       u4760 1154  
                                                       u4840 0E7A  
                                                       u4761 114E  
                                                       u4841 0E74  
                                                       u4770 1214  
                                                       u4850 0EAA  
                                                       u4771 120E  
                                                       u4851 0EA4  
                                                       u4780 12A0  
                                                       u4781 129A  
                                                       u4790 0FEE  
                                                       u4791 0FE8  
                                                       u5970 1442  
                                                       u5971 143C  
                                                       _btn1 0031  
                                                       _btn2 002E  
                                                ?i2_INT0_ISR 006A  
                                                       _main 1426  
                                                ?i2_INT1_ISR 006A  
                                                ?i2_INT2_ISR 006A  
                                                       _knum 005F  
                                                       _prev 005E  
                                                       fsr2h 0FDA  
                                                       indf2 0FDF  
                                                       fsr1l 0FE1  
                                                       fsr2l 0FD9  
                                                       btemp 007A  
                                                       prodl 0FF3  
                                           _RB7_handler_high 004A  
                                                       start 0284  
                                   __end_of_INT_INTx_disable 1288  
                                       _GPIO_pin_write_logic 0D0C  
                                               ___param_bank 0000  
                                      INT_INTx_get_index@ind 0070  
                                           __end_of_INT0_ISR 14AC  
                                           __end_of_INT1_ISR 14A4  
                                           __end_of_INT2_ISR 149C  
                                  INT_INTx_check_access@lint 006F  
                           __end_of_INT_INTx_edge_initialize 09B4  
                                __end_of_INT_INTx_initialize 0BF4  
                                                      ?_main 006A  
                                             __LAT_registers 000B  
                                                      i1l623 14A8  
                                                      i1l631 1498  
                                                      i1l627 14A0  
                                                      i1l652 1488  
                                                      i1l645 1490  
                                                      i1l920 00FC  
                                                      i1l930 01D0  
                                                      i1l659 1480  
                                                      i1l923 0132  
                                                      i1l933 0206  
                                                      i1l925 0166  
                                                      i2l623 14D8  
                                                      i2l631 14C8  
                                                      i1l935 023A  
                                                      i1l919 00CA  
                                                      i1l928 019C  
                                                      i1l938 0270  
                                                      i2l627 14D0  
                                                      i1l939 0270  
                                                      i2l652 14B8  
                                                      i2l645 14C0  
                                                      i2l901 07C0  
                                                      i2l910 0860  
                                                      i2l904 07F6  
                                                      i2l906 082A  
                                                      i2l659 14B0  
                                                      i2l909 0860  
                                                      i2l890 06BA  
                                                      i2l891 06EC  
                                                      i2l894 0722  
                                                      i2l896 0756  
                                                      i2l899 078C  
                                        relay_turn_off@F2875 0062  
                                                      _PORTA 0F80  
                                                      _PORTB 0F81  
                                                      _PORTC 0F82  
                                                      _PORTD 0F83  
                                                      _PORTE 0F84  
                                                      _TRISA 0F92  
                                                      _TRISB 0F93  
                                                      _TRISC 0F94  
                                                      _TRISD 0F95  
                                                      _TRISE 0F96  
                                                      _Iflag 0061  
                                                      _errno 0046  
                                                      tablat 0FF5  
                            ??_INT_INTx_set_callback_routine 0072  
                                                      ttemp5 007B  
                                                      ttemp6 007E  
                                                      ttemp7 0082  
                                                      status 0FD8  
                                                      wtemp8 007B  
                                      ?_GPIO_pin_write_logic 0072  
                                            __initialization 1386  
                                                LED_on@F2875 0067  
                                               __end_of_main 1468  
                                     INT_INTx_get_index@lint 006F  
                                                     ??_main 007A  
                                              __activetblptr 0002  
                                                  ??_RB5_ISR 006B  
                                                  ??_RB6_ISR 006B  
                                                  ??_RB7_ISR 006B  
                                          ??_INT_INTx_enable 0072  
                             ??_INT_INTx_priority_initialize 0072  
                                                     i1l2251 14A6  
                                                     i1l3301 00DC  
                                                     _LED_OK 0069  
                                                     i1l2255 149E  
                                                     i1l2263 148E  
                                                     i1l3311 0128  
                                                     i1l3303 00F0  
                                                     i1l2273 1486  
                                                     i1l3321 017A  
                                                     i1l3313 0132  
                                                     i1l3305 00F2  
                                                     i1l2259 1496  
                                                     i1l2283 147E  
                                                     i1l3331 01C4  
                                                     i1l3323 018E  
                                                     i1l3315 0146  
                                                     i1l3307 0110  
                                                     i1l3341 0206  
                                                     i1l3333 01C6  
                                                     i1l3325 0192  
                                                     i1l3317 015A  
                                                     i1l3309 0124  
                                                     i1l3351 0262  
                                                     i1l3343 021A  
                                                     i1l3335 01E4  
                                                     i1l3327 019C  
                                                     i1l3319 015C  
                                                     i1l3353 0266  
                                                     i1l3345 022E  
                                                     i1l3337 01F8  
                                                     i1l3329 01B0  
                                                     i1l3281 003A  
                                                     i1l3347 0230  
                                                     i1l3339 01FC  
                                                     i1l3291 007A  
                                                     i1l3283 004C  
                                                     i1l3349 024E  
                                                     i1l3293 008E  
                                                     i1l3285 0050  
                                                     i1l3295 00A0  
                                                     i1l3287 0064  
                                                     i1l3279 0028  
                                                     i1l3297 00A4  
                                                     i1l3289 0076  
                                                     i1l3299 00B8  
                                                     i2l2331 14D6  
                                                     i2l2335 14CE  
                                                     i2l2339 14C6  
                                                     i2l4601 078C  
                                                     i2l4611 07E8  
                                                     i2l4603 07A0  
                                                     i2l4621 0820  
                                                     i2l4613 07EC  
                                                     i2l4605 07B4  
                                                     i2l4623 083E  
                                                     i2l4615 07F6  
                                                     i2l4607 07B6  
                                          __end_ofi2_RB5_ISR 14C4  
                                                     i2l4625 0852  
                                                     i2l4617 080A  
                                                     i2l4609 07D4  
                                                     i2l4561 0654  
                                                     i2l4553 0618  
                                                     i2l4627 0856  
                                                     i2l4619 081E  
                                                     i2l4571 0694  
                                                     i2l4563 0666  
                                                     i2l4555 062A  
                                                     i2l4581 0700  
                                                     i2l4573 06A8  
                                                     i2l4565 066A  
                                                     i2l4557 063C  
                                                     i2l4591 074A  
                                                     i2l4583 0714  
                                                     i2l4575 06CC  
                                                     i2l4567 067E  
                                                     i2l4559 0640  
                                                     i2l4593 074C  
                                                     i2l4585 0718  
                                                     i2l4577 06E0  
                                                     i2l4569 0690  
                                                     i2l3955 14BE  
                                                     i2l4595 076A  
                                                     i2l4587 0722  
                                                     i2l4579 06E2  
                                                     i2l3965 14B6  
                                                     i2l4597 077E  
                                                     i2l4589 0736  
                                                     i2l3975 14AE  
                                                     i2l4599 0782  
                                          __end_ofi2_RB6_ISR 14BC  
                                          __end_ofi2_RB7_ISR 14B4  
                                                     _LED_on 1160  
                                                     clear_0 13CC  
                                                     _relay1 003F  
                                                     _motor1 0036  
                                                     _motor2 0034  
                                                     isa$std 0001  
                                               __pdataCOMRAM 0001  
                                   _INT_INTx_edge_initialize 0868  
                                               __mediumconst 0600  
                                                     tblptrh 0FF7  
                                                     tblptrl 0FF6  
                                                     tblptru 0FF8  
                                         INT_INTx_enable@ind 0074  
                                         INT_INTx_enable@ret 0075  
                                    INT_INTx_clear_flag@lint 0071  
                                   INT_INTx_check_access@ret 0070  
                                                 __accesstop 0080  
                                    __end_of__initialization 13D2  
                                     ??_GPIO_pin_write_logic 0074  
                                                  ?_INT0_ISR 006A  
                                                  ?_INT1_ISR 006A  
                                                  ?_INT2_ISR 006A  
                                      _INT_INTx_check_access 10A8  
                                              ___rparam_used 0001  
                      __end_of_INT_INTx_set_callback_routine 10A8  
                              _INT_INTx_set_callback_routine 0FD6  
                                                  RB5_ISR@fl 006B  
                                             __pcstackCOMRAM 006A  
                                                  RB6_ISR@fl 006B  
                                               __pidataBANK0 1468  
                                                  RB7_ISR@fl 006B  
                            ??_GPIO_pin_direction_initialize 0073  
                   GPIO_pin_direction_initialize@_pin_config 0072  
                                                  LED_on@led 0094  
                                            __PORT_registers 0001  
                                               LED_off@F2880 0066  
                                         _INT_INTx_get_index 1314  
                                                    ?_LED_on 0094  
                                               ??i2_INT0_ISR 006A  
                                               ??i2_INT1_ISR 006A  
                                                 ??_INT0_ISR 006B  
                                               ??i2_INT2_ISR 006A  
                                                 ??_INT1_ISR 006B  
                                                 ??_INT2_ISR 006B  
                                        ?_INT_INTx_get_index 006F  
                                          ?_INT_INTx_disable 0071  
                                __end_of_InterruptManagerLow 0284  
                                         ??_INT_INTx_disable 0072  
                            INT_INTx_priority_initialize@ind 0074  
                            INT_INTx_priority_initialize@ret 0075  
                                       ??_INT_INTx_get_index 0070  
                                                    _LED_NOK 0045  
                                                    _RB5_ISR 148C  
                                                    _RB6_ISR 1484  
                                                    _RB7_ISR 147C  
                                         __end_ofi2_INT0_ISR 14DC  
                                         __end_ofi2_INT1_ISR 14D4  
                                         __end_ofi2_INT2_ISR 14CC  
                                   _INT_INTx_initialize$1352 0094  
                                     ?_INT_INTx_check_access 006F  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                               __psmallconst 0600  
                                            _INT_INTx_enable 0E1E  
                             ?_INT_INTx_set_callback_routine 0071  
                                                    __pcinit 1386  
                                                    __ramtop 0600  
                                                    __ptext0 1426  
                                                    __ptext1 1160  
                                                    __ptext2 0D0C  
                                                    __ptext3 0AD8  
                                                    __ptext4 0FD6  
                                                    __ptext5 0EFC  
                                                    __ptext6 0E1E  
                                                    __ptext7 0868  
                                                    __ptext8 11FC  
                                                    __ptext9 1288  
                                                    _led_arr 002A  
                      __end_of_GPIO_pin_direction_initialize 0D0C  
                              _GPIO_pin_direction_initialize 0BF4  
                                                    _keypad1 008B  
                                            _keypad_elements 0601  
                                                    _testing 003E  
                                             __pintcode_body 0616  
                                       end_of_initialization 13D2  
                                                 _second_int 0040  
                                              __Lmediumconst 0000  
                                                    int_func 0616  
                                                  i2_RB5_ISR 14BC  
                                                  i2_RB6_ISR 14B4  
                                                  i2_RB7_ISR 14AC  
                                                    postdec1 0FE5  
                                                    postdec2 0FDD  
                                                    postinc0 0FEE  
                                                    postinc2 0FDE  
                                 ??_INT_INTx_edge_initialize 0072  
                                        INT_INTx_enable@lint 0071  
                                                  _PORTBbits 0F81  
                                        INT_INTx_disable@ind 0074  
                                        INT_INTx_disable@ret 0075  
                                           _InterruptManager 0008  
                                             __end_of_LED_on 11FC  
                          INT_INTx_set_callback_routine@lint 0071  
                                                 ?i2_RB5_ISR 006A  
                                                 ?i2_RB6_ISR 006A  
                                                 ?i2_RB7_ISR 006A  
                                    __end_of_INT_INTx_enable 0EFC  
                                    GPIO_pin_write_logic@ret 0079  
                                         relay_turn_on@F2870 0063  
                                    __end_of_keypad_elements 0611  
                                              __pidataCOMRAM 13E0  
                                               _INT0_handler 005C  
                                               _INT1_handler 005A  
                                        start_initialization 1386  
                                               _INT2_handler 0058  
                                       GPIO_check_access@ret 0071  
                             ?_GPIO_pin_direction_initialize 0072  
                                            LED_on@pin_local 0096  
                                                   ??_LED_on 0095  
                                        _INT_INTx_clear_flag 1288  
                                                __pdataBANK0 0080  
                                       ?_INT_INTx_clear_flag 0071  
                                     INT_INTx_clear_flag@ind 0074  
                                     INT_INTx_clear_flag@ret 0075  
                                                   ?_RB5_ISR 006A  
                                                   ?_RB6_ISR 006A  
                                                   ?_RB7_ISR 006A  
                                                __pbssCOMRAM 0046  
                                              __pcstackBANK0 0094  
                                    ??_INT_INTx_check_access 0070  
                                           _RB4_handler_high 0056  
                                                ??i2_RB5_ISR 006A  
                                                ??i2_RB6_ISR 006A  
                                                ??i2_RB7_ISR 006A  
                               INT_INTx_edge_initialize@lint 0071  
                                           ?_INT_INTx_enable 0071  
                                        _INT_INTx_initialize 0AD8  
                                                i2RB5_ISR@fl 006A  
                                                  __pintcode 0008  
                                                i2RB6_ISR@fl 006A  
                            GPIO_pin_write_logic@_pin_config 0072  
                                                i2RB7_ISR@fl 006A  
                                      ??_INT_INTx_clear_flag 0072  
                                                __pintcodelo 0018  
                                        LED_initialize@F2870 0068  
                           INT_INTx_priority_initialize@lint 0071  
                                                __smallconst 0600  
                                                  _first_int 001F  
                                       ?_INT_INTx_initialize 0079  
                                  GPIO_pin_write_logic@logic 0073  
                                            __TRIS_registers 0015  
                                                   _INT0_ISR 14A4  
                                                   _INT1_ISR 149C  
                                                   _INT2_ISR 1494  
                                   __end_of_InterruptManager 0868  
                                                   i1u240_20 00C8  
                                                   i1u240_21 00C2  
                                                   i1u241_20 00DA  
                                                   i1u233_20 0038  
                                                   i1u241_21 00D4  
                                                   i1u233_21 0032  
                                                   i1u250_20 01C2  
                                                   i1u242_20 00EE  
                                                   i1u234_20 004A  
                                                   i1u250_21 01BC  
                                                   i1u242_21 00E8  
                                                   i1u234_21 0044  
                                                   i1u251_20 01E2  
                                                   i1u243_20 010E  
                                                   i1u235_20 0062  
                                                   i1u251_21 01DC  
                                                   i1u243_21 0108  
                                                   i1u235_21 005C  
                                                   i1u252_20 01F6  
                                                   i1u244_20 0122  
                                                   i1u236_20 0074  
                                                   i1u252_21 01F0  
                                                   i1u244_21 011C  
                                                   i1u236_21 006E  
                                                   i1u253_20 0218  
                                                   i1u245_20 0144  
                                                   i1u237_20 008C  
                                                   i1u253_21 0212  
                                                   i1u245_21 013E  
                                                   i1u237_21 0086  
                                                   i1u254_20 022C  
                                                   i1u246_20 0158  
                                                   i1u238_20 009E  
                                                   i1u254_21 0226  
                                                   i1u246_21 0152  
                                                   i1u238_21 0098  
                                                   i1u255_20 024C  
                                                   i1u247_20 0178  
                                                   i1u239_20 00B6  
                                                   i1u255_21 0246  
                                                   i1u247_21 0172  
                                                   i1u239_21 00B0  
                                                   i1u256_20 0260  
                                                   i1u248_20 018C  
                                                   i1u256_21 025A  
                                                   i1u248_21 0186  
                                                   i1u249_20 01AE  
                                                   i1u249_21 01A8  
                                                   i2u420_40 068E  
                                                   i2u420_41 0688  
                                                   i2u421_40 06A6  
                                                   i2u421_41 06A0  
                                                   i2u430_40 077C  
                                                   i2u422_40 06B8  
                                                   i2u430_41 0776  
                                                   i2u422_41 06B2  
                                                   i2u431_40 079E  
                                                   i2u423_40 06CA  
                                                   i2u415_40 0628  
                                                   i2u431_41 0798  
                                                   i2u423_41 06C4  
                                                   i2u415_41 0622  
                                                   i2u432_40 07B2  
                                                   i2u424_40 06DE  
                                                   i2u416_40 063A  
                                                   i2u432_41 07AC  
                                                   i2u424_41 06D8  
                                                   i2u416_41 0634  
                                                   i2u433_40 07D2  
                                                   i2u425_40 06FE  
                                                   i2u417_40 0652  
                                                   i2u433_41 07CC  
                                                   i2u425_41 06F8  
                                                   i2u417_41 064C  
                                                   i2u434_40 07E6  
                                                   i2u426_40 0712  
                                                   i2u418_40 0664  
                                                   i2u434_41 07E0  
                                                   i2u426_41 070C  
                                                   i2u418_41 065E  
                                                   i2u435_40 0808  
                                                   i2u427_40 0734  
                                                   i2u419_40 067C  
                                                   i2u435_41 0802  
                                                   i2u427_41 072E  
                                                   i2u419_41 0676  
                                                   i2u436_40 081C  
                                                   i2u428_40 0748  
                                                   i2u436_41 0816  
                                                   i2u428_41 0742  
                                                   i2u437_40 083C  
                                                   i2u429_40 0768  
                                                   i2u437_41 0836  
                                                   i2u429_41 0762  
                                                   i2u438_40 0850  
                                                   i2u438_41 084A  
                                                   _RCONbits 0FD0  
                           GPIO_pin_direction_initialize@ret 0078  
                                      ??_INT_INTx_initialize 007A  
                                                _INTCON2bits 0FF1  
                                                _INTCON3bits 0FF0  
                                                  copy_data0 139A  
                                                  copy_data1 13BA  
                                               _seg_units_en 0039  
                                           _RB5_handler_high 0052  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                          _GPIO_check_access 09B4  
                                         ?_GPIO_check_access 006F  
                                           _INT_INTx_disable 11FC  
                                            _RB4_handler_low 0054  
                                        ??_GPIO_check_access 0070  
                                                   __ptext10 1314  
                                                   __ptext11 10A8  
                                                   __ptext20 14A4  
                                                   __ptext12 0BF4  
                                                   __ptext13 09B4  
                                                   __ptext22 14AC  
                                                   __ptext23 14B4  
                                                   __ptext15 147C  
                                                   __ptext24 14BC  
                                                   __ptext16 1484  
                                                   __ptext25 14C4  
                                                   __ptext17 148C  
                                                   __ptext26 14CC  
                                                   __ptext18 1494  
                                                   __ptext27 14D4  
                                                   __ptext19 149C  
                                  ?_INT_INTx_edge_initialize 0071  
                                                   _segment1 0025  
                                                   isa$xinst 0000  
                                  __end_of_GPIO_check_access 0AD8  
                                                   int$flags 007A  
                               __end_of_GPIO_pin_write_logic 0E1E  
                                                 _INTCONbits 0FF2  
                                            _RB5_handler_low 0050  
                                                   intlevel1 14DC  
                                                   intlevel2 14DC  
                              __end_of_INT_INTx_check_access 1160  
                                        _InterruptManagerLow 0018  
                                                 i2_INT0_ISR 14D4  
                                                 i2_INT1_ISR 14CC  
                                                 i2_INT2_ISR 14C4  
                                           _RB6_handler_high 004E  
                                       ?_InterruptManagerLow 006A  
                       __end_of_INT_INTx_priority_initialize 0FD6  
                               _INT_INTx_priority_initialize 0EFC  
                                    INT_INTx_initialize@lint 0079  
                                            _RB6_handler_low 004C  
                           INT_INTx_set_callback_routine@ind 0074  
                           INT_INTx_set_callback_routine@ret 0075  
                                       INT_INTx_disable@lint 0071  
                                     INT_INTx_initialize@ret 0095  
                               GPIO_check_access@_pin_config 006F  
                                          ?_InterruptManager 006A  
                                __end_of_INT_INTx_clear_flag 1314  
