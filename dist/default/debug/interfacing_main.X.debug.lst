

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Jun  8 12:53:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 17/01/2025 GMT
    50                           ; 
    51                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F452 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000FE0                     bsr             equ	4064
    84   000FE9                     fsr0            equ	4073
    85   000FEA                     fsr0h           equ	4074
    86   000FE9                     fsr0l           equ	4073
    87   000FE1                     fsr1            equ	4065
    88   000FE2                     fsr1h           equ	4066
    89   000FE1                     fsr1l           equ	4065
    90   000FD9                     fsr2            equ	4057
    91   000FDA                     fsr2h           equ	4058
    92   000FD9                     fsr2l           equ	4057
    93   000FEF                     indf0           equ	4079
    94   000FE7                     indf1           equ	4071
    95   000FDF                     indf2           equ	4063
    96   000FF2                     intcon          equ	4082
    97   000000                     nvmcon          equ	0
    98   000FF9                     pcl             equ	4089
    99   000FFA                     pclath          equ	4090
   100   000FFB                     pclatu          equ	4091
   101   000FEB                     plusw0          equ	4075
   102   000FE3                     plusw1          equ	4067
   103   000FDB                     plusw2          equ	4059
   104   000FED                     postdec0        equ	4077
   105   000FE5                     postdec1        equ	4069
   106   000FDD                     postdec2        equ	4061
   107   000FEE                     postinc0        equ	4078
   108   000FE6                     postinc1        equ	4070
   109   000FDE                     postinc2        equ	4062
   110   000FEC                     preinc0         equ	4076
   111   000FE4                     preinc1         equ	4068
   112   000FDC                     preinc2         equ	4060
   113   000FF3                     prod            equ	4083
   114   000FF4                     prodh           equ	4084
   115   000FF3                     prodl           equ	4083
   116   000FD8                     status          equ	4056
   117   000FF5                     tablat          equ	4085
   118   000FF6                     tblptr          equ	4086
   119   000FF7                     tblptrh         equ	4087
   120   000FF6                     tblptrl         equ	4086
   121   000FF8                     tblptru         equ	4088
   122   000FFD                     tosl            equ	4093
   123   000FE8                     wreg            equ	4072
   124   000F80                     PORTA           equ	3968	;# 
   125   000F81                     PORTB           equ	3969	;# 
   126   000F82                     PORTC           equ	3970	;# 
   127   000F83                     PORTD           equ	3971	;# 
   128   000F84                     PORTE           equ	3972	;# 
   129   000F89                     LATA            equ	3977	;# 
   130   000F8A                     LATB            equ	3978	;# 
   131   000F8B                     LATC            equ	3979	;# 
   132   000F8C                     LATD            equ	3980	;# 
   133   000F8D                     LATE            equ	3981	;# 
   134   000F92                     TRISA           equ	3986	;# 
   135   000F92                     DDRA            equ	3986	;# 
   136   000F93                     TRISB           equ	3987	;# 
   137   000F93                     DDRB            equ	3987	;# 
   138   000F94                     TRISC           equ	3988	;# 
   139   000F94                     DDRC            equ	3988	;# 
   140   000F95                     TRISD           equ	3989	;# 
   141   000F95                     DDRD            equ	3989	;# 
   142   000F96                     TRISE           equ	3990	;# 
   143   000F96                     DDRE            equ	3990	;# 
   144   000F9D                     PIE1            equ	3997	;# 
   145   000F9E                     PIR1            equ	3998	;# 
   146   000F9F                     IPR1            equ	3999	;# 
   147   000FA0                     PIE2            equ	4000	;# 
   148   000FA1                     PIR2            equ	4001	;# 
   149   000FA2                     IPR2            equ	4002	;# 
   150   000FA6                     EECON1          equ	4006	;# 
   151   000FA7                     EECON2          equ	4007	;# 
   152   000FA8                     EEDATA          equ	4008	;# 
   153   000FA9                     EEADR           equ	4009	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB1                     T3CON           equ	4017	;# 
   165   000FB2                     TMR3            equ	4018	;# 
   166   000FB2                     TMR3L           equ	4018	;# 
   167   000FB3                     TMR3H           equ	4019	;# 
   168   000FBA                     CCP2CON         equ	4026	;# 
   169   000FBB                     CCPR2           equ	4027	;# 
   170   000FBB                     CCPR2L          equ	4027	;# 
   171   000FBC                     CCPR2H          equ	4028	;# 
   172   000FBD                     CCP1CON         equ	4029	;# 
   173   000FBE                     CCPR1           equ	4030	;# 
   174   000FBE                     CCPR1L          equ	4030	;# 
   175   000FBF                     CCPR1H          equ	4031	;# 
   176   000FC1                     ADCON1          equ	4033	;# 
   177   000FC2                     ADCON0          equ	4034	;# 
   178   000FC3                     ADRES           equ	4035	;# 
   179   000FC3                     ADRESL          equ	4035	;# 
   180   000FC4                     ADRESH          equ	4036	;# 
   181   000FC5                     SSPCON2         equ	4037	;# 
   182   000FC6                     SSPCON1         equ	4038	;# 
   183   000FC7                     SSPSTAT         equ	4039	;# 
   184   000FC8                     SSPADD          equ	4040	;# 
   185   000FC9                     SSPBUF          equ	4041	;# 
   186   000FCA                     T2CON           equ	4042	;# 
   187   000FCB                     PR2             equ	4043	;# 
   188   000FCB                     MEMCON          equ	4043	;# 
   189   000FCC                     TMR2            equ	4044	;# 
   190   000FCD                     T1CON           equ	4045	;# 
   191   000FCE                     TMR1            equ	4046	;# 
   192   000FCE                     TMR1L           equ	4046	;# 
   193   000FCF                     TMR1H           equ	4047	;# 
   194   000FD0                     RCON            equ	4048	;# 
   195   000FD1                     WDTCON          equ	4049	;# 
   196   000FD2                     LVDCON          equ	4050	;# 
   197   000FD3                     OSCCON          equ	4051	;# 
   198   000FD5                     T0CON           equ	4053	;# 
   199   000FD6                     TMR0            equ	4054	;# 
   200   000FD6                     TMR0L           equ	4054	;# 
   201   000FD7                     TMR0H           equ	4055	;# 
   202   000FD8                     STATUS          equ	4056	;# 
   203   000FD9                     FSR2            equ	4057	;# 
   204   000FD9                     FSR2L           equ	4057	;# 
   205   000FDA                     FSR2H           equ	4058	;# 
   206   000FDB                     PLUSW2          equ	4059	;# 
   207   000FDC                     PREINC2         equ	4060	;# 
   208   000FDD                     POSTDEC2        equ	4061	;# 
   209   000FDE                     POSTINC2        equ	4062	;# 
   210   000FDF                     INDF2           equ	4063	;# 
   211   000FE0                     BSR             equ	4064	;# 
   212   000FE1                     FSR1            equ	4065	;# 
   213   000FE1                     FSR1L           equ	4065	;# 
   214   000FE2                     FSR1H           equ	4066	;# 
   215   000FE3                     PLUSW1          equ	4067	;# 
   216   000FE4                     PREINC1         equ	4068	;# 
   217   000FE5                     POSTDEC1        equ	4069	;# 
   218   000FE6                     POSTINC1        equ	4070	;# 
   219   000FE7                     INDF1           equ	4071	;# 
   220   000FE8                     WREG            equ	4072	;# 
   221   000FE9                     FSR0            equ	4073	;# 
   222   000FE9                     FSR0L           equ	4073	;# 
   223   000FEA                     FSR0H           equ	4074	;# 
   224   000FEB                     PLUSW0          equ	4075	;# 
   225   000FEC                     PREINC0         equ	4076	;# 
   226   000FED                     POSTDEC0        equ	4077	;# 
   227   000FEE                     POSTINC0        equ	4078	;# 
   228   000FEF                     INDF0           equ	4079	;# 
   229   000FF0                     INTCON3         equ	4080	;# 
   230   000FF1                     INTCON2         equ	4081	;# 
   231   000FF2                     INTCON          equ	4082	;# 
   232   000FF2                     INTCON1         equ	4082	;# 
   233   000FF3                     PROD            equ	4083	;# 
   234   000FF3                     PRODL           equ	4083	;# 
   235   000FF4                     PRODH           equ	4084	;# 
   236   000FF5                     TABLAT          equ	4085	;# 
   237   000FF6                     TBLPTR          equ	4086	;# 
   238   000FF6                     TBLPTRL         equ	4086	;# 
   239   000FF7                     TBLPTRH         equ	4087	;# 
   240   000FF8                     TBLPTRU         equ	4088	;# 
   241   000FF9                     PCLAT           equ	4089	;# 
   242   000FF9                     PC              equ	4089	;# 
   243   000FF9                     PCL             equ	4089	;# 
   244   000FFA                     PCLATH          equ	4090	;# 
   245   000FFB                     PCLATU          equ	4091	;# 
   246   000FFC                     STKPTR          equ	4092	;# 
   247   000FFD                     TOS             equ	4093	;# 
   248   000FFD                     TOSL            equ	4093	;# 
   249   000FFE                     TOSH            equ	4094	;# 
   250   000FFF                     TOSU            equ	4095	;# 
   251   000F80                     PORTA           equ	3968	;# 
   252   000F81                     PORTB           equ	3969	;# 
   253   000F82                     PORTC           equ	3970	;# 
   254   000F83                     PORTD           equ	3971	;# 
   255   000F84                     PORTE           equ	3972	;# 
   256   000F89                     LATA            equ	3977	;# 
   257   000F8A                     LATB            equ	3978	;# 
   258   000F8B                     LATC            equ	3979	;# 
   259   000F8C                     LATD            equ	3980	;# 
   260   000F8D                     LATE            equ	3981	;# 
   261   000F92                     TRISA           equ	3986	;# 
   262   000F92                     DDRA            equ	3986	;# 
   263   000F93                     TRISB           equ	3987	;# 
   264   000F93                     DDRB            equ	3987	;# 
   265   000F94                     TRISC           equ	3988	;# 
   266   000F94                     DDRC            equ	3988	;# 
   267   000F95                     TRISD           equ	3989	;# 
   268   000F95                     DDRD            equ	3989	;# 
   269   000F96                     TRISE           equ	3990	;# 
   270   000F96                     DDRE            equ	3990	;# 
   271   000F9D                     PIE1            equ	3997	;# 
   272   000F9E                     PIR1            equ	3998	;# 
   273   000F9F                     IPR1            equ	3999	;# 
   274   000FA0                     PIE2            equ	4000	;# 
   275   000FA1                     PIR2            equ	4001	;# 
   276   000FA2                     IPR2            equ	4002	;# 
   277   000FA6                     EECON1          equ	4006	;# 
   278   000FA7                     EECON2          equ	4007	;# 
   279   000FA8                     EEDATA          equ	4008	;# 
   280   000FA9                     EEADR           equ	4009	;# 
   281   000FAB                     RCSTA           equ	4011	;# 
   282   000FAB                     RCSTA1          equ	4011	;# 
   283   000FAC                     TXSTA           equ	4012	;# 
   284   000FAC                     TXSTA1          equ	4012	;# 
   285   000FAD                     TXREG           equ	4013	;# 
   286   000FAD                     TXREG1          equ	4013	;# 
   287   000FAE                     RCREG           equ	4014	;# 
   288   000FAE                     RCREG1          equ	4014	;# 
   289   000FAF                     SPBRG           equ	4015	;# 
   290   000FAF                     SPBRG1          equ	4015	;# 
   291   000FB1                     T3CON           equ	4017	;# 
   292   000FB2                     TMR3            equ	4018	;# 
   293   000FB2                     TMR3L           equ	4018	;# 
   294   000FB3                     TMR3H           equ	4019	;# 
   295   000FBA                     CCP2CON         equ	4026	;# 
   296   000FBB                     CCPR2           equ	4027	;# 
   297   000FBB                     CCPR2L          equ	4027	;# 
   298   000FBC                     CCPR2H          equ	4028	;# 
   299   000FBD                     CCP1CON         equ	4029	;# 
   300   000FBE                     CCPR1           equ	4030	;# 
   301   000FBE                     CCPR1L          equ	4030	;# 
   302   000FBF                     CCPR1H          equ	4031	;# 
   303   000FC1                     ADCON1          equ	4033	;# 
   304   000FC2                     ADCON0          equ	4034	;# 
   305   000FC3                     ADRES           equ	4035	;# 
   306   000FC3                     ADRESL          equ	4035	;# 
   307   000FC4                     ADRESH          equ	4036	;# 
   308   000FC5                     SSPCON2         equ	4037	;# 
   309   000FC6                     SSPCON1         equ	4038	;# 
   310   000FC7                     SSPSTAT         equ	4039	;# 
   311   000FC8                     SSPADD          equ	4040	;# 
   312   000FC9                     SSPBUF          equ	4041	;# 
   313   000FCA                     T2CON           equ	4042	;# 
   314   000FCB                     PR2             equ	4043	;# 
   315   000FCB                     MEMCON          equ	4043	;# 
   316   000FCC                     TMR2            equ	4044	;# 
   317   000FCD                     T1CON           equ	4045	;# 
   318   000FCE                     TMR1            equ	4046	;# 
   319   000FCE                     TMR1L           equ	4046	;# 
   320   000FCF                     TMR1H           equ	4047	;# 
   321   000FD0                     RCON            equ	4048	;# 
   322   000FD1                     WDTCON          equ	4049	;# 
   323   000FD2                     LVDCON          equ	4050	;# 
   324   000FD3                     OSCCON          equ	4051	;# 
   325   000FD5                     T0CON           equ	4053	;# 
   326   000FD6                     TMR0            equ	4054	;# 
   327   000FD6                     TMR0L           equ	4054	;# 
   328   000FD7                     TMR0H           equ	4055	;# 
   329   000FD8                     STATUS          equ	4056	;# 
   330   000FD9                     FSR2            equ	4057	;# 
   331   000FD9                     FSR2L           equ	4057	;# 
   332   000FDA                     FSR2H           equ	4058	;# 
   333   000FDB                     PLUSW2          equ	4059	;# 
   334   000FDC                     PREINC2         equ	4060	;# 
   335   000FDD                     POSTDEC2        equ	4061	;# 
   336   000FDE                     POSTINC2        equ	4062	;# 
   337   000FDF                     INDF2           equ	4063	;# 
   338   000FE0                     BSR             equ	4064	;# 
   339   000FE1                     FSR1            equ	4065	;# 
   340   000FE1                     FSR1L           equ	4065	;# 
   341   000FE2                     FSR1H           equ	4066	;# 
   342   000FE3                     PLUSW1          equ	4067	;# 
   343   000FE4                     PREINC1         equ	4068	;# 
   344   000FE5                     POSTDEC1        equ	4069	;# 
   345   000FE6                     POSTINC1        equ	4070	;# 
   346   000FE7                     INDF1           equ	4071	;# 
   347   000FE8                     WREG            equ	4072	;# 
   348   000FE9                     FSR0            equ	4073	;# 
   349   000FE9                     FSR0L           equ	4073	;# 
   350   000FEA                     FSR0H           equ	4074	;# 
   351   000FEB                     PLUSW0          equ	4075	;# 
   352   000FEC                     PREINC0         equ	4076	;# 
   353   000FED                     POSTDEC0        equ	4077	;# 
   354   000FEE                     POSTINC0        equ	4078	;# 
   355   000FEF                     INDF0           equ	4079	;# 
   356   000FF0                     INTCON3         equ	4080	;# 
   357   000FF1                     INTCON2         equ	4081	;# 
   358   000FF2                     INTCON          equ	4082	;# 
   359   000FF2                     INTCON1         equ	4082	;# 
   360   000FF3                     PROD            equ	4083	;# 
   361   000FF3                     PRODL           equ	4083	;# 
   362   000FF4                     PRODH           equ	4084	;# 
   363   000FF5                     TABLAT          equ	4085	;# 
   364   000FF6                     TBLPTR          equ	4086	;# 
   365   000FF6                     TBLPTRL         equ	4086	;# 
   366   000FF7                     TBLPTRH         equ	4087	;# 
   367   000FF8                     TBLPTRU         equ	4088	;# 
   368   000FF9                     PCLAT           equ	4089	;# 
   369   000FF9                     PC              equ	4089	;# 
   370   000FF9                     PCL             equ	4089	;# 
   371   000FFA                     PCLATH          equ	4090	;# 
   372   000FFB                     PCLATU          equ	4091	;# 
   373   000FFC                     STKPTR          equ	4092	;# 
   374   000FFD                     TOS             equ	4093	;# 
   375   000FFD                     TOSL            equ	4093	;# 
   376   000FFE                     TOSH            equ	4094	;# 
   377   000FFF                     TOSU            equ	4095	;# 
   378   000F80                     PORTA           equ	3968	;# 
   379   000F81                     PORTB           equ	3969	;# 
   380   000F82                     PORTC           equ	3970	;# 
   381   000F83                     PORTD           equ	3971	;# 
   382   000F84                     PORTE           equ	3972	;# 
   383   000F89                     LATA            equ	3977	;# 
   384   000F8A                     LATB            equ	3978	;# 
   385   000F8B                     LATC            equ	3979	;# 
   386   000F8C                     LATD            equ	3980	;# 
   387   000F8D                     LATE            equ	3981	;# 
   388   000F92                     TRISA           equ	3986	;# 
   389   000F92                     DDRA            equ	3986	;# 
   390   000F93                     TRISB           equ	3987	;# 
   391   000F93                     DDRB            equ	3987	;# 
   392   000F94                     TRISC           equ	3988	;# 
   393   000F94                     DDRC            equ	3988	;# 
   394   000F95                     TRISD           equ	3989	;# 
   395   000F95                     DDRD            equ	3989	;# 
   396   000F96                     TRISE           equ	3990	;# 
   397   000F96                     DDRE            equ	3990	;# 
   398   000F9D                     PIE1            equ	3997	;# 
   399   000F9E                     PIR1            equ	3998	;# 
   400   000F9F                     IPR1            equ	3999	;# 
   401   000FA0                     PIE2            equ	4000	;# 
   402   000FA1                     PIR2            equ	4001	;# 
   403   000FA2                     IPR2            equ	4002	;# 
   404   000FA6                     EECON1          equ	4006	;# 
   405   000FA7                     EECON2          equ	4007	;# 
   406   000FA8                     EEDATA          equ	4008	;# 
   407   000FA9                     EEADR           equ	4009	;# 
   408   000FAB                     RCSTA           equ	4011	;# 
   409   000FAB                     RCSTA1          equ	4011	;# 
   410   000FAC                     TXSTA           equ	4012	;# 
   411   000FAC                     TXSTA1          equ	4012	;# 
   412   000FAD                     TXREG           equ	4013	;# 
   413   000FAD                     TXREG1          equ	4013	;# 
   414   000FAE                     RCREG           equ	4014	;# 
   415   000FAE                     RCREG1          equ	4014	;# 
   416   000FAF                     SPBRG           equ	4015	;# 
   417   000FAF                     SPBRG1          equ	4015	;# 
   418   000FB1                     T3CON           equ	4017	;# 
   419   000FB2                     TMR3            equ	4018	;# 
   420   000FB2                     TMR3L           equ	4018	;# 
   421   000FB3                     TMR3H           equ	4019	;# 
   422   000FBA                     CCP2CON         equ	4026	;# 
   423   000FBB                     CCPR2           equ	4027	;# 
   424   000FBB                     CCPR2L          equ	4027	;# 
   425   000FBC                     CCPR2H          equ	4028	;# 
   426   000FBD                     CCP1CON         equ	4029	;# 
   427   000FBE                     CCPR1           equ	4030	;# 
   428   000FBE                     CCPR1L          equ	4030	;# 
   429   000FBF                     CCPR1H          equ	4031	;# 
   430   000FC1                     ADCON1          equ	4033	;# 
   431   000FC2                     ADCON0          equ	4034	;# 
   432   000FC3                     ADRES           equ	4035	;# 
   433   000FC3                     ADRESL          equ	4035	;# 
   434   000FC4                     ADRESH          equ	4036	;# 
   435   000FC5                     SSPCON2         equ	4037	;# 
   436   000FC6                     SSPCON1         equ	4038	;# 
   437   000FC7                     SSPSTAT         equ	4039	;# 
   438   000FC8                     SSPADD          equ	4040	;# 
   439   000FC9                     SSPBUF          equ	4041	;# 
   440   000FCA                     T2CON           equ	4042	;# 
   441   000FCB                     PR2             equ	4043	;# 
   442   000FCB                     MEMCON          equ	4043	;# 
   443   000FCC                     TMR2            equ	4044	;# 
   444   000FCD                     T1CON           equ	4045	;# 
   445   000FCE                     TMR1            equ	4046	;# 
   446   000FCE                     TMR1L           equ	4046	;# 
   447   000FCF                     TMR1H           equ	4047	;# 
   448   000FD0                     RCON            equ	4048	;# 
   449   000FD1                     WDTCON          equ	4049	;# 
   450   000FD2                     LVDCON          equ	4050	;# 
   451   000FD3                     OSCCON          equ	4051	;# 
   452   000FD5                     T0CON           equ	4053	;# 
   453   000FD6                     TMR0            equ	4054	;# 
   454   000FD6                     TMR0L           equ	4054	;# 
   455   000FD7                     TMR0H           equ	4055	;# 
   456   000FD8                     STATUS          equ	4056	;# 
   457   000FD9                     FSR2            equ	4057	;# 
   458   000FD9                     FSR2L           equ	4057	;# 
   459   000FDA                     FSR2H           equ	4058	;# 
   460   000FDB                     PLUSW2          equ	4059	;# 
   461   000FDC                     PREINC2         equ	4060	;# 
   462   000FDD                     POSTDEC2        equ	4061	;# 
   463   000FDE                     POSTINC2        equ	4062	;# 
   464   000FDF                     INDF2           equ	4063	;# 
   465   000FE0                     BSR             equ	4064	;# 
   466   000FE1                     FSR1            equ	4065	;# 
   467   000FE1                     FSR1L           equ	4065	;# 
   468   000FE2                     FSR1H           equ	4066	;# 
   469   000FE3                     PLUSW1          equ	4067	;# 
   470   000FE4                     PREINC1         equ	4068	;# 
   471   000FE5                     POSTDEC1        equ	4069	;# 
   472   000FE6                     POSTINC1        equ	4070	;# 
   473   000FE7                     INDF1           equ	4071	;# 
   474   000FE8                     WREG            equ	4072	;# 
   475   000FE9                     FSR0            equ	4073	;# 
   476   000FE9                     FSR0L           equ	4073	;# 
   477   000FEA                     FSR0H           equ	4074	;# 
   478   000FEB                     PLUSW0          equ	4075	;# 
   479   000FEC                     PREINC0         equ	4076	;# 
   480   000FED                     POSTDEC0        equ	4077	;# 
   481   000FEE                     POSTINC0        equ	4078	;# 
   482   000FEF                     INDF0           equ	4079	;# 
   483   000FF0                     INTCON3         equ	4080	;# 
   484   000FF1                     INTCON2         equ	4081	;# 
   485   000FF2                     INTCON          equ	4082	;# 
   486   000FF2                     INTCON1         equ	4082	;# 
   487   000FF3                     PROD            equ	4083	;# 
   488   000FF3                     PRODL           equ	4083	;# 
   489   000FF4                     PRODH           equ	4084	;# 
   490   000FF5                     TABLAT          equ	4085	;# 
   491   000FF6                     TBLPTR          equ	4086	;# 
   492   000FF6                     TBLPTRL         equ	4086	;# 
   493   000FF7                     TBLPTRH         equ	4087	;# 
   494   000FF8                     TBLPTRU         equ	4088	;# 
   495   000FF9                     PCLAT           equ	4089	;# 
   496   000FF9                     PC              equ	4089	;# 
   497   000FF9                     PCL             equ	4089	;# 
   498   000FFA                     PCLATH          equ	4090	;# 
   499   000FFB                     PCLATU          equ	4091	;# 
   500   000FFC                     STKPTR          equ	4092	;# 
   501   000FFD                     TOS             equ	4093	;# 
   502   000FFD                     TOSL            equ	4093	;# 
   503   000FFE                     TOSH            equ	4094	;# 
   504   000FFF                     TOSU            equ	4095	;# 
   505   000F80                     PORTA           equ	3968	;# 
   506   000F81                     PORTB           equ	3969	;# 
   507   000F82                     PORTC           equ	3970	;# 
   508   000F83                     PORTD           equ	3971	;# 
   509   000F84                     PORTE           equ	3972	;# 
   510   000F89                     LATA            equ	3977	;# 
   511   000F8A                     LATB            equ	3978	;# 
   512   000F8B                     LATC            equ	3979	;# 
   513   000F8C                     LATD            equ	3980	;# 
   514   000F8D                     LATE            equ	3981	;# 
   515   000F92                     TRISA           equ	3986	;# 
   516   000F92                     DDRA            equ	3986	;# 
   517   000F93                     TRISB           equ	3987	;# 
   518   000F93                     DDRB            equ	3987	;# 
   519   000F94                     TRISC           equ	3988	;# 
   520   000F94                     DDRC            equ	3988	;# 
   521   000F95                     TRISD           equ	3989	;# 
   522   000F95                     DDRD            equ	3989	;# 
   523   000F96                     TRISE           equ	3990	;# 
   524   000F96                     DDRE            equ	3990	;# 
   525   000F9D                     PIE1            equ	3997	;# 
   526   000F9E                     PIR1            equ	3998	;# 
   527   000F9F                     IPR1            equ	3999	;# 
   528   000FA0                     PIE2            equ	4000	;# 
   529   000FA1                     PIR2            equ	4001	;# 
   530   000FA2                     IPR2            equ	4002	;# 
   531   000FA6                     EECON1          equ	4006	;# 
   532   000FA7                     EECON2          equ	4007	;# 
   533   000FA8                     EEDATA          equ	4008	;# 
   534   000FA9                     EEADR           equ	4009	;# 
   535   000FAB                     RCSTA           equ	4011	;# 
   536   000FAB                     RCSTA1          equ	4011	;# 
   537   000FAC                     TXSTA           equ	4012	;# 
   538   000FAC                     TXSTA1          equ	4012	;# 
   539   000FAD                     TXREG           equ	4013	;# 
   540   000FAD                     TXREG1          equ	4013	;# 
   541   000FAE                     RCREG           equ	4014	;# 
   542   000FAE                     RCREG1          equ	4014	;# 
   543   000FAF                     SPBRG           equ	4015	;# 
   544   000FAF                     SPBRG1          equ	4015	;# 
   545   000FB1                     T3CON           equ	4017	;# 
   546   000FB2                     TMR3            equ	4018	;# 
   547   000FB2                     TMR3L           equ	4018	;# 
   548   000FB3                     TMR3H           equ	4019	;# 
   549   000FBA                     CCP2CON         equ	4026	;# 
   550   000FBB                     CCPR2           equ	4027	;# 
   551   000FBB                     CCPR2L          equ	4027	;# 
   552   000FBC                     CCPR2H          equ	4028	;# 
   553   000FBD                     CCP1CON         equ	4029	;# 
   554   000FBE                     CCPR1           equ	4030	;# 
   555   000FBE                     CCPR1L          equ	4030	;# 
   556   000FBF                     CCPR1H          equ	4031	;# 
   557   000FC1                     ADCON1          equ	4033	;# 
   558   000FC2                     ADCON0          equ	4034	;# 
   559   000FC3                     ADRES           equ	4035	;# 
   560   000FC3                     ADRESL          equ	4035	;# 
   561   000FC4                     ADRESH          equ	4036	;# 
   562   000FC5                     SSPCON2         equ	4037	;# 
   563   000FC6                     SSPCON1         equ	4038	;# 
   564   000FC7                     SSPSTAT         equ	4039	;# 
   565   000FC8                     SSPADD          equ	4040	;# 
   566   000FC9                     SSPBUF          equ	4041	;# 
   567   000FCA                     T2CON           equ	4042	;# 
   568   000FCB                     PR2             equ	4043	;# 
   569   000FCB                     MEMCON          equ	4043	;# 
   570   000FCC                     TMR2            equ	4044	;# 
   571   000FCD                     T1CON           equ	4045	;# 
   572   000FCE                     TMR1            equ	4046	;# 
   573   000FCE                     TMR1L           equ	4046	;# 
   574   000FCF                     TMR1H           equ	4047	;# 
   575   000FD0                     RCON            equ	4048	;# 
   576   000FD1                     WDTCON          equ	4049	;# 
   577   000FD2                     LVDCON          equ	4050	;# 
   578   000FD3                     OSCCON          equ	4051	;# 
   579   000FD5                     T0CON           equ	4053	;# 
   580   000FD6                     TMR0            equ	4054	;# 
   581   000FD6                     TMR0L           equ	4054	;# 
   582   000FD7                     TMR0H           equ	4055	;# 
   583   000FD8                     STATUS          equ	4056	;# 
   584   000FD9                     FSR2            equ	4057	;# 
   585   000FD9                     FSR2L           equ	4057	;# 
   586   000FDA                     FSR2H           equ	4058	;# 
   587   000FDB                     PLUSW2          equ	4059	;# 
   588   000FDC                     PREINC2         equ	4060	;# 
   589   000FDD                     POSTDEC2        equ	4061	;# 
   590   000FDE                     POSTINC2        equ	4062	;# 
   591   000FDF                     INDF2           equ	4063	;# 
   592   000FE0                     BSR             equ	4064	;# 
   593   000FE1                     FSR1            equ	4065	;# 
   594   000FE1                     FSR1L           equ	4065	;# 
   595   000FE2                     FSR1H           equ	4066	;# 
   596   000FE3                     PLUSW1          equ	4067	;# 
   597   000FE4                     PREINC1         equ	4068	;# 
   598   000FE5                     POSTDEC1        equ	4069	;# 
   599   000FE6                     POSTINC1        equ	4070	;# 
   600   000FE7                     INDF1           equ	4071	;# 
   601   000FE8                     WREG            equ	4072	;# 
   602   000FE9                     FSR0            equ	4073	;# 
   603   000FE9                     FSR0L           equ	4073	;# 
   604   000FEA                     FSR0H           equ	4074	;# 
   605   000FEB                     PLUSW0          equ	4075	;# 
   606   000FEC                     PREINC0         equ	4076	;# 
   607   000FED                     POSTDEC0        equ	4077	;# 
   608   000FEE                     POSTINC0        equ	4078	;# 
   609   000FEF                     INDF0           equ	4079	;# 
   610   000FF0                     INTCON3         equ	4080	;# 
   611   000FF1                     INTCON2         equ	4081	;# 
   612   000FF2                     INTCON          equ	4082	;# 
   613   000FF2                     INTCON1         equ	4082	;# 
   614   000FF3                     PROD            equ	4083	;# 
   615   000FF3                     PRODL           equ	4083	;# 
   616   000FF4                     PRODH           equ	4084	;# 
   617   000FF5                     TABLAT          equ	4085	;# 
   618   000FF6                     TBLPTR          equ	4086	;# 
   619   000FF6                     TBLPTRL         equ	4086	;# 
   620   000FF7                     TBLPTRH         equ	4087	;# 
   621   000FF8                     TBLPTRU         equ	4088	;# 
   622   000FF9                     PCLAT           equ	4089	;# 
   623   000FF9                     PC              equ	4089	;# 
   624   000FF9                     PCL             equ	4089	;# 
   625   000FFA                     PCLATH          equ	4090	;# 
   626   000FFB                     PCLATU          equ	4091	;# 
   627   000FFC                     STKPTR          equ	4092	;# 
   628   000FFD                     TOS             equ	4093	;# 
   629   000FFD                     TOSL            equ	4093	;# 
   630   000FFE                     TOSH            equ	4094	;# 
   631   000FFF                     TOSU            equ	4095	;# 
   632   000F80                     PORTA           equ	3968	;# 
   633   000F81                     PORTB           equ	3969	;# 
   634   000F82                     PORTC           equ	3970	;# 
   635   000F83                     PORTD           equ	3971	;# 
   636   000F84                     PORTE           equ	3972	;# 
   637   000F89                     LATA            equ	3977	;# 
   638   000F8A                     LATB            equ	3978	;# 
   639   000F8B                     LATC            equ	3979	;# 
   640   000F8C                     LATD            equ	3980	;# 
   641   000F8D                     LATE            equ	3981	;# 
   642   000F92                     TRISA           equ	3986	;# 
   643   000F92                     DDRA            equ	3986	;# 
   644   000F93                     TRISB           equ	3987	;# 
   645   000F93                     DDRB            equ	3987	;# 
   646   000F94                     TRISC           equ	3988	;# 
   647   000F94                     DDRC            equ	3988	;# 
   648   000F95                     TRISD           equ	3989	;# 
   649   000F95                     DDRD            equ	3989	;# 
   650   000F96                     TRISE           equ	3990	;# 
   651   000F96                     DDRE            equ	3990	;# 
   652   000F9D                     PIE1            equ	3997	;# 
   653   000F9E                     PIR1            equ	3998	;# 
   654   000F9F                     IPR1            equ	3999	;# 
   655   000FA0                     PIE2            equ	4000	;# 
   656   000FA1                     PIR2            equ	4001	;# 
   657   000FA2                     IPR2            equ	4002	;# 
   658   000FA6                     EECON1          equ	4006	;# 
   659   000FA7                     EECON2          equ	4007	;# 
   660   000FA8                     EEDATA          equ	4008	;# 
   661   000FA9                     EEADR           equ	4009	;# 
   662   000FAB                     RCSTA           equ	4011	;# 
   663   000FAB                     RCSTA1          equ	4011	;# 
   664   000FAC                     TXSTA           equ	4012	;# 
   665   000FAC                     TXSTA1          equ	4012	;# 
   666   000FAD                     TXREG           equ	4013	;# 
   667   000FAD                     TXREG1          equ	4013	;# 
   668   000FAE                     RCREG           equ	4014	;# 
   669   000FAE                     RCREG1          equ	4014	;# 
   670   000FAF                     SPBRG           equ	4015	;# 
   671   000FAF                     SPBRG1          equ	4015	;# 
   672   000FB1                     T3CON           equ	4017	;# 
   673   000FB2                     TMR3            equ	4018	;# 
   674   000FB2                     TMR3L           equ	4018	;# 
   675   000FB3                     TMR3H           equ	4019	;# 
   676   000FBA                     CCP2CON         equ	4026	;# 
   677   000FBB                     CCPR2           equ	4027	;# 
   678   000FBB                     CCPR2L          equ	4027	;# 
   679   000FBC                     CCPR2H          equ	4028	;# 
   680   000FBD                     CCP1CON         equ	4029	;# 
   681   000FBE                     CCPR1           equ	4030	;# 
   682   000FBE                     CCPR1L          equ	4030	;# 
   683   000FBF                     CCPR1H          equ	4031	;# 
   684   000FC1                     ADCON1          equ	4033	;# 
   685   000FC2                     ADCON0          equ	4034	;# 
   686   000FC3                     ADRES           equ	4035	;# 
   687   000FC3                     ADRESL          equ	4035	;# 
   688   000FC4                     ADRESH          equ	4036	;# 
   689   000FC5                     SSPCON2         equ	4037	;# 
   690   000FC6                     SSPCON1         equ	4038	;# 
   691   000FC7                     SSPSTAT         equ	4039	;# 
   692   000FC8                     SSPADD          equ	4040	;# 
   693   000FC9                     SSPBUF          equ	4041	;# 
   694   000FCA                     T2CON           equ	4042	;# 
   695   000FCB                     PR2             equ	4043	;# 
   696   000FCB                     MEMCON          equ	4043	;# 
   697   000FCC                     TMR2            equ	4044	;# 
   698   000FCD                     T1CON           equ	4045	;# 
   699   000FCE                     TMR1            equ	4046	;# 
   700   000FCE                     TMR1L           equ	4046	;# 
   701   000FCF                     TMR1H           equ	4047	;# 
   702   000FD0                     RCON            equ	4048	;# 
   703   000FD1                     WDTCON          equ	4049	;# 
   704   000FD2                     LVDCON          equ	4050	;# 
   705   000FD3                     OSCCON          equ	4051	;# 
   706   000FD5                     T0CON           equ	4053	;# 
   707   000FD6                     TMR0            equ	4054	;# 
   708   000FD6                     TMR0L           equ	4054	;# 
   709   000FD7                     TMR0H           equ	4055	;# 
   710   000FD8                     STATUS          equ	4056	;# 
   711   000FD9                     FSR2            equ	4057	;# 
   712   000FD9                     FSR2L           equ	4057	;# 
   713   000FDA                     FSR2H           equ	4058	;# 
   714   000FDB                     PLUSW2          equ	4059	;# 
   715   000FDC                     PREINC2         equ	4060	;# 
   716   000FDD                     POSTDEC2        equ	4061	;# 
   717   000FDE                     POSTINC2        equ	4062	;# 
   718   000FDF                     INDF2           equ	4063	;# 
   719   000FE0                     BSR             equ	4064	;# 
   720   000FE1                     FSR1            equ	4065	;# 
   721   000FE1                     FSR1L           equ	4065	;# 
   722   000FE2                     FSR1H           equ	4066	;# 
   723   000FE3                     PLUSW1          equ	4067	;# 
   724   000FE4                     PREINC1         equ	4068	;# 
   725   000FE5                     POSTDEC1        equ	4069	;# 
   726   000FE6                     POSTINC1        equ	4070	;# 
   727   000FE7                     INDF1           equ	4071	;# 
   728   000FE8                     WREG            equ	4072	;# 
   729   000FE9                     FSR0            equ	4073	;# 
   730   000FE9                     FSR0L           equ	4073	;# 
   731   000FEA                     FSR0H           equ	4074	;# 
   732   000FEB                     PLUSW0          equ	4075	;# 
   733   000FEC                     PREINC0         equ	4076	;# 
   734   000FED                     POSTDEC0        equ	4077	;# 
   735   000FEE                     POSTINC0        equ	4078	;# 
   736   000FEF                     INDF0           equ	4079	;# 
   737   000FF0                     INTCON3         equ	4080	;# 
   738   000FF1                     INTCON2         equ	4081	;# 
   739   000FF2                     INTCON          equ	4082	;# 
   740   000FF2                     INTCON1         equ	4082	;# 
   741   000FF3                     PROD            equ	4083	;# 
   742   000FF3                     PRODL           equ	4083	;# 
   743   000FF4                     PRODH           equ	4084	;# 
   744   000FF5                     TABLAT          equ	4085	;# 
   745   000FF6                     TBLPTR          equ	4086	;# 
   746   000FF6                     TBLPTRL         equ	4086	;# 
   747   000FF7                     TBLPTRH         equ	4087	;# 
   748   000FF8                     TBLPTRU         equ	4088	;# 
   749   000FF9                     PCLAT           equ	4089	;# 
   750   000FF9                     PC              equ	4089	;# 
   751   000FF9                     PCL             equ	4089	;# 
   752   000FFA                     PCLATH          equ	4090	;# 
   753   000FFB                     PCLATU          equ	4091	;# 
   754   000FFC                     STKPTR          equ	4092	;# 
   755   000FFD                     TOS             equ	4093	;# 
   756   000FFD                     TOSL            equ	4093	;# 
   757   000FFE                     TOSH            equ	4094	;# 
   758   000FFF                     TOSU            equ	4095	;# 
   759   000F80                     PORTA           equ	3968	;# 
   760   000F81                     PORTB           equ	3969	;# 
   761   000F82                     PORTC           equ	3970	;# 
   762   000F83                     PORTD           equ	3971	;# 
   763   000F84                     PORTE           equ	3972	;# 
   764   000F89                     LATA            equ	3977	;# 
   765   000F8A                     LATB            equ	3978	;# 
   766   000F8B                     LATC            equ	3979	;# 
   767   000F8C                     LATD            equ	3980	;# 
   768   000F8D                     LATE            equ	3981	;# 
   769   000F92                     TRISA           equ	3986	;# 
   770   000F92                     DDRA            equ	3986	;# 
   771   000F93                     TRISB           equ	3987	;# 
   772   000F93                     DDRB            equ	3987	;# 
   773   000F94                     TRISC           equ	3988	;# 
   774   000F94                     DDRC            equ	3988	;# 
   775   000F95                     TRISD           equ	3989	;# 
   776   000F95                     DDRD            equ	3989	;# 
   777   000F96                     TRISE           equ	3990	;# 
   778   000F96                     DDRE            equ	3990	;# 
   779   000F9D                     PIE1            equ	3997	;# 
   780   000F9E                     PIR1            equ	3998	;# 
   781   000F9F                     IPR1            equ	3999	;# 
   782   000FA0                     PIE2            equ	4000	;# 
   783   000FA1                     PIR2            equ	4001	;# 
   784   000FA2                     IPR2            equ	4002	;# 
   785   000FA6                     EECON1          equ	4006	;# 
   786   000FA7                     EECON2          equ	4007	;# 
   787   000FA8                     EEDATA          equ	4008	;# 
   788   000FA9                     EEADR           equ	4009	;# 
   789   000FAB                     RCSTA           equ	4011	;# 
   790   000FAB                     RCSTA1          equ	4011	;# 
   791   000FAC                     TXSTA           equ	4012	;# 
   792   000FAC                     TXSTA1          equ	4012	;# 
   793   000FAD                     TXREG           equ	4013	;# 
   794   000FAD                     TXREG1          equ	4013	;# 
   795   000FAE                     RCREG           equ	4014	;# 
   796   000FAE                     RCREG1          equ	4014	;# 
   797   000FAF                     SPBRG           equ	4015	;# 
   798   000FAF                     SPBRG1          equ	4015	;# 
   799   000FB1                     T3CON           equ	4017	;# 
   800   000FB2                     TMR3            equ	4018	;# 
   801   000FB2                     TMR3L           equ	4018	;# 
   802   000FB3                     TMR3H           equ	4019	;# 
   803   000FBA                     CCP2CON         equ	4026	;# 
   804   000FBB                     CCPR2           equ	4027	;# 
   805   000FBB                     CCPR2L          equ	4027	;# 
   806   000FBC                     CCPR2H          equ	4028	;# 
   807   000FBD                     CCP1CON         equ	4029	;# 
   808   000FBE                     CCPR1           equ	4030	;# 
   809   000FBE                     CCPR1L          equ	4030	;# 
   810   000FBF                     CCPR1H          equ	4031	;# 
   811   000FC1                     ADCON1          equ	4033	;# 
   812   000FC2                     ADCON0          equ	4034	;# 
   813   000FC3                     ADRES           equ	4035	;# 
   814   000FC3                     ADRESL          equ	4035	;# 
   815   000FC4                     ADRESH          equ	4036	;# 
   816   000FC5                     SSPCON2         equ	4037	;# 
   817   000FC6                     SSPCON1         equ	4038	;# 
   818   000FC7                     SSPSTAT         equ	4039	;# 
   819   000FC8                     SSPADD          equ	4040	;# 
   820   000FC9                     SSPBUF          equ	4041	;# 
   821   000FCA                     T2CON           equ	4042	;# 
   822   000FCB                     PR2             equ	4043	;# 
   823   000FCB                     MEMCON          equ	4043	;# 
   824   000FCC                     TMR2            equ	4044	;# 
   825   000FCD                     T1CON           equ	4045	;# 
   826   000FCE                     TMR1            equ	4046	;# 
   827   000FCE                     TMR1L           equ	4046	;# 
   828   000FCF                     TMR1H           equ	4047	;# 
   829   000FD0                     RCON            equ	4048	;# 
   830   000FD1                     WDTCON          equ	4049	;# 
   831   000FD2                     LVDCON          equ	4050	;# 
   832   000FD3                     OSCCON          equ	4051	;# 
   833   000FD5                     T0CON           equ	4053	;# 
   834   000FD6                     TMR0            equ	4054	;# 
   835   000FD6                     TMR0L           equ	4054	;# 
   836   000FD7                     TMR0H           equ	4055	;# 
   837   000FD8                     STATUS          equ	4056	;# 
   838   000FD9                     FSR2            equ	4057	;# 
   839   000FD9                     FSR2L           equ	4057	;# 
   840   000FDA                     FSR2H           equ	4058	;# 
   841   000FDB                     PLUSW2          equ	4059	;# 
   842   000FDC                     PREINC2         equ	4060	;# 
   843   000FDD                     POSTDEC2        equ	4061	;# 
   844   000FDE                     POSTINC2        equ	4062	;# 
   845   000FDF                     INDF2           equ	4063	;# 
   846   000FE0                     BSR             equ	4064	;# 
   847   000FE1                     FSR1            equ	4065	;# 
   848   000FE1                     FSR1L           equ	4065	;# 
   849   000FE2                     FSR1H           equ	4066	;# 
   850   000FE3                     PLUSW1          equ	4067	;# 
   851   000FE4                     PREINC1         equ	4068	;# 
   852   000FE5                     POSTDEC1        equ	4069	;# 
   853   000FE6                     POSTINC1        equ	4070	;# 
   854   000FE7                     INDF1           equ	4071	;# 
   855   000FE8                     WREG            equ	4072	;# 
   856   000FE9                     FSR0            equ	4073	;# 
   857   000FE9                     FSR0L           equ	4073	;# 
   858   000FEA                     FSR0H           equ	4074	;# 
   859   000FEB                     PLUSW0          equ	4075	;# 
   860   000FEC                     PREINC0         equ	4076	;# 
   861   000FED                     POSTDEC0        equ	4077	;# 
   862   000FEE                     POSTINC0        equ	4078	;# 
   863   000FEF                     INDF0           equ	4079	;# 
   864   000FF0                     INTCON3         equ	4080	;# 
   865   000FF1                     INTCON2         equ	4081	;# 
   866   000FF2                     INTCON          equ	4082	;# 
   867   000FF2                     INTCON1         equ	4082	;# 
   868   000FF3                     PROD            equ	4083	;# 
   869   000FF3                     PRODL           equ	4083	;# 
   870   000FF4                     PRODH           equ	4084	;# 
   871   000FF5                     TABLAT          equ	4085	;# 
   872   000FF6                     TBLPTR          equ	4086	;# 
   873   000FF6                     TBLPTRL         equ	4086	;# 
   874   000FF7                     TBLPTRH         equ	4087	;# 
   875   000FF8                     TBLPTRU         equ	4088	;# 
   876   000FF9                     PCLAT           equ	4089	;# 
   877   000FF9                     PC              equ	4089	;# 
   878   000FF9                     PCL             equ	4089	;# 
   879   000FFA                     PCLATH          equ	4090	;# 
   880   000FFB                     PCLATU          equ	4091	;# 
   881   000FFC                     STKPTR          equ	4092	;# 
   882   000FFD                     TOS             equ	4093	;# 
   883   000FFD                     TOSL            equ	4093	;# 
   884   000FFE                     TOSH            equ	4094	;# 
   885   000FFF                     TOSU            equ	4095	;# 
   886   000F80                     PORTA           equ	3968	;# 
   887   000F81                     PORTB           equ	3969	;# 
   888   000F82                     PORTC           equ	3970	;# 
   889   000F83                     PORTD           equ	3971	;# 
   890   000F84                     PORTE           equ	3972	;# 
   891   000F89                     LATA            equ	3977	;# 
   892   000F8A                     LATB            equ	3978	;# 
   893   000F8B                     LATC            equ	3979	;# 
   894   000F8C                     LATD            equ	3980	;# 
   895   000F8D                     LATE            equ	3981	;# 
   896   000F92                     TRISA           equ	3986	;# 
   897   000F92                     DDRA            equ	3986	;# 
   898   000F93                     TRISB           equ	3987	;# 
   899   000F93                     DDRB            equ	3987	;# 
   900   000F94                     TRISC           equ	3988	;# 
   901   000F94                     DDRC            equ	3988	;# 
   902   000F95                     TRISD           equ	3989	;# 
   903   000F95                     DDRD            equ	3989	;# 
   904   000F96                     TRISE           equ	3990	;# 
   905   000F96                     DDRE            equ	3990	;# 
   906   000F9D                     PIE1            equ	3997	;# 
   907   000F9E                     PIR1            equ	3998	;# 
   908   000F9F                     IPR1            equ	3999	;# 
   909   000FA0                     PIE2            equ	4000	;# 
   910   000FA1                     PIR2            equ	4001	;# 
   911   000FA2                     IPR2            equ	4002	;# 
   912   000FA6                     EECON1          equ	4006	;# 
   913   000FA7                     EECON2          equ	4007	;# 
   914   000FA8                     EEDATA          equ	4008	;# 
   915   000FA9                     EEADR           equ	4009	;# 
   916   000FAB                     RCSTA           equ	4011	;# 
   917   000FAB                     RCSTA1          equ	4011	;# 
   918   000FAC                     TXSTA           equ	4012	;# 
   919   000FAC                     TXSTA1          equ	4012	;# 
   920   000FAD                     TXREG           equ	4013	;# 
   921   000FAD                     TXREG1          equ	4013	;# 
   922   000FAE                     RCREG           equ	4014	;# 
   923   000FAE                     RCREG1          equ	4014	;# 
   924   000FAF                     SPBRG           equ	4015	;# 
   925   000FAF                     SPBRG1          equ	4015	;# 
   926   000FB1                     T3CON           equ	4017	;# 
   927   000FB2                     TMR3            equ	4018	;# 
   928   000FB2                     TMR3L           equ	4018	;# 
   929   000FB3                     TMR3H           equ	4019	;# 
   930   000FBA                     CCP2CON         equ	4026	;# 
   931   000FBB                     CCPR2           equ	4027	;# 
   932   000FBB                     CCPR2L          equ	4027	;# 
   933   000FBC                     CCPR2H          equ	4028	;# 
   934   000FBD                     CCP1CON         equ	4029	;# 
   935   000FBE                     CCPR1           equ	4030	;# 
   936   000FBE                     CCPR1L          equ	4030	;# 
   937   000FBF                     CCPR1H          equ	4031	;# 
   938   000FC1                     ADCON1          equ	4033	;# 
   939   000FC2                     ADCON0          equ	4034	;# 
   940   000FC3                     ADRES           equ	4035	;# 
   941   000FC3                     ADRESL          equ	4035	;# 
   942   000FC4                     ADRESH          equ	4036	;# 
   943   000FC5                     SSPCON2         equ	4037	;# 
   944   000FC6                     SSPCON1         equ	4038	;# 
   945   000FC7                     SSPSTAT         equ	4039	;# 
   946   000FC8                     SSPADD          equ	4040	;# 
   947   000FC9                     SSPBUF          equ	4041	;# 
   948   000FCA                     T2CON           equ	4042	;# 
   949   000FCB                     PR2             equ	4043	;# 
   950   000FCB                     MEMCON          equ	4043	;# 
   951   000FCC                     TMR2            equ	4044	;# 
   952   000FCD                     T1CON           equ	4045	;# 
   953   000FCE                     TMR1            equ	4046	;# 
   954   000FCE                     TMR1L           equ	4046	;# 
   955   000FCF                     TMR1H           equ	4047	;# 
   956   000FD0                     RCON            equ	4048	;# 
   957   000FD1                     WDTCON          equ	4049	;# 
   958   000FD2                     LVDCON          equ	4050	;# 
   959   000FD3                     OSCCON          equ	4051	;# 
   960   000FD5                     T0CON           equ	4053	;# 
   961   000FD6                     TMR0            equ	4054	;# 
   962   000FD6                     TMR0L           equ	4054	;# 
   963   000FD7                     TMR0H           equ	4055	;# 
   964   000FD8                     STATUS          equ	4056	;# 
   965   000FD9                     FSR2            equ	4057	;# 
   966   000FD9                     FSR2L           equ	4057	;# 
   967   000FDA                     FSR2H           equ	4058	;# 
   968   000FDB                     PLUSW2          equ	4059	;# 
   969   000FDC                     PREINC2         equ	4060	;# 
   970   000FDD                     POSTDEC2        equ	4061	;# 
   971   000FDE                     POSTINC2        equ	4062	;# 
   972   000FDF                     INDF2           equ	4063	;# 
   973   000FE0                     BSR             equ	4064	;# 
   974   000FE1                     FSR1            equ	4065	;# 
   975   000FE1                     FSR1L           equ	4065	;# 
   976   000FE2                     FSR1H           equ	4066	;# 
   977   000FE3                     PLUSW1          equ	4067	;# 
   978   000FE4                     PREINC1         equ	4068	;# 
   979   000FE5                     POSTDEC1        equ	4069	;# 
   980   000FE6                     POSTINC1        equ	4070	;# 
   981   000FE7                     INDF1           equ	4071	;# 
   982   000FE8                     WREG            equ	4072	;# 
   983   000FE9                     FSR0            equ	4073	;# 
   984   000FE9                     FSR0L           equ	4073	;# 
   985   000FEA                     FSR0H           equ	4074	;# 
   986   000FEB                     PLUSW0          equ	4075	;# 
   987   000FEC                     PREINC0         equ	4076	;# 
   988   000FED                     POSTDEC0        equ	4077	;# 
   989   000FEE                     POSTINC0        equ	4078	;# 
   990   000FEF                     INDF0           equ	4079	;# 
   991   000FF0                     INTCON3         equ	4080	;# 
   992   000FF1                     INTCON2         equ	4081	;# 
   993   000FF2                     INTCON          equ	4082	;# 
   994   000FF2                     INTCON1         equ	4082	;# 
   995   000FF3                     PROD            equ	4083	;# 
   996   000FF3                     PRODL           equ	4083	;# 
   997   000FF4                     PRODH           equ	4084	;# 
   998   000FF5                     TABLAT          equ	4085	;# 
   999   000FF6                     TBLPTR          equ	4086	;# 
  1000   000FF6                     TBLPTRL         equ	4086	;# 
  1001   000FF7                     TBLPTRH         equ	4087	;# 
  1002   000FF8                     TBLPTRU         equ	4088	;# 
  1003   000FF9                     PCLAT           equ	4089	;# 
  1004   000FF9                     PC              equ	4089	;# 
  1005   000FF9                     PCL             equ	4089	;# 
  1006   000FFA                     PCLATH          equ	4090	;# 
  1007   000FFB                     PCLATU          equ	4091	;# 
  1008   000FFC                     STKPTR          equ	4092	;# 
  1009   000FFD                     TOS             equ	4093	;# 
  1010   000FFD                     TOSL            equ	4093	;# 
  1011   000FFE                     TOSH            equ	4094	;# 
  1012   000FFF                     TOSU            equ	4095	;# 
  1013   000F80                     PORTA           equ	3968	;# 
  1014   000F81                     PORTB           equ	3969	;# 
  1015   000F82                     PORTC           equ	3970	;# 
  1016   000F83                     PORTD           equ	3971	;# 
  1017   000F84                     PORTE           equ	3972	;# 
  1018   000F89                     LATA            equ	3977	;# 
  1019   000F8A                     LATB            equ	3978	;# 
  1020   000F8B                     LATC            equ	3979	;# 
  1021   000F8C                     LATD            equ	3980	;# 
  1022   000F8D                     LATE            equ	3981	;# 
  1023   000F92                     TRISA           equ	3986	;# 
  1024   000F92                     DDRA            equ	3986	;# 
  1025   000F93                     TRISB           equ	3987	;# 
  1026   000F93                     DDRB            equ	3987	;# 
  1027   000F94                     TRISC           equ	3988	;# 
  1028   000F94                     DDRC            equ	3988	;# 
  1029   000F95                     TRISD           equ	3989	;# 
  1030   000F95                     DDRD            equ	3989	;# 
  1031   000F96                     TRISE           equ	3990	;# 
  1032   000F96                     DDRE            equ	3990	;# 
  1033   000F9D                     PIE1            equ	3997	;# 
  1034   000F9E                     PIR1            equ	3998	;# 
  1035   000F9F                     IPR1            equ	3999	;# 
  1036   000FA0                     PIE2            equ	4000	;# 
  1037   000FA1                     PIR2            equ	4001	;# 
  1038   000FA2                     IPR2            equ	4002	;# 
  1039   000FA6                     EECON1          equ	4006	;# 
  1040   000FA7                     EECON2          equ	4007	;# 
  1041   000FA8                     EEDATA          equ	4008	;# 
  1042   000FA9                     EEADR           equ	4009	;# 
  1043   000FAB                     RCSTA           equ	4011	;# 
  1044   000FAB                     RCSTA1          equ	4011	;# 
  1045   000FAC                     TXSTA           equ	4012	;# 
  1046   000FAC                     TXSTA1          equ	4012	;# 
  1047   000FAD                     TXREG           equ	4013	;# 
  1048   000FAD                     TXREG1          equ	4013	;# 
  1049   000FAE                     RCREG           equ	4014	;# 
  1050   000FAE                     RCREG1          equ	4014	;# 
  1051   000FAF                     SPBRG           equ	4015	;# 
  1052   000FAF                     SPBRG1          equ	4015	;# 
  1053   000FB1                     T3CON           equ	4017	;# 
  1054   000FB2                     TMR3            equ	4018	;# 
  1055   000FB2                     TMR3L           equ	4018	;# 
  1056   000FB3                     TMR3H           equ	4019	;# 
  1057   000FBA                     CCP2CON         equ	4026	;# 
  1058   000FBB                     CCPR2           equ	4027	;# 
  1059   000FBB                     CCPR2L          equ	4027	;# 
  1060   000FBC                     CCPR2H          equ	4028	;# 
  1061   000FBD                     CCP1CON         equ	4029	;# 
  1062   000FBE                     CCPR1           equ	4030	;# 
  1063   000FBE                     CCPR1L          equ	4030	;# 
  1064   000FBF                     CCPR1H          equ	4031	;# 
  1065   000FC1                     ADCON1          equ	4033	;# 
  1066   000FC2                     ADCON0          equ	4034	;# 
  1067   000FC3                     ADRES           equ	4035	;# 
  1068   000FC3                     ADRESL          equ	4035	;# 
  1069   000FC4                     ADRESH          equ	4036	;# 
  1070   000FC5                     SSPCON2         equ	4037	;# 
  1071   000FC6                     SSPCON1         equ	4038	;# 
  1072   000FC7                     SSPSTAT         equ	4039	;# 
  1073   000FC8                     SSPADD          equ	4040	;# 
  1074   000FC9                     SSPBUF          equ	4041	;# 
  1075   000FCA                     T2CON           equ	4042	;# 
  1076   000FCB                     PR2             equ	4043	;# 
  1077   000FCB                     MEMCON          equ	4043	;# 
  1078   000FCC                     TMR2            equ	4044	;# 
  1079   000FCD                     T1CON           equ	4045	;# 
  1080   000FCE                     TMR1            equ	4046	;# 
  1081   000FCE                     TMR1L           equ	4046	;# 
  1082   000FCF                     TMR1H           equ	4047	;# 
  1083   000FD0                     RCON            equ	4048	;# 
  1084   000FD1                     WDTCON          equ	4049	;# 
  1085   000FD2                     LVDCON          equ	4050	;# 
  1086   000FD3                     OSCCON          equ	4051	;# 
  1087   000FD5                     T0CON           equ	4053	;# 
  1088   000FD6                     TMR0            equ	4054	;# 
  1089   000FD6                     TMR0L           equ	4054	;# 
  1090   000FD7                     TMR0H           equ	4055	;# 
  1091   000FD8                     STATUS          equ	4056	;# 
  1092   000FD9                     FSR2            equ	4057	;# 
  1093   000FD9                     FSR2L           equ	4057	;# 
  1094   000FDA                     FSR2H           equ	4058	;# 
  1095   000FDB                     PLUSW2          equ	4059	;# 
  1096   000FDC                     PREINC2         equ	4060	;# 
  1097   000FDD                     POSTDEC2        equ	4061	;# 
  1098   000FDE                     POSTINC2        equ	4062	;# 
  1099   000FDF                     INDF2           equ	4063	;# 
  1100   000FE0                     BSR             equ	4064	;# 
  1101   000FE1                     FSR1            equ	4065	;# 
  1102   000FE1                     FSR1L           equ	4065	;# 
  1103   000FE2                     FSR1H           equ	4066	;# 
  1104   000FE3                     PLUSW1          equ	4067	;# 
  1105   000FE4                     PREINC1         equ	4068	;# 
  1106   000FE5                     POSTDEC1        equ	4069	;# 
  1107   000FE6                     POSTINC1        equ	4070	;# 
  1108   000FE7                     INDF1           equ	4071	;# 
  1109   000FE8                     WREG            equ	4072	;# 
  1110   000FE9                     FSR0            equ	4073	;# 
  1111   000FE9                     FSR0L           equ	4073	;# 
  1112   000FEA                     FSR0H           equ	4074	;# 
  1113   000FEB                     PLUSW0          equ	4075	;# 
  1114   000FEC                     PREINC0         equ	4076	;# 
  1115   000FED                     POSTDEC0        equ	4077	;# 
  1116   000FEE                     POSTINC0        equ	4078	;# 
  1117   000FEF                     INDF0           equ	4079	;# 
  1118   000FF0                     INTCON3         equ	4080	;# 
  1119   000FF1                     INTCON2         equ	4081	;# 
  1120   000FF2                     INTCON          equ	4082	;# 
  1121   000FF2                     INTCON1         equ	4082	;# 
  1122   000FF3                     PROD            equ	4083	;# 
  1123   000FF3                     PRODL           equ	4083	;# 
  1124   000FF4                     PRODH           equ	4084	;# 
  1125   000FF5                     TABLAT          equ	4085	;# 
  1126   000FF6                     TBLPTR          equ	4086	;# 
  1127   000FF6                     TBLPTRL         equ	4086	;# 
  1128   000FF7                     TBLPTRH         equ	4087	;# 
  1129   000FF8                     TBLPTRU         equ	4088	;# 
  1130   000FF9                     PCLAT           equ	4089	;# 
  1131   000FF9                     PC              equ	4089	;# 
  1132   000FF9                     PCL             equ	4089	;# 
  1133   000FFA                     PCLATH          equ	4090	;# 
  1134   000FFB                     PCLATU          equ	4091	;# 
  1135   000FFC                     STKPTR          equ	4092	;# 
  1136   000FFD                     TOS             equ	4093	;# 
  1137   000FFD                     TOSL            equ	4093	;# 
  1138   000FFE                     TOSH            equ	4094	;# 
  1139   000FFF                     TOSU            equ	4095	;# 
  1140   000F80                     PORTA           equ	3968	;# 
  1141   000F81                     PORTB           equ	3969	;# 
  1142   000F82                     PORTC           equ	3970	;# 
  1143   000F83                     PORTD           equ	3971	;# 
  1144   000F84                     PORTE           equ	3972	;# 
  1145   000F89                     LATA            equ	3977	;# 
  1146   000F8A                     LATB            equ	3978	;# 
  1147   000F8B                     LATC            equ	3979	;# 
  1148   000F8C                     LATD            equ	3980	;# 
  1149   000F8D                     LATE            equ	3981	;# 
  1150   000F92                     TRISA           equ	3986	;# 
  1151   000F92                     DDRA            equ	3986	;# 
  1152   000F93                     TRISB           equ	3987	;# 
  1153   000F93                     DDRB            equ	3987	;# 
  1154   000F94                     TRISC           equ	3988	;# 
  1155   000F94                     DDRC            equ	3988	;# 
  1156   000F95                     TRISD           equ	3989	;# 
  1157   000F95                     DDRD            equ	3989	;# 
  1158   000F96                     TRISE           equ	3990	;# 
  1159   000F96                     DDRE            equ	3990	;# 
  1160   000F9D                     PIE1            equ	3997	;# 
  1161   000F9E                     PIR1            equ	3998	;# 
  1162   000F9F                     IPR1            equ	3999	;# 
  1163   000FA0                     PIE2            equ	4000	;# 
  1164   000FA1                     PIR2            equ	4001	;# 
  1165   000FA2                     IPR2            equ	4002	;# 
  1166   000FA6                     EECON1          equ	4006	;# 
  1167   000FA7                     EECON2          equ	4007	;# 
  1168   000FA8                     EEDATA          equ	4008	;# 
  1169   000FA9                     EEADR           equ	4009	;# 
  1170   000FAB                     RCSTA           equ	4011	;# 
  1171   000FAB                     RCSTA1          equ	4011	;# 
  1172   000FAC                     TXSTA           equ	4012	;# 
  1173   000FAC                     TXSTA1          equ	4012	;# 
  1174   000FAD                     TXREG           equ	4013	;# 
  1175   000FAD                     TXREG1          equ	4013	;# 
  1176   000FAE                     RCREG           equ	4014	;# 
  1177   000FAE                     RCREG1          equ	4014	;# 
  1178   000FAF                     SPBRG           equ	4015	;# 
  1179   000FAF                     SPBRG1          equ	4015	;# 
  1180   000FB1                     T3CON           equ	4017	;# 
  1181   000FB2                     TMR3            equ	4018	;# 
  1182   000FB2                     TMR3L           equ	4018	;# 
  1183   000FB3                     TMR3H           equ	4019	;# 
  1184   000FBA                     CCP2CON         equ	4026	;# 
  1185   000FBB                     CCPR2           equ	4027	;# 
  1186   000FBB                     CCPR2L          equ	4027	;# 
  1187   000FBC                     CCPR2H          equ	4028	;# 
  1188   000FBD                     CCP1CON         equ	4029	;# 
  1189   000FBE                     CCPR1           equ	4030	;# 
  1190   000FBE                     CCPR1L          equ	4030	;# 
  1191   000FBF                     CCPR1H          equ	4031	;# 
  1192   000FC1                     ADCON1          equ	4033	;# 
  1193   000FC2                     ADCON0          equ	4034	;# 
  1194   000FC3                     ADRES           equ	4035	;# 
  1195   000FC3                     ADRESL          equ	4035	;# 
  1196   000FC4                     ADRESH          equ	4036	;# 
  1197   000FC5                     SSPCON2         equ	4037	;# 
  1198   000FC6                     SSPCON1         equ	4038	;# 
  1199   000FC7                     SSPSTAT         equ	4039	;# 
  1200   000FC8                     SSPADD          equ	4040	;# 
  1201   000FC9                     SSPBUF          equ	4041	;# 
  1202   000FCA                     T2CON           equ	4042	;# 
  1203   000FCB                     PR2             equ	4043	;# 
  1204   000FCB                     MEMCON          equ	4043	;# 
  1205   000FCC                     TMR2            equ	4044	;# 
  1206   000FCD                     T1CON           equ	4045	;# 
  1207   000FCE                     TMR1            equ	4046	;# 
  1208   000FCE                     TMR1L           equ	4046	;# 
  1209   000FCF                     TMR1H           equ	4047	;# 
  1210   000FD0                     RCON            equ	4048	;# 
  1211   000FD1                     WDTCON          equ	4049	;# 
  1212   000FD2                     LVDCON          equ	4050	;# 
  1213   000FD3                     OSCCON          equ	4051	;# 
  1214   000FD5                     T0CON           equ	4053	;# 
  1215   000FD6                     TMR0            equ	4054	;# 
  1216   000FD6                     TMR0L           equ	4054	;# 
  1217   000FD7                     TMR0H           equ	4055	;# 
  1218   000FD8                     STATUS          equ	4056	;# 
  1219   000FD9                     FSR2            equ	4057	;# 
  1220   000FD9                     FSR2L           equ	4057	;# 
  1221   000FDA                     FSR2H           equ	4058	;# 
  1222   000FDB                     PLUSW2          equ	4059	;# 
  1223   000FDC                     PREINC2         equ	4060	;# 
  1224   000FDD                     POSTDEC2        equ	4061	;# 
  1225   000FDE                     POSTINC2        equ	4062	;# 
  1226   000FDF                     INDF2           equ	4063	;# 
  1227   000FE0                     BSR             equ	4064	;# 
  1228   000FE1                     FSR1            equ	4065	;# 
  1229   000FE1                     FSR1L           equ	4065	;# 
  1230   000FE2                     FSR1H           equ	4066	;# 
  1231   000FE3                     PLUSW1          equ	4067	;# 
  1232   000FE4                     PREINC1         equ	4068	;# 
  1233   000FE5                     POSTDEC1        equ	4069	;# 
  1234   000FE6                     POSTINC1        equ	4070	;# 
  1235   000FE7                     INDF1           equ	4071	;# 
  1236   000FE8                     WREG            equ	4072	;# 
  1237   000FE9                     FSR0            equ	4073	;# 
  1238   000FE9                     FSR0L           equ	4073	;# 
  1239   000FEA                     FSR0H           equ	4074	;# 
  1240   000FEB                     PLUSW0          equ	4075	;# 
  1241   000FEC                     PREINC0         equ	4076	;# 
  1242   000FED                     POSTDEC0        equ	4077	;# 
  1243   000FEE                     POSTINC0        equ	4078	;# 
  1244   000FEF                     INDF0           equ	4079	;# 
  1245   000FF0                     INTCON3         equ	4080	;# 
  1246   000FF1                     INTCON2         equ	4081	;# 
  1247   000FF2                     INTCON          equ	4082	;# 
  1248   000FF2                     INTCON1         equ	4082	;# 
  1249   000FF3                     PROD            equ	4083	;# 
  1250   000FF3                     PRODL           equ	4083	;# 
  1251   000FF4                     PRODH           equ	4084	;# 
  1252   000FF5                     TABLAT          equ	4085	;# 
  1253   000FF6                     TBLPTR          equ	4086	;# 
  1254   000FF6                     TBLPTRL         equ	4086	;# 
  1255   000FF7                     TBLPTRH         equ	4087	;# 
  1256   000FF8                     TBLPTRU         equ	4088	;# 
  1257   000FF9                     PCLAT           equ	4089	;# 
  1258   000FF9                     PC              equ	4089	;# 
  1259   000FF9                     PCL             equ	4089	;# 
  1260   000FFA                     PCLATH          equ	4090	;# 
  1261   000FFB                     PCLATU          equ	4091	;# 
  1262   000FFC                     STKPTR          equ	4092	;# 
  1263   000FFD                     TOS             equ	4093	;# 
  1264   000FFD                     TOSL            equ	4093	;# 
  1265   000FFE                     TOSH            equ	4094	;# 
  1266   000FFF                     TOSU            equ	4095	;# 
  1267   000F80                     PORTA           equ	3968	;# 
  1268   000F81                     PORTB           equ	3969	;# 
  1269   000F82                     PORTC           equ	3970	;# 
  1270   000F83                     PORTD           equ	3971	;# 
  1271   000F84                     PORTE           equ	3972	;# 
  1272   000F89                     LATA            equ	3977	;# 
  1273   000F8A                     LATB            equ	3978	;# 
  1274   000F8B                     LATC            equ	3979	;# 
  1275   000F8C                     LATD            equ	3980	;# 
  1276   000F8D                     LATE            equ	3981	;# 
  1277   000F92                     TRISA           equ	3986	;# 
  1278   000F92                     DDRA            equ	3986	;# 
  1279   000F93                     TRISB           equ	3987	;# 
  1280   000F93                     DDRB            equ	3987	;# 
  1281   000F94                     TRISC           equ	3988	;# 
  1282   000F94                     DDRC            equ	3988	;# 
  1283   000F95                     TRISD           equ	3989	;# 
  1284   000F95                     DDRD            equ	3989	;# 
  1285   000F96                     TRISE           equ	3990	;# 
  1286   000F96                     DDRE            equ	3990	;# 
  1287   000F9D                     PIE1            equ	3997	;# 
  1288   000F9E                     PIR1            equ	3998	;# 
  1289   000F9F                     IPR1            equ	3999	;# 
  1290   000FA0                     PIE2            equ	4000	;# 
  1291   000FA1                     PIR2            equ	4001	;# 
  1292   000FA2                     IPR2            equ	4002	;# 
  1293   000FA6                     EECON1          equ	4006	;# 
  1294   000FA7                     EECON2          equ	4007	;# 
  1295   000FA8                     EEDATA          equ	4008	;# 
  1296   000FA9                     EEADR           equ	4009	;# 
  1297   000FAB                     RCSTA           equ	4011	;# 
  1298   000FAB                     RCSTA1          equ	4011	;# 
  1299   000FAC                     TXSTA           equ	4012	;# 
  1300   000FAC                     TXSTA1          equ	4012	;# 
  1301   000FAD                     TXREG           equ	4013	;# 
  1302   000FAD                     TXREG1          equ	4013	;# 
  1303   000FAE                     RCREG           equ	4014	;# 
  1304   000FAE                     RCREG1          equ	4014	;# 
  1305   000FAF                     SPBRG           equ	4015	;# 
  1306   000FAF                     SPBRG1          equ	4015	;# 
  1307   000FB1                     T3CON           equ	4017	;# 
  1308   000FB2                     TMR3            equ	4018	;# 
  1309   000FB2                     TMR3L           equ	4018	;# 
  1310   000FB3                     TMR3H           equ	4019	;# 
  1311   000FBA                     CCP2CON         equ	4026	;# 
  1312   000FBB                     CCPR2           equ	4027	;# 
  1313   000FBB                     CCPR2L          equ	4027	;# 
  1314   000FBC                     CCPR2H          equ	4028	;# 
  1315   000FBD                     CCP1CON         equ	4029	;# 
  1316   000FBE                     CCPR1           equ	4030	;# 
  1317   000FBE                     CCPR1L          equ	4030	;# 
  1318   000FBF                     CCPR1H          equ	4031	;# 
  1319   000FC1                     ADCON1          equ	4033	;# 
  1320   000FC2                     ADCON0          equ	4034	;# 
  1321   000FC3                     ADRES           equ	4035	;# 
  1322   000FC3                     ADRESL          equ	4035	;# 
  1323   000FC4                     ADRESH          equ	4036	;# 
  1324   000FC5                     SSPCON2         equ	4037	;# 
  1325   000FC6                     SSPCON1         equ	4038	;# 
  1326   000FC7                     SSPSTAT         equ	4039	;# 
  1327   000FC8                     SSPADD          equ	4040	;# 
  1328   000FC9                     SSPBUF          equ	4041	;# 
  1329   000FCA                     T2CON           equ	4042	;# 
  1330   000FCB                     PR2             equ	4043	;# 
  1331   000FCB                     MEMCON          equ	4043	;# 
  1332   000FCC                     TMR2            equ	4044	;# 
  1333   000FCD                     T1CON           equ	4045	;# 
  1334   000FCE                     TMR1            equ	4046	;# 
  1335   000FCE                     TMR1L           equ	4046	;# 
  1336   000FCF                     TMR1H           equ	4047	;# 
  1337   000FD0                     RCON            equ	4048	;# 
  1338   000FD1                     WDTCON          equ	4049	;# 
  1339   000FD2                     LVDCON          equ	4050	;# 
  1340   000FD3                     OSCCON          equ	4051	;# 
  1341   000FD5                     T0CON           equ	4053	;# 
  1342   000FD6                     TMR0            equ	4054	;# 
  1343   000FD6                     TMR0L           equ	4054	;# 
  1344   000FD7                     TMR0H           equ	4055	;# 
  1345   000FD8                     STATUS          equ	4056	;# 
  1346   000FD9                     FSR2            equ	4057	;# 
  1347   000FD9                     FSR2L           equ	4057	;# 
  1348   000FDA                     FSR2H           equ	4058	;# 
  1349   000FDB                     PLUSW2          equ	4059	;# 
  1350   000FDC                     PREINC2         equ	4060	;# 
  1351   000FDD                     POSTDEC2        equ	4061	;# 
  1352   000FDE                     POSTINC2        equ	4062	;# 
  1353   000FDF                     INDF2           equ	4063	;# 
  1354   000FE0                     BSR             equ	4064	;# 
  1355   000FE1                     FSR1            equ	4065	;# 
  1356   000FE1                     FSR1L           equ	4065	;# 
  1357   000FE2                     FSR1H           equ	4066	;# 
  1358   000FE3                     PLUSW1          equ	4067	;# 
  1359   000FE4                     PREINC1         equ	4068	;# 
  1360   000FE5                     POSTDEC1        equ	4069	;# 
  1361   000FE6                     POSTINC1        equ	4070	;# 
  1362   000FE7                     INDF1           equ	4071	;# 
  1363   000FE8                     WREG            equ	4072	;# 
  1364   000FE9                     FSR0            equ	4073	;# 
  1365   000FE9                     FSR0L           equ	4073	;# 
  1366   000FEA                     FSR0H           equ	4074	;# 
  1367   000FEB                     PLUSW0          equ	4075	;# 
  1368   000FEC                     PREINC0         equ	4076	;# 
  1369   000FED                     POSTDEC0        equ	4077	;# 
  1370   000FEE                     POSTINC0        equ	4078	;# 
  1371   000FEF                     INDF0           equ	4079	;# 
  1372   000FF0                     INTCON3         equ	4080	;# 
  1373   000FF1                     INTCON2         equ	4081	;# 
  1374   000FF2                     INTCON          equ	4082	;# 
  1375   000FF2                     INTCON1         equ	4082	;# 
  1376   000FF3                     PROD            equ	4083	;# 
  1377   000FF3                     PRODL           equ	4083	;# 
  1378   000FF4                     PRODH           equ	4084	;# 
  1379   000FF5                     TABLAT          equ	4085	;# 
  1380   000FF6                     TBLPTR          equ	4086	;# 
  1381   000FF6                     TBLPTRL         equ	4086	;# 
  1382   000FF7                     TBLPTRH         equ	4087	;# 
  1383   000FF8                     TBLPTRU         equ	4088	;# 
  1384   000FF9                     PCLAT           equ	4089	;# 
  1385   000FF9                     PC              equ	4089	;# 
  1386   000FF9                     PCL             equ	4089	;# 
  1387   000FFA                     PCLATH          equ	4090	;# 
  1388   000FFB                     PCLATU          equ	4091	;# 
  1389   000FFC                     STKPTR          equ	4092	;# 
  1390   000FFD                     TOS             equ	4093	;# 
  1391   000FFD                     TOSL            equ	4093	;# 
  1392   000FFE                     TOSH            equ	4094	;# 
  1393   000FFF                     TOSU            equ	4095	;# 
  1394   000F80                     PORTA           equ	3968	;# 
  1395   000F81                     PORTB           equ	3969	;# 
  1396   000F82                     PORTC           equ	3970	;# 
  1397   000F83                     PORTD           equ	3971	;# 
  1398   000F84                     PORTE           equ	3972	;# 
  1399   000F89                     LATA            equ	3977	;# 
  1400   000F8A                     LATB            equ	3978	;# 
  1401   000F8B                     LATC            equ	3979	;# 
  1402   000F8C                     LATD            equ	3980	;# 
  1403   000F8D                     LATE            equ	3981	;# 
  1404   000F92                     TRISA           equ	3986	;# 
  1405   000F92                     DDRA            equ	3986	;# 
  1406   000F93                     TRISB           equ	3987	;# 
  1407   000F93                     DDRB            equ	3987	;# 
  1408   000F94                     TRISC           equ	3988	;# 
  1409   000F94                     DDRC            equ	3988	;# 
  1410   000F95                     TRISD           equ	3989	;# 
  1411   000F95                     DDRD            equ	3989	;# 
  1412   000F96                     TRISE           equ	3990	;# 
  1413   000F96                     DDRE            equ	3990	;# 
  1414   000F9D                     PIE1            equ	3997	;# 
  1415   000F9E                     PIR1            equ	3998	;# 
  1416   000F9F                     IPR1            equ	3999	;# 
  1417   000FA0                     PIE2            equ	4000	;# 
  1418   000FA1                     PIR2            equ	4001	;# 
  1419   000FA2                     IPR2            equ	4002	;# 
  1420   000FA6                     EECON1          equ	4006	;# 
  1421   000FA7                     EECON2          equ	4007	;# 
  1422   000FA8                     EEDATA          equ	4008	;# 
  1423   000FA9                     EEADR           equ	4009	;# 
  1424   000FAB                     RCSTA           equ	4011	;# 
  1425   000FAB                     RCSTA1          equ	4011	;# 
  1426   000FAC                     TXSTA           equ	4012	;# 
  1427   000FAC                     TXSTA1          equ	4012	;# 
  1428   000FAD                     TXREG           equ	4013	;# 
  1429   000FAD                     TXREG1          equ	4013	;# 
  1430   000FAE                     RCREG           equ	4014	;# 
  1431   000FAE                     RCREG1          equ	4014	;# 
  1432   000FAF                     SPBRG           equ	4015	;# 
  1433   000FAF                     SPBRG1          equ	4015	;# 
  1434   000FB1                     T3CON           equ	4017	;# 
  1435   000FB2                     TMR3            equ	4018	;# 
  1436   000FB2                     TMR3L           equ	4018	;# 
  1437   000FB3                     TMR3H           equ	4019	;# 
  1438   000FBA                     CCP2CON         equ	4026	;# 
  1439   000FBB                     CCPR2           equ	4027	;# 
  1440   000FBB                     CCPR2L          equ	4027	;# 
  1441   000FBC                     CCPR2H          equ	4028	;# 
  1442   000FBD                     CCP1CON         equ	4029	;# 
  1443   000FBE                     CCPR1           equ	4030	;# 
  1444   000FBE                     CCPR1L          equ	4030	;# 
  1445   000FBF                     CCPR1H          equ	4031	;# 
  1446   000FC1                     ADCON1          equ	4033	;# 
  1447   000FC2                     ADCON0          equ	4034	;# 
  1448   000FC3                     ADRES           equ	4035	;# 
  1449   000FC3                     ADRESL          equ	4035	;# 
  1450   000FC4                     ADRESH          equ	4036	;# 
  1451   000FC5                     SSPCON2         equ	4037	;# 
  1452   000FC6                     SSPCON1         equ	4038	;# 
  1453   000FC7                     SSPSTAT         equ	4039	;# 
  1454   000FC8                     SSPADD          equ	4040	;# 
  1455   000FC9                     SSPBUF          equ	4041	;# 
  1456   000FCA                     T2CON           equ	4042	;# 
  1457   000FCB                     PR2             equ	4043	;# 
  1458   000FCB                     MEMCON          equ	4043	;# 
  1459   000FCC                     TMR2            equ	4044	;# 
  1460   000FCD                     T1CON           equ	4045	;# 
  1461   000FCE                     TMR1            equ	4046	;# 
  1462   000FCE                     TMR1L           equ	4046	;# 
  1463   000FCF                     TMR1H           equ	4047	;# 
  1464   000FD0                     RCON            equ	4048	;# 
  1465   000FD1                     WDTCON          equ	4049	;# 
  1466   000FD2                     LVDCON          equ	4050	;# 
  1467   000FD3                     OSCCON          equ	4051	;# 
  1468   000FD5                     T0CON           equ	4053	;# 
  1469   000FD6                     TMR0            equ	4054	;# 
  1470   000FD6                     TMR0L           equ	4054	;# 
  1471   000FD7                     TMR0H           equ	4055	;# 
  1472   000FD8                     STATUS          equ	4056	;# 
  1473   000FD9                     FSR2            equ	4057	;# 
  1474   000FD9                     FSR2L           equ	4057	;# 
  1475   000FDA                     FSR2H           equ	4058	;# 
  1476   000FDB                     PLUSW2          equ	4059	;# 
  1477   000FDC                     PREINC2         equ	4060	;# 
  1478   000FDD                     POSTDEC2        equ	4061	;# 
  1479   000FDE                     POSTINC2        equ	4062	;# 
  1480   000FDF                     INDF2           equ	4063	;# 
  1481   000FE0                     BSR             equ	4064	;# 
  1482   000FE1                     FSR1            equ	4065	;# 
  1483   000FE1                     FSR1L           equ	4065	;# 
  1484   000FE2                     FSR1H           equ	4066	;# 
  1485   000FE3                     PLUSW1          equ	4067	;# 
  1486   000FE4                     PREINC1         equ	4068	;# 
  1487   000FE5                     POSTDEC1        equ	4069	;# 
  1488   000FE6                     POSTINC1        equ	4070	;# 
  1489   000FE7                     INDF1           equ	4071	;# 
  1490   000FE8                     WREG            equ	4072	;# 
  1491   000FE9                     FSR0            equ	4073	;# 
  1492   000FE9                     FSR0L           equ	4073	;# 
  1493   000FEA                     FSR0H           equ	4074	;# 
  1494   000FEB                     PLUSW0          equ	4075	;# 
  1495   000FEC                     PREINC0         equ	4076	;# 
  1496   000FED                     POSTDEC0        equ	4077	;# 
  1497   000FEE                     POSTINC0        equ	4078	;# 
  1498   000FEF                     INDF0           equ	4079	;# 
  1499   000FF0                     INTCON3         equ	4080	;# 
  1500   000FF1                     INTCON2         equ	4081	;# 
  1501   000FF2                     INTCON          equ	4082	;# 
  1502   000FF2                     INTCON1         equ	4082	;# 
  1503   000FF3                     PROD            equ	4083	;# 
  1504   000FF3                     PRODL           equ	4083	;# 
  1505   000FF4                     PRODH           equ	4084	;# 
  1506   000FF5                     TABLAT          equ	4085	;# 
  1507   000FF6                     TBLPTR          equ	4086	;# 
  1508   000FF6                     TBLPTRL         equ	4086	;# 
  1509   000FF7                     TBLPTRH         equ	4087	;# 
  1510   000FF8                     TBLPTRU         equ	4088	;# 
  1511   000FF9                     PCLAT           equ	4089	;# 
  1512   000FF9                     PC              equ	4089	;# 
  1513   000FF9                     PCL             equ	4089	;# 
  1514   000FFA                     PCLATH          equ	4090	;# 
  1515   000FFB                     PCLATU          equ	4091	;# 
  1516   000FFC                     STKPTR          equ	4092	;# 
  1517   000FFD                     TOS             equ	4093	;# 
  1518   000FFD                     TOSL            equ	4093	;# 
  1519   000FFE                     TOSH            equ	4094	;# 
  1520   000FFF                     TOSU            equ	4095	;# 
  1521   000F80                     PORTA           equ	3968	;# 
  1522   000F81                     PORTB           equ	3969	;# 
  1523   000F82                     PORTC           equ	3970	;# 
  1524   000F83                     PORTD           equ	3971	;# 
  1525   000F84                     PORTE           equ	3972	;# 
  1526   000F89                     LATA            equ	3977	;# 
  1527   000F8A                     LATB            equ	3978	;# 
  1528   000F8B                     LATC            equ	3979	;# 
  1529   000F8C                     LATD            equ	3980	;# 
  1530   000F8D                     LATE            equ	3981	;# 
  1531   000F92                     TRISA           equ	3986	;# 
  1532   000F92                     DDRA            equ	3986	;# 
  1533   000F93                     TRISB           equ	3987	;# 
  1534   000F93                     DDRB            equ	3987	;# 
  1535   000F94                     TRISC           equ	3988	;# 
  1536   000F94                     DDRC            equ	3988	;# 
  1537   000F95                     TRISD           equ	3989	;# 
  1538   000F95                     DDRD            equ	3989	;# 
  1539   000F96                     TRISE           equ	3990	;# 
  1540   000F96                     DDRE            equ	3990	;# 
  1541   000F9D                     PIE1            equ	3997	;# 
  1542   000F9E                     PIR1            equ	3998	;# 
  1543   000F9F                     IPR1            equ	3999	;# 
  1544   000FA0                     PIE2            equ	4000	;# 
  1545   000FA1                     PIR2            equ	4001	;# 
  1546   000FA2                     IPR2            equ	4002	;# 
  1547   000FA6                     EECON1          equ	4006	;# 
  1548   000FA7                     EECON2          equ	4007	;# 
  1549   000FA8                     EEDATA          equ	4008	;# 
  1550   000FA9                     EEADR           equ	4009	;# 
  1551   000FAB                     RCSTA           equ	4011	;# 
  1552   000FAB                     RCSTA1          equ	4011	;# 
  1553   000FAC                     TXSTA           equ	4012	;# 
  1554   000FAC                     TXSTA1          equ	4012	;# 
  1555   000FAD                     TXREG           equ	4013	;# 
  1556   000FAD                     TXREG1          equ	4013	;# 
  1557   000FAE                     RCREG           equ	4014	;# 
  1558   000FAE                     RCREG1          equ	4014	;# 
  1559   000FAF                     SPBRG           equ	4015	;# 
  1560   000FAF                     SPBRG1          equ	4015	;# 
  1561   000FB1                     T3CON           equ	4017	;# 
  1562   000FB2                     TMR3            equ	4018	;# 
  1563   000FB2                     TMR3L           equ	4018	;# 
  1564   000FB3                     TMR3H           equ	4019	;# 
  1565   000FBA                     CCP2CON         equ	4026	;# 
  1566   000FBB                     CCPR2           equ	4027	;# 
  1567   000FBB                     CCPR2L          equ	4027	;# 
  1568   000FBC                     CCPR2H          equ	4028	;# 
  1569   000FBD                     CCP1CON         equ	4029	;# 
  1570   000FBE                     CCPR1           equ	4030	;# 
  1571   000FBE                     CCPR1L          equ	4030	;# 
  1572   000FBF                     CCPR1H          equ	4031	;# 
  1573   000FC1                     ADCON1          equ	4033	;# 
  1574   000FC2                     ADCON0          equ	4034	;# 
  1575   000FC3                     ADRES           equ	4035	;# 
  1576   000FC3                     ADRESL          equ	4035	;# 
  1577   000FC4                     ADRESH          equ	4036	;# 
  1578   000FC5                     SSPCON2         equ	4037	;# 
  1579   000FC6                     SSPCON1         equ	4038	;# 
  1580   000FC7                     SSPSTAT         equ	4039	;# 
  1581   000FC8                     SSPADD          equ	4040	;# 
  1582   000FC9                     SSPBUF          equ	4041	;# 
  1583   000FCA                     T2CON           equ	4042	;# 
  1584   000FCB                     PR2             equ	4043	;# 
  1585   000FCB                     MEMCON          equ	4043	;# 
  1586   000FCC                     TMR2            equ	4044	;# 
  1587   000FCD                     T1CON           equ	4045	;# 
  1588   000FCE                     TMR1            equ	4046	;# 
  1589   000FCE                     TMR1L           equ	4046	;# 
  1590   000FCF                     TMR1H           equ	4047	;# 
  1591   000FD0                     RCON            equ	4048	;# 
  1592   000FD1                     WDTCON          equ	4049	;# 
  1593   000FD2                     LVDCON          equ	4050	;# 
  1594   000FD3                     OSCCON          equ	4051	;# 
  1595   000FD5                     T0CON           equ	4053	;# 
  1596   000FD6                     TMR0            equ	4054	;# 
  1597   000FD6                     TMR0L           equ	4054	;# 
  1598   000FD7                     TMR0H           equ	4055	;# 
  1599   000FD8                     STATUS          equ	4056	;# 
  1600   000FD9                     FSR2            equ	4057	;# 
  1601   000FD9                     FSR2L           equ	4057	;# 
  1602   000FDA                     FSR2H           equ	4058	;# 
  1603   000FDB                     PLUSW2          equ	4059	;# 
  1604   000FDC                     PREINC2         equ	4060	;# 
  1605   000FDD                     POSTDEC2        equ	4061	;# 
  1606   000FDE                     POSTINC2        equ	4062	;# 
  1607   000FDF                     INDF2           equ	4063	;# 
  1608   000FE0                     BSR             equ	4064	;# 
  1609   000FE1                     FSR1            equ	4065	;# 
  1610   000FE1                     FSR1L           equ	4065	;# 
  1611   000FE2                     FSR1H           equ	4066	;# 
  1612   000FE3                     PLUSW1          equ	4067	;# 
  1613   000FE4                     PREINC1         equ	4068	;# 
  1614   000FE5                     POSTDEC1        equ	4069	;# 
  1615   000FE6                     POSTINC1        equ	4070	;# 
  1616   000FE7                     INDF1           equ	4071	;# 
  1617   000FE8                     WREG            equ	4072	;# 
  1618   000FE9                     FSR0            equ	4073	;# 
  1619   000FE9                     FSR0L           equ	4073	;# 
  1620   000FEA                     FSR0H           equ	4074	;# 
  1621   000FEB                     PLUSW0          equ	4075	;# 
  1622   000FEC                     PREINC0         equ	4076	;# 
  1623   000FED                     POSTDEC0        equ	4077	;# 
  1624   000FEE                     POSTINC0        equ	4078	;# 
  1625   000FEF                     INDF0           equ	4079	;# 
  1626   000FF0                     INTCON3         equ	4080	;# 
  1627   000FF1                     INTCON2         equ	4081	;# 
  1628   000FF2                     INTCON          equ	4082	;# 
  1629   000FF2                     INTCON1         equ	4082	;# 
  1630   000FF3                     PROD            equ	4083	;# 
  1631   000FF3                     PRODL           equ	4083	;# 
  1632   000FF4                     PRODH           equ	4084	;# 
  1633   000FF5                     TABLAT          equ	4085	;# 
  1634   000FF6                     TBLPTR          equ	4086	;# 
  1635   000FF6                     TBLPTRL         equ	4086	;# 
  1636   000FF7                     TBLPTRH         equ	4087	;# 
  1637   000FF8                     TBLPTRU         equ	4088	;# 
  1638   000FF9                     PCLAT           equ	4089	;# 
  1639   000FF9                     PC              equ	4089	;# 
  1640   000FF9                     PCL             equ	4089	;# 
  1641   000FFA                     PCLATH          equ	4090	;# 
  1642   000FFB                     PCLATU          equ	4091	;# 
  1643   000FFC                     STKPTR          equ	4092	;# 
  1644   000FFD                     TOS             equ	4093	;# 
  1645   000FFD                     TOSL            equ	4093	;# 
  1646   000FFE                     TOSH            equ	4094	;# 
  1647   000FFF                     TOSU            equ	4095	;# 
  1648   000F80                     PORTA           equ	3968	;# 
  1649   000F81                     PORTB           equ	3969	;# 
  1650   000F82                     PORTC           equ	3970	;# 
  1651   000F83                     PORTD           equ	3971	;# 
  1652   000F84                     PORTE           equ	3972	;# 
  1653   000F89                     LATA            equ	3977	;# 
  1654   000F8A                     LATB            equ	3978	;# 
  1655   000F8B                     LATC            equ	3979	;# 
  1656   000F8C                     LATD            equ	3980	;# 
  1657   000F8D                     LATE            equ	3981	;# 
  1658   000F92                     TRISA           equ	3986	;# 
  1659   000F92                     DDRA            equ	3986	;# 
  1660   000F93                     TRISB           equ	3987	;# 
  1661   000F93                     DDRB            equ	3987	;# 
  1662   000F94                     TRISC           equ	3988	;# 
  1663   000F94                     DDRC            equ	3988	;# 
  1664   000F95                     TRISD           equ	3989	;# 
  1665   000F95                     DDRD            equ	3989	;# 
  1666   000F96                     TRISE           equ	3990	;# 
  1667   000F96                     DDRE            equ	3990	;# 
  1668   000F9D                     PIE1            equ	3997	;# 
  1669   000F9E                     PIR1            equ	3998	;# 
  1670   000F9F                     IPR1            equ	3999	;# 
  1671   000FA0                     PIE2            equ	4000	;# 
  1672   000FA1                     PIR2            equ	4001	;# 
  1673   000FA2                     IPR2            equ	4002	;# 
  1674   000FA6                     EECON1          equ	4006	;# 
  1675   000FA7                     EECON2          equ	4007	;# 
  1676   000FA8                     EEDATA          equ	4008	;# 
  1677   000FA9                     EEADR           equ	4009	;# 
  1678   000FAB                     RCSTA           equ	4011	;# 
  1679   000FAB                     RCSTA1          equ	4011	;# 
  1680   000FAC                     TXSTA           equ	4012	;# 
  1681   000FAC                     TXSTA1          equ	4012	;# 
  1682   000FAD                     TXREG           equ	4013	;# 
  1683   000FAD                     TXREG1          equ	4013	;# 
  1684   000FAE                     RCREG           equ	4014	;# 
  1685   000FAE                     RCREG1          equ	4014	;# 
  1686   000FAF                     SPBRG           equ	4015	;# 
  1687   000FAF                     SPBRG1          equ	4015	;# 
  1688   000FB1                     T3CON           equ	4017	;# 
  1689   000FB2                     TMR3            equ	4018	;# 
  1690   000FB2                     TMR3L           equ	4018	;# 
  1691   000FB3                     TMR3H           equ	4019	;# 
  1692   000FBA                     CCP2CON         equ	4026	;# 
  1693   000FBB                     CCPR2           equ	4027	;# 
  1694   000FBB                     CCPR2L          equ	4027	;# 
  1695   000FBC                     CCPR2H          equ	4028	;# 
  1696   000FBD                     CCP1CON         equ	4029	;# 
  1697   000FBE                     CCPR1           equ	4030	;# 
  1698   000FBE                     CCPR1L          equ	4030	;# 
  1699   000FBF                     CCPR1H          equ	4031	;# 
  1700   000FC1                     ADCON1          equ	4033	;# 
  1701   000FC2                     ADCON0          equ	4034	;# 
  1702   000FC3                     ADRES           equ	4035	;# 
  1703   000FC3                     ADRESL          equ	4035	;# 
  1704   000FC4                     ADRESH          equ	4036	;# 
  1705   000FC5                     SSPCON2         equ	4037	;# 
  1706   000FC6                     SSPCON1         equ	4038	;# 
  1707   000FC7                     SSPSTAT         equ	4039	;# 
  1708   000FC8                     SSPADD          equ	4040	;# 
  1709   000FC9                     SSPBUF          equ	4041	;# 
  1710   000FCA                     T2CON           equ	4042	;# 
  1711   000FCB                     PR2             equ	4043	;# 
  1712   000FCB                     MEMCON          equ	4043	;# 
  1713   000FCC                     TMR2            equ	4044	;# 
  1714   000FCD                     T1CON           equ	4045	;# 
  1715   000FCE                     TMR1            equ	4046	;# 
  1716   000FCE                     TMR1L           equ	4046	;# 
  1717   000FCF                     TMR1H           equ	4047	;# 
  1718   000FD0                     RCON            equ	4048	;# 
  1719   000FD1                     WDTCON          equ	4049	;# 
  1720   000FD2                     LVDCON          equ	4050	;# 
  1721   000FD3                     OSCCON          equ	4051	;# 
  1722   000FD5                     T0CON           equ	4053	;# 
  1723   000FD6                     TMR0            equ	4054	;# 
  1724   000FD6                     TMR0L           equ	4054	;# 
  1725   000FD7                     TMR0H           equ	4055	;# 
  1726   000FD8                     STATUS          equ	4056	;# 
  1727   000FD9                     FSR2            equ	4057	;# 
  1728   000FD9                     FSR2L           equ	4057	;# 
  1729   000FDA                     FSR2H           equ	4058	;# 
  1730   000FDB                     PLUSW2          equ	4059	;# 
  1731   000FDC                     PREINC2         equ	4060	;# 
  1732   000FDD                     POSTDEC2        equ	4061	;# 
  1733   000FDE                     POSTINC2        equ	4062	;# 
  1734   000FDF                     INDF2           equ	4063	;# 
  1735   000FE0                     BSR             equ	4064	;# 
  1736   000FE1                     FSR1            equ	4065	;# 
  1737   000FE1                     FSR1L           equ	4065	;# 
  1738   000FE2                     FSR1H           equ	4066	;# 
  1739   000FE3                     PLUSW1          equ	4067	;# 
  1740   000FE4                     PREINC1         equ	4068	;# 
  1741   000FE5                     POSTDEC1        equ	4069	;# 
  1742   000FE6                     POSTINC1        equ	4070	;# 
  1743   000FE7                     INDF1           equ	4071	;# 
  1744   000FE8                     WREG            equ	4072	;# 
  1745   000FE9                     FSR0            equ	4073	;# 
  1746   000FE9                     FSR0L           equ	4073	;# 
  1747   000FEA                     FSR0H           equ	4074	;# 
  1748   000FEB                     PLUSW0          equ	4075	;# 
  1749   000FEC                     PREINC0         equ	4076	;# 
  1750   000FED                     POSTDEC0        equ	4077	;# 
  1751   000FEE                     POSTINC0        equ	4078	;# 
  1752   000FEF                     INDF0           equ	4079	;# 
  1753   000FF0                     INTCON3         equ	4080	;# 
  1754   000FF1                     INTCON2         equ	4081	;# 
  1755   000FF2                     INTCON          equ	4082	;# 
  1756   000FF2                     INTCON1         equ	4082	;# 
  1757   000FF3                     PROD            equ	4083	;# 
  1758   000FF3                     PRODL           equ	4083	;# 
  1759   000FF4                     PRODH           equ	4084	;# 
  1760   000FF5                     TABLAT          equ	4085	;# 
  1761   000FF6                     TBLPTR          equ	4086	;# 
  1762   000FF6                     TBLPTRL         equ	4086	;# 
  1763   000FF7                     TBLPTRH         equ	4087	;# 
  1764   000FF8                     TBLPTRU         equ	4088	;# 
  1765   000FF9                     PCLAT           equ	4089	;# 
  1766   000FF9                     PC              equ	4089	;# 
  1767   000FF9                     PCL             equ	4089	;# 
  1768   000FFA                     PCLATH          equ	4090	;# 
  1769   000FFB                     PCLATU          equ	4091	;# 
  1770   000FFC                     STKPTR          equ	4092	;# 
  1771   000FFD                     TOS             equ	4093	;# 
  1772   000FFD                     TOSL            equ	4093	;# 
  1773   000FFE                     TOSH            equ	4094	;# 
  1774   000FFF                     TOSU            equ	4095	;# 
  1775   000F80                     PORTA           equ	3968	;# 
  1776   000F81                     PORTB           equ	3969	;# 
  1777   000F82                     PORTC           equ	3970	;# 
  1778   000F83                     PORTD           equ	3971	;# 
  1779   000F84                     PORTE           equ	3972	;# 
  1780   000F89                     LATA            equ	3977	;# 
  1781   000F8A                     LATB            equ	3978	;# 
  1782   000F8B                     LATC            equ	3979	;# 
  1783   000F8C                     LATD            equ	3980	;# 
  1784   000F8D                     LATE            equ	3981	;# 
  1785   000F92                     TRISA           equ	3986	;# 
  1786   000F92                     DDRA            equ	3986	;# 
  1787   000F93                     TRISB           equ	3987	;# 
  1788   000F93                     DDRB            equ	3987	;# 
  1789   000F94                     TRISC           equ	3988	;# 
  1790   000F94                     DDRC            equ	3988	;# 
  1791   000F95                     TRISD           equ	3989	;# 
  1792   000F95                     DDRD            equ	3989	;# 
  1793   000F96                     TRISE           equ	3990	;# 
  1794   000F96                     DDRE            equ	3990	;# 
  1795   000F9D                     PIE1            equ	3997	;# 
  1796   000F9E                     PIR1            equ	3998	;# 
  1797   000F9F                     IPR1            equ	3999	;# 
  1798   000FA0                     PIE2            equ	4000	;# 
  1799   000FA1                     PIR2            equ	4001	;# 
  1800   000FA2                     IPR2            equ	4002	;# 
  1801   000FA6                     EECON1          equ	4006	;# 
  1802   000FA7                     EECON2          equ	4007	;# 
  1803   000FA8                     EEDATA          equ	4008	;# 
  1804   000FA9                     EEADR           equ	4009	;# 
  1805   000FAB                     RCSTA           equ	4011	;# 
  1806   000FAB                     RCSTA1          equ	4011	;# 
  1807   000FAC                     TXSTA           equ	4012	;# 
  1808   000FAC                     TXSTA1          equ	4012	;# 
  1809   000FAD                     TXREG           equ	4013	;# 
  1810   000FAD                     TXREG1          equ	4013	;# 
  1811   000FAE                     RCREG           equ	4014	;# 
  1812   000FAE                     RCREG1          equ	4014	;# 
  1813   000FAF                     SPBRG           equ	4015	;# 
  1814   000FAF                     SPBRG1          equ	4015	;# 
  1815   000FB1                     T3CON           equ	4017	;# 
  1816   000FB2                     TMR3            equ	4018	;# 
  1817   000FB2                     TMR3L           equ	4018	;# 
  1818   000FB3                     TMR3H           equ	4019	;# 
  1819   000FBA                     CCP2CON         equ	4026	;# 
  1820   000FBB                     CCPR2           equ	4027	;# 
  1821   000FBB                     CCPR2L          equ	4027	;# 
  1822   000FBC                     CCPR2H          equ	4028	;# 
  1823   000FBD                     CCP1CON         equ	4029	;# 
  1824   000FBE                     CCPR1           equ	4030	;# 
  1825   000FBE                     CCPR1L          equ	4030	;# 
  1826   000FBF                     CCPR1H          equ	4031	;# 
  1827   000FC1                     ADCON1          equ	4033	;# 
  1828   000FC2                     ADCON0          equ	4034	;# 
  1829   000FC3                     ADRES           equ	4035	;# 
  1830   000FC3                     ADRESL          equ	4035	;# 
  1831   000FC4                     ADRESH          equ	4036	;# 
  1832   000FC5                     SSPCON2         equ	4037	;# 
  1833   000FC6                     SSPCON1         equ	4038	;# 
  1834   000FC7                     SSPSTAT         equ	4039	;# 
  1835   000FC8                     SSPADD          equ	4040	;# 
  1836   000FC9                     SSPBUF          equ	4041	;# 
  1837   000FCA                     T2CON           equ	4042	;# 
  1838   000FCB                     PR2             equ	4043	;# 
  1839   000FCB                     MEMCON          equ	4043	;# 
  1840   000FCC                     TMR2            equ	4044	;# 
  1841   000FCD                     T1CON           equ	4045	;# 
  1842   000FCE                     TMR1            equ	4046	;# 
  1843   000FCE                     TMR1L           equ	4046	;# 
  1844   000FCF                     TMR1H           equ	4047	;# 
  1845   000FD0                     RCON            equ	4048	;# 
  1846   000FD1                     WDTCON          equ	4049	;# 
  1847   000FD2                     LVDCON          equ	4050	;# 
  1848   000FD3                     OSCCON          equ	4051	;# 
  1849   000FD5                     T0CON           equ	4053	;# 
  1850   000FD6                     TMR0            equ	4054	;# 
  1851   000FD6                     TMR0L           equ	4054	;# 
  1852   000FD7                     TMR0H           equ	4055	;# 
  1853   000FD8                     STATUS          equ	4056	;# 
  1854   000FD9                     FSR2            equ	4057	;# 
  1855   000FD9                     FSR2L           equ	4057	;# 
  1856   000FDA                     FSR2H           equ	4058	;# 
  1857   000FDB                     PLUSW2          equ	4059	;# 
  1858   000FDC                     PREINC2         equ	4060	;# 
  1859   000FDD                     POSTDEC2        equ	4061	;# 
  1860   000FDE                     POSTINC2        equ	4062	;# 
  1861   000FDF                     INDF2           equ	4063	;# 
  1862   000FE0                     BSR             equ	4064	;# 
  1863   000FE1                     FSR1            equ	4065	;# 
  1864   000FE1                     FSR1L           equ	4065	;# 
  1865   000FE2                     FSR1H           equ	4066	;# 
  1866   000FE3                     PLUSW1          equ	4067	;# 
  1867   000FE4                     PREINC1         equ	4068	;# 
  1868   000FE5                     POSTDEC1        equ	4069	;# 
  1869   000FE6                     POSTINC1        equ	4070	;# 
  1870   000FE7                     INDF1           equ	4071	;# 
  1871   000FE8                     WREG            equ	4072	;# 
  1872   000FE9                     FSR0            equ	4073	;# 
  1873   000FE9                     FSR0L           equ	4073	;# 
  1874   000FEA                     FSR0H           equ	4074	;# 
  1875   000FEB                     PLUSW0          equ	4075	;# 
  1876   000FEC                     PREINC0         equ	4076	;# 
  1877   000FED                     POSTDEC0        equ	4077	;# 
  1878   000FEE                     POSTINC0        equ	4078	;# 
  1879   000FEF                     INDF0           equ	4079	;# 
  1880   000FF0                     INTCON3         equ	4080	;# 
  1881   000FF1                     INTCON2         equ	4081	;# 
  1882   000FF2                     INTCON          equ	4082	;# 
  1883   000FF2                     INTCON1         equ	4082	;# 
  1884   000FF3                     PROD            equ	4083	;# 
  1885   000FF3                     PRODL           equ	4083	;# 
  1886   000FF4                     PRODH           equ	4084	;# 
  1887   000FF5                     TABLAT          equ	4085	;# 
  1888   000FF6                     TBLPTR          equ	4086	;# 
  1889   000FF6                     TBLPTRL         equ	4086	;# 
  1890   000FF7                     TBLPTRH         equ	4087	;# 
  1891   000FF8                     TBLPTRU         equ	4088	;# 
  1892   000FF9                     PCLAT           equ	4089	;# 
  1893   000FF9                     PC              equ	4089	;# 
  1894   000FF9                     PCL             equ	4089	;# 
  1895   000FFA                     PCLATH          equ	4090	;# 
  1896   000FFB                     PCLATU          equ	4091	;# 
  1897   000FFC                     STKPTR          equ	4092	;# 
  1898   000FFD                     TOS             equ	4093	;# 
  1899   000FFD                     TOSL            equ	4093	;# 
  1900   000FFE                     TOSH            equ	4094	;# 
  1901   000FFF                     TOSU            equ	4095	;# 
  1902   000F80                     PORTA           equ	3968	;# 
  1903   000F81                     PORTB           equ	3969	;# 
  1904   000F82                     PORTC           equ	3970	;# 
  1905   000F83                     PORTD           equ	3971	;# 
  1906   000F84                     PORTE           equ	3972	;# 
  1907   000F89                     LATA            equ	3977	;# 
  1908   000F8A                     LATB            equ	3978	;# 
  1909   000F8B                     LATC            equ	3979	;# 
  1910   000F8C                     LATD            equ	3980	;# 
  1911   000F8D                     LATE            equ	3981	;# 
  1912   000F92                     TRISA           equ	3986	;# 
  1913   000F92                     DDRA            equ	3986	;# 
  1914   000F93                     TRISB           equ	3987	;# 
  1915   000F93                     DDRB            equ	3987	;# 
  1916   000F94                     TRISC           equ	3988	;# 
  1917   000F94                     DDRC            equ	3988	;# 
  1918   000F95                     TRISD           equ	3989	;# 
  1919   000F95                     DDRD            equ	3989	;# 
  1920   000F96                     TRISE           equ	3990	;# 
  1921   000F96                     DDRE            equ	3990	;# 
  1922   000F9D                     PIE1            equ	3997	;# 
  1923   000F9E                     PIR1            equ	3998	;# 
  1924   000F9F                     IPR1            equ	3999	;# 
  1925   000FA0                     PIE2            equ	4000	;# 
  1926   000FA1                     PIR2            equ	4001	;# 
  1927   000FA2                     IPR2            equ	4002	;# 
  1928   000FA6                     EECON1          equ	4006	;# 
  1929   000FA7                     EECON2          equ	4007	;# 
  1930   000FA8                     EEDATA          equ	4008	;# 
  1931   000FA9                     EEADR           equ	4009	;# 
  1932   000FAB                     RCSTA           equ	4011	;# 
  1933   000FAB                     RCSTA1          equ	4011	;# 
  1934   000FAC                     TXSTA           equ	4012	;# 
  1935   000FAC                     TXSTA1          equ	4012	;# 
  1936   000FAD                     TXREG           equ	4013	;# 
  1937   000FAD                     TXREG1          equ	4013	;# 
  1938   000FAE                     RCREG           equ	4014	;# 
  1939   000FAE                     RCREG1          equ	4014	;# 
  1940   000FAF                     SPBRG           equ	4015	;# 
  1941   000FAF                     SPBRG1          equ	4015	;# 
  1942   000FB1                     T3CON           equ	4017	;# 
  1943   000FB2                     TMR3            equ	4018	;# 
  1944   000FB2                     TMR3L           equ	4018	;# 
  1945   000FB3                     TMR3H           equ	4019	;# 
  1946   000FBA                     CCP2CON         equ	4026	;# 
  1947   000FBB                     CCPR2           equ	4027	;# 
  1948   000FBB                     CCPR2L          equ	4027	;# 
  1949   000FBC                     CCPR2H          equ	4028	;# 
  1950   000FBD                     CCP1CON         equ	4029	;# 
  1951   000FBE                     CCPR1           equ	4030	;# 
  1952   000FBE                     CCPR1L          equ	4030	;# 
  1953   000FBF                     CCPR1H          equ	4031	;# 
  1954   000FC1                     ADCON1          equ	4033	;# 
  1955   000FC2                     ADCON0          equ	4034	;# 
  1956   000FC3                     ADRES           equ	4035	;# 
  1957   000FC3                     ADRESL          equ	4035	;# 
  1958   000FC4                     ADRESH          equ	4036	;# 
  1959   000FC5                     SSPCON2         equ	4037	;# 
  1960   000FC6                     SSPCON1         equ	4038	;# 
  1961   000FC7                     SSPSTAT         equ	4039	;# 
  1962   000FC8                     SSPADD          equ	4040	;# 
  1963   000FC9                     SSPBUF          equ	4041	;# 
  1964   000FCA                     T2CON           equ	4042	;# 
  1965   000FCB                     PR2             equ	4043	;# 
  1966   000FCB                     MEMCON          equ	4043	;# 
  1967   000FCC                     TMR2            equ	4044	;# 
  1968   000FCD                     T1CON           equ	4045	;# 
  1969   000FCE                     TMR1            equ	4046	;# 
  1970   000FCE                     TMR1L           equ	4046	;# 
  1971   000FCF                     TMR1H           equ	4047	;# 
  1972   000FD0                     RCON            equ	4048	;# 
  1973   000FD1                     WDTCON          equ	4049	;# 
  1974   000FD2                     LVDCON          equ	4050	;# 
  1975   000FD3                     OSCCON          equ	4051	;# 
  1976   000FD5                     T0CON           equ	4053	;# 
  1977   000FD6                     TMR0            equ	4054	;# 
  1978   000FD6                     TMR0L           equ	4054	;# 
  1979   000FD7                     TMR0H           equ	4055	;# 
  1980   000FD8                     STATUS          equ	4056	;# 
  1981   000FD9                     FSR2            equ	4057	;# 
  1982   000FD9                     FSR2L           equ	4057	;# 
  1983   000FDA                     FSR2H           equ	4058	;# 
  1984   000FDB                     PLUSW2          equ	4059	;# 
  1985   000FDC                     PREINC2         equ	4060	;# 
  1986   000FDD                     POSTDEC2        equ	4061	;# 
  1987   000FDE                     POSTINC2        equ	4062	;# 
  1988   000FDF                     INDF2           equ	4063	;# 
  1989   000FE0                     BSR             equ	4064	;# 
  1990   000FE1                     FSR1            equ	4065	;# 
  1991   000FE1                     FSR1L           equ	4065	;# 
  1992   000FE2                     FSR1H           equ	4066	;# 
  1993   000FE3                     PLUSW1          equ	4067	;# 
  1994   000FE4                     PREINC1         equ	4068	;# 
  1995   000FE5                     POSTDEC1        equ	4069	;# 
  1996   000FE6                     POSTINC1        equ	4070	;# 
  1997   000FE7                     INDF1           equ	4071	;# 
  1998   000FE8                     WREG            equ	4072	;# 
  1999   000FE9                     FSR0            equ	4073	;# 
  2000   000FE9                     FSR0L           equ	4073	;# 
  2001   000FEA                     FSR0H           equ	4074	;# 
  2002   000FEB                     PLUSW0          equ	4075	;# 
  2003   000FEC                     PREINC0         equ	4076	;# 
  2004   000FED                     POSTDEC0        equ	4077	;# 
  2005   000FEE                     POSTINC0        equ	4078	;# 
  2006   000FEF                     INDF0           equ	4079	;# 
  2007   000FF0                     INTCON3         equ	4080	;# 
  2008   000FF1                     INTCON2         equ	4081	;# 
  2009   000FF2                     INTCON          equ	4082	;# 
  2010   000FF2                     INTCON1         equ	4082	;# 
  2011   000FF3                     PROD            equ	4083	;# 
  2012   000FF3                     PRODL           equ	4083	;# 
  2013   000FF4                     PRODH           equ	4084	;# 
  2014   000FF5                     TABLAT          equ	4085	;# 
  2015   000FF6                     TBLPTR          equ	4086	;# 
  2016   000FF6                     TBLPTRL         equ	4086	;# 
  2017   000FF7                     TBLPTRH         equ	4087	;# 
  2018   000FF8                     TBLPTRU         equ	4088	;# 
  2019   000FF9                     PCLAT           equ	4089	;# 
  2020   000FF9                     PC              equ	4089	;# 
  2021   000FF9                     PCL             equ	4089	;# 
  2022   000FFA                     PCLATH          equ	4090	;# 
  2023   000FFB                     PCLATU          equ	4091	;# 
  2024   000FFC                     STKPTR          equ	4092	;# 
  2025   000FFD                     TOS             equ	4093	;# 
  2026   000FFD                     TOSL            equ	4093	;# 
  2027   000FFE                     TOSH            equ	4094	;# 
  2028   000FFF                     TOSU            equ	4095	;# 
  2029                           
  2030                           	psect	idataCOMRAM
  2031   00141A                     __pidataCOMRAM:
  2032                           	callstack 0
  2033                           
  2034                           ;initializer for __LAT_registers
  2035   00141A  89                 	db	137
  2036   00141B  0F                 	db	15
  2037   00141C  8A                 	db	138
  2038   00141D  0F                 	db	15
  2039   00141E  8B                 	db	139
  2040   00141F  0F                 	db	15
  2041   001420  8C                 	db	140
  2042   001421  0F                 	db	15
  2043   001422  8D                 	db	141
  2044   001423  0F                 	db	15
  2045                           
  2046                           ;initializer for __TRIS_registers
  2047   001424  92                 	db	146
  2048   001425  0F                 	db	15
  2049   001426  93                 	db	147
  2050   001427  0F                 	db	15
  2051   001428  94                 	db	148
  2052   001429  0F                 	db	15
  2053   00142A  95                 	db	149
  2054   00142B  0F                 	db	15
  2055   00142C  96                 	db	150
  2056   00142D  0F                 	db	15
  2057                           
  2058                           ;initializer for _btn2
  2059   00142E  4C                 	db	76
  2060   00142F  01                 	db	1
  2061   001430  00                 	db	0
  2062                           
  2063                           ;initializer for _btn1
  2064   001431  E0                 	db	224
  2065   001432  01                 	db	1
  2066   001433  01                 	db	1
  2067                           
  2068                           ;initializer for _motor2
  2069   001434  7C                 	db	124
  2070   001435  4A                 	db	74
  2071                           
  2072                           ;initializer for _motor1
  2073   001436  08                 	db	8
  2074   001437  10                 	db	16
  2075                           
  2076                           ;initializer for _RB7f
  2077   001438  01                 	db	1
  2078                           
  2079                           ;initializer for _RB6f
  2080   001439  01                 	db	1
  2081                           
  2082                           ;initializer for _RB5f
  2083   00143A  01                 	db	1
  2084                           
  2085                           ;initializer for _RB4f
  2086   00143B  01                 	db	1
  2087                           
  2088                           ;initializer for _relay1
  2089   00143C  08                 	db	8
  2090                           
  2091                           ;initializer for _ADC1
  2092   00143D  8C                 	db	low ___ADC
  2093   00143E  10                 	db	high ___ADC
  2094   00143F  07                 	db	7
  2095   001440  02                 	db	2
  2096   001441  01                 	db	1
  2097                           
  2098                           	psect	idataBANK0
  2099   0013B8                     __pidataBANK0:
  2100                           	callstack 0
  2101                           
  2102                           ;initializer for _LCD1
  2103   0013B8  93                 	db	147
  2104   0013B9  9B                 	db	155
  2105   0013BA  01                 	db	1
  2106   0013BB  A2                 	db	162
  2107   0013BC  AA                 	db	170
  2108   0013BD  B2                 	db	178
  2109   0013BE  BA                 	db	186
  2110   0013BF  A3                 	db	163
  2111   0013C0  AB                 	db	171
  2112   0013C1  B3                 	db	179
  2113   0013C2  BB                 	db	187
  2114                           
  2115                           ;initializer for __PORT_registers
  2116   0013C3  80                 	db	128
  2117   0013C4  0F                 	db	15
  2118   0013C5  81                 	db	129
  2119   0013C6  0F                 	db	15
  2120   0013C7  82                 	db	130
  2121   0013C8  0F                 	db	15
  2122   0013C9  83                 	db	131
  2123   0013CA  0F                 	db	15
  2124   0013CB  84                 	db	132
  2125   0013CC  0F                 	db	15
  2126                           
  2127                           ;initializer for _keypad1
  2128   0013CD  21                 	db	33
  2129   0013CE  19                 	db	25
  2130   0013CF  11                 	db	17
  2131   0013D0  09                 	db	9
  2132   0013D1  2B                 	db	43
  2133   0013D2  23                 	db	35
  2134   0013D3  1B                 	db	27
  2135   0013D4  13                 	db	19
  2136   0013D5  00                 	db	0
  2137                           
  2138                           ;initializer for _segment1
  2139   0013D6  00                 	db	0
  2140   0013D7  08                 	db	8
  2141   0013D8  10                 	db	16
  2142   0013D9  18                 	db	24
  2143   0013DA  00                 	db	0
  2144                           
  2145                           ;initializer for _INT_1
  2146   0013DB  86                 	db	low ___INT1
  2147   0013DC  14                 	db	high ___INT1
  2148   0013DD  49                 	db	73
  2149   0013DE  01                 	db	1
  2150                           
  2151                           ;initializer for _LED_arr
  2152   0013DF  3B                 	db	59
  2153   0013E0  33                 	db	51
  2154   0013E1  2B                 	db	43
  2155   0013E2  23                 	db	35
  2156   0013E3  3A                 	db	58
  2157   0013E4  32                 	db	50
  2158   0013E5  2A                 	db	42
  2159   0013E6  22                 	db	34
  2160   0013E7  1B                 	db	27
  2161   0013E8  13                 	db	19
  2162                           
  2163                           	psect	smallconst
  2164   000600                     __psmallconst:
  2165                           	callstack 0
  2166   000600  00                 	db	0
  2167   000601                     _keypad_elements:
  2168                           	callstack 0
  2169   000601  31                 	db	49
  2170   000602  32                 	db	50
  2171   000603  33                 	db	51
  2172   000604  41                 	db	65
  2173   000605  34                 	db	52
  2174   000606  35                 	db	53
  2175   000607  36                 	db	54
  2176   000608  42                 	db	66
  2177   000609  37                 	db	55
  2178   00060A  38                 	db	56
  2179   00060B  39                 	db	57
  2180   00060C  43                 	db	67
  2181   00060D  2A                 	db	42
  2182   00060E  30                 	db	48
  2183   00060F  23                 	db	35
  2184   000610  44                 	db	68
  2185   000611                     __end_of_keypad_elements:
  2186                           	callstack 0
  2187   000611                     STR_1:
  2188   000611  25                 	db	37
  2189   000612  69                 	db	105	;'i'
  2190   000613  00                 	db	0
  2191   000611                     STR_2           equ	STR_1
  2192   000611                     STR_3           equ	STR_1
  2193   000614  00                 	db	0	; dummy byte at the end
  2194   000600                     __smallconst    set	__psmallconst
  2195   000600                     __mediumconst   set	__psmallconst
  2196   000002                     __activetblptr  equ	2
  2197                           
  2198                           	psect	nvCOMRAM
  2199   000068                     __pnvCOMRAM:
  2200                           	callstack 0
  2201   000068                     _ret:
  2202                           	callstack 0
  2203   000068                     	ds	1
  2204   000F81                     _PORTBbits      set	3969
  2205   000FF1                     _INTCON2bits    set	4081
  2206   000FF0                     _INTCON3bits    set	4080
  2207   000FD0                     _RCONbits       set	4048
  2208   000F9D                     _PIE1bits       set	3997
  2209   000F9E                     _PIR1bits       set	3998
  2210   000FA7                     _EECON2         set	4007
  2211   000FF2                     _INTCONbits     set	4082
  2212   000FF2                     _INTCON1bits    set	4082
  2213   000FA8                     _EEDATA         set	4008
  2214   000FA6                     _EECON1bits     set	4006
  2215   000FA9                     _EEADR          set	4009
  2216   000F96                     _TRISEbits      set	3990
  2217   000F92                     _TRISAbits      set	3986
  2218   000FC3                     _ADRESL         set	4035
  2219   000FC4                     _ADRESH         set	4036
  2220   000FC1                     _ADCON1bits     set	4033
  2221   000FC2                     _ADCON0bits     set	4034
  2222   000F84                     _PORTE          set	3972
  2223   000F83                     _PORTD          set	3971
  2224   000F82                     _PORTC          set	3970
  2225   000F81                     _PORTB          set	3969
  2226   000F80                     _PORTA          set	3968
  2227   000F8D                     _LATE           set	3981
  2228   000F8C                     _LATD           set	3980
  2229   000F8B                     _LATC           set	3979
  2230   000F8A                     _LATB           set	3978
  2231   000F89                     _LATA           set	3977
  2232   000F96                     _TRISE          set	3990
  2233   000F95                     _TRISD          set	3989
  2234   000F94                     _TRISC          set	3988
  2235   000F93                     _TRISB          set	3987
  2236   000F92                     _TRISA          set	3986
  2237                           
  2238                           ; #config settings
  2239                           
  2240                           	psect	cinit
  2241   00116E                     __pcinit:
  2242                           	callstack 0
  2243   00116E                     start_initialization:
  2244                           	callstack 0
  2245   00116E                     __initialization:
  2246                           	callstack 0
  2247                           
  2248                           ; Initialize objects allocated to BANK0 (49 bytes)
  2249                           ; load TBLPTR registers with __pidataBANK0
  2250   00116E  0EB8               	movlw	low __pidataBANK0
  2251   001170  6EF6               	movwf	tblptrl,c
  2252   001172  0E13               	movlw	high __pidataBANK0
  2253   001174  6EF7               	movwf	tblptrh,c
  2254   001176  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2255   001178  6EF8               	movwf	tblptru,c
  2256   00117A  EE00  F080         	lfsr	0,__pdataBANK0
  2257   00117E  EE10 F031          	lfsr	1,49
  2258   001182                     copy_data0:
  2259   001182  0009               	tblrd		*+
  2260   001184  CFF5 FFEE          	movff	tablat,postinc0
  2261   001188  50E5               	movf	postdec1,w,c
  2262   00118A  50E1               	movf	fsr1l,w,c
  2263   00118C  E1FA               	bnz	copy_data0
  2264                           
  2265                           ; Initialize objects allocated to COMRAM (40 bytes)
  2266                           ; load TBLPTR registers with __pidataCOMRAM
  2267   00118E  0E1A               	movlw	low __pidataCOMRAM
  2268   001190  6EF6               	movwf	tblptrl,c
  2269   001192  0E14               	movlw	high __pidataCOMRAM
  2270   001194  6EF7               	movwf	tblptrh,c
  2271   001196  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2272   001198  6EF8               	movwf	tblptru,c
  2273   00119A  EE00  F001         	lfsr	0,__pdataCOMRAM
  2274   00119E  EE10 F028          	lfsr	1,40
  2275   0011A2                     copy_data1:
  2276   0011A2  0009               	tblrd		*+
  2277   0011A4  CFF5 FFEE          	movff	tablat,postinc0
  2278   0011A8  50E5               	movf	postdec1,w,c
  2279   0011AA  50E1               	movf	fsr1l,w,c
  2280   0011AC  E1FA               	bnz	copy_data1
  2281                           
  2282                           ; Clear objects allocated to COMRAM (37 bytes)
  2283   0011AE  EE00  F029         	lfsr	0,__pbssCOMRAM
  2284   0011B2  0E25               	movlw	37
  2285   0011B4                     clear_0:
  2286   0011B4  6AEE               	clrf	postinc0,c
  2287   0011B6  06E8               	decf	wreg,f,c
  2288   0011B8  E1FD               	bnz	clear_0
  2289   0011BA                     end_of_initialization:
  2290                           	callstack 0
  2291   0011BA                     __end_of__initialization:
  2292                           	callstack 0
  2293   0011BA  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2294   0011BC  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2295   0011BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2296   0011C0  6EF8               	movwf	tblptru,c
  2297   0011C2  0100               	movlb	0
  2298   0011C4  EF5E  F009         	goto	_main	;jump to C main() function
  2299                           
  2300                           	psect	bssCOMRAM
  2301   000029                     __pbssCOMRAM:
  2302                           	callstack 0
  2303   000029                     _errno:
  2304                           	callstack 0
  2305   000029                     	ds	2
  2306   00002B                     _RB7_handler_low:
  2307                           	callstack 0
  2308   00002B                     	ds	2
  2309   00002D                     _RB7_handler_high:
  2310                           	callstack 0
  2311   00002D                     	ds	2
  2312   00002F                     _RB6_handler_low:
  2313                           	callstack 0
  2314   00002F                     	ds	2
  2315   000031                     _RB6_handler_high:
  2316                           	callstack 0
  2317   000031                     	ds	2
  2318   000033                     _RB5_handler_low:
  2319                           	callstack 0
  2320   000033                     	ds	2
  2321   000035                     _RB5_handler_high:
  2322                           	callstack 0
  2323   000035                     	ds	2
  2324   000037                     _RB4_handler_high:
  2325                           	callstack 0
  2326   000037                     	ds	2
  2327   000039                     _RB4_handler_low:
  2328                           	callstack 0
  2329   000039                     	ds	2
  2330   00003B                     _INT2_handler:
  2331                           	callstack 0
  2332   00003B                     	ds	2
  2333   00003D                     _INT1_handler:
  2334                           	callstack 0
  2335   00003D                     	ds	2
  2336   00003F                     _INT0_handler:
  2337                           	callstack 0
  2338   00003F                     	ds	2
  2339   000041                     _ADC_callback:
  2340                           	callstack 0
  2341   000041                     	ds	2
  2342   000043                     _Iflag:
  2343                           	callstack 0
  2344   000043                     	ds	1
  2345   000044                     _i:
  2346                           	callstack 0
  2347   000044                     	ds	1
  2348   000045                     relay_turn_off@F2875:
  2349                           	callstack 0
  2350   000045                     	ds	1
  2351   000046                     relay_turn_on@F2870:
  2352                           	callstack 0
  2353   000046                     	ds	1
  2354   000047                     relay_initialize@F2865:
  2355                           	callstack 0
  2356   000047                     	ds	1
  2357   000048                     LED_toggle@F2885:
  2358                           	callstack 0
  2359   000048                     	ds	1
  2360   000049                     LED_off@F2880:
  2361                           	callstack 0
  2362   000049                     	ds	1
  2363   00004A                     LED_on@F2875:
  2364                           	callstack 0
  2365   00004A                     	ds	1
  2366   00004B                     LED_initialize@F2870:
  2367                           	callstack 0
  2368   00004B                     	ds	1
  2369   00004C                     _ADC_output:
  2370                           	callstack 0
  2371   00004C                     	ds	2
  2372                           
  2373                           	psect	dataCOMRAM
  2374   000001                     __pdataCOMRAM:
  2375                           	callstack 0
  2376   000001                     __LAT_registers:
  2377                           	callstack 0
  2378   000001                     	ds	10
  2379   00000B                     __TRIS_registers:
  2380                           	callstack 0
  2381   00000B                     	ds	10
  2382   000015                     _btn2:
  2383                           	callstack 0
  2384   000015                     	ds	3
  2385   000018                     _btn1:
  2386                           	callstack 0
  2387   000018                     	ds	3
  2388   00001B                     _motor2:
  2389                           	callstack 0
  2390   00001B                     	ds	2
  2391   00001D                     _motor1:
  2392                           	callstack 0
  2393   00001D                     	ds	2
  2394   00001F                     _RB7f:
  2395                           	callstack 0
  2396   00001F                     	ds	1
  2397   000020                     _RB6f:
  2398                           	callstack 0
  2399   000020                     	ds	1
  2400   000021                     _RB5f:
  2401                           	callstack 0
  2402   000021                     	ds	1
  2403   000022                     _RB4f:
  2404                           	callstack 0
  2405   000022                     	ds	1
  2406   000023                     _relay1:
  2407                           	callstack 0
  2408   000023                     	ds	1
  2409   000024                     _ADC1:
  2410                           	callstack 0
  2411   000024                     	ds	5
  2412                           
  2413                           	psect	dataBANK0
  2414   000080                     __pdataBANK0:
  2415                           	callstack 0
  2416   000080                     _LCD1:
  2417                           	callstack 0
  2418   000080                     	ds	11
  2419   00008B                     __PORT_registers:
  2420                           	callstack 0
  2421   00008B                     	ds	10
  2422   000095                     _keypad1:
  2423                           	callstack 0
  2424   000095                     	ds	9
  2425   00009E                     _segment1:
  2426                           	callstack 0
  2427   00009E                     	ds	5
  2428   0000A3                     _INT_1:
  2429                           	callstack 0
  2430   0000A3                     	ds	4
  2431   0000A7                     _LED_arr:
  2432                           	callstack 0
  2433   0000A7                     	ds	10
  2434                           
  2435                           	psect	cstackBANK0
  2436   0000B1                     __pcstackBANK0:
  2437                           	callstack 0
  2438   0000B1                     GPIO_check_access@_pin_config:
  2439                           	callstack 0
  2440   0000B1                     INT_ADC_set_callback_routine@callback:
  2441                           	callstack 0
  2442   0000B1                     ??_ADC_set_pin_config:
  2443   0000B1                     
  2444                           ; 1 bytes @ 0x0
  2445   0000B1                     	ds	1
  2446   0000B2                     ??_GPIO_check_access:
  2447                           
  2448                           ; 1 bytes @ 0x1
  2449   0000B2                     	ds	1
  2450   0000B3                     ADC_set_pin_config@channel:
  2451                           	callstack 0
  2452   0000B3                     GPIO_check_access@ret:
  2453                           	callstack 0
  2454   0000B3                     
  2455                           ; 1 bytes @ 0x2
  2456   0000B3                     	ds	1
  2457   0000B4                     ADC_set_pin_config@ret:
  2458                           	callstack 0
  2459   0000B4                     GPIO_pin_direction_initialize@_pin_config:
  2460                           	callstack 0
  2461   0000B4                     GPIO_pin_write_logic@_pin_config:
  2462                           	callstack 0
  2463                           
  2464                           ; 1 bytes @ 0x3
  2465   0000B4                     	ds	1
  2466   0000B5                     GPIO_pin_write_logic@logic:
  2467                           	callstack 0
  2468   0000B5                     ??_GPIO_pin_direction_initialize:
  2469   0000B5                     ??_ADC_select_channel:
  2470                           
  2471                           ; 1 bytes @ 0x4
  2472   0000B5                     	ds	1
  2473   0000B6                     ADC_select_channel@ret:
  2474                           	callstack 0
  2475   0000B6                     ??_GPIO_pin_write_logic:
  2476                           
  2477                           ; 1 bytes @ 0x5
  2478   0000B6                     	ds	1
  2479   0000B7                     ADC_select_channel@lCH:
  2480                           	callstack 0
  2481                           
  2482                           ; 1 bytes @ 0x6
  2483   0000B7                     	ds	1
  2484   0000B8                     ADC_init@lADC:
  2485                           	callstack 0
  2486   0000B8                     ADC_convert@lADC:
  2487                           	callstack 0
  2488                           
  2489                           ; 1 bytes @ 0x7
  2490   0000B8                     	ds	1
  2491   0000B9                     ADC_convert@lCH:
  2492                           	callstack 0
  2493   0000B9                     ??_ADC_init:
  2494                           
  2495                           ; 1 bytes @ 0x8
  2496   0000B9                     	ds	1
  2497   0000BA                     _ADC_init$1072:
  2498                           	callstack 0
  2499   0000BA                     GPIO_pin_direction_initialize@ret:
  2500                           	callstack 0
  2501   0000BA                     
  2502                           ; 1 bytes @ 0x9
  2503   0000BA                     	ds	1
  2504   0000BB                     _ADC_init$1084:
  2505                           	callstack 0
  2506   0000BB                     GPIO_pin_write_logic@ret:
  2507                           	callstack 0
  2508                           
  2509                           ; 1 bytes @ 0xA
  2510   0000BB                     	ds	1
  2511   0000BC                     _ADC_init$1085:
  2512                           	callstack 0
  2513   0000BC                     GPIO_pin_initialize@_pin_config:
  2514                           	callstack 0
  2515                           
  2516                           ; 1 bytes @ 0xB
  2517   0000BC                     	ds	1
  2518   0000BD                     ADC_init@ret:
  2519                           	callstack 0
  2520   0000BD                     GPIO_pin_initialize@ret:
  2521                           	callstack 0
  2522   0000BD                     
  2523                           ; 1 bytes @ 0xC
  2524   0000BD                     	ds	1
  2525   0000BE                     LED_initialize@led:
  2526                           	callstack 0
  2527                           
  2528                           ; 1 bytes @ 0xD
  2529   0000BE                     	ds	1
  2530   0000BF                     ??_LED_initialize:
  2531                           
  2532                           ; 1 bytes @ 0xE
  2533   0000BF                     	ds	1
  2534   0000C0                     LED_initialize@ret:
  2535                           	callstack 0
  2536                           
  2537                           ; 1 bytes @ 0xF
  2538   0000C0                     	ds	1
  2539   0000C1                     LED_initialize@pin_local:
  2540                           	callstack 0
  2541                           
  2542                           ; 1 bytes @ 0x10
  2543   0000C1                     	ds	1
  2544   0000C2                     _ecu_init$823:
  2545                           	callstack 0
  2546   0000C2                     
  2547                           ; 1 bytes @ 0x11
  2548   0000C2                     	ds	1
  2549   0000C3                     ecu_init@ret:
  2550                           	callstack 0
  2551                           
  2552                           ; 1 bytes @ 0x12
  2553   0000C3                     	ds	1
  2554   0000C4                     _application_initialize$2316:
  2555                           	callstack 0
  2556   0000C4                     
  2557                           ; 1 bytes @ 0x13
  2558   0000C4                     	ds	1
  2559   0000C5                     application_initialize@ret:
  2560                           	callstack 0
  2561                           
  2562                           ; 1 bytes @ 0x14
  2563   0000C5                     	ds	1
  2564   0000C6                     
  2565                           ; 1 bytes @ 0x15
  2566                           
  2567                           	psect	cstackCOMRAM
  2568   00004E                     __pcstackCOMRAM:
  2569                           	callstack 0
  2570   00004E                     RB4_ISR@fl:
  2571                           	callstack 0
  2572   00004E                     RB5_ISR@fl:
  2573                           	callstack 0
  2574   00004E                     RB6_ISR@fl:
  2575                           	callstack 0
  2576   00004E                     RB7_ISR@fl:
  2577                           	callstack 0
  2578   00004E                     i2GPIO_check_access@_pin_config:
  2579                           	callstack 0
  2580   00004E                     
  2581                           ; 1 bytes @ 0x0
  2582   00004E                     	ds	1
  2583   00004F                     ??i2_GPIO_check_access:
  2584                           
  2585                           ; 1 bytes @ 0x1
  2586   00004F                     	ds	1
  2587   000050                     i2GPIO_check_access@ret:
  2588                           	callstack 0
  2589                           
  2590                           ; 1 bytes @ 0x2
  2591   000050                     	ds	1
  2592   000051                     i2GPIO_pin_write_logic@_pin_config:
  2593                           	callstack 0
  2594                           
  2595                           ; 1 bytes @ 0x3
  2596   000051                     	ds	1
  2597   000052                     i2GPIO_pin_write_logic@logic:
  2598                           	callstack 0
  2599                           
  2600                           ; 1 bytes @ 0x4
  2601   000052                     	ds	1
  2602   000053                     ??i2_GPIO_pin_write_logic:
  2603                           
  2604                           ; 1 bytes @ 0x5
  2605   000053                     	ds	5
  2606   000058                     LED_on@led:
  2607                           	callstack 0
  2608   000058                     LED_off@led:
  2609                           	callstack 0
  2610                           
  2611                           ; 1 bytes @ 0xA
  2612   000058                     	ds	1
  2613   000059                     ??_LED_on:
  2614   000059                     ??_LED_off:
  2615                           
  2616                           ; 1 bytes @ 0xB
  2617   000059                     	ds	1
  2618   00005A                     LED_on@pin_local:
  2619                           	callstack 0
  2620   00005A                     LED_off@pin_local:
  2621                           	callstack 0
  2622                           
  2623                           ; 1 bytes @ 0xC
  2624   00005A                     	ds	1
  2625   00005B                     ___ADC@result:
  2626                           	callstack 0
  2627                           
  2628                           ; 1 bytes @ 0xD
  2629   00005B                     	ds	1
  2630   00005C                     ??___ADC:
  2631                           
  2632                           ; 1 bytes @ 0xE
  2633   00005C                     	ds	3
  2634   00005F                     ___ADC@i:
  2635                           	callstack 0
  2636                           
  2637                           ; 1 bytes @ 0x11
  2638   00005F                     	ds	1
  2639   000060                     ??_ADC_ISR:
  2640                           
  2641                           ; 1 bytes @ 0x12
  2642   000060                     	ds	2
  2643   000062                     ??_InterruptManager:
  2644                           
  2645                           ; 1 bytes @ 0x14
  2646   000062                     	ds	6
  2647                           
  2648 ;;
  2649 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2650 ;;
  2651 ;; *************** function _main *****************
  2652 ;; Defined at:
  2653 ;;		line 32 in file "application.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2  1048[None  ] int 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2667 ;;      Params:         0       0       0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels required when called: 12
  2673 ;; This function calls:
  2674 ;;		_ADC_convert
  2675 ;;		_application_initialize
  2676 ;; This function is called by:
  2677 ;;		Startup code after reset
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text0
  2682   0012BC                     __ptext0:
  2683                           	callstack 0
  2684   0012BC                     _main:
  2685                           	callstack 19
  2686   0012BC  FFFF               	dw	65535	; assembler added errata NOP
  2687                           
  2688                           ;application.c: 33:         ret = application_initialize();
  2689   0012BE  EC0F  F009         	call	_application_initialize	;wreg free
  2690   0012C2  6E68               	movwf	_ret^0,c
  2691   0012C4                     
  2692                           ;application.c: 34:  if((STD_ReturnType)(0x00) == ret){
  2693   0012C4  5068               	movf	_ret^0,w,c
  2694   0012C6  A4D8               	btfss	status,2,c
  2695   0012C8  EF68  F009         	goto	u6831
  2696   0012CC  EF6B  F009         	goto	u6830
  2697   0012D0                     u6831:
  2698   0012D0  FFFF               	dw	65535	; assembler added errata NOP
  2699   0012D2  EF6E  F009         	goto	l6039
  2700   0012D6                     u6830:
  2701   0012D6  FFFF               	dw	65535	; assembler added errata NOP
  2702   0012D8  EF7C  F009         	goto	l1050
  2703   0012DC                     l6039:
  2704   0012DC  FFFF               	dw	65535	; assembler added errata NOP
  2705                           
  2706                           ;application.c: 39:      ADC_convert(&ADC1,ADC_default);
  2707   0012DE  0E24               	movlw	low _ADC1
  2708   0012E0  0100               	movlb	0	; () banked
  2709   0012E2  6FB8               	movwf	ADC_convert@lADC& (0+255),b
  2710   0012E4  0EFF               	movlw	255
  2711   0012E6  6FB9               	movwf	ADC_convert@lCH& (0+255),b
  2712   0012E8  EC0B  F008         	call	_ADC_convert	;wreg free
  2713   0012EC                     
  2714                           ;application.c: 40:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  2715   0012EC  0E05               	movlw	5
  2716   0012EE                     u6847:
  2717   0012EE  FFFF               	dw	65535	; errata NOP
  2718   0012F0  2EE8               	decfsz	wreg,f,c
  2719   0012F2  D7FD               	bra	u6847
  2720   0012F4  EF6E  F009         	goto	l6039
  2721   0012F8                     l1050:
  2722   0012F8  FFFF               	dw	65535	; assembler added errata NOP
  2723   0012FA  EF5B  F001         	goto	start
  2724   0012FE                     __end_of_main:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _application_initialize *****************
  2728 ;; Defined at:
  2729 ;;		line 45 in file "application.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  ret             1   20[BANK0 ] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      unsigned char 
  2736 ;; Registers used:
  2737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         0       0       0       0       0       0       0
  2744 ;;      Locals:         0       2       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0
  2746 ;;      Totals:         0       2       0       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 11
  2750 ;; This function calls:
  2751 ;;		_ADC_init
  2752 ;;		_ecu_init
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text1
  2759   00121E                     __ptext1:
  2760                           	callstack 0
  2761   00121E                     _application_initialize:
  2762                           	callstack 0
  2763   00121E  FFFF               	dw	65535	; assembler added errata NOP
  2764   001220                     
  2765                           ;application.c: 48:  ret = ecu_init();
  2766   001220  EC81  F008         	call	_ecu_init	;wreg free
  2767   001224  0100               	movlb	0	; () banked
  2768   001226  6FC5               	movwf	application_initialize@ret& (0+255),b
  2769   001228                     
  2770                           ; BSR set to: 0
  2771                           ;application.c: 49:        ret = ret && ADC_init(&ADC1);
  2772   001228  6BC4               	clrf	_application_initialize$2316& (0+255),b
  2773   00122A                     
  2774                           ; BSR set to: 0
  2775   00122A  51C5               	movf	application_initialize@ret& (0+255),w,b
  2776   00122C  B4D8               	btfsc	status,2,c
  2777   00122E  EF1B  F009         	goto	u5671
  2778   001232  EF1E  F009         	goto	u5670
  2779   001236                     u5671:
  2780   001236  FFFF               	dw	65535	; assembler added errata NOP
  2781   001238  EF30  F009         	goto	l5361
  2782   00123C                     u5670:
  2783   00123C  FFFF               	dw	65535	; assembler added errata NOP
  2784   00123E                     
  2785                           ; BSR set to: 0
  2786   00123E  0E24               	movlw	low _ADC1
  2787   001240  6FB8               	movwf	ADC_init@lADC& (0+255),b
  2788   001242  EC0B  F003         	call	_ADC_init	;wreg free
  2789   001246  0900               	iorlw	0
  2790   001248  B4D8               	btfsc	status,2,c
  2791   00124A  EF29  F009         	goto	u5681
  2792   00124E  EF2C  F009         	goto	u5680
  2793   001252                     u5681:
  2794   001252  FFFF               	dw	65535	; assembler added errata NOP
  2795   001254  EF30  F009         	goto	l5361
  2796   001258                     u5680:
  2797   001258  FFFF               	dw	65535	; assembler added errata NOP
  2798   00125A  0E01               	movlw	1
  2799   00125C  0100               	movlb	0	; () banked
  2800   00125E  6FC4               	movwf	_application_initialize$2316& (0+255),b
  2801   001260                     l5361:
  2802   001260  FFFF               	dw	65535	; assembler added errata NOP
  2803   001262  C0C4  F0C5         	movff	_application_initialize$2316,application_initialize@ret
  2804                           
  2805                           ;application.c: 52:     return ret;
  2806   001266  0100               	movlb	0	; () banked
  2807   001268  51C5               	movf	application_initialize@ret& (0+255),w,b
  2808   00126A                     
  2809                           ; BSR set to: 0
  2810   00126A  0012               	return		;funcret
  2811   00126C  FFFF               	dw	65535	; errata NOP
  2812   00126E                     __end_of_application_initialize:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _ecu_init *****************
  2816 ;; Defined at:
  2817 ;;		line 128 in file "ECU_layer/ecu_init.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  ret             1   18[BANK0 ] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      unsigned char 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2831 ;;      Params:         0       0       0       0       0       0       0
  2832 ;;      Locals:         0       2       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0
  2834 ;;      Totals:         0       2       0       0       0       0       0
  2835 ;;Total ram usage:        2 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 10
  2838 ;; This function calls:
  2839 ;;		_LED_initialize
  2840 ;; This function is called by:
  2841 ;;		_application_initialize
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text2
  2846   001102                     __ptext2:
  2847                           	callstack 0
  2848   001102                     _ecu_init:
  2849                           	callstack 0
  2850   001102  FFFF               	dw	65535	; assembler added errata NOP
  2851   001104                     
  2852                           ;ECU_layer/ecu_init.c: 129:     STD_ReturnType ret = (STD_ReturnType)(0x01);
  2853   001104  0E01               	movlw	1
  2854   001106  0100               	movlb	0	; () banked
  2855   001108  6FC3               	movwf	ecu_init@ret& (0+255),b
  2856   00110A                     
  2857                           ; BSR set to: 0
  2858                           ;ECU_layer/ecu_init.c: 130:  for(i=0;i<10;i++)
  2859   00110A  6A44               	clrf	_i^0,c
  2860   00110C                     l423:
  2861   00110C  FFFF               	dw	65535	; assembler added errata NOP
  2862                           
  2863                           ;ECU_layer/ecu_init.c: 131:   ret = ret && LED_initialize(&(LED_arr[i]));
  2864   00110E  0100               	movlb	0	; () banked
  2865   001110  6BC2               	clrf	_ecu_init$823& (0+255),b
  2866   001112                     
  2867                           ; BSR set to: 0
  2868   001112  51C3               	movf	ecu_init@ret& (0+255),w,b
  2869   001114  B4D8               	btfsc	status,2,c
  2870   001116  EF8F  F008         	goto	u5321
  2871   00111A  EF92  F008         	goto	u5320
  2872   00111E                     u5321:
  2873   00111E  FFFF               	dw	65535	; assembler added errata NOP
  2874   001120  EFA5  F008         	goto	l5143
  2875   001124                     u5320:
  2876   001124  FFFF               	dw	65535	; assembler added errata NOP
  2877   001126                     
  2878                           ; BSR set to: 0
  2879   001126  5044               	movf	_i^0,w,c
  2880   001128  0FA7               	addlw	low _LED_arr
  2881   00112A  6FBE               	movwf	LED_initialize@led& (0+255),b
  2882   00112C  EC20  F007         	call	_LED_initialize	;wreg free
  2883   001130  0900               	iorlw	0
  2884   001132  B4D8               	btfsc	status,2,c
  2885   001134  EF9E  F008         	goto	u5331
  2886   001138  EFA1  F008         	goto	u5330
  2887   00113C                     u5331:
  2888   00113C  FFFF               	dw	65535	; assembler added errata NOP
  2889   00113E  EFA5  F008         	goto	l5143
  2890   001142                     u5330:
  2891   001142  FFFF               	dw	65535	; assembler added errata NOP
  2892   001144  0E01               	movlw	1
  2893   001146  0100               	movlb	0	; () banked
  2894   001148  6FC2               	movwf	_ecu_init$823& (0+255),b
  2895   00114A                     l5143:
  2896   00114A  FFFF               	dw	65535	; assembler added errata NOP
  2897   00114C  C0C2  F0C3         	movff	_ecu_init$823,ecu_init@ret
  2898   001150  2A44               	incf	_i^0,f,c
  2899   001152  0E09               	movlw	9
  2900   001154  6444               	cpfsgt	_i^0,c
  2901   001156  EFAF  F008         	goto	u5341
  2902   00115A  EFB2  F008         	goto	u5340
  2903   00115E                     u5341:
  2904   00115E  FFFF               	dw	65535	; assembler added errata NOP
  2905   001160  EF86  F008         	goto	l423
  2906   001164                     u5340:
  2907   001164  FFFF               	dw	65535	; assembler added errata NOP
  2908   001166                     
  2909                           ;ECU_layer/ecu_init.c: 132:     return ret;
  2910   001166  0100               	movlb	0	; () banked
  2911   001168  51C3               	movf	ecu_init@ret& (0+255),w,b
  2912   00116A                     
  2913                           ; BSR set to: 0
  2914   00116A  0012               	return		;funcret
  2915   00116C  FFFF               	dw	65535	; errata NOP
  2916   00116E                     __end_of_ecu_init:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _LED_initialize *****************
  2920 ;; Defined at:
  2921 ;;		line 14 in file "ECU_layer/LED/ecu_led.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  led             1   13[BANK0 ] PTR struct .
  2924 ;;		 -> LED_arr(10), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  pin_local       1   16[BANK0 ] struct .
  2927 ;;  ret             1   15[BANK0 ] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      unsigned char 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2937 ;;      Params:         0       1       0       0       0       0       0
  2938 ;;      Locals:         0       2       0       0       0       0       0
  2939 ;;      Temps:          0       1       0       0       0       0       0
  2940 ;;      Totals:         0       4       0       0       0       0       0
  2941 ;;Total ram usage:        4 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 9
  2944 ;; This function calls:
  2945 ;;		_GPIO_check_access
  2946 ;;		_GPIO_pin_initialize
  2947 ;; This function is called by:
  2948 ;;		_ecu_init
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text3
  2953   000E40                     __ptext3:
  2954                           	callstack 0
  2955   000E40                     _LED_initialize:
  2956                           	callstack 0
  2957   000E40  FFFF               	dw	65535	; assembler added errata NOP
  2958   000E42                     
  2959                           ;ECU_layer/LED/ecu_led.c: 15:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2960   000E42  0E01               	movlw	1
  2961   000E44  0100               	movlb	0	; () banked
  2962   000E46  6FC0               	movwf	LED_initialize@ret& (0+255),b
  2963                           
  2964                           ;ECU_layer/LED/ecu_led.c: 16:  if ( (((void*)0) == led) ){
  2965   000E48  51BE               	movf	LED_initialize@led& (0+255),w,b
  2966   000E4A  A4D8               	btfss	status,2,c
  2967   000E4C  EF2A  F007         	goto	u5121
  2968   000E50  EF2D  F007         	goto	u5120
  2969   000E54                     u5121:
  2970   000E54  FFFF               	dw	65535	; assembler added errata NOP
  2971   000E56  EF33  F007         	goto	l303
  2972   000E5A                     u5120:
  2973   000E5A  FFFF               	dw	65535	; assembler added errata NOP
  2974   000E5C                     l4963:
  2975   000E5C  FFFF               	dw	65535	; assembler added errata NOP
  2976                           
  2977                           ;ECU_layer/LED/ecu_led.c: 17:   ret = (STD_ReturnType)(0x00);
  2978   000E5E  0100               	movlb	0	; () banked
  2979   000E60  6BC0               	clrf	LED_initialize@ret& (0+255),b
  2980                           
  2981                           ;ECU_layer/LED/ecu_led.c: 18:  }
  2982   000E62  EF6E  F007         	goto	l4975
  2983   000E66                     l303:
  2984   000E66  FFFF               	dw	65535	; assembler added errata NOP
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;ECU_layer/LED/ecu_led.c: 20:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  2988   000E68  C04B  F0C1         	movff	LED_initialize@F2870,LED_initialize@pin_local
  2989   000E6C                     
  2990                           ; BSR set to: 0
  2991   000E6C  51BE               	movf	LED_initialize@led& (0+255),w,b
  2992   000E6E  6ED9               	movwf	fsr2l,c
  2993   000E70  6ADA               	clrf	fsr2h,c
  2994   000E72  50DF               	movf	223,w,c
  2995   000E74  0B07               	andlw	7
  2996   000E76  6FBF               	movwf	??_LED_initialize& (0+255),b
  2997   000E78  51C1               	movf	LED_initialize@pin_local& (0+255),w,b
  2998   000E7A  19BF               	xorwf	??_LED_initialize& (0+255),w,b
  2999   000E7C  0BF8               	andlw	-8
  3000   000E7E  19BF               	xorwf	??_LED_initialize& (0+255),w,b
  3001   000E80  6FC1               	movwf	LED_initialize@pin_local& (0+255),b
  3002   000E82  51BE               	movf	LED_initialize@led& (0+255),w,b
  3003   000E84  6ED9               	movwf	fsr2l,c
  3004   000E86  6ADA               	clrf	fsr2h,c
  3005   000E88  30DF               	rrcf	223,w,c
  3006   000E8A  32E8               	rrcf	wreg,f,c
  3007   000E8C  32E8               	rrcf	wreg,f,c
  3008   000E8E  0B07               	andlw	7
  3009   000E90  6FBF               	movwf	??_LED_initialize& (0+255),b
  3010   000E92  47BF               	rlncf	??_LED_initialize& (0+255),f,b
  3011   000E94  47BF               	rlncf	??_LED_initialize& (0+255),f,b
  3012   000E96  47BF               	rlncf	??_LED_initialize& (0+255),f,b
  3013   000E98  51C1               	movf	LED_initialize@pin_local& (0+255),w,b
  3014   000E9A  19BF               	xorwf	??_LED_initialize& (0+255),w,b
  3015   000E9C  0BC7               	andlw	-57
  3016   000E9E  19BF               	xorwf	??_LED_initialize& (0+255),w,b
  3017   000EA0  6FC1               	movwf	LED_initialize@pin_local& (0+255),b
  3018   000EA2                     
  3019                           ; BSR set to: 0
  3020   000EA2  9DC1               	bcf	LED_initialize@pin_local& (0+255),6,b
  3021   000EA4                     
  3022                           ; BSR set to: 0
  3023   000EA4  51BE               	movf	LED_initialize@led& (0+255),w,b
  3024   000EA6  6ED9               	movwf	fsr2l,c
  3025   000EA8  6ADA               	clrf	fsr2h,c
  3026   000EAA  ACDF               	btfss	indf2,6,c
  3027   000EAC  D002               	bra	u5135
  3028   000EAE  8FC1               	bsf	LED_initialize@pin_local& (0+255),7,b
  3029   000EB0  D002               	bra	u5137
  3030   000EB2                     u5135:
  3031   000EB2  0100               	movlb	0	; () banked
  3032   000EB4  9FC1               	bcf	LED_initialize@pin_local& (0+255),7,b
  3033   000EB6                     u5137:
  3034   000EB6                     
  3035                           ; BSR set to: 0
  3036                           ;ECU_layer/LED/ecu_led.c: 21:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  3037   000EB6  0EC1               	movlw	low LED_initialize@pin_local
  3038   000EB8  6FB1               	movwf	GPIO_check_access@_pin_config& (0+255),b
  3039   000EBA  ECEA  F003         	call	_GPIO_check_access	;wreg free
  3040   000EBE  06E8               	decf	wreg,f,c
  3041   000EC0  A4D8               	btfss	status,2,c
  3042   000EC2  EF65  F007         	goto	u5141
  3043   000EC6  EF68  F007         	goto	u5140
  3044   000ECA                     u5141:
  3045   000ECA  FFFF               	dw	65535	; assembler added errata NOP
  3046   000ECC  EF2E  F007         	goto	l4963
  3047   000ED0                     u5140:
  3048   000ED0  FFFF               	dw	65535	; assembler added errata NOP
  3049   000ED2                     
  3050                           ;ECU_layer/LED/ecu_led.c: 22:    GPIO_pin_initialize(&pin_local);
  3051   000ED2  0EC1               	movlw	low LED_initialize@pin_local
  3052   000ED4  0100               	movlb	0	; () banked
  3053   000ED6  6FBC               	movwf	GPIO_pin_initialize@_pin_config& (0+255),b
  3054   000ED8  ECE4  F008         	call	_GPIO_pin_initialize	;wreg free
  3055   000EDC                     l4975:
  3056   000EDC  FFFF               	dw	65535	; assembler added errata NOP
  3057                           
  3058                           ;ECU_layer/LED/ecu_led.c: 27:     return ret;
  3059   000EDE  0100               	movlb	0	; () banked
  3060   000EE0  51C0               	movf	LED_initialize@ret& (0+255),w,b
  3061   000EE2                     
  3062                           ; BSR set to: 0
  3063   000EE2  0012               	return		;funcret
  3064   000EE4  FFFF               	dw	65535	; errata NOP
  3065   000EE6                     __end_of_LED_initialize:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function _GPIO_pin_initialize *****************
  3069 ;; Defined at:
  3070 ;;		line 37 in file "MCAL_layer/GPIO/hal_gpio.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  _pin_config     1   11[BANK0 ] PTR const struct .
  3073 ;;		 -> relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1),
      + 
  3074 ;;		 -> dc_motor_initialize@lpin1(1), seven_segment_initialize@lpin(4), 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  ret             1   12[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3086 ;;      Params:         0       1       0       0       0       0       0
  3087 ;;      Locals:         0       1       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0
  3089 ;;      Totals:         0       2       0       0       0       0       0
  3090 ;;Total ram usage:        2 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 8
  3093 ;; This function calls:
  3094 ;;		_GPIO_check_access
  3095 ;;		_GPIO_pin_direction_initialize
  3096 ;;		_GPIO_pin_write_logic
  3097 ;; This function is called by:
  3098 ;;		_LED_initialize
  3099 ;;		_seven_segment_initialize
  3100 ;;		_dc_motor_initialize
  3101 ;;		_keypad_initialize
  3102 ;;		_lcd_initialize
  3103 ;;		_relay_initialize
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text4
  3108   0011C8                     __ptext4:
  3109                           	callstack 0
  3110   0011C8                     _GPIO_pin_initialize:
  3111                           	callstack 0
  3112   0011C8  FFFF               	dw	65535	; assembler added errata NOP
  3113   0011CA                     
  3114                           ;MCAL_layer/GPIO/hal_gpio.c: 39:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3115   0011CA  C0BC  F0B1         	movff	GPIO_pin_initialize@_pin_config,GPIO_check_access@_pin_config
  3116   0011CE  ECEA  F003         	call	_GPIO_check_access	;wreg free
  3117   0011D2  0900               	iorlw	0
  3118   0011D4  A4D8               	btfss	status,2,c
  3119   0011D6  EFEF  F008         	goto	u5081
  3120   0011DA  EFF2  F008         	goto	u5080
  3121   0011DE                     u5081:
  3122   0011DE  FFFF               	dw	65535	; assembler added errata NOP
  3123   0011E0  EFF7  F008         	goto	l4917
  3124   0011E4                     u5080:
  3125   0011E4  FFFF               	dw	65535	; assembler added errata NOP
  3126   0011E6                     
  3127                           ;MCAL_layer/GPIO/hal_gpio.c: 40:   ret = (STD_ReturnType)(0x00);
  3128   0011E6  0100               	movlb	0	; () banked
  3129   0011E8  6BBD               	clrf	GPIO_pin_initialize@ret& (0+255),b
  3130                           
  3131                           ;MCAL_layer/GPIO/hal_gpio.c: 41:  }
  3132   0011EA  EF0B  F009         	goto	l4919
  3133   0011EE                     l4917:
  3134   0011EE  FFFF               	dw	65535	; assembler added errata NOP
  3135                           
  3136                           ;MCAL_layer/GPIO/hal_gpio.c: 43:   ret = GPIO_pin_direction_initialize(_pin_config);
  3137   0011F0  C0BC  F0B4         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_direction_initialize@_pin_config
  3138   0011F4  EC0F  F005         	call	_GPIO_pin_direction_initialize	;wreg free
  3139   0011F8  0100               	movlb	0	; () banked
  3140   0011FA  6FBD               	movwf	GPIO_pin_initialize@ret& (0+255),b
  3141                           
  3142                           ;MCAL_layer/GPIO/hal_gpio.c: 44:   ret = GPIO_pin_write_logic(_pin_config, _pin_config -
      +                          > logic);
  3143   0011FC  C0BC  F0B4         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_write_logic@_pin_config
  3144   001200  51BC               	movf	GPIO_pin_initialize@_pin_config& (0+255),w,b
  3145   001202  6ED9               	movwf	fsr2l,c
  3146   001204  6ADA               	clrf	fsr2h,c
  3147   001206  0E00               	movlw	0
  3148   001208  BEDF               	btfsc	indf2,7,c
  3149   00120A  0E01               	movlw	1
  3150   00120C  6FB5               	movwf	GPIO_pin_write_logic@logic& (0+255),b
  3151   00120E  ECA0  F005         	call	_GPIO_pin_write_logic	;wreg free
  3152   001212  0100               	movlb	0	; () banked
  3153   001214  6FBD               	movwf	GPIO_pin_initialize@ret& (0+255),b
  3154   001216                     l4919:
  3155   001216  FFFF               	dw	65535	; assembler added errata NOP
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;MCAL_layer/GPIO/hal_gpio.c: 46:     return ret;
  3159   001218  51BD               	movf	GPIO_pin_initialize@ret& (0+255),w,b
  3160   00121A                     
  3161                           ; BSR set to: 0
  3162   00121A  0012               	return		;funcret
  3163   00121C  FFFF               	dw	65535	; errata NOP
  3164   00121E                     __end_of_GPIO_pin_initialize:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _GPIO_pin_write_logic *****************
  3168 ;; Defined at:
  3169 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  _pin_config     1    3[BANK0 ] PTR const struct .
  3172 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_off@pin_local(1), 
  3173 ;;		 -> LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), 
  3174 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  3175 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  3176 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  3177 ;;  logic           1    4[BANK0 ] enum E2776
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  ret             1   10[BANK0 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      unsigned char 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3189 ;;      Params:         0       2       0       0       0       0       0
  3190 ;;      Locals:         0       1       0       0       0       0       0
  3191 ;;      Temps:          0       5       0       0       0       0       0
  3192 ;;      Totals:         0       8       0       0       0       0       0
  3193 ;;Total ram usage:        8 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 7
  3196 ;; This function calls:
  3197 ;;		_GPIO_check_access
  3198 ;; This function is called by:
  3199 ;;		_GPIO_pin_initialize
  3200 ;;		_seven_segment_write_number
  3201 ;;		_seven_segment_write_2digit_number
  3202 ;;		_dc_motor_turn_right
  3203 ;;		_dc_motor_turn_left
  3204 ;;		_dc_motor_stop
  3205 ;;		_keypad_read_number
  3206 ;;		_lcd_send_command
  3207 ;;		_lcd_send_char_data
  3208 ;;		_lcd_send_4bits
  3209 ;;		_lcd_send_8bits
  3210 ;;		_lcd_send_en
  3211 ;;		_relay_turn_on
  3212 ;;		_relay_turn_off
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text5
  3217   000B40                     __ptext5:
  3218                           	callstack 0
  3219   000B40                     _GPIO_pin_write_logic:
  3220                           	callstack 0
  3221   000B40  FFFF               	dw	65535	; assembler added errata NOP
  3222   000B42                     
  3223                           ;MCAL_layer/GPIO/hal_gpio.c: 98:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3224   000B42  0E01               	movlw	1
  3225   000B44  0100               	movlb	0	; () banked
  3226   000B46  6FBB               	movwf	GPIO_pin_write_logic@ret& (0+255),b
  3227   000B48                     
  3228                           ; BSR set to: 0
  3229                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3230   000B48  C0B4  F0B1         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  3231   000B4C  ECEA  F003         	call	_GPIO_check_access	;wreg free
  3232   000B50  0900               	iorlw	0
  3233   000B52  A4D8               	btfss	status,2,c
  3234   000B54  EFAE  F005         	goto	u4921
  3235   000B58  EFB1  F005         	goto	u4920
  3236   000B5C                     u4921:
  3237   000B5C  FFFF               	dw	65535	; assembler added errata NOP
  3238   000B5E  EF12  F006         	goto	l4863
  3239   000B62                     u4920:
  3240   000B62  FFFF               	dw	65535	; assembler added errata NOP
  3241   000B64                     l4857:
  3242   000B64  FFFF               	dw	65535	; assembler added errata NOP
  3243                           
  3244                           ;MCAL_layer/GPIO/hal_gpio.c: 100:   ret = (STD_ReturnType)(0x00);
  3245   000B66  0100               	movlb	0	; () banked
  3246   000B68  6BBB               	clrf	GPIO_pin_write_logic@ret& (0+255),b
  3247                           
  3248                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  3249   000B6A  EF2A  F006         	goto	l4865
  3250   000B6E                     l4859:
  3251   000B6E  FFFF               	dw	65535	; assembler added errata NOP
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3255   000B70  51B4               	movf	GPIO_pin_write_logic@_pin_config& (0+255),w,b
  3256   000B72  6ED9               	movwf	fsr2l,c
  3257   000B74  6ADA               	clrf	fsr2h,c
  3258   000B76  30DF               	rrcf	223,w,c
  3259   000B78  32E8               	rrcf	wreg,f,c
  3260   000B7A  32E8               	rrcf	wreg,f,c
  3261   000B7C  0B07               	andlw	7
  3262   000B7E  6FB6               	movwf	??_GPIO_pin_write_logic& (0+255),b
  3263   000B80  0E01               	movlw	1
  3264   000B82  6FB7               	movwf	(??_GPIO_pin_write_logic+1)& (0+255),b
  3265   000B84  2BB6               	incf	??_GPIO_pin_write_logic& (0+255),f,b
  3266   000B86  EFC8  F005         	goto	u4934
  3267   000B8A                     u4935:
  3268   000B8A  FFFF               	dw	65535	; assembler added errata NOP
  3269   000B8C  90D8               	bcf	status,0,c
  3270   000B8E  37B7               	rlcf	(??_GPIO_pin_write_logic+1)& (0+255),f,b
  3271   000B90                     u4934:
  3272   000B90  FFFF               	dw	65535	; assembler added errata NOP
  3273   000B92  2FB6               	decfsz	??_GPIO_pin_write_logic& (0+255),f,b
  3274   000B94  EFC5  F005         	goto	u4935
  3275   000B98  0100               	movlb	0	; () banked
  3276   000B9A  51B7               	movf	(??_GPIO_pin_write_logic+1)& (0+255),w,b
  3277   000B9C  0AFF               	xorlw	255
  3278   000B9E  6FB8               	movwf	(??_GPIO_pin_write_logic+2)& (0+255),b
  3279   000BA0  51B4               	movf	GPIO_pin_write_logic@_pin_config& (0+255),w,b
  3280   000BA2  6ED9               	movwf	fsr2l,c
  3281   000BA4  6ADA               	clrf	fsr2h,c
  3282   000BA6  50DF               	movf	223,w,c
  3283   000BA8  0B07               	andlw	7
  3284   000BAA  0D02               	mullw	2
  3285   000BAC  50F3               	movf	243,w,c
  3286   000BAE  0F01               	addlw	low __LAT_registers
  3287   000BB0  6ED9               	movwf	fsr2l,c
  3288   000BB2  6ADA               	clrf	fsr2h,c
  3289   000BB4  CFDE F0B9          	movff	postinc2,??_GPIO_pin_write_logic+3
  3290   000BB8  CFDD F0BA          	movff	postdec2,??_GPIO_pin_write_logic+4
  3291   000BBC  C0B9  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  3292   000BC0  C0BA  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  3293   000BC4  51B8               	movf	(??_GPIO_pin_write_logic+2)& (0+255),w,b
  3294   000BC6  16DF               	andwf	indf2,f,c
  3295                           
  3296                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  3297   000BC8  EF2A  F006         	goto	l4865
  3298   000BCC                     l4861:
  3299   000BCC  FFFF               	dw	65535	; assembler added errata NOP
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  3303   000BCE  51B4               	movf	GPIO_pin_write_logic@_pin_config& (0+255),w,b
  3304   000BD0  6ED9               	movwf	fsr2l,c
  3305   000BD2  6ADA               	clrf	fsr2h,c
  3306   000BD4  30DF               	rrcf	223,w,c
  3307   000BD6  32E8               	rrcf	wreg,f,c
  3308   000BD8  32E8               	rrcf	wreg,f,c
  3309   000BDA  0B07               	andlw	7
  3310   000BDC  6FB6               	movwf	??_GPIO_pin_write_logic& (0+255),b
  3311   000BDE  0E01               	movlw	1
  3312   000BE0  6FB7               	movwf	(??_GPIO_pin_write_logic+1)& (0+255),b
  3313   000BE2  2BB6               	incf	??_GPIO_pin_write_logic& (0+255),f,b
  3314   000BE4  EFF7  F005         	goto	u4944
  3315   000BE8                     u4945:
  3316   000BE8  FFFF               	dw	65535	; assembler added errata NOP
  3317   000BEA  90D8               	bcf	status,0,c
  3318   000BEC  37B7               	rlcf	(??_GPIO_pin_write_logic+1)& (0+255),f,b
  3319   000BEE                     u4944:
  3320   000BEE  FFFF               	dw	65535	; assembler added errata NOP
  3321   000BF0  2FB6               	decfsz	??_GPIO_pin_write_logic& (0+255),f,b
  3322   000BF2  EFF4  F005         	goto	u4945
  3323   000BF6  0100               	movlb	0	; () banked
  3324   000BF8  51B4               	movf	GPIO_pin_write_logic@_pin_config& (0+255),w,b
  3325   000BFA  6ED9               	movwf	fsr2l,c
  3326   000BFC  6ADA               	clrf	fsr2h,c
  3327   000BFE  50DF               	movf	223,w,c
  3328   000C00  0B07               	andlw	7
  3329   000C02  0D02               	mullw	2
  3330   000C04  50F3               	movf	243,w,c
  3331   000C06  0F01               	addlw	low __LAT_registers
  3332   000C08  6ED9               	movwf	fsr2l,c
  3333   000C0A  6ADA               	clrf	fsr2h,c
  3334   000C0C  CFDE F0B8          	movff	postinc2,??_GPIO_pin_write_logic+2
  3335   000C10  CFDD F0B9          	movff	postdec2,??_GPIO_pin_write_logic+3
  3336   000C14  C0B8  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  3337   000C18  C0B9  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  3338   000C1C  51B7               	movf	(??_GPIO_pin_write_logic+1)& (0+255),w,b
  3339   000C1E  12DF               	iorwf	indf2,f,c
  3340                           
  3341                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  3342   000C20  EF2A  F006         	goto	l4865
  3343   000C24                     l4863:
  3344   000C24  FFFF               	dw	65535	; assembler added errata NOP
  3345   000C26  0100               	movlb	0	; () banked
  3346   000C28  51B5               	movf	GPIO_pin_write_logic@logic& (0+255),w,b
  3347   000C2A  6FB6               	movwf	??_GPIO_pin_write_logic& (0+255),b
  3348   000C2C  6BB7               	clrf	(??_GPIO_pin_write_logic+1)& (0+255),b
  3349                           
  3350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3351                           ; Switch size 1, requested type "simple"
  3352                           ; Number of cases is 1, Range of values is 0 to 0
  3353                           ; switch strategies available:
  3354                           ; Name         Instructions Cycles
  3355                           ; simple_byte            4     3 (average)
  3356                           ;	Chosen strategy is simple_byte
  3357   000C2E  51B7               	movf	(??_GPIO_pin_write_logic+1)& (0+255),w,b
  3358   000C30  0A00               	xorlw	0	; case 0
  3359   000C32  B4D8               	btfsc	status,2,c
  3360   000C34  EF1E  F006         	goto	l6143
  3361   000C38  EFB2  F005         	goto	l4857
  3362   000C3C                     l6143:
  3363   000C3C  FFFF               	dw	65535	; assembler added errata NOP
  3364                           
  3365                           ; BSR set to: 0
  3366                           ; Switch size 1, requested type "simple"
  3367                           ; Number of cases is 2, Range of values is 0 to 1
  3368                           ; switch strategies available:
  3369                           ; Name         Instructions Cycles
  3370                           ; simple_byte            7     4 (average)
  3371                           ;	Chosen strategy is simple_byte
  3372   000C3E  51B6               	movf	??_GPIO_pin_write_logic& (0+255),w,b
  3373   000C40  0A00               	xorlw	0	; case 0
  3374   000C42  B4D8               	btfsc	status,2,c
  3375   000C44  EFB7  F005         	goto	l4859
  3376   000C48  0A01               	xorlw	1	; case 1
  3377   000C4A  B4D8               	btfsc	status,2,c
  3378   000C4C  EFE6  F005         	goto	l4861
  3379   000C50  EFB2  F005         	goto	l4857
  3380   000C54                     l4865:
  3381   000C54  FFFF               	dw	65535	; assembler added errata NOP
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;MCAL_layer/GPIO/hal_gpio.c: 114:  return ret;
  3385   000C56  51BB               	movf	GPIO_pin_write_logic@ret& (0+255),w,b
  3386   000C58                     
  3387                           ; BSR set to: 0
  3388   000C58  0012               	return		;funcret
  3389   000C5A  FFFF               	dw	65535	; errata NOP
  3390   000C5C                     __end_of_GPIO_pin_write_logic:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _GPIO_pin_direction_initialize *****************
  3394 ;; Defined at:
  3395 ;;		line 54 in file "MCAL_layer/GPIO/hal_gpio.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  _pin_config     1    3[BANK0 ] PTR const struct .
  3398 ;;		 -> relay_initialize@lpin(1), LED_initialize@pin_local(1), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), 
  3399 ;;		 -> dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize@lpin(4), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  ret             1    9[BANK0 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      unsigned char 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3411 ;;      Params:         0       1       0       0       0       0       0
  3412 ;;      Locals:         0       1       0       0       0       0       0
  3413 ;;      Temps:          0       5       0       0       0       0       0
  3414 ;;      Totals:         0       7       0       0       0       0       0
  3415 ;;Total ram usage:        7 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 7
  3418 ;; This function calls:
  3419 ;;		_GPIO_check_access
  3420 ;; This function is called by:
  3421 ;;		_GPIO_pin_initialize
  3422 ;;		_keypad_initialize
  3423 ;;		_btn_initialize
  3424 ;;		_INT_INTx_initialize
  3425 ;;		_INT_RBx_initialize
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text6
  3430   000A1E                     __ptext6:
  3431                           	callstack 0
  3432   000A1E                     _GPIO_pin_direction_initialize:
  3433                           	callstack 0
  3434   000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3435   000A20                     
  3436                           ;MCAL_layer/GPIO/hal_gpio.c: 55:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3437   000A20  0E01               	movlw	1
  3438   000A22  0100               	movlb	0	; () banked
  3439   000A24  6FBA               	movwf	GPIO_pin_direction_initialize@ret& (0+255),b
  3440   000A26                     
  3441                           ; BSR set to: 0
  3442                           ;MCAL_layer/GPIO/hal_gpio.c: 56:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3443   000A26  C0B4  F0B1         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  3444   000A2A  ECEA  F003         	call	_GPIO_check_access	;wreg free
  3445   000A2E  0900               	iorlw	0
  3446   000A30  A4D8               	btfss	status,2,c
  3447   000A32  EF1D  F005         	goto	u4951
  3448   000A36  EF20  F005         	goto	u4950
  3449   000A3A                     u4951:
  3450   000A3A  FFFF               	dw	65535	; assembler added errata NOP
  3451   000A3C  EF81  F005         	goto	l4883
  3452   000A40                     u4950:
  3453   000A40  FFFF               	dw	65535	; assembler added errata NOP
  3454   000A42                     l4877:
  3455   000A42  FFFF               	dw	65535	; assembler added errata NOP
  3456                           
  3457                           ;MCAL_layer/GPIO/hal_gpio.c: 57:   ret = (STD_ReturnType)(0x00);
  3458   000A44  0100               	movlb	0	; () banked
  3459   000A46  6BBA               	clrf	GPIO_pin_direction_initialize@ret& (0+255),b
  3460                           
  3461                           ;MCAL_layer/GPIO/hal_gpio.c: 58:  }
  3462   000A48  EF9C  F005         	goto	l4885
  3463   000A4C                     l4879:
  3464   000A4C  FFFF               	dw	65535	; assembler added errata NOP
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;MCAL_layer/GPIO/hal_gpio.c: 62:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3468   000A4E  51B4               	movf	GPIO_pin_direction_initialize@_pin_config& (0+255),w,b
  3469   000A50  6ED9               	movwf	fsr2l,c
  3470   000A52  6ADA               	clrf	fsr2h,c
  3471   000A54  30DF               	rrcf	223,w,c
  3472   000A56  32E8               	rrcf	wreg,f,c
  3473   000A58  32E8               	rrcf	wreg,f,c
  3474   000A5A  0B07               	andlw	7
  3475   000A5C  6FB5               	movwf	??_GPIO_pin_direction_initialize& (0+255),b
  3476   000A5E  0E01               	movlw	1
  3477   000A60  6FB6               	movwf	(??_GPIO_pin_direction_initialize+1)& (0+255),b
  3478   000A62  2BB5               	incf	??_GPIO_pin_direction_initialize& (0+255),f,b
  3479   000A64  EF37  F005         	goto	u4964
  3480   000A68                     u4965:
  3481   000A68  FFFF               	dw	65535	; assembler added errata NOP
  3482   000A6A  90D8               	bcf	status,0,c
  3483   000A6C  37B6               	rlcf	(??_GPIO_pin_direction_initialize+1)& (0+255),f,b
  3484   000A6E                     u4964:
  3485   000A6E  FFFF               	dw	65535	; assembler added errata NOP
  3486   000A70  2FB5               	decfsz	??_GPIO_pin_direction_initialize& (0+255),f,b
  3487   000A72  EF34  F005         	goto	u4965
  3488   000A76  0100               	movlb	0	; () banked
  3489   000A78  51B6               	movf	(??_GPIO_pin_direction_initialize+1)& (0+255),w,b
  3490   000A7A  0AFF               	xorlw	255
  3491   000A7C  6FB7               	movwf	(??_GPIO_pin_direction_initialize+2)& (0+255),b
  3492   000A7E  51B4               	movf	GPIO_pin_direction_initialize@_pin_config& (0+255),w,b
  3493   000A80  6ED9               	movwf	fsr2l,c
  3494   000A82  6ADA               	clrf	fsr2h,c
  3495   000A84  50DF               	movf	223,w,c
  3496   000A86  0B07               	andlw	7
  3497   000A88  0D02               	mullw	2
  3498   000A8A  50F3               	movf	243,w,c
  3499   000A8C  0F0B               	addlw	low __TRIS_registers
  3500   000A8E  6ED9               	movwf	fsr2l,c
  3501   000A90  6ADA               	clrf	fsr2h,c
  3502   000A92  CFDE F0B8          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  3503   000A96  CFDD F0B9          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  3504   000A9A  C0B8  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  3505   000A9E  C0B9  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  3506   000AA2  51B7               	movf	(??_GPIO_pin_direction_initialize+2)& (0+255),w,b
  3507   000AA4  16DF               	andwf	indf2,f,c
  3508                           
  3509                           ;MCAL_layer/GPIO/hal_gpio.c: 63:     break;
  3510   000AA6  EF9C  F005         	goto	l4885
  3511   000AAA                     l4881:
  3512   000AAA  FFFF               	dw	65535	; assembler added errata NOP
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;MCAL_layer/GPIO/hal_gpio.c: 65:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  3516   000AAC  51B4               	movf	GPIO_pin_direction_initialize@_pin_config& (0+255),w,b
  3517   000AAE  6ED9               	movwf	fsr2l,c
  3518   000AB0  6ADA               	clrf	fsr2h,c
  3519   000AB2  30DF               	rrcf	223,w,c
  3520   000AB4  32E8               	rrcf	wreg,f,c
  3521   000AB6  32E8               	rrcf	wreg,f,c
  3522   000AB8  0B07               	andlw	7
  3523   000ABA  6FB5               	movwf	??_GPIO_pin_direction_initialize& (0+255),b
  3524   000ABC  0E01               	movlw	1
  3525   000ABE  6FB6               	movwf	(??_GPIO_pin_direction_initialize+1)& (0+255),b
  3526   000AC0  2BB5               	incf	??_GPIO_pin_direction_initialize& (0+255),f,b
  3527   000AC2  EF66  F005         	goto	u4974
  3528   000AC6                     u4975:
  3529   000AC6  FFFF               	dw	65535	; assembler added errata NOP
  3530   000AC8  90D8               	bcf	status,0,c
  3531   000ACA  37B6               	rlcf	(??_GPIO_pin_direction_initialize+1)& (0+255),f,b
  3532   000ACC                     u4974:
  3533   000ACC  FFFF               	dw	65535	; assembler added errata NOP
  3534   000ACE  2FB5               	decfsz	??_GPIO_pin_direction_initialize& (0+255),f,b
  3535   000AD0  EF63  F005         	goto	u4975
  3536   000AD4  0100               	movlb	0	; () banked
  3537   000AD6  51B4               	movf	GPIO_pin_direction_initialize@_pin_config& (0+255),w,b
  3538   000AD8  6ED9               	movwf	fsr2l,c
  3539   000ADA  6ADA               	clrf	fsr2h,c
  3540   000ADC  50DF               	movf	223,w,c
  3541   000ADE  0B07               	andlw	7
  3542   000AE0  0D02               	mullw	2
  3543   000AE2  50F3               	movf	243,w,c
  3544   000AE4  0F0B               	addlw	low __TRIS_registers
  3545   000AE6  6ED9               	movwf	fsr2l,c
  3546   000AE8  6ADA               	clrf	fsr2h,c
  3547   000AEA  CFDE F0B7          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  3548   000AEE  CFDD F0B8          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  3549   000AF2  C0B7  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  3550   000AF6  C0B8  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  3551   000AFA  51B6               	movf	(??_GPIO_pin_direction_initialize+1)& (0+255),w,b
  3552   000AFC  12DF               	iorwf	indf2,f,c
  3553                           
  3554                           ;MCAL_layer/GPIO/hal_gpio.c: 66:     break;
  3555   000AFE  EF9C  F005         	goto	l4885
  3556   000B02                     l4883:
  3557   000B02  FFFF               	dw	65535	; assembler added errata NOP
  3558   000B04  0100               	movlb	0	; () banked
  3559   000B06  51B4               	movf	GPIO_pin_direction_initialize@_pin_config& (0+255),w,b
  3560   000B08  6ED9               	movwf	fsr2l,c
  3561   000B0A  6ADA               	clrf	fsr2h,c
  3562   000B0C  BCDF               	btfsc	indf2,6,c
  3563   000B0E  EF8B  F005         	goto	u4981
  3564   000B12  EF8F  F005         	goto	u4980
  3565   000B16                     u4981:
  3566   000B16  FFFF               	dw	65535	; assembler added errata NOP
  3567   000B18  0E01               	movlw	1
  3568   000B1A  EF91  F005         	goto	u4986
  3569   000B1E                     u4980:
  3570   000B1E  FFFF               	dw	65535	; assembler added errata NOP
  3571   000B20  0E00               	movlw	0
  3572   000B22                     u4986:
  3573   000B22  FFFF               	dw	65535	; assembler added errata NOP
  3574                           
  3575                           ; Switch size 1, requested type "simple"
  3576                           ; Number of cases is 2, Range of values is 0 to 1
  3577                           ; switch strategies available:
  3578                           ; Name         Instructions Cycles
  3579                           ; simple_byte            7     4 (average)
  3580                           ;	Chosen strategy is simple_byte
  3581   000B24  0A00               	xorlw	0	; case 0
  3582   000B26  B4D8               	btfsc	status,2,c
  3583   000B28  EF26  F005         	goto	l4879
  3584   000B2C  0A01               	xorlw	1	; case 1
  3585   000B2E  B4D8               	btfsc	status,2,c
  3586   000B30  EF55  F005         	goto	l4881
  3587   000B34  EF21  F005         	goto	l4877
  3588   000B38                     l4885:
  3589   000B38  FFFF               	dw	65535	; assembler added errata NOP
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;MCAL_layer/GPIO/hal_gpio.c: 71:  return ret;
  3593   000B3A  51BA               	movf	GPIO_pin_direction_initialize@ret& (0+255),w,b
  3594   000B3C                     
  3595                           ; BSR set to: 0
  3596   000B3C  0012               	return		;funcret
  3597   000B3E  FFFF               	dw	65535	; errata NOP
  3598   000B40                     __end_of_GPIO_pin_direction_initialize:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _GPIO_check_access *****************
  3602 ;; Defined at:
  3603 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  _pin_config     1    0[BANK0 ] PTR const struct .
  3606 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_toggle@pin_local(1), 
  3607 ;;		 -> LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinc(4), 
  3608 ;;		 -> keypad_read_number@lpinr(4), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), 
  3609 ;;		 -> dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), 
  3610 ;;		 -> dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_write_nu
      +mber@lpin(4), 
  3611 ;;		 -> seven_segment_initialize@lpin(4), 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  ret             1    2[BANK0 ] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      unsigned char 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3623 ;;      Params:         0       1       0       0       0       0       0
  3624 ;;      Locals:         0       1       0       0       0       0       0
  3625 ;;      Temps:          0       1       0       0       0       0       0
  3626 ;;      Totals:         0       3       0       0       0       0       0
  3627 ;;Total ram usage:        3 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 6
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_LED_initialize
  3634 ;;		_GPIO_pin_initialize
  3635 ;;		_GPIO_pin_direction_initialize
  3636 ;;		_GPIO_pin_write_logic
  3637 ;;		_seven_segment_initialize
  3638 ;;		_dc_motor_initialize
  3639 ;;		_lcd_check_access
  3640 ;;		_LED_toggle
  3641 ;;		_btn_initialize
  3642 ;;		_btn_read_state
  3643 ;;		_relay_initialize
  3644 ;;		_relay_turn_on
  3645 ;;		_relay_turn_off
  3646 ;;		_GPIO_pin_get_direction_status
  3647 ;;		_GPIO_pin_read_logic
  3648 ;;		_GPIO_pin_toggle_logic
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text7
  3653   0007D4                     __ptext7:
  3654                           	callstack 0
  3655   0007D4                     _GPIO_check_access:
  3656                           	callstack 0
  3657   0007D4  FFFF               	dw	65535	; assembler added errata NOP
  3658   0007D6                     
  3659                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3660   0007D6  0E01               	movlw	1
  3661   0007D8  0100               	movlb	0	; () banked
  3662   0007DA  6FB3               	movwf	GPIO_check_access@ret& (0+255),b
  3663                           
  3664                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  3665   0007DC  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3666   0007DE  B4D8               	btfsc	status,2,c
  3667   0007E0  EFF4  F003         	goto	u4831
  3668   0007E4  EFF7  F003         	goto	u4830
  3669   0007E8                     u4831:
  3670   0007E8  FFFF               	dw	65535	; assembler added errata NOP
  3671   0007EA  EF77  F004         	goto	l599
  3672   0007EE                     u4830:
  3673   0007EE  FFFF               	dw	65535	; assembler added errata NOP
  3674   0007F0                     
  3675                           ; BSR set to: 0
  3676   0007F0  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3677   0007F2  6ED9               	movwf	fsr2l,c
  3678   0007F4  6ADA               	clrf	fsr2h,c
  3679   0007F6  50DF               	movf	223,w,c
  3680   0007F8  0B07               	andlw	7
  3681   0007FA  0900               	iorlw	0
  3682   0007FC  A4D8               	btfss	status,2,c
  3683   0007FE  EF03  F004         	goto	u4841
  3684   000802  EF06  F004         	goto	u4840
  3685   000806                     u4841:
  3686   000806  FFFF               	dw	65535	; assembler added errata NOP
  3687   000808  EF17  F004         	goto	l4837
  3688   00080C                     u4840:
  3689   00080C  FFFF               	dw	65535	; assembler added errata NOP
  3690   00080E                     
  3691                           ; BSR set to: 0
  3692   00080E  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3693   000810  6ED9               	movwf	fsr2l,c
  3694   000812  6ADA               	clrf	fsr2h,c
  3695   000814  30DF               	rrcf	223,w,c
  3696   000816  32E8               	rrcf	wreg,f,c
  3697   000818  32E8               	rrcf	wreg,f,c
  3698   00081A  0B07               	andlw	7
  3699   00081C  0A07               	xorlw	7
  3700   00081E  B4D8               	btfsc	status,2,c
  3701   000820  EF14  F004         	goto	u4851
  3702   000824  EF17  F004         	goto	u4850
  3703   000828                     u4851:
  3704   000828  FFFF               	dw	65535	; assembler added errata NOP
  3705   00082A  EF77  F004         	goto	l599
  3706   00082E                     u4850:
  3707   00082E                     l4837:
  3708   00082E  FFFF               	dw	65535	; assembler added errata NOP
  3709                           
  3710                           ; BSR set to: 0
  3711   000830  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3712   000832  6ED9               	movwf	fsr2l,c
  3713   000834  6ADA               	clrf	fsr2h,c
  3714   000836  50DF               	movf	223,w,c
  3715   000838  0B07               	andlw	7
  3716   00083A  06E8               	decf	wreg,f,c
  3717   00083C  B4D8               	btfsc	status,2,c
  3718   00083E  EF23  F004         	goto	u4861
  3719   000842  EF26  F004         	goto	u4860
  3720   000846                     u4861:
  3721   000846  FFFF               	dw	65535	; assembler added errata NOP
  3722   000848  EF44  F004         	goto	l4843
  3723   00084C                     u4860:
  3724   00084C  FFFF               	dw	65535	; assembler added errata NOP
  3725   00084E                     
  3726                           ; BSR set to: 0
  3727   00084E  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3728   000850  6ED9               	movwf	fsr2l,c
  3729   000852  6ADA               	clrf	fsr2h,c
  3730   000854  50DF               	movf	223,w,c
  3731   000856  0B07               	andlw	7
  3732   000858  0A02               	xorlw	2
  3733   00085A  B4D8               	btfsc	status,2,c
  3734   00085C  EF32  F004         	goto	u4871
  3735   000860  EF35  F004         	goto	u4870
  3736   000864                     u4871:
  3737   000864  FFFF               	dw	65535	; assembler added errata NOP
  3738   000866  EF44  F004         	goto	l4843
  3739   00086A                     u4870:
  3740   00086A  FFFF               	dw	65535	; assembler added errata NOP
  3741   00086C                     
  3742                           ; BSR set to: 0
  3743   00086C  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3744   00086E  6ED9               	movwf	fsr2l,c
  3745   000870  6ADA               	clrf	fsr2h,c
  3746   000872  50DF               	movf	223,w,c
  3747   000874  0B07               	andlw	7
  3748   000876  0A03               	xorlw	3
  3749   000878  A4D8               	btfss	status,2,c
  3750   00087A  EF41  F004         	goto	u4881
  3751   00087E  EF44  F004         	goto	u4880
  3752   000882                     u4881:
  3753   000882  FFFF               	dw	65535	; assembler added errata NOP
  3754   000884  EF56  F004         	goto	l4845
  3755   000888                     u4880:
  3756   000888                     l4843:
  3757   000888  FFFF               	dw	65535	; assembler added errata NOP
  3758                           
  3759                           ; BSR set to: 0
  3760   00088A  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3761   00088C  6ED9               	movwf	fsr2l,c
  3762   00088E  6ADA               	clrf	fsr2h,c
  3763   000890  30DF               	rrcf	223,w,c
  3764   000892  32E8               	rrcf	wreg,f,c
  3765   000894  32E8               	rrcf	wreg,f,c
  3766   000896  0B07               	andlw	7
  3767   000898  6FB2               	movwf	??_GPIO_check_access& (0+255),b
  3768   00089A  0E08               	movlw	8
  3769   00089C  61B2               	cpfslt	??_GPIO_check_access& (0+255),b
  3770   00089E  EF53  F004         	goto	u4891
  3771   0008A2  EF56  F004         	goto	u4890
  3772   0008A6                     u4891:
  3773   0008A6  FFFF               	dw	65535	; assembler added errata NOP
  3774   0008A8  EF77  F004         	goto	l599
  3775   0008AC                     u4890:
  3776   0008AC                     l4845:
  3777   0008AC  FFFF               	dw	65535	; assembler added errata NOP
  3778                           
  3779                           ; BSR set to: 0
  3780   0008AE  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3781   0008B0  6ED9               	movwf	fsr2l,c
  3782   0008B2  6ADA               	clrf	fsr2h,c
  3783   0008B4  50DF               	movf	223,w,c
  3784   0008B6  0B07               	andlw	7
  3785   0008B8  0A04               	xorlw	4
  3786   0008BA  A4D8               	btfss	status,2,c
  3787   0008BC  EF62  F004         	goto	u4901
  3788   0008C0  EF65  F004         	goto	u4900
  3789   0008C4                     u4901:
  3790   0008C4  FFFF               	dw	65535	; assembler added errata NOP
  3791   0008C6  EF79  F004         	goto	l4849
  3792   0008CA                     u4900:
  3793   0008CA  FFFF               	dw	65535	; assembler added errata NOP
  3794   0008CC                     
  3795                           ; BSR set to: 0
  3796   0008CC  51B1               	movf	GPIO_check_access@_pin_config& (0+255),w,b
  3797   0008CE  6ED9               	movwf	fsr2l,c
  3798   0008D0  6ADA               	clrf	fsr2h,c
  3799   0008D2  30DF               	rrcf	223,w,c
  3800   0008D4  32E8               	rrcf	wreg,f,c
  3801   0008D6  32E8               	rrcf	wreg,f,c
  3802   0008D8  0B07               	andlw	7
  3803   0008DA  6FB2               	movwf	??_GPIO_check_access& (0+255),b
  3804   0008DC  0E02               	movlw	2
  3805   0008DE  65B2               	cpfsgt	??_GPIO_check_access& (0+255),b
  3806   0008E0  EF74  F004         	goto	u4911
  3807   0008E4  EF77  F004         	goto	u4910
  3808   0008E8                     u4911:
  3809   0008E8  FFFF               	dw	65535	; assembler added errata NOP
  3810   0008EA  EF79  F004         	goto	l4849
  3811   0008EE                     u4910:
  3812   0008EE                     l599:
  3813   0008EE  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  3817   0008F0  6BB3               	clrf	GPIO_check_access@ret& (0+255),b
  3818   0008F2                     l4849:
  3819   0008F2  FFFF               	dw	65535	; assembler added errata NOP
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  3823   0008F4  51B3               	movf	GPIO_check_access@ret& (0+255),w,b
  3824   0008F6                     
  3825                           ; BSR set to: 0
  3826   0008F6  0012               	return		;funcret
  3827   0008F8  FFFF               	dw	65535	; errata NOP
  3828   0008FA                     __end_of_GPIO_check_access:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _ADC_init *****************
  3832 ;; Defined at:
  3833 ;;		line 16 in file "MCAL_layer/ADC/hal_adc.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  lADC            1    7[BANK0 ] PTR const struct .
  3836 ;;		 -> ADC1(5), 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  ret             1   12[BANK0 ] unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      unsigned char 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3848 ;;      Params:         0       1       0       0       0       0       0
  3849 ;;      Locals:         0       4       0       0       0       0       0
  3850 ;;      Temps:          0       1       0       0       0       0       0
  3851 ;;      Totals:         0       6       0       0       0       0       0
  3852 ;;Total ram usage:        6 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 8
  3855 ;; This function calls:
  3856 ;;		_ADC_select_channel
  3857 ;;		_ADC_set_pin_config
  3858 ;;		_INT_ADC_init
  3859 ;;		_INT_ADC_set_callback_routine
  3860 ;; This function is called by:
  3861 ;;		_application_initialize
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text8
  3866   000616                     __ptext8:
  3867                           	callstack 0
  3868   000616                     _ADC_init:
  3869                           	callstack 0
  3870   000616  FFFF               	dw	65535	; assembler added errata NOP
  3871   000618                     
  3872                           ;MCAL_layer/ADC/hal_adc.c: 18:  if(((void*)0) == lADC || lADC -> channel == ADC_default)
  3873   000618  0100               	movlb	0	; () banked
  3874   00061A  51B8               	movf	ADC_init@lADC& (0+255),w,b
  3875   00061C  B4D8               	btfsc	status,2,c
  3876   00061E  EF13  F003         	goto	u5351
  3877   000622  EF16  F003         	goto	u5350
  3878   000626                     u5351:
  3879   000626  FFFF               	dw	65535	; assembler added errata NOP
  3880   000628  EF25  F003         	goto	l454
  3881   00062C                     u5350:
  3882   00062C  FFFF               	dw	65535	; assembler added errata NOP
  3883   00062E                     
  3884                           ; BSR set to: 0
  3885   00062E  51B8               	movf	ADC_init@lADC& (0+255),w,b
  3886   000630  6ED9               	movwf	fsr2l,c
  3887   000632  6ADA               	clrf	fsr2h,c
  3888   000634  0E02               	movlw	2
  3889   000636  26D9               	addwf	fsr2l,f,c
  3890   000638  28DE               	incf	postinc2,w,c
  3891   00063A  A4D8               	btfss	status,2,c
  3892   00063C  EF22  F003         	goto	u5361
  3893   000640  EF25  F003         	goto	u5360
  3894   000644                     u5361:
  3895   000644  FFFF               	dw	65535	; assembler added errata NOP
  3896   000646  EF29  F003         	goto	l452
  3897   00064A                     u5360:
  3898   00064A                     l454:
  3899   00064A  FFFF               	dw	65535	; assembler added errata NOP
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;MCAL_layer/ADC/hal_adc.c: 19:   ret = (STD_ReturnType)(0x00);
  3903   00064C  6BBD               	clrf	ADC_init@ret& (0+255),b
  3904   00064E  EFE6  F003         	goto	l5195
  3905   000652                     l452:
  3906   000652  FFFF               	dw	65535	; assembler added errata NOP
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;MCAL_layer/ADC/hal_adc.c: 22:   (ADCON0bits.ADON=0);
  3910   000654  90C2               	bcf	194,0,c	;volatile
  3911                           
  3912                           ;MCAL_layer/ADC/hal_adc.c: 24:   ret = ADC_select_channel(lADC -> channel) &&
  3913   000656  6BBA               	clrf	_ADC_init$1072& (0+255),b
  3914   000658                     
  3915                           ; BSR set to: 0
  3916   000658  51B8               	movf	ADC_init@lADC& (0+255),w,b
  3917   00065A  6ED9               	movwf	fsr2l,c
  3918   00065C  6ADA               	clrf	fsr2h,c
  3919   00065E  0E02               	movlw	2
  3920   000660  26D9               	addwf	fsr2l,f,c
  3921   000662  50DF               	movf	indf2,w,c
  3922   000664  ECF5  F009         	call	_ADC_select_channel
  3923   000668  0900               	iorlw	0
  3924   00066A  B4D8               	btfsc	status,2,c
  3925   00066C  EF3A  F003         	goto	u5371
  3926   000670  EF3D  F003         	goto	u5370
  3927   000674                     u5371:
  3928   000674  FFFF               	dw	65535	; assembler added errata NOP
  3929   000676  EF54  F003         	goto	l5163
  3930   00067A                     u5370:
  3931   00067A  FFFF               	dw	65535	; assembler added errata NOP
  3932   00067C  0100               	movlb	0	; () banked
  3933   00067E  51B8               	movf	ADC_init@lADC& (0+255),w,b
  3934   000680  6ED9               	movwf	fsr2l,c
  3935   000682  6ADA               	clrf	fsr2h,c
  3936   000684  0E02               	movlw	2
  3937   000686  26D9               	addwf	fsr2l,f,c
  3938   000688  50DF               	movf	indf2,w,c
  3939   00068A  ECB3  F006         	call	_ADC_set_pin_config
  3940   00068E  0900               	iorlw	0
  3941   000690  B4D8               	btfsc	status,2,c
  3942   000692  EF4D  F003         	goto	u5381
  3943   000696  EF50  F003         	goto	u5380
  3944   00069A                     u5381:
  3945   00069A  FFFF               	dw	65535	; assembler added errata NOP
  3946   00069C  EF54  F003         	goto	l5163
  3947   0006A0                     u5380:
  3948   0006A0  FFFF               	dw	65535	; assembler added errata NOP
  3949   0006A2  0E01               	movlw	1
  3950   0006A4  0100               	movlb	0	; () banked
  3951   0006A6  6FBA               	movwf	_ADC_init$1072& (0+255),b
  3952   0006A8                     l5163:
  3953   0006A8  FFFF               	dw	65535	; assembler added errata NOP
  3954   0006AA  C0BA  F0BD         	movff	_ADC_init$1072,ADC_init@ret
  3955   0006AE                     
  3956                           ;MCAL_layer/ADC/hal_adc.c: 29:   (ADCON1bits.ADFM=1);
  3957   0006AE  8EC1               	bsf	193,7,c	;volatile
  3958   0006B0                     
  3959                           ;MCAL_layer/ADC/hal_adc.c: 36:   (ADCON1bits.ADCS2 = ((uint8)(lADC -> conversion_clock >
      +                          > 2) & 0x01)); (ADCON0bits.ADCS1 = ((uint8)(lADC -> conversion_clock >> 1) & 0x01)); (AD
      +                          CON0bits.ADCS0 = ((uint8)(lADC -> conversion_clock) & 0x01));;
  3960   0006B0  0100               	movlb	0	; () banked
  3961   0006B2  51B8               	movf	ADC_init@lADC& (0+255),w,b
  3962   0006B4  6ED9               	movwf	fsr2l,c
  3963   0006B6  6ADA               	clrf	fsr2h,c
  3964   0006B8  0E03               	movlw	3
  3965   0006BA  26D9               	addwf	fsr2l,f,c
  3966   0006BC  50DF               	movf	indf2,w,c
  3967   0006BE  6FB9               	movwf	??_ADC_init& (0+255),b
  3968   0006C0  90D8               	bcf	status,0,c
  3969   0006C2  33B9               	rrcf	??_ADC_init& (0+255),f,b
  3970   0006C4  90D8               	bcf	status,0,c
  3971   0006C6  33B9               	rrcf	??_ADC_init& (0+255),f,b
  3972   0006C8  0E01               	movlw	1
  3973   0006CA  17B9               	andwf	??_ADC_init& (0+255),f,b
  3974   0006CC  3BB9               	swapf	??_ADC_init& (0+255),f,b
  3975   0006CE  47B9               	rlncf	??_ADC_init& (0+255),f,b
  3976   0006D0  47B9               	rlncf	??_ADC_init& (0+255),f,b
  3977   0006D2  50C1               	movf	193,w,c	;volatile
  3978   0006D4  19B9               	xorwf	??_ADC_init& (0+255),w,b
  3979   0006D6  0BBF               	andlw	-65
  3980   0006D8  19B9               	xorwf	??_ADC_init& (0+255),w,b
  3981   0006DA  6EC1               	movwf	193,c	;volatile
  3982   0006DC                     
  3983                           ; BSR set to: 0
  3984   0006DC  51B8               	movf	ADC_init@lADC& (0+255),w,b
  3985   0006DE  6ED9               	movwf	fsr2l,c
  3986   0006E0  6ADA               	clrf	fsr2h,c
  3987   0006E2  0E03               	movlw	3
  3988   0006E4  26D9               	addwf	fsr2l,f,c
  3989   0006E6  50DF               	movf	indf2,w,c
  3990   0006E8  6FB9               	movwf	??_ADC_init& (0+255),b
  3991   0006EA  90D8               	bcf	status,0,c
  3992   0006EC  33B9               	rrcf	??_ADC_init& (0+255),f,b
  3993   0006EE  0E01               	movlw	1
  3994   0006F0  17B9               	andwf	??_ADC_init& (0+255),f,b
  3995   0006F2  33B9               	rrcf	??_ADC_init& (0+255),f,b
  3996   0006F4  33B9               	rrcf	??_ADC_init& (0+255),f,b
  3997   0006F6  50C2               	movf	194,w,c	;volatile
  3998   0006F8  19B9               	xorwf	??_ADC_init& (0+255),w,b
  3999   0006FA  0B7F               	andlw	-129
  4000   0006FC  19B9               	xorwf	??_ADC_init& (0+255),w,b
  4001   0006FE  6EC2               	movwf	194,c	;volatile
  4002   000700                     
  4003                           ; BSR set to: 0
  4004   000700  51B8               	movf	ADC_init@lADC& (0+255),w,b
  4005   000702  6ED9               	movwf	fsr2l,c
  4006   000704  6ADA               	clrf	fsr2h,c
  4007   000706  0E03               	movlw	3
  4008   000708  26D9               	addwf	fsr2l,f,c
  4009   00070A  50DF               	movf	indf2,w,c
  4010   00070C  6FB9               	movwf	??_ADC_init& (0+255),b
  4011   00070E  0E01               	movlw	1
  4012   000710  17B9               	andwf	??_ADC_init& (0+255),f,b
  4013   000712  3BB9               	swapf	??_ADC_init& (0+255),f,b
  4014   000714  47B9               	rlncf	??_ADC_init& (0+255),f,b
  4015   000716  47B9               	rlncf	??_ADC_init& (0+255),f,b
  4016   000718  50C2               	movf	194,w,c	;volatile
  4017   00071A  19B9               	xorwf	??_ADC_init& (0+255),w,b
  4018   00071C  0BBF               	andlw	-65
  4019   00071E  19B9               	xorwf	??_ADC_init& (0+255),w,b
  4020   000720  6EC2               	movwf	194,c	;volatile
  4021   000722                     
  4022                           ; BSR set to: 0
  4023                           ;MCAL_layer/ADC/hal_adc.c: 43:                 ret = ret && INT_ADC_init(1);
  4024   000722  6BBB               	clrf	_ADC_init$1084& (0+255),b
  4025   000724                     
  4026                           ; BSR set to: 0
  4027   000724  51BD               	movf	ADC_init@ret& (0+255),w,b
  4028   000726  B4D8               	btfsc	status,2,c
  4029   000728  EF98  F003         	goto	u5391
  4030   00072C  EF9B  F003         	goto	u5390
  4031   000730                     u5391:
  4032   000730  FFFF               	dw	65535	; assembler added errata NOP
  4033   000732  EFAC  F003         	goto	l5181
  4034   000736                     u5390:
  4035   000736  FFFF               	dw	65535	; assembler added errata NOP
  4036   000738                     
  4037                           ; BSR set to: 0
  4038   000738  0E01               	movlw	1
  4039   00073A  EC21  F00A         	call	_INT_ADC_init
  4040   00073E  0900               	iorlw	0
  4041   000740  B4D8               	btfsc	status,2,c
  4042   000742  EFA5  F003         	goto	u5401
  4043   000746  EFA8  F003         	goto	u5400
  4044   00074A                     u5401:
  4045   00074A  FFFF               	dw	65535	; assembler added errata NOP
  4046   00074C  EFAC  F003         	goto	l5181
  4047   000750                     u5400:
  4048   000750  FFFF               	dw	65535	; assembler added errata NOP
  4049   000752  0E01               	movlw	1
  4050   000754  0100               	movlb	0	; () banked
  4051   000756  6FBB               	movwf	_ADC_init$1084& (0+255),b
  4052   000758                     l5181:
  4053   000758  FFFF               	dw	65535	; assembler added errata NOP
  4054   00075A  C0BB  F0BD         	movff	_ADC_init$1084,ADC_init@ret
  4055   00075E                     
  4056                           ;MCAL_layer/ADC/hal_adc.c: 49:   ret = ret && INT_ADC_set_callback_routine(lADC-> ADC_in
      +                          terrupt_handler);
  4057   00075E  0100               	movlb	0	; () banked
  4058   000760  6BBC               	clrf	_ADC_init$1085& (0+255),b
  4059   000762  51BD               	movf	ADC_init@ret& (0+255),w,b
  4060   000764  B4D8               	btfsc	status,2,c
  4061   000766  EFB7  F003         	goto	u5411
  4062   00076A  EFBA  F003         	goto	u5410
  4063   00076E                     u5411:
  4064   00076E  FFFF               	dw	65535	; assembler added errata NOP
  4065   000770  EFD1  F003         	goto	l5189
  4066   000774                     u5410:
  4067   000774  FFFF               	dw	65535	; assembler added errata NOP
  4068   000776                     
  4069                           ; BSR set to: 0
  4070   000776  51B8               	movf	ADC_init@lADC& (0+255),w,b
  4071   000778  6ED9               	movwf	fsr2l,c
  4072   00077A  6ADA               	clrf	fsr2h,c
  4073   00077C  CFDE F0B1          	movff	postinc2,INT_ADC_set_callback_routine@callback
  4074   000780  CFDD F0B2          	movff	postdec2,INT_ADC_set_callback_routine@callback+1
  4075   000784  EC2B  F00A         	call	_INT_ADC_set_callback_routine	;wreg free
  4076   000788  0900               	iorlw	0
  4077   00078A  B4D8               	btfsc	status,2,c
  4078   00078C  EFCA  F003         	goto	u5421
  4079   000790  EFCD  F003         	goto	u5420
  4080   000794                     u5421:
  4081   000794  FFFF               	dw	65535	; assembler added errata NOP
  4082   000796  EFD1  F003         	goto	l5189
  4083   00079A                     u5420:
  4084   00079A  FFFF               	dw	65535	; assembler added errata NOP
  4085   00079C  0E01               	movlw	1
  4086   00079E  0100               	movlb	0	; () banked
  4087   0007A0  6FBC               	movwf	_ADC_init$1085& (0+255),b
  4088   0007A2                     l5189:
  4089   0007A2  FFFF               	dw	65535	; assembler added errata NOP
  4090   0007A4  C0BC  F0BD         	movff	_ADC_init$1085,ADC_init@ret
  4091   0007A8                     
  4092                           ;MCAL_layer/ADC/hal_adc.c: 54:   (ADCON1bits.PCFG = ((uint8)(lADC -> combination-1) & 0x
      +                          0F));
  4093   0007A8  0100               	movlb	0	; () banked
  4094   0007AA  51B8               	movf	ADC_init@lADC& (0+255),w,b
  4095   0007AC  6ED9               	movwf	fsr2l,c
  4096   0007AE  6ADA               	clrf	fsr2h,c
  4097   0007B0  0E04               	movlw	4
  4098   0007B2  26D9               	addwf	fsr2l,f,c
  4099   0007B4  50DF               	movf	indf2,w,c
  4100   0007B6  6FB9               	movwf	??_ADC_init& (0+255),b
  4101   0007B8  0EFF               	movlw	255
  4102   0007BA  27B9               	addwf	??_ADC_init& (0+255),f,b
  4103   0007BC  0E0F               	movlw	15
  4104   0007BE  17B9               	andwf	??_ADC_init& (0+255),f,b
  4105   0007C0  50C1               	movf	193,w,c	;volatile
  4106   0007C2  19B9               	xorwf	??_ADC_init& (0+255),w,b
  4107   0007C4  0BF0               	andlw	-16
  4108   0007C6  19B9               	xorwf	??_ADC_init& (0+255),w,b
  4109   0007C8  6EC1               	movwf	193,c	;volatile
  4110   0007CA                     
  4111                           ; BSR set to: 0
  4112                           ;MCAL_layer/ADC/hal_adc.c: 56:   (ADCON0bits.ADON=1);
  4113   0007CA  80C2               	bsf	194,0,c	;volatile
  4114   0007CC                     l5195:
  4115   0007CC  FFFF               	dw	65535	; assembler added errata NOP
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;MCAL_layer/ADC/hal_adc.c: 58:  return ret;
  4119   0007CE  51BD               	movf	ADC_init@ret& (0+255),w,b
  4120   0007D0                     
  4121                           ; BSR set to: 0
  4122   0007D0  0012               	return		;funcret
  4123   0007D2  FFFF               	dw	65535	; errata NOP
  4124   0007D4                     __end_of_ADC_init:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _INT_ADC_set_callback_routine *****************
  4128 ;; Defined at:
  4129 ;;		line 74 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  callback        2    0[BANK0 ] PTR FTN(PTR unsigned sho
  4132 ;;		 -> __ADC(1), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  ret             1    0        unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      unsigned char 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4144 ;;      Params:         0       2       0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0
  4147 ;;      Totals:         0       2       0       0       0       0       0
  4148 ;;Total ram usage:        2 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 6
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_ADC_init
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text9
  4159   001456                     __ptext9:
  4160                           	callstack 0
  4161   001456                     _INT_ADC_set_callback_routine:
  4162                           	callstack 0
  4163   001456  FFFF               	dw	65535	; assembler added errata NOP
  4164   001458                     
  4165                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 76:   ADC_callback = callback;
  4166   001458  C0B1  F041         	movff	INT_ADC_set_callback_routine@callback,_ADC_callback
  4167   00145C  C0B2  F042         	movff	INT_ADC_set_callback_routine@callback+1,_ADC_callback+1
  4168   001460                     
  4169                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 77:  return ret;
  4170   001460  0E01               	movlw	1
  4171   001462  0012               	return		;funcret
  4172   001464  FFFF               	dw	65535	; errata NOP
  4173   001466                     __end_of_INT_ADC_set_callback_routine:
  4174                           	callstack 0
  4175                           
  4176 ;; *************** function _INT_ADC_init *****************
  4177 ;; Defined at:
  4178 ;;		line 25 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  priority        1    wreg     unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  priority        1    0[COMRAM] unsigned char 
  4183 ;;  ret             1    0        unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4193 ;;      Params:         0       0       0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 6
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_ADC_init
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text10
  4208   001442                     __ptext10:
  4209                           	callstack 0
  4210   001442                     _INT_ADC_init:
  4211                           	callstack 0
  4212   001442  FFFF               	dw	65535	; assembler added errata NOP
  4213   001444                     
  4214                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 27:   (PIR1bits.ADIF=0);
  4215   001444  9C9E               	bcf	158,6,c	;volatile
  4216   001446                     
  4217                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 28:   (PIE1bits.ADIE=0);
  4218   001446  9C9D               	bcf	157,6,c	;volatile
  4219   001448                     
  4220                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 49:         RCONbits.IPEN=0;
  4221   001448  9ED0               	bcf	208,7,c	;volatile
  4222   00144A                     
  4223                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 50:   INTCONbits.GIE=1;
  4224   00144A  8EF2               	bsf	242,7,c	;volatile
  4225   00144C                     
  4226                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 51:   INTCONbits.PEIE=1;
  4227   00144C  8CF2               	bsf	242,6,c	;volatile
  4228   00144E                     
  4229                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 52:   (PIE1bits.ADIE=1);
  4230   00144E  8C9D               	bsf	157,6,c	;volatile
  4231   001450                     
  4232                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 56:  return ret;
  4233   001450  0E01               	movlw	1
  4234   001452  0012               	return		;funcret
  4235   001454  FFFF               	dw	65535	; errata NOP
  4236   001456                     __end_of_INT_ADC_init:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function _ADC_convert *****************
  4240 ;; Defined at:
  4241 ;;		line 94 in file "MCAL_layer/ADC/hal_adc.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  lADC            1    7[BANK0 ] PTR const struct .
  4244 ;;		 -> ADC1(5), 
  4245 ;;  lCH             1    8[BANK0 ] enum E2857
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  ret             1    0        unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      unsigned char 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4257 ;;      Params:         0       2       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0
  4259 ;;      Temps:          0       1       0       0       0       0       0
  4260 ;;      Totals:         0       3       0       0       0       0       0
  4261 ;;Total ram usage:        3 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 8
  4264 ;; This function calls:
  4265 ;;		_ADC_select_channel
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text11
  4272   001016                     __ptext11:
  4273                           	callstack 0
  4274   001016                     _ADC_convert:
  4275                           	callstack 0
  4276   001016  FFFF               	dw	65535	; assembler added errata NOP
  4277   001018                     
  4278                           ;MCAL_layer/ADC/hal_adc.c: 96:  if((((void*)0) == lADC) || (lADC -> channel == ADC_defau
      +                          lt) )
  4279   001018  0100               	movlb	0	; () banked
  4280   00101A  51B8               	movf	ADC_convert@lADC& (0+255),w,b
  4281   00101C  B4D8               	btfsc	status,2,c
  4282   00101E  EF13  F008         	goto	u5621
  4283   001022  EF16  F008         	goto	u5620
  4284   001026                     u5621:
  4285   001026  FFFF               	dw	65535	; assembler added errata NOP
  4286   001028  EF25  F008         	goto	l475
  4287   00102C                     u5620:
  4288   00102C  FFFF               	dw	65535	; assembler added errata NOP
  4289   00102E                     
  4290                           ; BSR set to: 0
  4291   00102E  51B8               	movf	ADC_convert@lADC& (0+255),w,b
  4292   001030  6ED9               	movwf	fsr2l,c
  4293   001032  6ADA               	clrf	fsr2h,c
  4294   001034  0E02               	movlw	2
  4295   001036  26D9               	addwf	fsr2l,f,c
  4296   001038  28DE               	incf	postinc2,w,c
  4297   00103A  A4D8               	btfss	status,2,c
  4298   00103C  EF22  F008         	goto	u5631
  4299   001040  EF25  F008         	goto	u5630
  4300   001044                     u5631:
  4301   001044  FFFF               	dw	65535	; assembler added errata NOP
  4302   001046  EF28  F008         	goto	l5331
  4303   00104A                     u5630:
  4304   00104A                     l475:
  4305   00104A  FFFF               	dw	65535	; assembler added errata NOP
  4306                           
  4307                           ; BSR set to: 0
  4308   00104C  EF43  F008         	goto	l479
  4309   001050                     l5331:
  4310   001050  FFFF               	dw	65535	; assembler added errata NOP
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;MCAL_layer/ADC/hal_adc.c: 100:   if(lCH == ADC_default)
  4314   001052  29B9               	incf	ADC_convert@lCH& (0+255),w,b
  4315   001054  A4D8               	btfss	status,2,c
  4316   001056  EF2F  F008         	goto	u5641
  4317   00105A  EF32  F008         	goto	u5640
  4318   00105E                     u5641:
  4319   00105E  FFFF               	dw	65535	; assembler added errata NOP
  4320   001060  EF3D  F008         	goto	l5335
  4321   001064                     u5640:
  4322   001064  FFFF               	dw	65535	; assembler added errata NOP
  4323   001066                     
  4324                           ; BSR set to: 0
  4325   001066  51B8               	movf	ADC_convert@lADC& (0+255),w,b
  4326   001068  6ED9               	movwf	fsr2l,c
  4327   00106A  6ADA               	clrf	fsr2h,c
  4328   00106C  0E02               	movlw	2
  4329   00106E  26D9               	addwf	fsr2l,f,c
  4330   001070  50DF               	movf	indf2,w,c
  4331   001072  ECF5  F009         	call	_ADC_select_channel
  4332   001076  EF41  F008         	goto	l5337
  4333   00107A                     l5335:
  4334   00107A  FFFF               	dw	65535	; assembler added errata NOP
  4335                           
  4336                           ; BSR set to: 0
  4337   00107C  51B9               	movf	ADC_convert@lCH& (0+255),w,b
  4338   00107E  ECF5  F009         	call	_ADC_select_channel
  4339   001082                     l5337:
  4340   001082  FFFF               	dw	65535	; assembler added errata NOP
  4341                           
  4342                           ;MCAL_layer/ADC/hal_adc.c: 105:    (ADCON0bits.GO_nDONE=1);
  4343   001084  84C2               	bsf	194,2,c	;volatile
  4344   001086                     l479:
  4345   001086  FFFF               	dw	65535	; assembler added errata NOP
  4346   001088  0012               	return		;funcret
  4347   00108A  FFFF               	dw	65535	; errata NOP
  4348   00108C                     __end_of_ADC_convert:
  4349                           	callstack 0
  4350                           
  4351 ;; *************** function _ADC_select_channel *****************
  4352 ;; Defined at:
  4353 ;;		line 81 in file "MCAL_layer/ADC/hal_adc.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  lCH             1    wreg     enum E2857
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  lCH             1    6[BANK0 ] enum E2857
  4358 ;;  ret             1    5[BANK0 ] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      unsigned char 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:         0       0       0       0       0       0       0
  4369 ;;      Locals:         0       2       0       0       0       0       0
  4370 ;;      Temps:          0       1       0       0       0       0       0
  4371 ;;      Totals:         0       3       0       0       0       0       0
  4372 ;;Total ram usage:        3 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; Hardware stack levels required when called: 7
  4375 ;; This function calls:
  4376 ;;		_ADC_set_pin_config
  4377 ;; This function is called by:
  4378 ;;		_ADC_init
  4379 ;;		_ADC_convert
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text12
  4384   0013EA                     __ptext12:
  4385                           	callstack 0
  4386   0013EA                     _ADC_select_channel:
  4387                           	callstack 0
  4388   0013EA  FFFF               	dw	65535	; assembler added errata NOP
  4389                           
  4390                           ;incstack = 0
  4391                           ;ADC_select_channel@lCH stored from wreg
  4392   0013EC  0100               	movlb	0	; () banked
  4393   0013EE  6FB7               	movwf	ADC_select_channel@lCH& (0+255),b
  4394   0013F0                     
  4395                           ;MCAL_layer/ADC/hal_adc.c: 83:   (ADCON0bits.CHS=(uint8)lCH & 0x07);
  4396   0013F0  C0B7  F0B5         	movff	ADC_select_channel@lCH,??_ADC_select_channel
  4397   0013F4  0E07               	movlw	7
  4398   0013F6  0100               	movlb	0	; () banked
  4399   0013F8  17B5               	andwf	??_ADC_select_channel& (0+255),f,b
  4400   0013FA  47B5               	rlncf	??_ADC_select_channel& (0+255),f,b
  4401   0013FC  47B5               	rlncf	??_ADC_select_channel& (0+255),f,b
  4402   0013FE  47B5               	rlncf	??_ADC_select_channel& (0+255),f,b
  4403   001400  50C2               	movf	194,w,c	;volatile
  4404   001402  19B5               	xorwf	??_ADC_select_channel& (0+255),w,b
  4405   001404  0BC7               	andlw	-57
  4406   001406  19B5               	xorwf	??_ADC_select_channel& (0+255),w,b
  4407   001408  6EC2               	movwf	194,c	;volatile
  4408   00140A                     
  4409                           ; BSR set to: 0
  4410                           ;MCAL_layer/ADC/hal_adc.c: 84:   ret = ADC_set_pin_config(lCH);
  4411   00140A  51B7               	movf	ADC_select_channel@lCH& (0+255),w,b
  4412   00140C  ECB3  F006         	call	_ADC_set_pin_config
  4413   001410  0100               	movlb	0	; () banked
  4414   001412  6FB6               	movwf	ADC_select_channel@ret& (0+255),b
  4415   001414                     
  4416                           ; BSR set to: 0
  4417                           ;MCAL_layer/ADC/hal_adc.c: 85:  return ret;
  4418   001414  51B6               	movf	ADC_select_channel@ret& (0+255),w,b
  4419   001416                     
  4420                           ; BSR set to: 0
  4421   001416  0012               	return		;funcret
  4422   001418  FFFF               	dw	65535	; errata NOP
  4423   00141A                     __end_of_ADC_select_channel:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function _ADC_set_pin_config *****************
  4427 ;; Defined at:
  4428 ;;		line 156 in file "MCAL_layer/ADC/hal_adc.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  channel         1    wreg     enum E2857
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  channel         1    2[BANK0 ] enum E2857
  4433 ;;  ret             1    3[BANK0 ] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      unsigned char 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4443 ;;      Params:         0       0       0       0       0       0       0
  4444 ;;      Locals:         0       2       0       0       0       0       0
  4445 ;;      Temps:          0       2       0       0       0       0       0
  4446 ;;      Totals:         0       4       0       0       0       0       0
  4447 ;;Total ram usage:        4 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 6
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_ADC_init
  4454 ;;		_ADC_select_channel
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text13
  4459   000D66                     __ptext13:
  4460                           	callstack 0
  4461   000D66                     _ADC_set_pin_config:
  4462                           	callstack 0
  4463   000D66  FFFF               	dw	65535	; assembler added errata NOP
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;incstack = 0
  4467                           ;ADC_set_pin_config@channel stored from wreg
  4468   000D68  0100               	movlb	0	; () banked
  4469   000D6A  6FB3               	movwf	ADC_set_pin_config@channel& (0+255),b
  4470   000D6C                     
  4471                           ;MCAL_layer/ADC/hal_adc.c: 157:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  4472   000D6C  0E01               	movlw	1
  4473   000D6E  0100               	movlb	0	; () banked
  4474   000D70  6FB4               	movwf	ADC_set_pin_config@ret& (0+255),b
  4475                           
  4476                           ;MCAL_layer/ADC/hal_adc.c: 158:  switch(channel){
  4477   000D72  EFDF  F006         	goto	l4927
  4478   000D76                     l502:
  4479   000D76  FFFF               	dw	65535	; assembler added errata NOP
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;MCAL_layer/ADC/hal_adc.c: 160:    ret = (STD_ReturnType)(0x00);
  4483   000D78  6BB4               	clrf	ADC_set_pin_config@ret& (0+255),b
  4484                           
  4485                           ;MCAL_layer/ADC/hal_adc.c: 161:    break;
  4486   000D7A  EF1C  F007         	goto	l4929
  4487   000D7E                     l504:
  4488   000D7E  FFFF               	dw	65535	; assembler added errata NOP
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;MCAL_layer/ADC/hal_adc.c: 163:    TRISAbits.RA0=1;
  4492   000D80  8092               	bsf	146,0,c	;volatile
  4493                           
  4494                           ;MCAL_layer/ADC/hal_adc.c: 164:    break;
  4495   000D82  EF1C  F007         	goto	l4929
  4496   000D86                     l505:
  4497   000D86  FFFF               	dw	65535	; assembler added errata NOP
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;MCAL_layer/ADC/hal_adc.c: 166:    TRISAbits.RA1=1;
  4501   000D88  8292               	bsf	146,1,c	;volatile
  4502                           
  4503                           ;MCAL_layer/ADC/hal_adc.c: 167:    break;
  4504   000D8A  EF1C  F007         	goto	l4929
  4505   000D8E                     l506:
  4506   000D8E  FFFF               	dw	65535	; assembler added errata NOP
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;MCAL_layer/ADC/hal_adc.c: 169:    TRISAbits.RA2=1;
  4510   000D90  8492               	bsf	146,2,c	;volatile
  4511                           
  4512                           ;MCAL_layer/ADC/hal_adc.c: 170:    break;
  4513   000D92  EF1C  F007         	goto	l4929
  4514   000D96                     l507:
  4515   000D96  FFFF               	dw	65535	; assembler added errata NOP
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;MCAL_layer/ADC/hal_adc.c: 172:    TRISAbits.RA3=1;
  4519   000D98  8692               	bsf	146,3,c	;volatile
  4520                           
  4521                           ;MCAL_layer/ADC/hal_adc.c: 173:    break;
  4522   000D9A  EF1C  F007         	goto	l4929
  4523   000D9E                     l508:
  4524   000D9E  FFFF               	dw	65535	; assembler added errata NOP
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;MCAL_layer/ADC/hal_adc.c: 175:    TRISAbits.RA5=1;
  4528   000DA0  8A92               	bsf	146,5,c	;volatile
  4529                           
  4530                           ;MCAL_layer/ADC/hal_adc.c: 176:    break;
  4531   000DA2  EF1C  F007         	goto	l4929
  4532   000DA6                     l509:
  4533   000DA6  FFFF               	dw	65535	; assembler added errata NOP
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;MCAL_layer/ADC/hal_adc.c: 178:    TRISEbits.RE0=1;
  4537   000DA8  8096               	bsf	150,0,c	;volatile
  4538                           
  4539                           ;MCAL_layer/ADC/hal_adc.c: 179:    break;
  4540   000DAA  EF1C  F007         	goto	l4929
  4541   000DAE                     l510:
  4542   000DAE  FFFF               	dw	65535	; assembler added errata NOP
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;MCAL_layer/ADC/hal_adc.c: 181:    TRISEbits.RE1=1;
  4546   000DB0  8296               	bsf	150,1,c	;volatile
  4547                           
  4548                           ;MCAL_layer/ADC/hal_adc.c: 182:    break;
  4549   000DB2  EF1C  F007         	goto	l4929
  4550   000DB6                     l511:
  4551   000DB6  FFFF               	dw	65535	; assembler added errata NOP
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;MCAL_layer/ADC/hal_adc.c: 184:    TRISEbits.RE2=1;
  4555   000DB8  8496               	bsf	150,2,c	;volatile
  4556                           
  4557                           ;MCAL_layer/ADC/hal_adc.c: 185:    break;
  4558   000DBA  EF1C  F007         	goto	l4929
  4559   000DBE                     l4927:
  4560   000DBE  FFFF               	dw	65535	; assembler added errata NOP
  4561                           
  4562                           ; BSR set to: 0
  4563   000DC0  C0B3  F0B1         	movff	ADC_set_pin_config@channel,??_ADC_set_pin_config
  4564   000DC4  6BB2               	clrf	(??_ADC_set_pin_config+1)& (0+255),b
  4565   000DC6  BFB1               	btfsc	??_ADC_set_pin_config& (0+255),7,b
  4566   000DC8  07B2               	decf	(??_ADC_set_pin_config+1)& (0+255),f,b
  4567                           
  4568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4569                           ; Switch size 1, requested type "simple"
  4570                           ; Number of cases is 2, Range of values is 0 to 255
  4571                           ; switch strategies available:
  4572                           ; Name         Instructions Cycles
  4573                           ; simple_byte            7     4 (average)
  4574                           ;	Chosen strategy is simple_byte
  4575   000DCA  51B2               	movf	(??_ADC_set_pin_config+1)& (0+255),w,b
  4576   000DCC  0A00               	xorlw	0	; case 0
  4577   000DCE  B4D8               	btfsc	status,2,c
  4578   000DD0  EFF0  F006         	goto	l6145
  4579   000DD4  0AFF               	xorlw	255	; case 255
  4580   000DD6  B4D8               	btfsc	status,2,c
  4581   000DD8  EF14  F007         	goto	l6147
  4582   000DDC  EFBB  F006         	goto	l502
  4583   000DE0                     l6145:
  4584   000DE0  FFFF               	dw	65535	; assembler added errata NOP
  4585                           
  4586                           ; BSR set to: 0
  4587                           ; Switch size 1, requested type "simple"
  4588                           ; Number of cases is 8, Range of values is 0 to 7
  4589                           ; switch strategies available:
  4590                           ; Name         Instructions Cycles
  4591                           ; simple_byte           25    13 (average)
  4592                           ;	Chosen strategy is simple_byte
  4593   000DE2  51B1               	movf	??_ADC_set_pin_config& (0+255),w,b
  4594   000DE4  0A00               	xorlw	0	; case 0
  4595   000DE6  B4D8               	btfsc	status,2,c
  4596   000DE8  EFBF  F006         	goto	l504
  4597   000DEC  0A01               	xorlw	1	; case 1
  4598   000DEE  B4D8               	btfsc	status,2,c
  4599   000DF0  EFC3  F006         	goto	l505
  4600   000DF4  0A03               	xorlw	3	; case 2
  4601   000DF6  B4D8               	btfsc	status,2,c
  4602   000DF8  EFC7  F006         	goto	l506
  4603   000DFC  0A01               	xorlw	1	; case 3
  4604   000DFE  B4D8               	btfsc	status,2,c
  4605   000E00  EFCB  F006         	goto	l507
  4606   000E04  0A07               	xorlw	7	; case 4
  4607   000E06  B4D8               	btfsc	status,2,c
  4608   000E08  EFCF  F006         	goto	l508
  4609   000E0C  0A01               	xorlw	1	; case 5
  4610   000E0E  B4D8               	btfsc	status,2,c
  4611   000E10  EFD3  F006         	goto	l509
  4612   000E14  0A03               	xorlw	3	; case 6
  4613   000E16  B4D8               	btfsc	status,2,c
  4614   000E18  EFD7  F006         	goto	l510
  4615   000E1C  0A01               	xorlw	1	; case 7
  4616   000E1E  B4D8               	btfsc	status,2,c
  4617   000E20  EFDB  F006         	goto	l511
  4618   000E24  EFBB  F006         	goto	l502
  4619   000E28                     l6147:
  4620   000E28  FFFF               	dw	65535	; assembler added errata NOP
  4621                           
  4622                           ; BSR set to: 0
  4623                           ; Switch size 1, requested type "simple"
  4624                           ; Number of cases is 1, Range of values is 255 to 255
  4625                           ; switch strategies available:
  4626                           ; Name         Instructions Cycles
  4627                           ; simple_byte            4     3 (average)
  4628                           ;	Chosen strategy is simple_byte
  4629   000E2A  51B1               	movf	??_ADC_set_pin_config& (0+255),w,b
  4630   000E2C  0AFF               	xorlw	255	; case 255
  4631   000E2E  B4D8               	btfsc	status,2,c
  4632   000E30  EFBB  F006         	goto	l502
  4633   000E34  EFBB  F006         	goto	l502
  4634   000E38                     l4929:
  4635   000E38  FFFF               	dw	65535	; assembler added errata NOP
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;MCAL_layer/ADC/hal_adc.c: 190:         return ret;
  4639   000E3A  51B4               	movf	ADC_set_pin_config@ret& (0+255),w,b
  4640   000E3C                     
  4641                           ; BSR set to: 0
  4642   000E3C  0012               	return		;funcret
  4643   000E3E  FFFF               	dw	65535	; errata NOP
  4644   000E40                     __end_of_ADC_set_pin_config:
  4645                           	callstack 0
  4646                           
  4647 ;; *************** function _InterruptManager *****************
  4648 ;; Defined at:
  4649 ;;		line 65 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4663 ;;      Params:         0       0       0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0
  4665 ;;      Temps:          6       0       0       0       0       0       0
  4666 ;;      Totals:         6       0       0       0       0       0       0
  4667 ;;Total ram usage:        6 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 5
  4670 ;; This function calls:
  4671 ;;		_ADC_ISR
  4672 ;;		_INT0_ISR
  4673 ;;		_INT1_ISR
  4674 ;;		_INT2_ISR
  4675 ;;		_RB4_ISR
  4676 ;;		_RB5_ISR
  4677 ;;		_RB6_ISR
  4678 ;;		_RB7_ISR
  4679 ;; This function is called by:
  4680 ;;		Interrupt level 2
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	intcode
  4685   000008                     __pintcode:
  4686                           	callstack 0
  4687   000008                     _InterruptManager:
  4688                           	callstack 0
  4689   000008  FFFF               	dw	65535	; assembler added errata NOP
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;incstack = 0
  4693   00000A  8269               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4694   00000C  CFFA F062          	movff	pclath,??_InterruptManager
  4695   000010  CFFB F063          	movff	pclatu,??_InterruptManager+1
  4696   000014  CFD9 F064          	movff	fsr2l,??_InterruptManager+2
  4697   000018  CFDA F065          	movff	fsr2h,??_InterruptManager+3
  4698   00001C  CFF3 F066          	movff	prodl,??_InterruptManager+4
  4699   000020  CFF4 F067          	movff	prodh,??_InterruptManager+5
  4700   000024                     
  4701                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 68:  if(INTCONbits.INT0IF == 1 && INTCON
      +                          bits.INT0IE == 1)
  4702   000024  A2F2               	btfss	242,1,c	;volatile
  4703   000026  EF17  F000         	goto	i2u657_41
  4704   00002A  EF1A  F000         	goto	i2u657_40
  4705   00002E                     i2u657_41:
  4706   00002E  FFFF               	dw	65535	; assembler added errata NOP
  4707   000030  EF26  F000         	goto	i2l5957
  4708   000034                     i2u657_40:
  4709   000034  FFFF               	dw	65535	; assembler added errata NOP
  4710   000036  A8F2               	btfss	242,4,c	;volatile
  4711   000038  EF20  F000         	goto	i2u658_41
  4712   00003C  EF23  F000         	goto	i2u658_40
  4713   000040                     i2u658_41:
  4714   000040  FFFF               	dw	65535	; assembler added errata NOP
  4715   000042  EF26  F000         	goto	i2l5957
  4716   000046                     i2u658_40:
  4717   000046  FFFF               	dw	65535	; assembler added errata NOP
  4718   000048                     
  4719                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 69:         INT0_ISR();
  4720   000048  ECBD  F009         	call	_INT0_ISR	;wreg free
  4721   00004C                     i2l5957:
  4722   00004C  FFFF               	dw	65535	; assembler added errata NOP
  4723                           
  4724                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 70:  if(INTCON3bits.INT1IF == 1 && INTCO
      +                          N3bits.INT1IE == 1)
  4725   00004E  A0F0               	btfss	240,0,c	;volatile
  4726   000050  EF2C  F000         	goto	i2u659_41
  4727   000054  EF2F  F000         	goto	i2u659_40
  4728   000058                     i2u659_41:
  4729   000058  FFFF               	dw	65535	; assembler added errata NOP
  4730   00005A  EF3B  F000         	goto	i2l5963
  4731   00005E                     i2u659_40:
  4732   00005E  FFFF               	dw	65535	; assembler added errata NOP
  4733   000060  A6F0               	btfss	240,3,c	;volatile
  4734   000062  EF35  F000         	goto	i2u660_41
  4735   000066  EF38  F000         	goto	i2u660_40
  4736   00006A                     i2u660_41:
  4737   00006A  FFFF               	dw	65535	; assembler added errata NOP
  4738   00006C  EF3B  F000         	goto	i2l5963
  4739   000070                     i2u660_40:
  4740   000070  FFFF               	dw	65535	; assembler added errata NOP
  4741   000072                     
  4742                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 71:         INT1_ISR();
  4743   000072  EC9E  F009         	call	_INT1_ISR	;wreg free
  4744   000076                     i2l5963:
  4745   000076  FFFF               	dw	65535	; assembler added errata NOP
  4746                           
  4747                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 72:  if(INTCON3bits.INT2IF == 1 && INTCO
      +                          N3bits.INT2IE == 1)
  4748   000078  A2F0               	btfss	240,1,c	;volatile
  4749   00007A  EF41  F000         	goto	i2u661_41
  4750   00007E  EF44  F000         	goto	i2u661_40
  4751   000082                     i2u661_41:
  4752   000082  FFFF               	dw	65535	; assembler added errata NOP
  4753   000084  EF50  F000         	goto	i2l5969
  4754   000088                     i2u661_40:
  4755   000088  FFFF               	dw	65535	; assembler added errata NOP
  4756   00008A  A8F0               	btfss	240,4,c	;volatile
  4757   00008C  EF4A  F000         	goto	i2u662_41
  4758   000090  EF4D  F000         	goto	i2u662_40
  4759   000094                     i2u662_41:
  4760   000094  FFFF               	dw	65535	; assembler added errata NOP
  4761   000096  EF50  F000         	goto	i2l5969
  4762   00009A                     i2u662_40:
  4763   00009A  FFFF               	dw	65535	; assembler added errata NOP
  4764   00009C                     
  4765                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 73:         INT2_ISR();
  4766   00009C  EC7F  F009         	call	_INT2_ISR	;wreg free
  4767   0000A0                     i2l5969:
  4768   0000A0  FFFF               	dw	65535	; assembler added errata NOP
  4769                           
  4770                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 77:  if(INTCONbits.RBIF == 1 && INTCONbi
      +                          ts.RBIE == 1){
  4771   0000A2  A0F2               	btfss	242,0,c	;volatile
  4772   0000A4  EF56  F000         	goto	i2u663_41
  4773   0000A8  EF59  F000         	goto	i2u663_40
  4774   0000AC                     i2u663_41:
  4775   0000AC  FFFF               	dw	65535	; assembler added errata NOP
  4776   0000AE  EF36  F001         	goto	i2l6027
  4777   0000B2                     i2u663_40:
  4778   0000B2  FFFF               	dw	65535	; assembler added errata NOP
  4779   0000B4  A6F2               	btfss	242,3,c	;volatile
  4780   0000B6  EF5F  F000         	goto	i2u664_41
  4781   0000BA  EF62  F000         	goto	i2u664_40
  4782   0000BE                     i2u664_41:
  4783   0000BE  FFFF               	dw	65535	; assembler added errata NOP
  4784   0000C0  EF36  F001         	goto	i2l6027
  4785   0000C4                     i2u664_40:
  4786   0000C4  FFFF               	dw	65535	; assembler added errata NOP
  4787   0000C6  A881               	btfss	129,4,c	;volatile
  4788   0000C8  EF68  F000         	goto	i2u665_41
  4789   0000CC  EF6B  F000         	goto	i2u665_40
  4790   0000D0                     i2u665_41:
  4791   0000D0  FFFF               	dw	65535	; assembler added errata NOP
  4792   0000D2  EF7C  F000         	goto	i2l996
  4793   0000D6                     i2u665_40:
  4794   0000D6  FFFF               	dw	65535	; assembler added errata NOP
  4795   0000D8  0422               	decf	_RB4f^0,w,c	;volatile
  4796   0000DA  A4D8               	btfss	status,2,c
  4797   0000DC  EF72  F000         	goto	i2u666_41
  4798   0000E0  EF75  F000         	goto	i2u666_40
  4799   0000E4                     i2u666_41:
  4800   0000E4  FFFF               	dw	65535	; assembler added errata NOP
  4801   0000E6  EF7C  F000         	goto	i2l996
  4802   0000EA                     i2u666_40:
  4803   0000EA  FFFF               	dw	65535	; assembler added errata NOP
  4804   0000EC  6A22               	clrf	_RB4f^0,c	;volatile
  4805   0000EE  0E01               	movlw	1
  4806   0000F0  EC3F  F00A         	call	_RB4_ISR
  4807   0000F4  EF97  F000         	goto	i2l5985
  4808   0000F8                     i2l996:
  4809   0000F8  FFFF               	dw	65535	; assembler added errata NOP
  4810   0000FA  B881               	btfsc	129,4,c	;volatile
  4811   0000FC  EF82  F000         	goto	i2u667_41
  4812   000100  EF85  F000         	goto	i2u667_40
  4813   000104                     i2u667_41:
  4814   000104  FFFF               	dw	65535	; assembler added errata NOP
  4815   000106  EF97  F000         	goto	i2l999
  4816   00010A                     i2u667_40:
  4817   00010A  FFFF               	dw	65535	; assembler added errata NOP
  4818   00010C  5022               	movf	_RB4f^0,w,c	;volatile
  4819   00010E  A4D8               	btfss	status,2,c
  4820   000110  EF8C  F000         	goto	i2u668_41
  4821   000114  EF8F  F000         	goto	i2u668_40
  4822   000118                     i2u668_41:
  4823   000118  FFFF               	dw	65535	; assembler added errata NOP
  4824   00011A  EF97  F000         	goto	i2l999
  4825   00011E                     i2u668_40:
  4826   00011E  FFFF               	dw	65535	; assembler added errata NOP
  4827   000120  0E01               	movlw	1
  4828   000122  6E22               	movwf	_RB4f^0,c	;volatile
  4829   000124  0E00               	movlw	0
  4830   000126  EC3F  F00A         	call	_RB4_ISR
  4831   00012A  EF97  F000         	goto	i2l5985
  4832   00012E                     i2l999:
  4833   00012E                     i2l5985:
  4834   00012E  FFFF               	dw	65535	; assembler added errata NOP
  4835   000130  AA81               	btfss	129,5,c	;volatile
  4836   000132  EF9D  F000         	goto	i2u669_41
  4837   000136  EFA0  F000         	goto	i2u669_40
  4838   00013A                     i2u669_41:
  4839   00013A  FFFF               	dw	65535	; assembler added errata NOP
  4840   00013C  EFB1  F000         	goto	i2l1001
  4841   000140                     i2u669_40:
  4842   000140  FFFF               	dw	65535	; assembler added errata NOP
  4843   000142  0421               	decf	_RB5f^0,w,c	;volatile
  4844   000144  A4D8               	btfss	status,2,c
  4845   000146  EFA7  F000         	goto	i2u670_41
  4846   00014A  EFAA  F000         	goto	i2u670_40
  4847   00014E                     i2u670_41:
  4848   00014E  FFFF               	dw	65535	; assembler added errata NOP
  4849   000150  EFB1  F000         	goto	i2l1001
  4850   000154                     i2u670_40:
  4851   000154  FFFF               	dw	65535	; assembler added errata NOP
  4852   000156  6A21               	clrf	_RB5f^0,c	;volatile
  4853   000158  0E01               	movlw	1
  4854   00015A  EC3B  F00A         	call	_RB5_ISR
  4855   00015E  EFCC  F000         	goto	i2l5999
  4856   000162                     i2l1001:
  4857   000162  FFFF               	dw	65535	; assembler added errata NOP
  4858   000164  BA81               	btfsc	129,5,c	;volatile
  4859   000166  EFB7  F000         	goto	i2u671_41
  4860   00016A  EFBA  F000         	goto	i2u671_40
  4861   00016E                     i2u671_41:
  4862   00016E  FFFF               	dw	65535	; assembler added errata NOP
  4863   000170  EFCC  F000         	goto	i2l1004
  4864   000174                     i2u671_40:
  4865   000174  FFFF               	dw	65535	; assembler added errata NOP
  4866   000176  5021               	movf	_RB5f^0,w,c	;volatile
  4867   000178  A4D8               	btfss	status,2,c
  4868   00017A  EFC1  F000         	goto	i2u672_41
  4869   00017E  EFC4  F000         	goto	i2u672_40
  4870   000182                     i2u672_41:
  4871   000182  FFFF               	dw	65535	; assembler added errata NOP
  4872   000184  EFCC  F000         	goto	i2l1004
  4873   000188                     i2u672_40:
  4874   000188  FFFF               	dw	65535	; assembler added errata NOP
  4875   00018A  0E01               	movlw	1
  4876   00018C  6E21               	movwf	_RB5f^0,c	;volatile
  4877   00018E  0E00               	movlw	0
  4878   000190  EC3B  F00A         	call	_RB5_ISR
  4879   000194  EFCC  F000         	goto	i2l5999
  4880   000198                     i2l1004:
  4881   000198                     i2l5999:
  4882   000198  FFFF               	dw	65535	; assembler added errata NOP
  4883   00019A  AC81               	btfss	129,6,c	;volatile
  4884   00019C  EFD2  F000         	goto	i2u673_41
  4885   0001A0  EFD5  F000         	goto	i2u673_40
  4886   0001A4                     i2u673_41:
  4887   0001A4  FFFF               	dw	65535	; assembler added errata NOP
  4888   0001A6  EFE6  F000         	goto	i2l1006
  4889   0001AA                     i2u673_40:
  4890   0001AA  FFFF               	dw	65535	; assembler added errata NOP
  4891   0001AC  0420               	decf	_RB6f^0,w,c	;volatile
  4892   0001AE  A4D8               	btfss	status,2,c
  4893   0001B0  EFDC  F000         	goto	i2u674_41
  4894   0001B4  EFDF  F000         	goto	i2u674_40
  4895   0001B8                     i2u674_41:
  4896   0001B8  FFFF               	dw	65535	; assembler added errata NOP
  4897   0001BA  EFE6  F000         	goto	i2l1006
  4898   0001BE                     i2u674_40:
  4899   0001BE  FFFF               	dw	65535	; assembler added errata NOP
  4900   0001C0  6A20               	clrf	_RB6f^0,c	;volatile
  4901   0001C2  0E01               	movlw	1
  4902   0001C4  EC37  F00A         	call	_RB6_ISR
  4903   0001C8  EF01  F001         	goto	i2l6013
  4904   0001CC                     i2l1006:
  4905   0001CC  FFFF               	dw	65535	; assembler added errata NOP
  4906   0001CE  BC81               	btfsc	129,6,c	;volatile
  4907   0001D0  EFEC  F000         	goto	i2u675_41
  4908   0001D4  EFEF  F000         	goto	i2u675_40
  4909   0001D8                     i2u675_41:
  4910   0001D8  FFFF               	dw	65535	; assembler added errata NOP
  4911   0001DA  EF01  F001         	goto	i2l1009
  4912   0001DE                     i2u675_40:
  4913   0001DE  FFFF               	dw	65535	; assembler added errata NOP
  4914   0001E0  5020               	movf	_RB6f^0,w,c	;volatile
  4915   0001E2  A4D8               	btfss	status,2,c
  4916   0001E4  EFF6  F000         	goto	i2u676_41
  4917   0001E8  EFF9  F000         	goto	i2u676_40
  4918   0001EC                     i2u676_41:
  4919   0001EC  FFFF               	dw	65535	; assembler added errata NOP
  4920   0001EE  EF01  F001         	goto	i2l1009
  4921   0001F2                     i2u676_40:
  4922   0001F2  FFFF               	dw	65535	; assembler added errata NOP
  4923   0001F4  0E01               	movlw	1
  4924   0001F6  6E20               	movwf	_RB6f^0,c	;volatile
  4925   0001F8  0E00               	movlw	0
  4926   0001FA  EC37  F00A         	call	_RB6_ISR
  4927   0001FE  EF01  F001         	goto	i2l6013
  4928   000202                     i2l1009:
  4929   000202                     i2l6013:
  4930   000202  FFFF               	dw	65535	; assembler added errata NOP
  4931   000204  AE81               	btfss	129,7,c	;volatile
  4932   000206  EF07  F001         	goto	i2u677_41
  4933   00020A  EF0A  F001         	goto	i2u677_40
  4934   00020E                     i2u677_41:
  4935   00020E  FFFF               	dw	65535	; assembler added errata NOP
  4936   000210  EF1B  F001         	goto	i2l1011
  4937   000214                     i2u677_40:
  4938   000214  FFFF               	dw	65535	; assembler added errata NOP
  4939   000216  041F               	decf	_RB7f^0,w,c	;volatile
  4940   000218  A4D8               	btfss	status,2,c
  4941   00021A  EF11  F001         	goto	i2u678_41
  4942   00021E  EF14  F001         	goto	i2u678_40
  4943   000222                     i2u678_41:
  4944   000222  FFFF               	dw	65535	; assembler added errata NOP
  4945   000224  EF1B  F001         	goto	i2l1011
  4946   000228                     i2u678_40:
  4947   000228  FFFF               	dw	65535	; assembler added errata NOP
  4948   00022A  6A1F               	clrf	_RB7f^0,c	;volatile
  4949   00022C  0E01               	movlw	1
  4950   00022E  EC33  F00A         	call	_RB7_ISR
  4951   000232  EF36  F001         	goto	i2l6027
  4952   000236                     i2l1011:
  4953   000236  FFFF               	dw	65535	; assembler added errata NOP
  4954   000238  BE81               	btfsc	129,7,c	;volatile
  4955   00023A  EF21  F001         	goto	i2u679_41
  4956   00023E  EF24  F001         	goto	i2u679_40
  4957   000242                     i2u679_41:
  4958   000242  FFFF               	dw	65535	; assembler added errata NOP
  4959   000244  EF36  F001         	goto	i2l1014
  4960   000248                     i2u679_40:
  4961   000248  FFFF               	dw	65535	; assembler added errata NOP
  4962   00024A  501F               	movf	_RB7f^0,w,c	;volatile
  4963   00024C  A4D8               	btfss	status,2,c
  4964   00024E  EF2B  F001         	goto	i2u680_41
  4965   000252  EF2E  F001         	goto	i2u680_40
  4966   000256                     i2u680_41:
  4967   000256  FFFF               	dw	65535	; assembler added errata NOP
  4968   000258  EF36  F001         	goto	i2l1014
  4969   00025C                     i2u680_40:
  4970   00025C  FFFF               	dw	65535	; assembler added errata NOP
  4971   00025E  0E01               	movlw	1
  4972   000260  6E1F               	movwf	_RB7f^0,c	;volatile
  4973   000262  0E00               	movlw	0
  4974   000264  EC33  F00A         	call	_RB7_ISR
  4975   000268  EF36  F001         	goto	i2l6027
  4976   00026C                     i2l1014:
  4977   00026C                     i2l6027:
  4978   00026C  FFFF               	dw	65535	; assembler added errata NOP
  4979                           
  4980                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 86:  if((PIE1bits.ADIE) == 1 && (PIR1bit
      +                          s.ADIF) == 1)
  4981   00026E  AC9D               	btfss	157,6,c	;volatile
  4982   000270  EF3C  F001         	goto	i2u681_41
  4983   000274  EF3F  F001         	goto	i2u681_40
  4984   000278                     i2u681_41:
  4985   000278  FFFF               	dw	65535	; assembler added errata NOP
  4986   00027A  EF4B  F001         	goto	i2l1016
  4987   00027E                     i2u681_40:
  4988   00027E  FFFF               	dw	65535	; assembler added errata NOP
  4989   000280  AC9E               	btfss	158,6,c	;volatile
  4990   000282  EF45  F001         	goto	i2u682_41
  4991   000286  EF48  F001         	goto	i2u682_40
  4992   00028A                     i2u682_41:
  4993   00028A  FFFF               	dw	65535	; assembler added errata NOP
  4994   00028C  EF4B  F001         	goto	i2l1016
  4995   000290                     i2u682_40:
  4996   000290  FFFF               	dw	65535	; assembler added errata NOP
  4997   000292                     
  4998                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 87:   ADC_ISR();
  4999   000292  EC37  F009         	call	_ADC_ISR	;wreg free
  5000   000296                     i2l1016:
  5001   000296  FFFF               	dw	65535	; assembler added errata NOP
  5002   000298  C067  FFF4         	movff	??_InterruptManager+5,prodh
  5003   00029C  C066  FFF3         	movff	??_InterruptManager+4,prodl
  5004   0002A0  C065  FFDA         	movff	??_InterruptManager+3,fsr2h
  5005   0002A4  C064  FFD9         	movff	??_InterruptManager+2,fsr2l
  5006   0002A8  C063  FFFB         	movff	??_InterruptManager+1,pclatu
  5007   0002AC  C062  FFFA         	movff	??_InterruptManager,pclath
  5008   0002B0  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5009   0002B2  0011               	retfie		f
  5010   0002B4  FFFF               	dw	65535	; errata NOP
  5011   0002B6                     __end_of_InterruptManager:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _RB7_ISR *****************
  5015 ;; Defined at:
  5016 ;;		line 78 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  fl              1    wreg     unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  fl              1    0[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5030 ;;      Params:         0       0       0       0       0       0       0
  5031 ;;      Locals:         1       0       0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0
  5033 ;;      Totals:         1       0       0       0       0       0       0
  5034 ;;Total ram usage:        1 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_InterruptManager
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text15
  5044   001466                     __ptext15:
  5045                           	callstack 0
  5046   001466                     _RB7_ISR:
  5047                           	callstack 0
  5048   001466  FFFF               	dw	65535	; assembler added errata NOP
  5049   001468                     
  5050                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 79:  INTCONbits.RBIF=0;
  5051   001468  90F2               	bcf	242,0,c	;volatile
  5052   00146A  0012               	return		;funcret
  5053   00146C  FFFF               	dw	65535	; errata NOP
  5054   00146E                     __end_of_RB7_ISR:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _RB6_ISR *****************
  5058 ;; Defined at:
  5059 ;;		line 67 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  fl              1    wreg     unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  fl              1    0[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5073 ;;      Params:         0       0       0       0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_InterruptManager
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text16
  5087   00146E                     __ptext16:
  5088                           	callstack 0
  5089   00146E                     _RB6_ISR:
  5090                           	callstack 0
  5091   00146E  FFFF               	dw	65535	; assembler added errata NOP
  5092   001470                     
  5093                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 68:  INTCONbits.RBIF=0;
  5094   001470  90F2               	bcf	242,0,c	;volatile
  5095   001472  0012               	return		;funcret
  5096   001474  FFFF               	dw	65535	; errata NOP
  5097   001476                     __end_of_RB6_ISR:
  5098                           	callstack 0
  5099                           
  5100 ;; *************** function _RB5_ISR *****************
  5101 ;; Defined at:
  5102 ;;		line 56 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  fl              1    wreg     unsigned char 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  fl              1    0[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5116 ;;      Params:         0       0       0       0       0       0       0
  5117 ;;      Locals:         1       0       0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0
  5119 ;;      Totals:         1       0       0       0       0       0       0
  5120 ;;Total ram usage:        1 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_InterruptManager
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text17
  5130   001476                     __ptext17:
  5131                           	callstack 0
  5132   001476                     _RB5_ISR:
  5133                           	callstack 0
  5134   001476  FFFF               	dw	65535	; assembler added errata NOP
  5135   001478                     
  5136                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 57:  INTCONbits.RBIF=0;
  5137   001478  90F2               	bcf	242,0,c	;volatile
  5138   00147A  0012               	return		;funcret
  5139   00147C  FFFF               	dw	65535	; errata NOP
  5140   00147E                     __end_of_RB5_ISR:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _RB4_ISR *****************
  5144 ;; Defined at:
  5145 ;;		line 45 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  fl              1    wreg     unsigned char 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  fl              1    0[COMRAM] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5159 ;;      Params:         0       0       0       0       0       0       0
  5160 ;;      Locals:         1       0       0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0
  5162 ;;      Totals:         1       0       0       0       0       0       0
  5163 ;;Total ram usage:        1 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_InterruptManager
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text18
  5173   00147E                     __ptext18:
  5174                           	callstack 0
  5175   00147E                     _RB4_ISR:
  5176                           	callstack 0
  5177   00147E  FFFF               	dw	65535	; assembler added errata NOP
  5178   001480                     
  5179                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 46:  INTCONbits.RBIF=0;
  5180   001480  90F2               	bcf	242,0,c	;volatile
  5181   001482  0012               	return		;funcret
  5182   001484  FFFF               	dw	65535	; errata NOP
  5183   001486                     __end_of_RB4_ISR:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _INT2_ISR *****************
  5187 ;; Defined at:
  5188 ;;		line 38 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         0       0       0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 1
  5209 ;; This function calls:
  5210 ;;		NULL
  5211 ;;		___INT1
  5212 ;; This function is called by:
  5213 ;;		_InterruptManager
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text19
  5218   0012FE                     __ptext19:
  5219                           	callstack 0
  5220   0012FE                     _INT2_ISR:
  5221                           	callstack 0
  5222   0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5223   001300                     
  5224                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 39:  INTCON3bits.INT2IF=0;
  5225   001300  92F0               	bcf	240,1,c	;volatile
  5226   001302                     
  5227                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 40:  if(INT2_handler)
  5228   001302  503B               	movf	_INT2_handler^0,w,c
  5229   001304  103C               	iorwf	(_INT2_handler+1)^0,w,c
  5230   001306  B4D8               	btfsc	status,2,c
  5231   001308  EF88  F009         	goto	i2u102_41
  5232   00130C  EF8B  F009         	goto	i2u102_40
  5233   001310                     i2u102_41:
  5234   001310  FFFF               	dw	65535	; assembler added errata NOP
  5235   001312  EF9B  F009         	goto	i2l779
  5236   001316                     i2u102_40:
  5237   001316  FFFF               	dw	65535	; assembler added errata NOP
  5238   001318                     
  5239                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 41:   INT2_handler();
  5240   001318  D802               	call	i2u103_48
  5241   00131A  EF9B  F009         	goto	i2u103_49
  5242   00131E                     i2u103_48:
  5243   00131E  FFFF               	dw	65535	; assembler added errata NOP
  5244   001320  0005               	push	
  5245   001322  6EFA               	movwf	pclath,c
  5246   001324  503B               	movf	_INT2_handler^0,w,c
  5247   001326  6EFD               	movwf	tosl,c
  5248   001328  503C               	movf	(_INT2_handler+1)^0,w,c
  5249   00132A  6EFE               	movwf	tosh,c
  5250   00132C  50F8               	movf	tblptru,w,c
  5251   00132E  6EFF               	movwf	tosu,c
  5252   001330  50FA               	movf	pclath,w,c
  5253   001332  0012               	return		;indir
  5254   001334  FFFF               	dw	65535	; errata NOP
  5255   001336                     i2u103_49:
  5256   001336                     i2l779:
  5257   001336  FFFF               	dw	65535	; assembler added errata NOP
  5258   001338  0012               	return		;funcret
  5259   00133A  FFFF               	dw	65535	; errata NOP
  5260   00133C                     __end_of_INT2_ISR:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function _INT1_ISR *****************
  5264 ;; Defined at:
  5265 ;;		line 33 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5279 ;;      Params:         0       0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used: 1
  5285 ;; Hardware stack levels required when called: 1
  5286 ;; This function calls:
  5287 ;;		NULL
  5288 ;;		___INT1
  5289 ;; This function is called by:
  5290 ;;		_InterruptManager
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text20
  5295   00133C                     __ptext20:
  5296                           	callstack 0
  5297   00133C                     _INT1_ISR:
  5298                           	callstack 0
  5299   00133C  FFFF               	dw	65535	; assembler added errata NOP
  5300   00133E                     
  5301                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 34:  INTCON3bits.INT1IF=0;
  5302   00133E  90F0               	bcf	240,0,c	;volatile
  5303   001340                     
  5304                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 35:  if(INT1_handler)
  5305   001340  503D               	movf	_INT1_handler^0,w,c
  5306   001342  103E               	iorwf	(_INT1_handler+1)^0,w,c
  5307   001344  B4D8               	btfsc	status,2,c
  5308   001346  EFA7  F009         	goto	i2u100_41
  5309   00134A  EFAA  F009         	goto	i2u100_40
  5310   00134E                     i2u100_41:
  5311   00134E  FFFF               	dw	65535	; assembler added errata NOP
  5312   001350  EFBA  F009         	goto	i2l775
  5313   001354                     i2u100_40:
  5314   001354  FFFF               	dw	65535	; assembler added errata NOP
  5315   001356                     
  5316                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 36:   INT1_handler();
  5317   001356  D802               	call	i2u101_48
  5318   001358  EFBA  F009         	goto	i2u101_49
  5319   00135C                     i2u101_48:
  5320   00135C  FFFF               	dw	65535	; assembler added errata NOP
  5321   00135E  0005               	push	
  5322   001360  6EFA               	movwf	pclath,c
  5323   001362  503D               	movf	_INT1_handler^0,w,c
  5324   001364  6EFD               	movwf	tosl,c
  5325   001366  503E               	movf	(_INT1_handler+1)^0,w,c
  5326   001368  6EFE               	movwf	tosh,c
  5327   00136A  50F8               	movf	tblptru,w,c
  5328   00136C  6EFF               	movwf	tosu,c
  5329   00136E  50FA               	movf	pclath,w,c
  5330   001370  0012               	return		;indir
  5331   001372  FFFF               	dw	65535	; errata NOP
  5332   001374                     i2u101_49:
  5333   001374                     i2l775:
  5334   001374  FFFF               	dw	65535	; assembler added errata NOP
  5335   001376  0012               	return		;funcret
  5336   001378  FFFF               	dw	65535	; errata NOP
  5337   00137A                     __end_of_INT1_ISR:
  5338                           	callstack 0
  5339                           
  5340 ;; *************** function _INT0_ISR *****************
  5341 ;; Defined at:
  5342 ;;		line 28 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5356 ;;      Params:         0       0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 1
  5363 ;; This function calls:
  5364 ;;		NULL
  5365 ;;		___INT1
  5366 ;; This function is called by:
  5367 ;;		_InterruptManager
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text21
  5372   00137A                     __ptext21:
  5373                           	callstack 0
  5374   00137A                     _INT0_ISR:
  5375                           	callstack 0
  5376   00137A  FFFF               	dw	65535	; assembler added errata NOP
  5377   00137C                     
  5378                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 29:  INTCONbits.INT0IF=0;
  5379   00137C  92F2               	bcf	242,1,c	;volatile
  5380   00137E                     
  5381                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 30:  if(INT0_handler)
  5382   00137E  503F               	movf	_INT0_handler^0,w,c
  5383   001380  1040               	iorwf	(_INT0_handler+1)^0,w,c
  5384   001382  B4D8               	btfsc	status,2,c
  5385   001384  EFC6  F009         	goto	i2u98_41
  5386   001388  EFC9  F009         	goto	i2u98_40
  5387   00138C                     i2u98_41:
  5388   00138C  FFFF               	dw	65535	; assembler added errata NOP
  5389   00138E  EFD9  F009         	goto	i2l771
  5390   001392                     i2u98_40:
  5391   001392  FFFF               	dw	65535	; assembler added errata NOP
  5392   001394                     
  5393                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 31:   INT0_handler();
  5394   001394  D802               	call	i2u99_48
  5395   001396  EFD9  F009         	goto	i2u99_49
  5396   00139A                     i2u99_48:
  5397   00139A  FFFF               	dw	65535	; assembler added errata NOP
  5398   00139C  0005               	push	
  5399   00139E  6EFA               	movwf	pclath,c
  5400   0013A0  503F               	movf	_INT0_handler^0,w,c
  5401   0013A2  6EFD               	movwf	tosl,c
  5402   0013A4  5040               	movf	(_INT0_handler+1)^0,w,c
  5403   0013A6  6EFE               	movwf	tosh,c
  5404   0013A8  50F8               	movf	tblptru,w,c
  5405   0013AA  6EFF               	movwf	tosu,c
  5406   0013AC  50FA               	movf	pclath,w,c
  5407   0013AE  0012               	return		;indir
  5408   0013B0  FFFF               	dw	65535	; errata NOP
  5409   0013B2                     i2u99_49:
  5410   0013B2                     i2l771:
  5411   0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5412   0013B4  0012               	return		;funcret
  5413   0013B6  FFFF               	dw	65535	; errata NOP
  5414   0013B8                     __end_of_INT0_ISR:
  5415                           	callstack 0
  5416                           
  5417 ;; *************** function ___INT1 *****************
  5418 ;; Defined at:
  5419 ;;		line 57 in file "application.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;		None
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      void 
  5426 ;; Registers used:
  5427 ;;		None
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5433 ;;      Params:         0       0       0       0       0       0       0
  5434 ;;      Locals:         0       0       0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0
  5436 ;;      Totals:         0       0       0       0       0       0       0
  5437 ;;Total ram usage:        0 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_INT0_ISR
  5443 ;;		_INT1_ISR
  5444 ;;		_INT2_ISR
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text22
  5449   001486                     __ptext22:
  5450                           	callstack 0
  5451   001486                     ___INT1:
  5452                           	callstack 22
  5453   001486  FFFF               	dw	65535	; assembler added errata NOP
  5454   001488  0012               	return		;funcret
  5455   00148A  FFFF               	dw	65535	; errata NOP
  5456   00148C                     __end_of___INT1:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _ADC_ISR *****************
  5460 ;; Defined at:
  5461 ;;		line 13 in file "MCAL_layer/Interrupt/mcal_internal_interrupt.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;		None
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5475 ;;      Params:         0       0       0       0       0       0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0
  5477 ;;      Temps:          2       0       0       0       0       0       0
  5478 ;;      Totals:         2       0       0       0       0       0       0
  5479 ;;Total ram usage:        2 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 4
  5482 ;; This function calls:
  5483 ;;		NULL
  5484 ;;		___ADC
  5485 ;; This function is called by:
  5486 ;;		_InterruptManager
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text23
  5491   00126E                     __ptext23:
  5492                           	callstack 0
  5493   00126E                     _ADC_ISR:
  5494                           	callstack 0
  5495   00126E  FFFF               	dw	65535	; assembler added errata NOP
  5496   001270                     
  5497                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 14:  (PIR1bits.ADIF=0);
  5498   001270  9C9E               	bcf	158,6,c	;volatile
  5499   001272                     
  5500                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 15:  if(ADC_callback){
  5501   001272  5041               	movf	_ADC_callback^0,w,c
  5502   001274  1042               	iorwf	(_ADC_callback+1)^0,w,c
  5503   001276  B4D8               	btfsc	status,2,c
  5504   001278  EF40  F009         	goto	i2u565_41
  5505   00127C  EF43  F009         	goto	i2u565_40
  5506   001280                     i2u565_41:
  5507   001280  FFFF               	dw	65535	; assembler added errata NOP
  5508   001282  EF5B  F009         	goto	i2l710
  5509   001286                     i2u565_40:
  5510   001286  FFFF               	dw	65535	; assembler added errata NOP
  5511   001288                     
  5512                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 16:   ADC_output = (uint16) ( (((uint16
      +                          )(ADRESH)) << 8) | ((uint16) (ADRESL)) );
  5513   001288  50C4               	movf	196,w,c	;volatile
  5514   00128A  6E60               	movwf	??_ADC_ISR^0,c
  5515   00128C  50C3               	movf	195,w,c	;volatile
  5516   00128E  6E4C               	movwf	_ADC_output^0,c
  5517   001290  C060  F04D         	movff	??_ADC_ISR,_ADC_output+1
  5518   001294                     
  5519                           ;MCAL_layer/Interrupt/mcal_internal_interrupt.c: 17:   ADC_callback(&ADC_output);
  5520   001294  0E4C               	movlw	low _ADC_output
  5521   001296  6E5B               	movwf	___ADC@result^0,c
  5522   001298  D802               	call	i2u566_48
  5523   00129A  EF5B  F009         	goto	i2u566_49
  5524   00129E                     i2u566_48:
  5525   00129E  FFFF               	dw	65535	; assembler added errata NOP
  5526   0012A0  0005               	push	
  5527   0012A2  6EFA               	movwf	pclath,c
  5528   0012A4  5041               	movf	_ADC_callback^0,w,c
  5529   0012A6  6EFD               	movwf	tosl,c
  5530   0012A8  5042               	movf	(_ADC_callback+1)^0,w,c
  5531   0012AA  6EFE               	movwf	tosh,c
  5532   0012AC  50F8               	movf	tblptru,w,c
  5533   0012AE  6EFF               	movwf	tosu,c
  5534   0012B0  50FA               	movf	pclath,w,c
  5535   0012B2  0012               	return		;indir
  5536   0012B4  FFFF               	dw	65535	; errata NOP
  5537   0012B6                     i2u566_49:
  5538   0012B6                     i2l710:
  5539   0012B6  FFFF               	dw	65535	; assembler added errata NOP
  5540   0012B8  0012               	return		;funcret
  5541   0012BA  FFFF               	dw	65535	; errata NOP
  5542   0012BC                     __end_of_ADC_ISR:
  5543                           	callstack 0
  5544                           
  5545 ;; *************** function ___ADC *****************
  5546 ;; Defined at:
  5547 ;;		line 61 in file "application.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  result          1   13[COMRAM] PTR unsigned short 
  5550 ;;		 -> ADC_output(2), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  lresult         2    0        unsigned short 
  5553 ;;  i               1   17[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5563 ;;      Params:         1       0       0       0       0       0       0
  5564 ;;      Locals:         1       0       0       0       0       0       0
  5565 ;;      Temps:          3       0       0       0       0       0       0
  5566 ;;      Totals:         5       0       0       0       0       0       0
  5567 ;;Total ram usage:        5 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 3
  5570 ;; This function calls:
  5571 ;;		_LED_off
  5572 ;;		_LED_on
  5573 ;; This function is called by:
  5574 ;;		_ADC_ISR
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text24
  5579   00108C                     __ptext24:
  5580                           	callstack 0
  5581   00108C                     ___ADC:
  5582                           	callstack 19
  5583   00108C  FFFF               	dw	65535	; assembler added errata NOP
  5584                           
  5585                           ;application.c: 67:  for(i=0;i<10;i++){
  5586   00108E  6A5F               	clrf	___ADC@i^0,c
  5587   001090                     i2l5209:
  5588   001090  FFFF               	dw	65535	; assembler added errata NOP
  5589                           
  5590                           ;application.c: 68:   if(*result >> i & 1)
  5591   001092  C05F  F05C         	movff	___ADC@i,??___ADC
  5592   001096  505B               	movf	___ADC@result^0,w,c
  5593   001098  6ED9               	movwf	fsr2l,c
  5594   00109A  6ADA               	clrf	fsr2h,c
  5595   00109C  CFDE F05D          	movff	postinc2,??___ADC+1
  5596   0010A0  CFDD F05E          	movff	postdec2,??___ADC+2
  5597   0010A4  2A5C               	incf	??___ADC^0,f,c
  5598   0010A6  EF59  F008         	goto	i2u543_44
  5599   0010AA                     i2u543_45:
  5600   0010AA  FFFF               	dw	65535	; assembler added errata NOP
  5601   0010AC  90D8               	bcf	status,0,c
  5602   0010AE  325E               	rrcf	(??___ADC+2)^0,f,c
  5603   0010B0  325D               	rrcf	(??___ADC+1)^0,f,c
  5604   0010B2                     i2u543_44:
  5605   0010B2  FFFF               	dw	65535	; assembler added errata NOP
  5606   0010B4  2E5C               	decfsz	??___ADC^0,f,c
  5607   0010B6  EF55  F008         	goto	i2u543_45
  5608   0010BA  A05D               	btfss	(??___ADC+1)^0,0,c
  5609   0010BC  EF62  F008         	goto	i2u544_41
  5610   0010C0  EF65  F008         	goto	i2u544_40
  5611   0010C4                     i2u544_41:
  5612   0010C4  FFFF               	dw	65535	; assembler added errata NOP
  5613   0010C6  EF6D  F008         	goto	i2l5213
  5614   0010CA                     i2u544_40:
  5615   0010CA  FFFF               	dw	65535	; assembler added errata NOP
  5616   0010CC                     
  5617                           ;application.c: 69:    LED_on(&LED_arr[i]);
  5618   0010CC  505F               	movf	___ADC@i^0,w,c
  5619   0010CE  0FA7               	addlw	low _LED_arr
  5620   0010D0  6E58               	movwf	LED_on@led^0,c
  5621   0010D2  EC73  F007         	call	_LED_on	;wreg free
  5622   0010D6  EF73  F008         	goto	i2l5215
  5623   0010DA                     i2l5213:
  5624   0010DA  FFFF               	dw	65535	; assembler added errata NOP
  5625                           
  5626                           ;application.c: 71:    LED_off(&LED_arr[i]);
  5627   0010DC  505F               	movf	___ADC@i^0,w,c
  5628   0010DE  0FA7               	addlw	low _LED_arr
  5629   0010E0  6E58               	movwf	LED_off@led^0,c
  5630   0010E2  ECBF  F007         	call	_LED_off	;wreg free
  5631   0010E6                     i2l5215:
  5632   0010E6  FFFF               	dw	65535	; assembler added errata NOP
  5633                           
  5634                           ;application.c: 72:  }
  5635   0010E8  2A5F               	incf	___ADC@i^0,f,c
  5636   0010EA  0E09               	movlw	9
  5637   0010EC  645F               	cpfsgt	___ADC@i^0,c
  5638   0010EE  EF7B  F008         	goto	i2u545_41
  5639   0010F2  EF7E  F008         	goto	i2u545_40
  5640   0010F6                     i2u545_41:
  5641   0010F6  FFFF               	dw	65535	; assembler added errata NOP
  5642   0010F8  EF48  F008         	goto	i2l5209
  5643   0010FC                     i2u545_40:
  5644   0010FC  FFFF               	dw	65535	; assembler added errata NOP
  5645   0010FE  0012               	return		;funcret
  5646   001100  FFFF               	dw	65535	; errata NOP
  5647   001102                     __end_of___ADC:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function _LED_on *****************
  5651 ;; Defined at:
  5652 ;;		line 33 in file "ECU_layer/LED/ecu_led.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  led             1   10[COMRAM] PTR struct .
  5655 ;;		 -> LED_arr(10), 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  pin_local       1   12[COMRAM] struct .
  5658 ;;  ret             1    0        unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      unsigned char 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5668 ;;      Params:         1       0       0       0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0       0       0
  5670 ;;      Temps:          1       0       0       0       0       0       0
  5671 ;;      Totals:         3       0       0       0       0       0       0
  5672 ;;Total ram usage:        3 bytes
  5673 ;; Hardware stack levels used: 1
  5674 ;; Hardware stack levels required when called: 2
  5675 ;; This function calls:
  5676 ;;		i2_GPIO_check_access
  5677 ;;		i2_GPIO_pin_write_logic
  5678 ;; This function is called by:
  5679 ;;		___ADC
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text25
  5684   000EE6                     __ptext25:
  5685                           	callstack 0
  5686   000EE6                     _LED_on:
  5687                           	callstack 0
  5688   000EE6  FFFF               	dw	65535	; assembler added errata NOP
  5689   000EE8                     
  5690                           ;ECU_layer/LED/ecu_led.c: 35:  if ( (((void*)0) == led) ){
  5691   000EE8  5058               	movf	LED_on@led^0,w,c
  5692   000EEA  A4D8               	btfss	status,2,c
  5693   000EEC  EF7A  F007         	goto	i2u515_41
  5694   000EF0  EF7D  F007         	goto	i2u515_40
  5695   000EF4                     i2u515_41:
  5696   000EF4  FFFF               	dw	65535	; assembler added errata NOP
  5697   000EF6  EF81  F007         	goto	i2l312
  5698   000EFA                     i2u515_40:
  5699   000EFA  FFFF               	dw	65535	; assembler added errata NOP
  5700   000EFC                     i2l4981:
  5701   000EFC  FFFF               	dw	65535	; assembler added errata NOP
  5702                           
  5703                           ;ECU_layer/LED/ecu_led.c: 37:  }
  5704   000EFE  EFBC  F007         	goto	i2l318
  5705   000F02                     i2l312:
  5706   000F02  FFFF               	dw	65535	; assembler added errata NOP
  5707                           
  5708                           ;ECU_layer/LED/ecu_led.c: 39:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  5709   000F04  C04A  F05A         	movff	LED_on@F2875,LED_on@pin_local
  5710   000F08  5058               	movf	LED_on@led^0,w,c
  5711   000F0A  6ED9               	movwf	fsr2l,c
  5712   000F0C  6ADA               	clrf	fsr2h,c
  5713   000F0E  50DF               	movf	223,w,c
  5714   000F10  0B07               	andlw	7
  5715   000F12  6E59               	movwf	??_LED_on^0,c
  5716   000F14  505A               	movf	LED_on@pin_local^0,w,c
  5717   000F16  1859               	xorwf	??_LED_on^0,w,c
  5718   000F18  0BF8               	andlw	-8
  5719   000F1A  1859               	xorwf	??_LED_on^0,w,c
  5720   000F1C  6E5A               	movwf	LED_on@pin_local^0,c
  5721   000F1E  5058               	movf	LED_on@led^0,w,c
  5722   000F20  6ED9               	movwf	fsr2l,c
  5723   000F22  6ADA               	clrf	fsr2h,c
  5724   000F24  30DF               	rrcf	223,w,c
  5725   000F26  32E8               	rrcf	wreg,f,c
  5726   000F28  32E8               	rrcf	wreg,f,c
  5727   000F2A  0B07               	andlw	7
  5728   000F2C  6E59               	movwf	??_LED_on^0,c
  5729   000F2E  4659               	rlncf	??_LED_on^0,f,c
  5730   000F30  4659               	rlncf	??_LED_on^0,f,c
  5731   000F32  4659               	rlncf	??_LED_on^0,f,c
  5732   000F34  505A               	movf	LED_on@pin_local^0,w,c
  5733   000F36  1859               	xorwf	??_LED_on^0,w,c
  5734   000F38  0BC7               	andlw	-57
  5735   000F3A  1859               	xorwf	??_LED_on^0,w,c
  5736   000F3C  6E5A               	movwf	LED_on@pin_local^0,c
  5737   000F3E  9C5A               	bcf	LED_on@pin_local^0,6,c
  5738   000F40  5058               	movf	LED_on@led^0,w,c
  5739   000F42  6ED9               	movwf	fsr2l,c
  5740   000F44  6ADA               	clrf	fsr2h,c
  5741   000F46  ACDF               	btfss	indf2,6,c
  5742   000F48  D002               	bra	i2u516_45
  5743   000F4A  8E5A               	bsf	LED_on@pin_local^0,7,c
  5744   000F4C  D001               	bra	i2u516_47
  5745   000F4E                     i2u516_45:
  5746   000F4E  9E5A               	bcf	LED_on@pin_local^0,7,c
  5747   000F50                     i2u516_47:
  5748   000F50                     
  5749                           ;ECU_layer/LED/ecu_led.c: 40:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  5750   000F50  0E5A               	movlw	low LED_on@pin_local
  5751   000F52  6E4E               	movwf	i2GPIO_check_access@_pin_config^0,c
  5752   000F54  EC7D  F004         	call	i2_GPIO_check_access	;wreg free
  5753   000F58  06E8               	decf	wreg,f,c
  5754   000F5A  A4D8               	btfss	status,2,c
  5755   000F5C  EFB2  F007         	goto	i2u517_41
  5756   000F60  EFB5  F007         	goto	i2u517_40
  5757   000F64                     i2u517_41:
  5758   000F64  FFFF               	dw	65535	; assembler added errata NOP
  5759   000F66  EF7E  F007         	goto	i2l4981
  5760   000F6A                     i2u517_40:
  5761   000F6A  FFFF               	dw	65535	; assembler added errata NOP
  5762   000F6C                     
  5763                           ;ECU_layer/LED/ecu_led.c: 41:    GPIO_pin_write_logic(&pin_local, GPIO_HIGH);
  5764   000F6C  0E5A               	movlw	low LED_on@pin_local
  5765   000F6E  6E51               	movwf	i2GPIO_pin_write_logic@_pin_config^0,c
  5766   000F70  0E01               	movlw	1
  5767   000F72  6E52               	movwf	i2GPIO_pin_write_logic@logic^0,c
  5768   000F74  EC2E  F006         	call	i2_GPIO_pin_write_logic	;wreg free
  5769   000F78                     i2l318:
  5770   000F78  FFFF               	dw	65535	; assembler added errata NOP
  5771   000F7A  0012               	return		;funcret
  5772   000F7C  FFFF               	dw	65535	; errata NOP
  5773   000F7E                     __end_of_LED_on:
  5774                           	callstack 0
  5775                           
  5776 ;; *************** function _LED_off *****************
  5777 ;; Defined at:
  5778 ;;		line 51 in file "ECU_layer/LED/ecu_led.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  led             1   10[COMRAM] PTR struct .
  5781 ;;		 -> LED_arr(10), 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  pin_local       1   12[COMRAM] struct .
  5784 ;;  ret             1    0        unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      unsigned char 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5794 ;;      Params:         1       0       0       0       0       0       0
  5795 ;;      Locals:         1       0       0       0       0       0       0
  5796 ;;      Temps:          1       0       0       0       0       0       0
  5797 ;;      Totals:         3       0       0       0       0       0       0
  5798 ;;Total ram usage:        3 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 2
  5801 ;; This function calls:
  5802 ;;		i2_GPIO_check_access
  5803 ;;		i2_GPIO_pin_write_logic
  5804 ;; This function is called by:
  5805 ;;		___ADC
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text26
  5810   000F7E                     __ptext26:
  5811                           	callstack 0
  5812   000F7E                     _LED_off:
  5813                           	callstack 0
  5814   000F7E  FFFF               	dw	65535	; assembler added errata NOP
  5815   000F80                     
  5816                           ;ECU_layer/LED/ecu_led.c: 53:  if ( (((void*)0) == led) ){
  5817   000F80  5058               	movf	LED_off@led^0,w,c
  5818   000F82  A4D8               	btfss	status,2,c
  5819   000F84  EFC6  F007         	goto	i2u518_41
  5820   000F88  EFC9  F007         	goto	i2u518_40
  5821   000F8C                     i2u518_41:
  5822   000F8C  FFFF               	dw	65535	; assembler added errata NOP
  5823   000F8E  EFCD  F007         	goto	i2l321
  5824   000F92                     i2u518_40:
  5825   000F92  FFFF               	dw	65535	; assembler added errata NOP
  5826   000F94                     i2l4995:
  5827   000F94  FFFF               	dw	65535	; assembler added errata NOP
  5828                           
  5829                           ;ECU_layer/LED/ecu_led.c: 55:  }
  5830   000F96  EF08  F008         	goto	i2l327
  5831   000F9A                     i2l321:
  5832   000F9A  FFFF               	dw	65535	; assembler added errata NOP
  5833                           
  5834                           ;ECU_layer/LED/ecu_led.c: 57:   pin_config_t pin_local = {.port = led -> port, .pin = le
      +                          d -> pin, .direction = GPIO_OUT, .logic = led -> LED_init_status};
  5835   000F9C  C049  F05A         	movff	LED_off@F2880,LED_off@pin_local
  5836   000FA0  5058               	movf	LED_off@led^0,w,c
  5837   000FA2  6ED9               	movwf	fsr2l,c
  5838   000FA4  6ADA               	clrf	fsr2h,c
  5839   000FA6  50DF               	movf	223,w,c
  5840   000FA8  0B07               	andlw	7
  5841   000FAA  6E59               	movwf	??_LED_off^0,c
  5842   000FAC  505A               	movf	LED_off@pin_local^0,w,c
  5843   000FAE  1859               	xorwf	??_LED_off^0,w,c
  5844   000FB0  0BF8               	andlw	-8
  5845   000FB2  1859               	xorwf	??_LED_off^0,w,c
  5846   000FB4  6E5A               	movwf	LED_off@pin_local^0,c
  5847   000FB6  5058               	movf	LED_off@led^0,w,c
  5848   000FB8  6ED9               	movwf	fsr2l,c
  5849   000FBA  6ADA               	clrf	fsr2h,c
  5850   000FBC  30DF               	rrcf	223,w,c
  5851   000FBE  32E8               	rrcf	wreg,f,c
  5852   000FC0  32E8               	rrcf	wreg,f,c
  5853   000FC2  0B07               	andlw	7
  5854   000FC4  6E59               	movwf	??_LED_off^0,c
  5855   000FC6  4659               	rlncf	??_LED_off^0,f,c
  5856   000FC8  4659               	rlncf	??_LED_off^0,f,c
  5857   000FCA  4659               	rlncf	??_LED_off^0,f,c
  5858   000FCC  505A               	movf	LED_off@pin_local^0,w,c
  5859   000FCE  1859               	xorwf	??_LED_off^0,w,c
  5860   000FD0  0BC7               	andlw	-57
  5861   000FD2  1859               	xorwf	??_LED_off^0,w,c
  5862   000FD4  6E5A               	movwf	LED_off@pin_local^0,c
  5863   000FD6  9C5A               	bcf	LED_off@pin_local^0,6,c
  5864   000FD8  5058               	movf	LED_off@led^0,w,c
  5865   000FDA  6ED9               	movwf	fsr2l,c
  5866   000FDC  6ADA               	clrf	fsr2h,c
  5867   000FDE  ACDF               	btfss	indf2,6,c
  5868   000FE0  D002               	bra	i2u519_45
  5869   000FE2  8E5A               	bsf	LED_off@pin_local^0,7,c
  5870   000FE4  D001               	bra	i2u519_47
  5871   000FE6                     i2u519_45:
  5872   000FE6  9E5A               	bcf	LED_off@pin_local^0,7,c
  5873   000FE8                     i2u519_47:
  5874   000FE8                     
  5875                           ;ECU_layer/LED/ecu_led.c: 58:   if((STD_ReturnType)(0x01) == GPIO_check_access(&pin_loca
      +                          l))
  5876   000FE8  0E5A               	movlw	low LED_off@pin_local
  5877   000FEA  6E4E               	movwf	i2GPIO_check_access@_pin_config^0,c
  5878   000FEC  EC7D  F004         	call	i2_GPIO_check_access	;wreg free
  5879   000FF0  06E8               	decf	wreg,f,c
  5880   000FF2  A4D8               	btfss	status,2,c
  5881   000FF4  EFFE  F007         	goto	i2u520_41
  5882   000FF8  EF01  F008         	goto	i2u520_40
  5883   000FFC                     i2u520_41:
  5884   000FFC  FFFF               	dw	65535	; assembler added errata NOP
  5885   000FFE  EFCA  F007         	goto	i2l4995
  5886   001002                     i2u520_40:
  5887   001002  FFFF               	dw	65535	; assembler added errata NOP
  5888   001004                     
  5889                           ;ECU_layer/LED/ecu_led.c: 59:    GPIO_pin_write_logic(&pin_local, GPIO_LOW);
  5890   001004  0E5A               	movlw	low LED_off@pin_local
  5891   001006  6E51               	movwf	i2GPIO_pin_write_logic@_pin_config^0,c
  5892   001008  0E00               	movlw	0
  5893   00100A  6E52               	movwf	i2GPIO_pin_write_logic@logic^0,c
  5894   00100C  EC2E  F006         	call	i2_GPIO_pin_write_logic	;wreg free
  5895   001010                     i2l327:
  5896   001010  FFFF               	dw	65535	; assembler added errata NOP
  5897   001012  0012               	return		;funcret
  5898   001014  FFFF               	dw	65535	; errata NOP
  5899   001016                     __end_of_LED_off:
  5900                           	callstack 0
  5901                           
  5902 ;; *************** function i2_GPIO_pin_write_logic *****************
  5903 ;; Defined at:
  5904 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  _pin_config     1    3[COMRAM] PTR const struct .
  5907 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_off@pin_local(1), 
  5908 ;;		 -> LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), 
  5909 ;;		 -> dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), 
  5910 ;;		 -> dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lp
      +in1(1), 
  5911 ;;		 -> seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  5912 ;;  logic           1    4[COMRAM] enum E2776
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  ret             1    0        unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      unsigned char 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5924 ;;      Params:         2       0       0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0
  5926 ;;      Temps:          5       0       0       0       0       0       0
  5927 ;;      Totals:         7       0       0       0       0       0       0
  5928 ;;Total ram usage:        7 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; Hardware stack levels required when called: 1
  5931 ;; This function calls:
  5932 ;;		i2_GPIO_check_access
  5933 ;; This function is called by:
  5934 ;;		_LED_on
  5935 ;;		_LED_off
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text27
  5940   000C5C                     __ptext27:
  5941                           	callstack 0
  5942   000C5C                     i2_GPIO_pin_write_logic:
  5943                           	callstack 0
  5944   000C5C  FFFF               	dw	65535	; assembler added errata NOP
  5945   000C5E                     
  5946                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  5947   000C5E  C051  F04E         	movff	i2GPIO_pin_write_logic@_pin_config,i2GPIO_check_access@_pin_config
  5948   000C62  EC7D  F004         	call	i2_GPIO_check_access	;wreg free
  5949   000C66  0900               	iorlw	0
  5950   000C68  A4D8               	btfss	status,2,c
  5951   000C6A  EF39  F006         	goto	i2u509_41
  5952   000C6E  EF3C  F006         	goto	i2u509_40
  5953   000C72                     i2u509_41:
  5954   000C72  FFFF               	dw	65535	; assembler added errata NOP
  5955   000C74  EF99  F006         	goto	i2l4955
  5956   000C78                     i2u509_40:
  5957   000C78  FFFF               	dw	65535	; assembler added errata NOP
  5958   000C7A                     i2l4949:
  5959   000C7A  FFFF               	dw	65535	; assembler added errata NOP
  5960                           
  5961                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  5962   000C7C  EFB0  F006         	goto	i2l639
  5963   000C80                     i2l4951:
  5964   000C80  FFFF               	dw	65535	; assembler added errata NOP
  5965                           
  5966                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  5967   000C82  5051               	movf	i2GPIO_pin_write_logic@_pin_config^0,w,c
  5968   000C84  6ED9               	movwf	fsr2l,c
  5969   000C86  6ADA               	clrf	fsr2h,c
  5970   000C88  30DF               	rrcf	223,w,c
  5971   000C8A  32E8               	rrcf	wreg,f,c
  5972   000C8C  32E8               	rrcf	wreg,f,c
  5973   000C8E  0B07               	andlw	7
  5974   000C90  6E53               	movwf	??i2_GPIO_pin_write_logic^0,c
  5975   000C92  0E01               	movlw	1
  5976   000C94  6E54               	movwf	(??i2_GPIO_pin_write_logic+1)^0,c
  5977   000C96  2A53               	incf	??i2_GPIO_pin_write_logic^0,f,c
  5978   000C98  EF51  F006         	goto	i2u510_44
  5979   000C9C                     i2u510_45:
  5980   000C9C  FFFF               	dw	65535	; assembler added errata NOP
  5981   000C9E  90D8               	bcf	status,0,c
  5982   000CA0  3654               	rlcf	(??i2_GPIO_pin_write_logic+1)^0,f,c
  5983   000CA2                     i2u510_44:
  5984   000CA2  FFFF               	dw	65535	; assembler added errata NOP
  5985   000CA4  2E53               	decfsz	??i2_GPIO_pin_write_logic^0,f,c
  5986   000CA6  EF4E  F006         	goto	i2u510_45
  5987   000CAA  5054               	movf	(??i2_GPIO_pin_write_logic+1)^0,w,c
  5988   000CAC  0AFF               	xorlw	255
  5989   000CAE  6E55               	movwf	(??i2_GPIO_pin_write_logic+2)^0,c
  5990   000CB0  5051               	movf	i2GPIO_pin_write_logic@_pin_config^0,w,c
  5991   000CB2  6ED9               	movwf	fsr2l,c
  5992   000CB4  6ADA               	clrf	fsr2h,c
  5993   000CB6  50DF               	movf	223,w,c
  5994   000CB8  0B07               	andlw	7
  5995   000CBA  0D02               	mullw	2
  5996   000CBC  50F3               	movf	243,w,c
  5997   000CBE  0F01               	addlw	low __LAT_registers
  5998   000CC0  6ED9               	movwf	fsr2l,c
  5999   000CC2  6ADA               	clrf	fsr2h,c
  6000   000CC4  CFDE F056          	movff	postinc2,??i2_GPIO_pin_write_logic+3
  6001   000CC8  CFDD F057          	movff	postdec2,??i2_GPIO_pin_write_logic+4
  6002   000CCC  C056  FFD9         	movff	??i2_GPIO_pin_write_logic+3,fsr2l
  6003   000CD0  C057  FFDA         	movff	??i2_GPIO_pin_write_logic+4,fsr2h
  6004   000CD4  5055               	movf	(??i2_GPIO_pin_write_logic+2)^0,w,c
  6005   000CD6  16DF               	andwf	indf2,f,c
  6006                           
  6007                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  6008   000CD8  EFB0  F006         	goto	i2l639
  6009   000CDC                     i2l4953:
  6010   000CDC  FFFF               	dw	65535	; assembler added errata NOP
  6011                           
  6012                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  6013   000CDE  5051               	movf	i2GPIO_pin_write_logic@_pin_config^0,w,c
  6014   000CE0  6ED9               	movwf	fsr2l,c
  6015   000CE2  6ADA               	clrf	fsr2h,c
  6016   000CE4  30DF               	rrcf	223,w,c
  6017   000CE6  32E8               	rrcf	wreg,f,c
  6018   000CE8  32E8               	rrcf	wreg,f,c
  6019   000CEA  0B07               	andlw	7
  6020   000CEC  6E53               	movwf	??i2_GPIO_pin_write_logic^0,c
  6021   000CEE  0E01               	movlw	1
  6022   000CF0  6E54               	movwf	(??i2_GPIO_pin_write_logic+1)^0,c
  6023   000CF2  2A53               	incf	??i2_GPIO_pin_write_logic^0,f,c
  6024   000CF4  EF7F  F006         	goto	i2u511_44
  6025   000CF8                     i2u511_45:
  6026   000CF8  FFFF               	dw	65535	; assembler added errata NOP
  6027   000CFA  90D8               	bcf	status,0,c
  6028   000CFC  3654               	rlcf	(??i2_GPIO_pin_write_logic+1)^0,f,c
  6029   000CFE                     i2u511_44:
  6030   000CFE  FFFF               	dw	65535	; assembler added errata NOP
  6031   000D00  2E53               	decfsz	??i2_GPIO_pin_write_logic^0,f,c
  6032   000D02  EF7C  F006         	goto	i2u511_45
  6033   000D06  5051               	movf	i2GPIO_pin_write_logic@_pin_config^0,w,c
  6034   000D08  6ED9               	movwf	fsr2l,c
  6035   000D0A  6ADA               	clrf	fsr2h,c
  6036   000D0C  50DF               	movf	223,w,c
  6037   000D0E  0B07               	andlw	7
  6038   000D10  0D02               	mullw	2
  6039   000D12  50F3               	movf	243,w,c
  6040   000D14  0F01               	addlw	low __LAT_registers
  6041   000D16  6ED9               	movwf	fsr2l,c
  6042   000D18  6ADA               	clrf	fsr2h,c
  6043   000D1A  CFDE F055          	movff	postinc2,??i2_GPIO_pin_write_logic+2
  6044   000D1E  CFDD F056          	movff	postdec2,??i2_GPIO_pin_write_logic+3
  6045   000D22  C055  FFD9         	movff	??i2_GPIO_pin_write_logic+2,fsr2l
  6046   000D26  C056  FFDA         	movff	??i2_GPIO_pin_write_logic+3,fsr2h
  6047   000D2A  5054               	movf	(??i2_GPIO_pin_write_logic+1)^0,w,c
  6048   000D2C  12DF               	iorwf	indf2,f,c
  6049                           
  6050                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  6051   000D2E  EFB0  F006         	goto	i2l639
  6052   000D32                     i2l4955:
  6053   000D32  FFFF               	dw	65535	; assembler added errata NOP
  6054   000D34  5052               	movf	i2GPIO_pin_write_logic@logic^0,w,c
  6055   000D36  6E53               	movwf	??i2_GPIO_pin_write_logic^0,c
  6056   000D38  6A54               	clrf	(??i2_GPIO_pin_write_logic+1)^0,c
  6057                           
  6058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6059                           ; Switch size 1, requested type "simple"
  6060                           ; Number of cases is 1, Range of values is 0 to 0
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte            4     3 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065   000D3A  5054               	movf	(??i2_GPIO_pin_write_logic+1)^0,w,c
  6066   000D3C  0A00               	xorlw	0	; case 0
  6067   000D3E  B4D8               	btfsc	status,2,c
  6068   000D40  EFA4  F006         	goto	i2l6149
  6069   000D44  EF3D  F006         	goto	i2l4949
  6070   000D48                     i2l6149:
  6071   000D48  FFFF               	dw	65535	; assembler added errata NOP
  6072                           
  6073                           ; Switch size 1, requested type "simple"
  6074                           ; Number of cases is 2, Range of values is 0 to 1
  6075                           ; switch strategies available:
  6076                           ; Name         Instructions Cycles
  6077                           ; simple_byte            7     4 (average)
  6078                           ;	Chosen strategy is simple_byte
  6079   000D4A  5053               	movf	??i2_GPIO_pin_write_logic^0,w,c
  6080   000D4C  0A00               	xorlw	0	; case 0
  6081   000D4E  B4D8               	btfsc	status,2,c
  6082   000D50  EF40  F006         	goto	i2l4951
  6083   000D54  0A01               	xorlw	1	; case 1
  6084   000D56  B4D8               	btfsc	status,2,c
  6085   000D58  EF6E  F006         	goto	i2l4953
  6086   000D5C  EF3D  F006         	goto	i2l4949
  6087   000D60                     i2l639:
  6088   000D60  FFFF               	dw	65535	; assembler added errata NOP
  6089   000D62  0012               	return		;funcret
  6090   000D64  FFFF               	dw	65535	; errata NOP
  6091   000D66                     __end_ofi2_GPIO_pin_write_logic:
  6092                           	callstack 0
  6093                           
  6094 ;; *************** function i2_GPIO_check_access *****************
  6095 ;; Defined at:
  6096 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  6099 ;;		 -> relay_turn_off@lpin(1), relay_turn_on@lpin(1), relay_initialize@lpin(1), LED_toggle@pin_local(1), 
  6100 ;;		 -> LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), keypad_read_number@lpinc(4), 
  6101 ;;		 -> keypad_read_number@lpinr(4), keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), 
  6102 ;;		 -> dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), 
  6103 ;;		 -> dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_write_nu
      +mber@lpin(4), 
  6104 ;;		 -> seven_segment_initialize@lpin(4), 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  ret             1    2[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      unsigned char 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6116 ;;      Params:         1       0       0       0       0       0       0
  6117 ;;      Locals:         1       0       0       0       0       0       0
  6118 ;;      Temps:          1       0       0       0       0       0       0
  6119 ;;      Totals:         3       0       0       0       0       0       0
  6120 ;;Total ram usage:        3 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_LED_on
  6126 ;;		_LED_off
  6127 ;;		i2_GPIO_pin_write_logic
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text28
  6132   0008FA                     __ptext28:
  6133                           	callstack 0
  6134   0008FA                     i2_GPIO_check_access:
  6135                           	callstack 0
  6136   0008FA  FFFF               	dw	65535	; assembler added errata NOP
  6137   0008FC                     
  6138                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  6139   0008FC  0E01               	movlw	1
  6140   0008FE  6E50               	movwf	i2GPIO_check_access@ret^0,c
  6141                           
  6142                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  6143   000900  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6144   000902  B4D8               	btfsc	status,2,c
  6145   000904  EF86  F004         	goto	i2u499_41
  6146   000908  EF89  F004         	goto	i2u499_40
  6147   00090C                     i2u499_41:
  6148   00090C  FFFF               	dw	65535	; assembler added errata NOP
  6149   00090E  EF09  F005         	goto	i2l599
  6150   000912                     i2u499_40:
  6151   000912  FFFF               	dw	65535	; assembler added errata NOP
  6152   000914  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6153   000916  6ED9               	movwf	fsr2l,c
  6154   000918  6ADA               	clrf	fsr2h,c
  6155   00091A  50DF               	movf	223,w,c
  6156   00091C  0B07               	andlw	7
  6157   00091E  0900               	iorlw	0
  6158   000920  A4D8               	btfss	status,2,c
  6159   000922  EF95  F004         	goto	i2u500_41
  6160   000926  EF98  F004         	goto	i2u500_40
  6161   00092A                     i2u500_41:
  6162   00092A  FFFF               	dw	65535	; assembler added errata NOP
  6163   00092C  EFA9  F004         	goto	i2l4895
  6164   000930                     i2u500_40:
  6165   000930  FFFF               	dw	65535	; assembler added errata NOP
  6166   000932  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6167   000934  6ED9               	movwf	fsr2l,c
  6168   000936  6ADA               	clrf	fsr2h,c
  6169   000938  30DF               	rrcf	223,w,c
  6170   00093A  32E8               	rrcf	wreg,f,c
  6171   00093C  32E8               	rrcf	wreg,f,c
  6172   00093E  0B07               	andlw	7
  6173   000940  0A07               	xorlw	7
  6174   000942  B4D8               	btfsc	status,2,c
  6175   000944  EFA6  F004         	goto	i2u501_41
  6176   000948  EFA9  F004         	goto	i2u501_40
  6177   00094C                     i2u501_41:
  6178   00094C  FFFF               	dw	65535	; assembler added errata NOP
  6179   00094E  EF09  F005         	goto	i2l599
  6180   000952                     i2u501_40:
  6181   000952                     i2l4895:
  6182   000952  FFFF               	dw	65535	; assembler added errata NOP
  6183   000954  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6184   000956  6ED9               	movwf	fsr2l,c
  6185   000958  6ADA               	clrf	fsr2h,c
  6186   00095A  50DF               	movf	223,w,c
  6187   00095C  0B07               	andlw	7
  6188   00095E  06E8               	decf	wreg,f,c
  6189   000960  B4D8               	btfsc	status,2,c
  6190   000962  EFB5  F004         	goto	i2u502_41
  6191   000966  EFB8  F004         	goto	i2u502_40
  6192   00096A                     i2u502_41:
  6193   00096A  FFFF               	dw	65535	; assembler added errata NOP
  6194   00096C  EFD6  F004         	goto	i2l4901
  6195   000970                     i2u502_40:
  6196   000970  FFFF               	dw	65535	; assembler added errata NOP
  6197   000972  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6198   000974  6ED9               	movwf	fsr2l,c
  6199   000976  6ADA               	clrf	fsr2h,c
  6200   000978  50DF               	movf	223,w,c
  6201   00097A  0B07               	andlw	7
  6202   00097C  0A02               	xorlw	2
  6203   00097E  B4D8               	btfsc	status,2,c
  6204   000980  EFC4  F004         	goto	i2u503_41
  6205   000984  EFC7  F004         	goto	i2u503_40
  6206   000988                     i2u503_41:
  6207   000988  FFFF               	dw	65535	; assembler added errata NOP
  6208   00098A  EFD6  F004         	goto	i2l4901
  6209   00098E                     i2u503_40:
  6210   00098E  FFFF               	dw	65535	; assembler added errata NOP
  6211   000990  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6212   000992  6ED9               	movwf	fsr2l,c
  6213   000994  6ADA               	clrf	fsr2h,c
  6214   000996  50DF               	movf	223,w,c
  6215   000998  0B07               	andlw	7
  6216   00099A  0A03               	xorlw	3
  6217   00099C  A4D8               	btfss	status,2,c
  6218   00099E  EFD3  F004         	goto	i2u504_41
  6219   0009A2  EFD6  F004         	goto	i2u504_40
  6220   0009A6                     i2u504_41:
  6221   0009A6  FFFF               	dw	65535	; assembler added errata NOP
  6222   0009A8  EFE8  F004         	goto	i2l4903
  6223   0009AC                     i2u504_40:
  6224   0009AC                     i2l4901:
  6225   0009AC  FFFF               	dw	65535	; assembler added errata NOP
  6226   0009AE  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6227   0009B0  6ED9               	movwf	fsr2l,c
  6228   0009B2  6ADA               	clrf	fsr2h,c
  6229   0009B4  30DF               	rrcf	223,w,c
  6230   0009B6  32E8               	rrcf	wreg,f,c
  6231   0009B8  32E8               	rrcf	wreg,f,c
  6232   0009BA  0B07               	andlw	7
  6233   0009BC  6E4F               	movwf	??i2_GPIO_check_access^0,c
  6234   0009BE  0E08               	movlw	8
  6235   0009C0  604F               	cpfslt	??i2_GPIO_check_access^0,c
  6236   0009C2  EFE5  F004         	goto	i2u505_41
  6237   0009C6  EFE8  F004         	goto	i2u505_40
  6238   0009CA                     i2u505_41:
  6239   0009CA  FFFF               	dw	65535	; assembler added errata NOP
  6240   0009CC  EF09  F005         	goto	i2l599
  6241   0009D0                     i2u505_40:
  6242   0009D0                     i2l4903:
  6243   0009D0  FFFF               	dw	65535	; assembler added errata NOP
  6244   0009D2  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6245   0009D4  6ED9               	movwf	fsr2l,c
  6246   0009D6  6ADA               	clrf	fsr2h,c
  6247   0009D8  50DF               	movf	223,w,c
  6248   0009DA  0B07               	andlw	7
  6249   0009DC  0A04               	xorlw	4
  6250   0009DE  A4D8               	btfss	status,2,c
  6251   0009E0  EFF4  F004         	goto	i2u506_41
  6252   0009E4  EFF7  F004         	goto	i2u506_40
  6253   0009E8                     i2u506_41:
  6254   0009E8  FFFF               	dw	65535	; assembler added errata NOP
  6255   0009EA  EF0B  F005         	goto	i2l4907
  6256   0009EE                     i2u506_40:
  6257   0009EE  FFFF               	dw	65535	; assembler added errata NOP
  6258   0009F0  504E               	movf	i2GPIO_check_access@_pin_config^0,w,c
  6259   0009F2  6ED9               	movwf	fsr2l,c
  6260   0009F4  6ADA               	clrf	fsr2h,c
  6261   0009F6  30DF               	rrcf	223,w,c
  6262   0009F8  32E8               	rrcf	wreg,f,c
  6263   0009FA  32E8               	rrcf	wreg,f,c
  6264   0009FC  0B07               	andlw	7
  6265   0009FE  6E4F               	movwf	??i2_GPIO_check_access^0,c
  6266   000A00  0E02               	movlw	2
  6267   000A02  644F               	cpfsgt	??i2_GPIO_check_access^0,c
  6268   000A04  EF06  F005         	goto	i2u507_41
  6269   000A08  EF09  F005         	goto	i2u507_40
  6270   000A0C                     i2u507_41:
  6271   000A0C  FFFF               	dw	65535	; assembler added errata NOP
  6272   000A0E  EF0B  F005         	goto	i2l4907
  6273   000A12                     i2u507_40:
  6274   000A12                     i2l599:
  6275   000A12  FFFF               	dw	65535	; assembler added errata NOP
  6276                           
  6277                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  6278   000A14  6A50               	clrf	i2GPIO_check_access@ret^0,c
  6279   000A16                     i2l4907:
  6280   000A16  FFFF               	dw	65535	; assembler added errata NOP
  6281                           
  6282                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  6283   000A18  5050               	movf	i2GPIO_check_access@ret^0,w,c
  6284   000A1A  0012               	return		;funcret
  6285   000A1C  FFFF               	dw	65535	; errata NOP
  6286   000A1E                     __end_ofi2_GPIO_check_access:
  6287                           	callstack 0
  6288                           
  6289                           	psect	rparam
  6290   000001                     ___rparam_used  equ	1
  6291   000000                     ___param_bank   equ	0
  6292   000000                     __Lparam        equ	__Lrparam
  6293   000000                     __Hparam        equ	__Hrparam
  6294                           
  6295                           	psect	temp
  6296   000069                     btemp:
  6297                           	callstack 0
  6298   000069                     	ds	1
  6299   000069                     int$flags       set	btemp
  6300   00006A                     wtemp8          set	btemp+1
  6301   00006A                     ttemp5          set	btemp+1
  6302   00006D                     ttemp6          set	btemp+4
  6303   000071                     ttemp7          set	btemp+8
  6304                           
  6305                           	psect	config
  6306                           
  6307                           ; Padding undefined space
  6308   300000                     	org	3145728
  6309   300000  FF                 	db	255
  6310                           
  6311                           ;Config register CONFIG1H @ 0x300001
  6312                           ;	Oscillator Selection bits
  6313                           ;	OSC = HS, HS oscillator
  6314                           ;	Oscillator System Clock Switch Enable bit
  6315                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  6316   300001                     	org	3145729
  6317   300001  22                 	db	34
  6318                           
  6319                           ;Config register CONFIG2L @ 0x300002
  6320                           ;	Power-up Timer Enable bit
  6321                           ;	PWRT = OFF, PWRT disabled
  6322                           ;	Brown-out Reset Enable bit
  6323                           ;	BOR = OFF, Brown-out Reset disabled
  6324                           ;	Brown-out Reset Voltage bits
  6325                           ;	BORV = 20, VBOR set to 2.0V
  6326   300002                     	org	3145730
  6327   300002  0D                 	db	13
  6328                           
  6329                           ;Config register CONFIG2H @ 0x300003
  6330                           ;	Watchdog Timer Enable bit
  6331                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6332                           ;	Watchdog Timer Postscale Select bits
  6333                           ;	WDTPS = 128, 1:128
  6334   300003                     	org	3145731
  6335   300003  0E                 	db	14
  6336                           
  6337                           ; Padding undefined space
  6338   300004                     	org	3145732
  6339   300004  FF                 	db	255
  6340                           
  6341                           ;Config register CONFIG3H @ 0x300005
  6342                           ;	CCP2 Mux bit
  6343                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  6344   300005                     	org	3145733
  6345   300005  01                 	db	1
  6346                           
  6347                           ;Config register CONFIG4L @ 0x300006
  6348                           ;	Stack Full/Underflow Reset Enable bit
  6349                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  6350                           ;	Low Voltage ICSP Enable bit
  6351                           ;	LVP = OFF, Low Voltage ICSP disabled
  6352                           ;	Background Debugger Enable bit
  6353                           ;	DEBUG = 0x1, unprogrammed default
  6354   300006                     	org	3145734
  6355   300006  81                 	db	129
  6356                           
  6357                           ; Padding undefined space
  6358   300007                     	org	3145735
  6359   300007  FF                 	db	255
  6360                           
  6361                           ;Config register CONFIG5L @ 0x300008
  6362                           ;	Code Protection bit
  6363                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  6364                           ;	Code Protection bit
  6365                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  6366                           ;	Code Protection bit
  6367                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  6368                           ;	Code Protection bit
  6369                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  6370   300008                     	org	3145736
  6371   300008  0F                 	db	15
  6372                           
  6373                           ;Config register CONFIG5H @ 0x300009
  6374                           ;	Boot Block Code Protection bit
  6375                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  6376                           ;	Data EEPROM Code Protection bit
  6377                           ;	CPD = OFF, Data EEPROM not code protected
  6378   300009                     	org	3145737
  6379   300009  C0                 	db	192
  6380                           
  6381                           ;Config register CONFIG6L @ 0x30000A
  6382                           ;	Write Protection bit
  6383                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  6384                           ;	Write Protection bit
  6385                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  6386                           ;	Write Protection bit
  6387                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  6388                           ;	Write Protection bit
  6389                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  6390   30000A                     	org	3145738
  6391   30000A  0F                 	db	15
  6392                           
  6393                           ;Config register CONFIG6H @ 0x30000B
  6394                           ;	Configuration Register Write Protection bit
  6395                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  6396                           ;	Boot Block Write Protection bit
  6397                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  6398                           ;	Data EEPROM Write Protection bit
  6399                           ;	WRTD = OFF, Data EEPROM not write protected
  6400   30000B                     	org	3145739
  6401   30000B  E0                 	db	224
  6402                           
  6403                           ;Config register CONFIG7L @ 0x30000C
  6404                           ;	Table Read Protection bit
  6405                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  6406                           ;	Table Read Protection bit
  6407                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  6408                           ;	Table Read Protection bit
  6409                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  6410                           ;	Table Read Protection bit
  6411                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  6412   30000C                     	org	3145740
  6413   30000C  0F                 	db	15
  6414                           
  6415                           ;Config register CONFIG7H @ 0x30000D
  6416                           ;	Boot Block Table Read Protection bit
  6417                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  6418   30000D                     	org	3145741
  6419   30000D  40                 	db	64
  6420                           tosu	equ	0xFFF
  6421                           tosh	equ	0xFFE
  6422                           tosl	equ	0xFFD
  6423                           stkptr	equ	0xFFC
  6424                           pclatu	equ	0xFFB
  6425                           pclath	equ	0xFFA
  6426                           pcl	equ	0xFF9
  6427                           tblptru	equ	0xFF8
  6428                           tblptrh	equ	0xFF7
  6429                           tblptrl	equ	0xFF6
  6430                           tablat	equ	0xFF5
  6431                           prodh	equ	0xFF4
  6432                           prodl	equ	0xFF3
  6433                           indf0	equ	0xFEF
  6434                           postinc0	equ	0xFEE
  6435                           postdec0	equ	0xFED
  6436                           preinc0	equ	0xFEC
  6437                           plusw0	equ	0xFEB
  6438                           fsr0h	equ	0xFEA
  6439                           fsr0l	equ	0xFE9
  6440                           wreg	equ	0xFE8
  6441                           indf1	equ	0xFE7
  6442                           postinc1	equ	0xFE6
  6443                           postdec1	equ	0xFE5
  6444                           preinc1	equ	0xFE4
  6445                           plusw1	equ	0xFE3
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           bsr	equ	0xFE0
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           preinc2	equ	0xFDC
  6453                           plusw2	equ	0xFDB
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        89
    BSS         37
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26     104
    BANK0           128     21      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC1$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    __ADC@result	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    ADC_callback	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), NULL(), 

    ADC_callback$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    ADC_convert@lADC	PTR const struct . size(1) Largest target is 5
		 -> ADC1(COMRAM[5]), 

    ADC_convert@lADC$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    ADC_init@lADC	PTR const struct . size(1) Largest target is 5
		 -> ADC1(COMRAM[5]), 

    ADC_init@lADC$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    callback$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(BANK0[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(COMRAM[1]), LED_toggle@pin_local(COMRAM[1]), 
		 -> relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 
		 -> seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), 
		 -> LED_initialize@pin_local(BANK0[1]), relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinr(COMRAM[4]), LED_initialize@pin_local(BANK0[1]), 
		 -> relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LED_initialize@pin_local(BANK0[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    INT0_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), NULL(), 

    INT1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), NULL(), 

    INT2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), NULL(), 

    INT_1$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    INT_ADC_set_callback_routine@callback	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    INT_INTx_check_access@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    INT_INTx_edge_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    INT_INTx_get_index@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    INT_INTx_initialize@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    INT_INTx_set_callback_routine@lint$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    INT_RBx_check_access@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_check_access@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_initialize@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_initialize@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_set_callback_routine@lint$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    INT_RBx_set_callback_routine@lint$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LED_initialize@led	PTR struct . size(1) Largest target is 10
		 -> LED_arr(BANK0[10]), 

    LED_off@led	PTR struct . size(1) Largest target is 10
		 -> LED_arr(BANK0[10]), 

    LED_on@led	PTR struct . size(1) Largest target is 10
		 -> LED_arr(BANK0[10]), 

    NULL$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    RB4_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_handler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_handler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1730$ext_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> __INT1(), 

    S1777$ext_interrupt_handler_high	PTR FTN()void  size(2) Largest target is 0

    S1777$ext_interrupt_handler_low	PTR FTN()void  size(2) Largest target is 0

    S2768$buffer	PTR unsigned char  size(2) Largest target is 0

    S2768$source	PTR const unsigned char  size(2) Largest target is 0

    S843$0$0	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_output(COMRAM[2]), 

    S843$ADC_interrupt_handler	PTR FTN(PTR unsigned short ,)void  size(2) Largest target is 1
		 -> __ADC(), 

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_ADC_ISR
    _ADC_ISR->___ADC
    ___ADC->_LED_off
    ___ADC->_LED_on
    _LED_on->i2_GPIO_pin_write_logic
    _LED_off->i2_GPIO_pin_write_logic
    i2_GPIO_pin_write_logic->i2_GPIO_check_access

Critical Paths under _main in BANK0

    _main->_application_initialize
    _application_initialize->_ecu_init
    _ecu_init->_LED_initialize
    _LED_initialize->_GPIO_pin_initialize
    _GPIO_pin_initialize->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _GPIO_pin_direction_initialize->_GPIO_check_access
    _ADC_init->_ADC_select_channel
    _ADC_convert->_ADC_select_channel
    _ADC_select_channel->_ADC_set_pin_config

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4171
                        _ADC_convert
             _application_initialize
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               2     2      0    3773
                                             19 BANK0      2     2      0
                           _ADC_init
                           _ecu_init
 ---------------------------------------------------------------------------------
 (2) _ecu_init                                             2     2      0    2757
                                             17 BANK0      2     2      0
                     _LED_initialize
 ---------------------------------------------------------------------------------
 (3) _LED_initialize                                       4     3      1    2652
                                             13 BANK0      4     3      1
                  _GPIO_check_access
                _GPIO_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _GPIO_pin_initialize                                  2     1      1    1942
                                             11 BANK0      2     1      1
                  _GPIO_check_access
      _GPIO_pin_direction_initialize
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_write_logic                                 8     6      2     752
                                              3 BANK0      8     6      2
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_direction_initialize                        7     6      1     617
                                              3 BANK0      7     6      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (6) _GPIO_check_access                                    3     2      1     376
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             6     5      1     908
                                              7 BANK0      6     5      1
                 _ADC_select_channel
                 _ADC_set_pin_config
                       _INT_ADC_init
       _INT_ADC_set_callback_routine
 ---------------------------------------------------------------------------------
 (3) _INT_ADC_set_callback_routine                         3     1      2      68
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT_ADC_init                                         2     2      0      34
 ---------------------------------------------------------------------------------
 (1) _ADC_convert                                          4     2      2     398
                                              7 BANK0      3     1      2
                 _ADC_select_channel
 ---------------------------------------------------------------------------------
 (3) _ADC_select_channel                                   3     3      0     218
                                              4 BANK0      3     3      0
                 _ADC_set_pin_config
 ---------------------------------------------------------------------------------
 (3) _ADC_set_pin_config                                   4     4      0      87
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     6     6      0    2604
                                             20 COMRAM     6     6      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
                                NULL *
                             ___INT1 *
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
                                NULL *
                             ___INT1 *
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
                                NULL *
                             ___INT1 *
 ---------------------------------------------------------------------------------
 (9) ___INT1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              2     2      0    2544
                                             18 COMRAM     2     2      0
                                NULL *
                              ___ADC *
 ---------------------------------------------------------------------------------
 (9) ___ADC                                                7     6      1    2544
                                             13 COMRAM     5     4      1
                            _LED_off
                             _LED_on
 ---------------------------------------------------------------------------------
 (10) _LED_on                                              4     3      1    1156
                                             10 COMRAM     3     2      1
                i2_GPIO_check_access
             i2_GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (10) _LED_off                                             4     3      1    1156
                                             10 COMRAM     3     2      1
                i2_GPIO_check_access
             i2_GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (11) i2_GPIO_pin_write_logic                              8     6      2     539
                                              3 COMRAM     7     5      2
                i2_GPIO_check_access
 ---------------------------------------------------------------------------------
 (12) i2_GPIO_check_access                                 3     2      1     325
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_convert
     _ADC_select_channel
       _ADC_set_pin_config
   _application_initialize
     _ADC_init
       _ADC_select_channel
       _ADC_set_pin_config
       _INT_ADC_init
       _INT_ADC_set_callback_routine
     _ecu_init
       _LED_initialize
         _GPIO_check_access
         _GPIO_pin_initialize
           _GPIO_check_access
           _GPIO_pin_direction_initialize
             _GPIO_check_access
           _GPIO_pin_write_logic
             _GPIO_check_access

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     ___ADC *
       _LED_off
         i2_GPIO_check_access
         i2_GPIO_pin_write_logic
           i2_GPIO_check_access
       _LED_on
         i2_GPIO_check_access
         i2_GPIO_pin_write_logic
   _INT0_ISR
     NULL(Fake) *
     ___INT1 *
   _INT1_ISR
     NULL(Fake) *
     ___INT1 *
   _INT2_ISR
     NULL(Fake) *
     ___INT1 *
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     21      70     54.7%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     26     104     82.5%
BITBIGSFRlh         64      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     174      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Jun  8 12:53:00 2025

                                         ??_InterruptManager 0062  
                                        ?_ADC_set_pin_config 004E  
                                                          _i 0044  
                                            LED_toggle@F2885 0048  
                                                        l303 0E66  
                                                        l309 0EE2  
                                                        l510 0DAE  
                                                        l502 0D76  
                                                        l511 0DB6  
                                                        l423 110C  
                                                        l504 0D7E  
                                                        l513 0E3C  
                                                        l505 0D86  
                                                        l506 0D8E  
                                                        l507 0D96  
                                                        l427 116A  
                                                        l508 0D9E  
                                                        l452 0652  
                                                        l612 121A  
                                                        l509 0DA6  
                                                        l470 1416  
                                                        l462 07D0  
                                                        l454 064A  
                                                        l622 0B3C  
                                                        l607 08F6  
                                                        l713 1452  
                                                        l475 104A  
                                                        l479 1086  
                                                        l719 1462  
                                                        l639 0C58  
                                                        l599 08EE  
                                            __end_of_ADC_ISR 12BC  
                                                        _ret 0068  
                                                        tosl 0FFD  
                                                        wreg 0FE8  
                                            _RB7_handler_low 002B  
                                      relay_initialize@F2865 0047  
                                       ??_ADC_set_pin_config 00B1  
                                            __end_of_RB4_ISR 1486  
                                            __end_of_RB5_ISR 147E  
                                            __end_of_RB6_ISR 1476  
                                            __end_of_RB7_ISR 146E  
                                                       l1050 12F8  
                                                       l1058 126A  
                                            __end_of_LED_off 1016  
                                                       l5011 140A  
                                                       l5013 1414  
                                                       l5021 1446  
                                                       l5007 13F0  
                                                       l5031 1450  
                                                       l5023 1448  
                                                       _ADC1 0024  
                                                       l5009 13F0  
                                                       l5025 144A  
                                                       l5017 1444  
                                                       l5027 144C  
                                                       l5019 1444  
                                                       l5035 1458  
                                                       l5131 110A  
                                                       l5029 144E  
                                                       l5037 1458  
                                                       l5141 1144  
                                                       l5039 1460  
                                                       l5143 114A  
                                                       l5161 06A2  
                                                       l5153 0618  
                                                       l5145 1150  
                                                       l5137 1112  
                                                       l5129 1104  
                                                       l6041 12EC  
                                                       l6033 12BC  
                                                       l5331 1050  
                                                       l5171 0700  
                                                       l5163 06A8  
                                                       l5155 062E  
                                                       l5147 1152  
                                                       l5139 1126  
                                                       l6035 12C4  
                                                       l5333 1066  
                                                       l5181 0758  
                                                       l5173 0722  
                                                       l5165 06AE  
                                                       l5157 0658  
                                                       l5149 1166  
                                                       l5335 107A  
                                                       l5327 1018  
                                                       l5191 07A8  
                                                       l5183 075E  
                                                       l5175 0724  
                                                       l5167 06B0  
                                                       l5159 067C  
                                                       l6143 0C3C  
                                                       l5351 1220  
                                                       l6039 12DC  
                                                       l6145 0DE0  
                                                       l5337 1082  
                                                       l5329 102E  
                                                       l5193 07CA  
                                                       l5185 0776  
                                                       l5177 0738  
                                                       l5169 06DC  
                                                       l5361 1260  
                                                       l5353 1228  
                                                       l6147 0E28  
                                                       l5187 079C  
                                                       l5179 0752  
                                                       l5195 07CC  
                                                       l5355 122A  
                                                       l5189 07A2  
                                                       l5357 123E  
                                                       l5349 1220  
                                                       l4831 07D6  
                                                       l4911 11CA  
                                                       l5359 125A  
                                                       l4841 086C  
                                                       l4833 07F0  
                                                       l4913 11CA  
                                                       l4923 0D6C  
                                                       l4843 0888  
                                                       l4835 080E  
                                                       l4915 11E6  
                                                       l4845 08AC  
                                                       l4837 082E  
                                                       l4861 0BCC  
                                                       l4853 0B42  
                                                       l4917 11EE  
                                                       l4927 0DBE  
                                                       l4847 08CC  
                                                       l4839 084E  
                                                       l4863 0C24  
                                                       l4855 0B48  
                                                       l4919 1216  
                                                       l4929 0E38  
                                                       l4849 08F2  
                                                       l4881 0AAA  
                                                       l4873 0A20  
                                                       l4865 0C54  
                                                       l4857 0B64  
                                                       l4961 0E42  
                                                       l4883 0B02  
                                                       l4875 0A26  
                                                       l4859 0B6E  
                                                       l4971 0EB6  
                                                       l4963 0E5C  
                                                       l4885 0B38  
                                                       l4877 0A42  
                                                       l4973 0ED2  
                                                       l4965 0E6C  
                                                       l4879 0A4C  
                                                       l4967 0EA2  
                                                       l4975 0EDC  
                                                       l4969 0EA4  
                                                       STR_1 0611  
                                                       _LCD1 0080  
                                                       _LATA 0F89  
                                                       _LATB 0F8A  
                                                       _LATC 0F8B  
                                                       _LATD 0F8C  
                                                       _LATE 0F8D  
                                                       u5120 0E5A  
                                                       u5121 0E54  
                                                       u5140 0ED0  
                                                       u5141 0ECA  
                                                       _RB4f 0022  
                                                       u5135 0EB2  
                                                       u5400 0750  
                                                       u5080 11E4  
                                                       u5320 1124  
                                                       _RB5f 0021  
                                                       u5401 074A  
                                                       u5081 11DE  
                                                       u5137 0EB6  
                                                       u5321 111E  
                                                       u5410 0774  
                                                       u5330 1142  
                                                       _RB6f 0020  
                                                       u5411 076E  
                                                       u5331 113C  
                                                       u5420 079A  
                                                       u5340 1164  
                                                       _RB7f 001F  
                                                       u5421 0794  
                                                       u5341 115E  
                                                       u5350 062C  
                                                       u5351 0626  
                                                       u5360 064A  
                                                       u5361 0644  
                                                       u5370 067A  
                                                       u5371 0674  
                                                       u5620 102C  
                                                       u5380 06A0  
                                                       u4900 08CA  
                                                       u5621 1026  
                                                       u5381 069A  
                                                       u4901 08C4  
                                                       u5630 104A  
                                                       u5390 0736  
                                                       u4910 08EE  
                                                       u4830 07EE  
                                                       u5631 1044  
                                                       u5391 0730  
                                                       u4911 08E8  
                                                       u4831 07E8  
                                                       u5640 1064  
                                                       u4840 080C  
                                                       u4920 0B62  
                                                       u5641 105E  
                                                       u4841 0806  
                                                       u4921 0B5C  
                                                       u4850 082E  
                                                       u4851 0828  
                                                       u4860 084C  
                                                       u4861 0846  
                                                       u4870 086A  
                                                       u4950 0A40  
                                                       u4934 0B90  
                                                       u5670 123C  
                                                       u4871 0864  
                                                       u4951 0A3A  
                                                       u4935 0B8A  
                                                       u5671 1236  
                                                       u4880 0888  
                                                       u4944 0BEE  
                                                       u5680 1258  
                                                       u4881 0882  
                                                       u4945 0BE8  
                                                       u5681 1252  
                                                       u4890 08AC  
                                                       u4891 08A6  
                                                       u4980 0B1E  
                                                       u4964 0A6E  
                                                       u4981 0B16  
                                                       u4965 0A68  
                                                       u4974 0ACC  
                                                       u6830 12D6  
                                                       u4975 0AC6  
                                                       u6831 12D0  
                                                       u4986 0B22  
                                                       u6847 12EE  
                                                       _btn1 0018  
                                                       _btn2 0015  
                                                       _main 12BC  
                                                       fsr2h 0FDA  
                                                       indf2 0FDF  
                                                       fsr1l 0FE1  
                                                       fsr2l 0FD9  
                                                       btemp 0069  
                                                       prodh 0FF4  
                                                       prodl 0FF3  
                                           _RB7_handler_high 002D  
                                                       start 02B6  
                                           __end_of_ADC_init 07D4  
                                       _GPIO_pin_write_logic 0B40  
                                               ___param_bank 0000  
                                           __end_of_INT0_ISR 13B8  
                                           __end_of_INT1_ISR 137A  
                                           __end_of_INT2_ISR 133C  
                                                      ?_main 004E  
                                   ??_application_initialize 00C4  
                                                      _EEADR 0FA9  
                                             __LAT_registers 0001  
                                                      i2l312 0F02  
                                                      i2l321 0F9A  
                                                      i2l318 0F78  
                                                      i2l327 1010  
                                                      i2l710 12B6  
                                                      i2l607 0A1A  
                                                      i2l800 1472  
                                                      i2l639 0D60  
                                                      i2l807 146A  
                                                      i2l771 13B2  
                                                      i2l599 0A12  
                                                      i2l775 1374  
                                                      _INT_1 00A3  
                                                      i2l793 147A  
                                                      i2l786 1482  
                                                      i2l779 1336  
                                                      i2l995 00C6  
                                                      i2l996 00F8  
                                                      i2l999 012E  
                                        relay_turn_off@F2875 0045  
                                                      _PORTA 0F80  
                                                      _PORTB 0F81  
                                                      _PORTC 0F82  
                                                      _PORTD 0F83  
                                                      _PORTE 0F84  
                                                      _TRISA 0F92  
                                                      _TRISB 0F93  
                                                      _TRISC 0F94  
                                                      _TRISD 0F95  
                                                      _TRISE 0F96  
                                                      _Iflag 0043  
                                                      ___ADC 108C  
                                                      _errno 0029  
                                                      pclath 0FFA  
                                                      pclatu 0FFB  
                                                      tablat 0FF5  
                                             ADC_convert@lCH 00B9  
                                                      ttemp5 006A  
                                                      ttemp6 006D  
                                                      ttemp7 0071  
                                                      status 0FD8  
                                                      wtemp8 006A  
                                      ?_GPIO_pin_write_logic 00B4  
                                            __initialization 116E  
                                                LED_on@F2875 004A  
                                               __end_of_main 12FE  
                                                  ??_ADC_ISR 0060  
                                           LED_off@pin_local 005A  
                                                     ??_main 00C6  
                                              __activetblptr 0002  
                                                  ??_RB4_ISR 004E  
                                                  ??_RB5_ISR 004E  
                                                  ??_RB6_ISR 004E  
                                                  ??_RB7_ISR 004E  
                                                  ??_LED_off 0059  
                                     i2GPIO_check_access@ret 0050  
                                                     ?___ADC 005B  
                                              ?_INT_ADC_init 004E  
                                i2GPIO_pin_write_logic@logic 0052  
                                                     _ADRESH 0FC4  
                                                     _ADRESL 0FC3  
                                                     _EEDATA 0FA8  
                                                     _EECON2 0FA7  
                                               _ADC_callback 0041  
                                                     i2l1001 0162  
                                                     i2l1011 0236  
                                                     i2l1004 0198  
                                                     i2l1014 026C  
                                                     i2l1006 01CC  
                                                     i2l1016 0296  
                                                     i2l1009 0202  
                                                     i2l1064 1486  
                                                     i2l1074 10FE  
                                                     i2l2401 1318  
                                                     i2l2403 1480  
                                                     i2l2411 1478  
                                                     i2l5001 0FD8  
                                                     i2l5003 0FE8  
                                                     i2l2419 1470  
                                                     i2l2427 1468  
                                                     i2l5005 1004  
                                                     i2l2391 133E  
                                                     i2l5201 108C  
                                                     i2l2385 137C  
                                                     i2l2393 1340  
                                                     i2l6001 01AC  
                                                     i2l5211 10CC  
                                                     i2l5203 108C  
                                                     i2l2387 137E  
                                                     i2l2395 1356  
                                                     i2l6011 01F8  
                                                     i2l6003 01C0  
                                                     i2l5213 10DA  
                                                     i2l2389 1394  
                                                     i2l2397 1300  
                                                     i2l6021 024A  
                                                     i2l6013 0202  
                                                     i2l6005 01C2  
                                                     i2l5215 10E6  
                                                     i2l2399 1302  
                                                     i2l6031 0292  
                                                     i2l6023 025E  
                                                     i2l6015 0216  
                                                     i2l6007 01E0  
                                                     i2l5217 10EA  
                                                     i2l5209 1090  
                                                     i2l6025 0262  
                                                     i2l6017 022A  
                                                     i2l6009 01F4  
                                                     i2l6019 022C  
                                                     i2l6027 026C  
                                                     i2l5341 1270  
                                                     i2l6029 0280  
                                                     i2l5343 1272  
                                                     i2l5345 1288  
                                                     i2l5347 1294  
                                                     i2l4901 09AC  
                                                     i2l6149 0D48  
                                                     i2l4903 09D0  
                                                     i2l5199 108C  
                                                     i2l4905 09F0  
                                                     i2l4907 0A16  
                                                     i2l4951 0C80  
                                                     i2l4953 0CDC  
                                                     i2l4945 0C5E  
                                                     i2l4891 0914  
                                                     i2l4955 0D32  
                                                     i2l4947 0C5E  
                                                     i2l4893 0932  
                                                     i2l4949 0C7A  
                                                     i2l4981 0EFC  
                                                     i2l4895 0952  
                                                     i2l4991 0F6C  
                                                     i2l4983 0F08  
                                                     i2l5951 0024  
                                                     i2l4897 0972  
                                                     i2l4889 08FC  
                                                     i2l4993 0F80  
                                                     i2l4985 0F3E  
                                                     i2l5961 0072  
                                                     i2l5953 0036  
                                                     i2l4899 0990  
                                                     i2l4995 0F94  
                                                     i2l4987 0F40  
                                                     i2l4979 0EE8  
                                                     i2l5971 00B4  
                                                     i2l5963 0076  
                                                     i2l5955 0048  
                                                     i2l4997 0FA0  
                                                     i2l4989 0F50  
                                                     i2l5981 0120  
                                                     i2l5973 00D8  
                                                     i2l5965 008A  
                                                     i2l5957 004C  
                                                     i2l4999 0FD6  
                                                     i2l5991 0158  
                                                     i2l5983 0124  
                                                     i2l5975 00EC  
                                                     i2l5967 009C  
                                                     i2l5959 0060  
                                                     i2l5993 0176  
                                                     i2l5985 012E  
                                                     i2l5977 00EE  
                                                     i2l5969 00A0  
                                                     i2l5995 018A  
                                                     i2l5987 0142  
                                                     i2l5979 010C  
                                                     i2l5997 018E  
                                                     i2l5989 0156  
                                                     i2l5999 0198  
                                                     _LED_on 0EE6  
                       INT_ADC_set_callback_routine@callback 00B1  
                                                     ___INT1 1486  
                                           __end_of_ecu_init 116E  
                                                     clear_0 11B4  
                                                     _relay1 0023  
                                                     _motor1 001D  
                                                     _motor2 001B  
                                                     isa$std 0001  
                                               __pdataCOMRAM 0001  
                                            ADC_convert@lADC 00B8  
                                             ??_INT_ADC_init 00B1  
                                               __mediumconst 0600  
                                                     tblptrh 0FF7  
                                                     tblptrl 0FF6  
                                                     tblptru 0FF8  
                                                  ?_ADC_init 00B8  
                                                 __accesstop 0080  
                                    __end_of__initialization 11BA  
                                     ??_GPIO_pin_write_logic 00B6  
                                                  ?_INT0_ISR 004E  
                                                  ?_INT1_ISR 004E  
                                                  ?_INT2_ISR 004E  
                                              ___rparam_used 0001  
                                                  RB4_ISR@fl 004E  
                                              __end_of___ADC 1102  
                                                  RB5_ISR@fl 004E  
                                             __pcstackCOMRAM 004E  
                                                  RB6_ISR@fl 004E  
                                               __pidataBANK0 13B8  
                                                  RB7_ISR@fl 004E  
                            ??_GPIO_pin_direction_initialize 00B5  
                   GPIO_pin_direction_initialize@_pin_config 00B4  
                                                  LED_on@led 0058  
                                            __PORT_registers 008B  
                                                    ??___ADC 005C  
                                               LED_off@F2880 0049  
                                                 ??_ADC_init 00B9  
                                    LED_initialize@pin_local 00C1  
                                                    ?_LED_on 0058  
                                                 ??_INT0_ISR 004E  
                                                 ??_INT1_ISR 004E  
                                                 ??_INT2_ISR 004E  
                                     _application_initialize 121E  
                                                 __pnvCOMRAM 0068  
                                  ADC_set_pin_config@channel 00B3  
                                                    ?___INT1 004E  
                                                    _ADC_ISR 126E  
                                               _ecu_init$823 00C2  
                                                    _RB4_ISR 147E  
                                                    _RB5_ISR 1476  
                                                    _RB6_ISR 146E  
                                                    _RB7_ISR 1466  
                                                    _LED_arr 00A7  
                                                    _LED_off 0F7E  
                                                  ?_ecu_init 004E  
                                                    i2u98_40 1392  
                                                    i2u98_41 138C  
                                                    i2u99_48 139A  
                                                    i2u99_49 13B2  
                                              _ADC_init$1072 00BA  
                                              _ADC_init$1084 00BB  
                                              _ADC_init$1085 00BC  
                                                    ___ADC@i 005F  
                                              ??_ADC_convert 00BA  
                                                    __Hparam 0000  
                                        _GPIO_pin_initialize 11C8  
                                                    __Lparam 0000  
                                       __end_of_INT_ADC_init 1456  
                                               __psmallconst 0600  
                                             _LED_initialize 0E40  
                                                    __pcinit 116E  
                                                    __ramtop 0600  
                                                    __ptext0 12BC  
                                                    __ptext1 121E  
                                                    __ptext2 1102  
                                                    __ptext3 0E40  
                                                    __ptext4 11C8  
                                                    __ptext5 0B40  
                                                    __ptext6 0A1E  
                                                    __ptext7 07D4  
                                                    __ptext8 0616  
                                                    __ptext9 1456  
                                               ___ADC@result 005B  
                                   ??i2_GPIO_pin_write_logic 0053  
                      __end_of_GPIO_pin_direction_initialize 0B40  
                              _GPIO_pin_direction_initialize 0A1E  
                                                    _keypad1 0095  
                                       ?_GPIO_pin_initialize 00BC  
                                            _keypad_elements 0601  
                                                 ??_ecu_init 00C2  
                                 __end_of_ADC_select_channel 141A  
                                       end_of_initialization 11BA  
                                              __Lmediumconst 0000  
                                                    postdec1 0FE5  
                                     __end_of_LED_initialize 0EE6  
                                                    postdec2 0FDD  
                                                    postinc0 0FEE  
                                                    postinc2 0FDE  
                                        __end_of_ADC_convert 108C  
                                                  _PORTBbits 0F81  
                                           _InterruptManager 0008  
                                      ??_GPIO_pin_initialize 00BD  
                                                  _TRISAbits 0F92  
                                                  _TRISEbits 0F96  
                                        i2_GPIO_check_access 08FA  
                                             __end_of_LED_on 0F7E  
                                    GPIO_pin_write_logic@ret 00BB  
                                               ADC_init@lADC 00B8  
                                         relay_turn_on@F2870 0046  
                                             __end_of___INT1 148C  
                                            ?_LED_initialize 00BE  
                                       ?i2_GPIO_check_access 004E  
                                    __end_of_keypad_elements 0611  
                                              __pidataCOMRAM 141A  
                                               _INT0_handler 003F  
                                               _INT1_handler 003D  
                                        start_initialization 116E  
                                               _INT2_handler 003B  
                                       GPIO_check_access@ret 00B3  
                             ?_GPIO_pin_direction_initialize 00B4  
                                    ?_application_initialize 004E  
                                            LED_on@pin_local 005A  
                                                 LED_off@led 0058  
                                                   ??_LED_on 0059  
                                                   ??___INT1 004E  
                                                _ADC_convert 1016  
                                      ??i2_GPIO_check_access 004F  
                                                __pdataBANK0 0080  
                                                   ?_ADC_ISR 004E  
                                                   ?_RB4_ISR 004E  
                                                   ?_RB5_ISR 004E  
                                                   ?_RB6_ISR 004E  
                                                   ?_RB7_ISR 004E  
                                                __pbssCOMRAM 0029  
                                                   ?_LED_off 0058  
                                              __pcstackBANK0 00B1  
                             __end_of_application_initialize 126E  
                                               _INT_ADC_init 1442  
                                     GPIO_pin_initialize@ret 00BD  
                       __end_of_INT_ADC_set_callback_routine 1466  
                               _INT_ADC_set_callback_routine 1456  
                                           _RB4_handler_high 0037  
                                     i2_GPIO_pin_write_logic 0C5C  
                                                  __pintcode 0008  
                          i2GPIO_pin_write_logic@_pin_config 0051  
                            GPIO_pin_write_logic@_pin_config 00B4  
                                        LED_initialize@F2870 004B  
                                                __smallconst 0600  
                             i2GPIO_check_access@_pin_config 004E  
                                 __end_of_ADC_set_pin_config 0E40  
                                                   _ADC_init 0616  
                                  GPIO_pin_write_logic@logic 00B5  
                                            __TRIS_registers 000B  
                                                   _INT0_ISR 137A  
                                                   _INT1_ISR 133C  
                              ?_INT_ADC_set_callback_routine 00B1  
                                                   _INT2_ISR 12FE  
                                   __end_of_InterruptManager 02B6  
                                                   _PIE1bits 0F9D  
                                                   i2u100_40 1354  
                                                   i2u100_41 134E  
                                                   i2u101_48 135C  
                                                   i2u102_40 1316  
                                                   i2u101_49 1374  
                                                   i2u102_41 1310  
                                         _ADC_select_channel 13EA  
                                                   i2u103_48 131E  
                                                   i2u103_49 1336  
                                                   i2u500_40 0930  
                                                   i2u500_41 092A  
                                                   i2u501_40 0952  
                                                   i2u501_41 094C  
                                                   i2u502_40 0970  
                                                   i2u502_41 096A  
                                                   i2u510_44 0CA2  
                                                   i2u510_45 0C9C  
                                                   i2u503_40 098E  
                                                   i2u503_41 0988  
                                                   i2u511_44 0CFE  
                                                   i2u511_45 0CF8  
                                                   i2u504_40 09AC  
                                                   i2u520_40 1002  
                                                   i2u504_41 09A6  
                                                   i2u520_41 0FFC  
                                                   i2u505_40 09D0  
                                                   i2u505_41 09CA  
                                                   _PIR1bits 0F9E  
                                                   i2u506_40 09EE  
                                                   i2u506_41 09E8  
                                                   i2u507_40 0A12  
                                                   i2u515_40 0EFA  
                                                   i2u507_41 0A0C  
                                                   i2u515_41 0EF4  
                                                   i2u516_45 0F4E  
                                                   i2u516_47 0F50  
                                                   i2u509_40 0C78  
                                                   i2u517_40 0F6A  
                                                   i2u509_41 0C72  
                                                   i2u517_41 0F64  
                                                   i2u518_40 0F92  
                                                   i2u518_41 0F8C  
                                                   i2u543_44 10B2  
                                                   i2u519_45 0FE6  
                                                   i2u543_45 10AA  
                                                   i2u519_47 0FE8  
                                                   i2u544_40 10CA  
                                                   i2u544_41 10C4  
                                                   i2u545_40 10FC  
                                                   i2u545_41 10F6  
                                                   i2u660_40 0070  
                                                   i2u660_41 006A  
                                                   i2u565_40 1286  
                                                   i2u661_40 0088  
                                                   i2u565_41 1280  
                                                   i2u661_41 0082  
                                                   i2u670_40 0154  
                                                   i2u662_40 009A  
                                                   i2u670_41 014E  
                                                   i2u662_41 0094  
                                                   i2u566_48 129E  
                                                   i2u671_40 0174  
                                                   i2u663_40 00B2  
                                                   i2u566_49 12B6  
                                                   i2u671_41 016E  
                                                   i2u663_41 00AC  
                                                   i2u680_40 025C  
                                                   i2u672_40 0188  
                                                   i2u664_40 00C4  
                                                   i2u680_41 0256  
                                                   i2u672_41 0182  
                                                   i2u664_41 00BE  
                                                   i2u681_40 027E  
                                                   i2u673_40 01AA  
                                                   i2u665_40 00D6  
                                                   i2u657_40 0034  
                                                   i2u681_41 0278  
                                                   i2u673_41 01A4  
                                                   i2u665_41 00D0  
                                                   i2u657_41 002E  
                                                   i2u682_40 0290  
                                                   i2u674_40 01BE  
                                                   i2u666_40 00EA  
                                                   i2u658_40 0046  
                                                   i2u682_41 028A  
                                                   i2u674_41 01B8  
                                                   i2u666_41 00E4  
                                                   i2u658_41 0040  
                                                   i2u499_40 0912  
                                                   i2u675_40 01DE  
                                                   i2u667_40 010A  
                                                   i2u659_40 005E  
                                                   i2u499_41 090C  
                                                   i2u675_41 01D8  
                                                   i2u667_41 0104  
                                                   i2u659_41 0058  
                                                   i2u676_40 01F2  
                                                   i2u668_40 011E  
                                                   i2u676_41 01EC  
                                                   i2u668_41 0118  
                                                   i2u677_40 0214  
                                                   i2u669_40 0140  
                                                   i2u677_41 020E  
                                                   i2u669_41 013A  
                                                   i2u678_40 0228  
                                                   i2u678_41 0222  
                                                   i2u679_40 0248  
                                                   i2u679_41 0242  
                                                   _RCONbits 0FD0  
                           GPIO_pin_direction_initialize@ret 00BA  
                                        ?_ADC_select_channel 004E  
                                _application_initialize$2316 00C4  
                                                 _ADCON0bits 0FC2  
                                                 _ADCON1bits 0FC1  
                                                ADC_init@ret 00BD  
                                                _INTCON1bits 0FF2  
                                                _INTCON2bits 0FF1  
                                                _INTCON3bits 0FF0  
                                                  copy_data0 1182  
                                                  copy_data1 11A2  
                                       ??_ADC_select_channel 00B5  
                                           _RB5_handler_high 0035  
                                                 _EECON1bits 0FA6  
                                           ??_LED_initialize 00BF  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                                 _ADC_output 004C  
                                      ADC_select_channel@lCH 00B7  
                                      ADC_select_channel@ret 00B6  
                                __end_of_GPIO_pin_initialize 121E  
                                          _GPIO_check_access 07D4  
                                         ?_GPIO_check_access 00B1  
                             GPIO_pin_initialize@_pin_config 00BC  
                                            _RB4_handler_low 0039  
                                                   _ecu_init 1102  
                                        ??_GPIO_check_access 00B2  
                                                   __ptext10 1442  
                                                   __ptext11 1016  
                                                   __ptext20 133C  
                                                   __ptext12 13EA  
                                                   __ptext21 137A  
                                                   __ptext13 0D66  
                                                   __ptext22 1486  
                                                   __ptext23 126E  
                                                   __ptext15 1466  
                                                   __ptext24 108C  
                                                   __ptext16 146E  
                                                   __ptext25 0EE6  
                                                   __ptext17 1476  
                                                   __ptext26 0F7E  
                                                   __ptext18 147E  
                                                   __ptext27 0C5C  
                                                   __ptext19 12FE  
                                                   __ptext28 08FA  
                                       INT_ADC_init@priority 004E  
                                                   _segment1 009E  
                                               ?_ADC_convert 00B8  
                             ??_INT_ADC_set_callback_routine 00B3  
                                                   isa$xinst 0000  
                                  __end_of_GPIO_check_access 08FA  
                                                   int$flags 0069  
                               __end_of_GPIO_pin_write_logic 0C5C  
                                                 _INTCONbits 0FF2  
                                            _RB5_handler_low 0033  
                                                   intlevel2 148C  
                                    ?i2_GPIO_pin_write_logic 0051  
                                           _RB6_handler_high 0031  
                                          LED_initialize@led 00BE  
                                __end_ofi2_GPIO_check_access 0A1E  
                                          LED_initialize@ret 00C0  
                                                ecu_init@ret 00C3  
                                  application_initialize@ret 00C5  
                                            _RB6_handler_low 002F  
                             __end_ofi2_GPIO_pin_write_logic 0D66  
                                      ADC_set_pin_config@ret 00B4  
                               GPIO_check_access@_pin_config 00B1  
                                         _ADC_set_pin_config 0D66  
                                          ?_InterruptManager 004E  
