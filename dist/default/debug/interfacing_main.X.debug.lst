

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Mar 25 23:55:12 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 17/01/2025 GMT
    32                           ; 
    33                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F452 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000FE0                     bsr             equ	4064
    66   000FE9                     fsr0            equ	4073
    67   000FEA                     fsr0h           equ	4074
    68   000FE9                     fsr0l           equ	4073
    69   000FE1                     fsr1            equ	4065
    70   000FE2                     fsr1h           equ	4066
    71   000FE1                     fsr1l           equ	4065
    72   000FD9                     fsr2            equ	4057
    73   000FDA                     fsr2h           equ	4058
    74   000FD9                     fsr2l           equ	4057
    75   000FEF                     indf0           equ	4079
    76   000FE7                     indf1           equ	4071
    77   000FDF                     indf2           equ	4063
    78   000FF2                     intcon          equ	4082
    79   000000                     nvmcon          equ	0
    80   000FF9                     pcl             equ	4089
    81   000FFA                     pclath          equ	4090
    82   000FFB                     pclatu          equ	4091
    83   000FEB                     plusw0          equ	4075
    84   000FE3                     plusw1          equ	4067
    85   000FDB                     plusw2          equ	4059
    86   000FED                     postdec0        equ	4077
    87   000FE5                     postdec1        equ	4069
    88   000FDD                     postdec2        equ	4061
    89   000FEE                     postinc0        equ	4078
    90   000FE6                     postinc1        equ	4070
    91   000FDE                     postinc2        equ	4062
    92   000FEC                     preinc0         equ	4076
    93   000FE4                     preinc1         equ	4068
    94   000FDC                     preinc2         equ	4060
    95   000FF3                     prod            equ	4083
    96   000FF4                     prodh           equ	4084
    97   000FF3                     prodl           equ	4083
    98   000FD8                     status          equ	4056
    99   000FF5                     tablat          equ	4085
   100   000FF6                     tblptr          equ	4086
   101   000FF7                     tblptrh         equ	4087
   102   000FF6                     tblptrl         equ	4086
   103   000FF8                     tblptru         equ	4088
   104   000FFD                     tosl            equ	4093
   105   000FE8                     wreg            equ	4072
   106   000F80                     PORTA           equ	3968	;# 
   107   000F81                     PORTB           equ	3969	;# 
   108   000F82                     PORTC           equ	3970	;# 
   109   000F83                     PORTD           equ	3971	;# 
   110   000F84                     PORTE           equ	3972	;# 
   111   000F89                     LATA            equ	3977	;# 
   112   000F8A                     LATB            equ	3978	;# 
   113   000F8B                     LATC            equ	3979	;# 
   114   000F8C                     LATD            equ	3980	;# 
   115   000F8D                     LATE            equ	3981	;# 
   116   000F92                     TRISA           equ	3986	;# 
   117   000F92                     DDRA            equ	3986	;# 
   118   000F93                     TRISB           equ	3987	;# 
   119   000F93                     DDRB            equ	3987	;# 
   120   000F94                     TRISC           equ	3988	;# 
   121   000F94                     DDRC            equ	3988	;# 
   122   000F95                     TRISD           equ	3989	;# 
   123   000F95                     DDRD            equ	3989	;# 
   124   000F96                     TRISE           equ	3990	;# 
   125   000F96                     DDRE            equ	3990	;# 
   126   000F9D                     PIE1            equ	3997	;# 
   127   000F9E                     PIR1            equ	3998	;# 
   128   000F9F                     IPR1            equ	3999	;# 
   129   000FA0                     PIE2            equ	4000	;# 
   130   000FA1                     PIR2            equ	4001	;# 
   131   000FA2                     IPR2            equ	4002	;# 
   132   000FA6                     EECON1          equ	4006	;# 
   133   000FA7                     EECON2          equ	4007	;# 
   134   000FA8                     EEDATA          equ	4008	;# 
   135   000FA9                     EEADR           equ	4009	;# 
   136   000FAB                     RCSTA           equ	4011	;# 
   137   000FAB                     RCSTA1          equ	4011	;# 
   138   000FAC                     TXSTA           equ	4012	;# 
   139   000FAC                     TXSTA1          equ	4012	;# 
   140   000FAD                     TXREG           equ	4013	;# 
   141   000FAD                     TXREG1          equ	4013	;# 
   142   000FAE                     RCREG           equ	4014	;# 
   143   000FAE                     RCREG1          equ	4014	;# 
   144   000FAF                     SPBRG           equ	4015	;# 
   145   000FAF                     SPBRG1          equ	4015	;# 
   146   000FB1                     T3CON           equ	4017	;# 
   147   000FB2                     TMR3            equ	4018	;# 
   148   000FB2                     TMR3L           equ	4018	;# 
   149   000FB3                     TMR3H           equ	4019	;# 
   150   000FBA                     CCP2CON         equ	4026	;# 
   151   000FBB                     CCPR2           equ	4027	;# 
   152   000FBB                     CCPR2L          equ	4027	;# 
   153   000FBC                     CCPR2H          equ	4028	;# 
   154   000FBD                     CCP1CON         equ	4029	;# 
   155   000FBE                     CCPR1           equ	4030	;# 
   156   000FBE                     CCPR1L          equ	4030	;# 
   157   000FBF                     CCPR1H          equ	4031	;# 
   158   000FC1                     ADCON1          equ	4033	;# 
   159   000FC2                     ADCON0          equ	4034	;# 
   160   000FC3                     ADRES           equ	4035	;# 
   161   000FC3                     ADRESL          equ	4035	;# 
   162   000FC4                     ADRESH          equ	4036	;# 
   163   000FC5                     SSPCON2         equ	4037	;# 
   164   000FC6                     SSPCON1         equ	4038	;# 
   165   000FC7                     SSPSTAT         equ	4039	;# 
   166   000FC8                     SSPADD          equ	4040	;# 
   167   000FC9                     SSPBUF          equ	4041	;# 
   168   000FCA                     T2CON           equ	4042	;# 
   169   000FCB                     PR2             equ	4043	;# 
   170   000FCB                     MEMCON          equ	4043	;# 
   171   000FCC                     TMR2            equ	4044	;# 
   172   000FCD                     T1CON           equ	4045	;# 
   173   000FCE                     TMR1            equ	4046	;# 
   174   000FCE                     TMR1L           equ	4046	;# 
   175   000FCF                     TMR1H           equ	4047	;# 
   176   000FD0                     RCON            equ	4048	;# 
   177   000FD1                     WDTCON          equ	4049	;# 
   178   000FD2                     LVDCON          equ	4050	;# 
   179   000FD3                     OSCCON          equ	4051	;# 
   180   000FD5                     T0CON           equ	4053	;# 
   181   000FD6                     TMR0            equ	4054	;# 
   182   000FD6                     TMR0L           equ	4054	;# 
   183   000FD7                     TMR0H           equ	4055	;# 
   184   000FD8                     STATUS          equ	4056	;# 
   185   000FD9                     FSR2            equ	4057	;# 
   186   000FD9                     FSR2L           equ	4057	;# 
   187   000FDA                     FSR2H           equ	4058	;# 
   188   000FDB                     PLUSW2          equ	4059	;# 
   189   000FDC                     PREINC2         equ	4060	;# 
   190   000FDD                     POSTDEC2        equ	4061	;# 
   191   000FDE                     POSTINC2        equ	4062	;# 
   192   000FDF                     INDF2           equ	4063	;# 
   193   000FE0                     BSR             equ	4064	;# 
   194   000FE1                     FSR1            equ	4065	;# 
   195   000FE1                     FSR1L           equ	4065	;# 
   196   000FE2                     FSR1H           equ	4066	;# 
   197   000FE3                     PLUSW1          equ	4067	;# 
   198   000FE4                     PREINC1         equ	4068	;# 
   199   000FE5                     POSTDEC1        equ	4069	;# 
   200   000FE6                     POSTINC1        equ	4070	;# 
   201   000FE7                     INDF1           equ	4071	;# 
   202   000FE8                     WREG            equ	4072	;# 
   203   000FE9                     FSR0            equ	4073	;# 
   204   000FE9                     FSR0L           equ	4073	;# 
   205   000FEA                     FSR0H           equ	4074	;# 
   206   000FEB                     PLUSW0          equ	4075	;# 
   207   000FEC                     PREINC0         equ	4076	;# 
   208   000FED                     POSTDEC0        equ	4077	;# 
   209   000FEE                     POSTINC0        equ	4078	;# 
   210   000FEF                     INDF0           equ	4079	;# 
   211   000FF0                     INTCON3         equ	4080	;# 
   212   000FF1                     INTCON2         equ	4081	;# 
   213   000FF2                     INTCON          equ	4082	;# 
   214   000FF2                     INTCON1         equ	4082	;# 
   215   000FF3                     PROD            equ	4083	;# 
   216   000FF3                     PRODL           equ	4083	;# 
   217   000FF4                     PRODH           equ	4084	;# 
   218   000FF5                     TABLAT          equ	4085	;# 
   219   000FF6                     TBLPTR          equ	4086	;# 
   220   000FF6                     TBLPTRL         equ	4086	;# 
   221   000FF7                     TBLPTRH         equ	4087	;# 
   222   000FF8                     TBLPTRU         equ	4088	;# 
   223   000FF9                     PCLAT           equ	4089	;# 
   224   000FF9                     PC              equ	4089	;# 
   225   000FF9                     PCL             equ	4089	;# 
   226   000FFA                     PCLATH          equ	4090	;# 
   227   000FFB                     PCLATU          equ	4091	;# 
   228   000FFC                     STKPTR          equ	4092	;# 
   229   000FFD                     TOS             equ	4093	;# 
   230   000FFD                     TOSL            equ	4093	;# 
   231   000FFE                     TOSH            equ	4094	;# 
   232   000FFF                     TOSU            equ	4095	;# 
   233   000F80                     PORTA           equ	3968	;# 
   234   000F81                     PORTB           equ	3969	;# 
   235   000F82                     PORTC           equ	3970	;# 
   236   000F83                     PORTD           equ	3971	;# 
   237   000F84                     PORTE           equ	3972	;# 
   238   000F89                     LATA            equ	3977	;# 
   239   000F8A                     LATB            equ	3978	;# 
   240   000F8B                     LATC            equ	3979	;# 
   241   000F8C                     LATD            equ	3980	;# 
   242   000F8D                     LATE            equ	3981	;# 
   243   000F92                     TRISA           equ	3986	;# 
   244   000F92                     DDRA            equ	3986	;# 
   245   000F93                     TRISB           equ	3987	;# 
   246   000F93                     DDRB            equ	3987	;# 
   247   000F94                     TRISC           equ	3988	;# 
   248   000F94                     DDRC            equ	3988	;# 
   249   000F95                     TRISD           equ	3989	;# 
   250   000F95                     DDRD            equ	3989	;# 
   251   000F96                     TRISE           equ	3990	;# 
   252   000F96                     DDRE            equ	3990	;# 
   253   000F9D                     PIE1            equ	3997	;# 
   254   000F9E                     PIR1            equ	3998	;# 
   255   000F9F                     IPR1            equ	3999	;# 
   256   000FA0                     PIE2            equ	4000	;# 
   257   000FA1                     PIR2            equ	4001	;# 
   258   000FA2                     IPR2            equ	4002	;# 
   259   000FA6                     EECON1          equ	4006	;# 
   260   000FA7                     EECON2          equ	4007	;# 
   261   000FA8                     EEDATA          equ	4008	;# 
   262   000FA9                     EEADR           equ	4009	;# 
   263   000FAB                     RCSTA           equ	4011	;# 
   264   000FAB                     RCSTA1          equ	4011	;# 
   265   000FAC                     TXSTA           equ	4012	;# 
   266   000FAC                     TXSTA1          equ	4012	;# 
   267   000FAD                     TXREG           equ	4013	;# 
   268   000FAD                     TXREG1          equ	4013	;# 
   269   000FAE                     RCREG           equ	4014	;# 
   270   000FAE                     RCREG1          equ	4014	;# 
   271   000FAF                     SPBRG           equ	4015	;# 
   272   000FAF                     SPBRG1          equ	4015	;# 
   273   000FB1                     T3CON           equ	4017	;# 
   274   000FB2                     TMR3            equ	4018	;# 
   275   000FB2                     TMR3L           equ	4018	;# 
   276   000FB3                     TMR3H           equ	4019	;# 
   277   000FBA                     CCP2CON         equ	4026	;# 
   278   000FBB                     CCPR2           equ	4027	;# 
   279   000FBB                     CCPR2L          equ	4027	;# 
   280   000FBC                     CCPR2H          equ	4028	;# 
   281   000FBD                     CCP1CON         equ	4029	;# 
   282   000FBE                     CCPR1           equ	4030	;# 
   283   000FBE                     CCPR1L          equ	4030	;# 
   284   000FBF                     CCPR1H          equ	4031	;# 
   285   000FC1                     ADCON1          equ	4033	;# 
   286   000FC2                     ADCON0          equ	4034	;# 
   287   000FC3                     ADRES           equ	4035	;# 
   288   000FC3                     ADRESL          equ	4035	;# 
   289   000FC4                     ADRESH          equ	4036	;# 
   290   000FC5                     SSPCON2         equ	4037	;# 
   291   000FC6                     SSPCON1         equ	4038	;# 
   292   000FC7                     SSPSTAT         equ	4039	;# 
   293   000FC8                     SSPADD          equ	4040	;# 
   294   000FC9                     SSPBUF          equ	4041	;# 
   295   000FCA                     T2CON           equ	4042	;# 
   296   000FCB                     PR2             equ	4043	;# 
   297   000FCB                     MEMCON          equ	4043	;# 
   298   000FCC                     TMR2            equ	4044	;# 
   299   000FCD                     T1CON           equ	4045	;# 
   300   000FCE                     TMR1            equ	4046	;# 
   301   000FCE                     TMR1L           equ	4046	;# 
   302   000FCF                     TMR1H           equ	4047	;# 
   303   000FD0                     RCON            equ	4048	;# 
   304   000FD1                     WDTCON          equ	4049	;# 
   305   000FD2                     LVDCON          equ	4050	;# 
   306   000FD3                     OSCCON          equ	4051	;# 
   307   000FD5                     T0CON           equ	4053	;# 
   308   000FD6                     TMR0            equ	4054	;# 
   309   000FD6                     TMR0L           equ	4054	;# 
   310   000FD7                     TMR0H           equ	4055	;# 
   311   000FD8                     STATUS          equ	4056	;# 
   312   000FD9                     FSR2            equ	4057	;# 
   313   000FD9                     FSR2L           equ	4057	;# 
   314   000FDA                     FSR2H           equ	4058	;# 
   315   000FDB                     PLUSW2          equ	4059	;# 
   316   000FDC                     PREINC2         equ	4060	;# 
   317   000FDD                     POSTDEC2        equ	4061	;# 
   318   000FDE                     POSTINC2        equ	4062	;# 
   319   000FDF                     INDF2           equ	4063	;# 
   320   000FE0                     BSR             equ	4064	;# 
   321   000FE1                     FSR1            equ	4065	;# 
   322   000FE1                     FSR1L           equ	4065	;# 
   323   000FE2                     FSR1H           equ	4066	;# 
   324   000FE3                     PLUSW1          equ	4067	;# 
   325   000FE4                     PREINC1         equ	4068	;# 
   326   000FE5                     POSTDEC1        equ	4069	;# 
   327   000FE6                     POSTINC1        equ	4070	;# 
   328   000FE7                     INDF1           equ	4071	;# 
   329   000FE8                     WREG            equ	4072	;# 
   330   000FE9                     FSR0            equ	4073	;# 
   331   000FE9                     FSR0L           equ	4073	;# 
   332   000FEA                     FSR0H           equ	4074	;# 
   333   000FEB                     PLUSW0          equ	4075	;# 
   334   000FEC                     PREINC0         equ	4076	;# 
   335   000FED                     POSTDEC0        equ	4077	;# 
   336   000FEE                     POSTINC0        equ	4078	;# 
   337   000FEF                     INDF0           equ	4079	;# 
   338   000FF0                     INTCON3         equ	4080	;# 
   339   000FF1                     INTCON2         equ	4081	;# 
   340   000FF2                     INTCON          equ	4082	;# 
   341   000FF2                     INTCON1         equ	4082	;# 
   342   000FF3                     PROD            equ	4083	;# 
   343   000FF3                     PRODL           equ	4083	;# 
   344   000FF4                     PRODH           equ	4084	;# 
   345   000FF5                     TABLAT          equ	4085	;# 
   346   000FF6                     TBLPTR          equ	4086	;# 
   347   000FF6                     TBLPTRL         equ	4086	;# 
   348   000FF7                     TBLPTRH         equ	4087	;# 
   349   000FF8                     TBLPTRU         equ	4088	;# 
   350   000FF9                     PCLAT           equ	4089	;# 
   351   000FF9                     PC              equ	4089	;# 
   352   000FF9                     PCL             equ	4089	;# 
   353   000FFA                     PCLATH          equ	4090	;# 
   354   000FFB                     PCLATU          equ	4091	;# 
   355   000FFC                     STKPTR          equ	4092	;# 
   356   000FFD                     TOS             equ	4093	;# 
   357   000FFD                     TOSL            equ	4093	;# 
   358   000FFE                     TOSH            equ	4094	;# 
   359   000FFF                     TOSU            equ	4095	;# 
   360   000F80                     PORTA           equ	3968	;# 
   361   000F81                     PORTB           equ	3969	;# 
   362   000F82                     PORTC           equ	3970	;# 
   363   000F83                     PORTD           equ	3971	;# 
   364   000F84                     PORTE           equ	3972	;# 
   365   000F89                     LATA            equ	3977	;# 
   366   000F8A                     LATB            equ	3978	;# 
   367   000F8B                     LATC            equ	3979	;# 
   368   000F8C                     LATD            equ	3980	;# 
   369   000F8D                     LATE            equ	3981	;# 
   370   000F92                     TRISA           equ	3986	;# 
   371   000F92                     DDRA            equ	3986	;# 
   372   000F93                     TRISB           equ	3987	;# 
   373   000F93                     DDRB            equ	3987	;# 
   374   000F94                     TRISC           equ	3988	;# 
   375   000F94                     DDRC            equ	3988	;# 
   376   000F95                     TRISD           equ	3989	;# 
   377   000F95                     DDRD            equ	3989	;# 
   378   000F96                     TRISE           equ	3990	;# 
   379   000F96                     DDRE            equ	3990	;# 
   380   000F9D                     PIE1            equ	3997	;# 
   381   000F9E                     PIR1            equ	3998	;# 
   382   000F9F                     IPR1            equ	3999	;# 
   383   000FA0                     PIE2            equ	4000	;# 
   384   000FA1                     PIR2            equ	4001	;# 
   385   000FA2                     IPR2            equ	4002	;# 
   386   000FA6                     EECON1          equ	4006	;# 
   387   000FA7                     EECON2          equ	4007	;# 
   388   000FA8                     EEDATA          equ	4008	;# 
   389   000FA9                     EEADR           equ	4009	;# 
   390   000FAB                     RCSTA           equ	4011	;# 
   391   000FAB                     RCSTA1          equ	4011	;# 
   392   000FAC                     TXSTA           equ	4012	;# 
   393   000FAC                     TXSTA1          equ	4012	;# 
   394   000FAD                     TXREG           equ	4013	;# 
   395   000FAD                     TXREG1          equ	4013	;# 
   396   000FAE                     RCREG           equ	4014	;# 
   397   000FAE                     RCREG1          equ	4014	;# 
   398   000FAF                     SPBRG           equ	4015	;# 
   399   000FAF                     SPBRG1          equ	4015	;# 
   400   000FB1                     T3CON           equ	4017	;# 
   401   000FB2                     TMR3            equ	4018	;# 
   402   000FB2                     TMR3L           equ	4018	;# 
   403   000FB3                     TMR3H           equ	4019	;# 
   404   000FBA                     CCP2CON         equ	4026	;# 
   405   000FBB                     CCPR2           equ	4027	;# 
   406   000FBB                     CCPR2L          equ	4027	;# 
   407   000FBC                     CCPR2H          equ	4028	;# 
   408   000FBD                     CCP1CON         equ	4029	;# 
   409   000FBE                     CCPR1           equ	4030	;# 
   410   000FBE                     CCPR1L          equ	4030	;# 
   411   000FBF                     CCPR1H          equ	4031	;# 
   412   000FC1                     ADCON1          equ	4033	;# 
   413   000FC2                     ADCON0          equ	4034	;# 
   414   000FC3                     ADRES           equ	4035	;# 
   415   000FC3                     ADRESL          equ	4035	;# 
   416   000FC4                     ADRESH          equ	4036	;# 
   417   000FC5                     SSPCON2         equ	4037	;# 
   418   000FC6                     SSPCON1         equ	4038	;# 
   419   000FC7                     SSPSTAT         equ	4039	;# 
   420   000FC8                     SSPADD          equ	4040	;# 
   421   000FC9                     SSPBUF          equ	4041	;# 
   422   000FCA                     T2CON           equ	4042	;# 
   423   000FCB                     PR2             equ	4043	;# 
   424   000FCB                     MEMCON          equ	4043	;# 
   425   000FCC                     TMR2            equ	4044	;# 
   426   000FCD                     T1CON           equ	4045	;# 
   427   000FCE                     TMR1            equ	4046	;# 
   428   000FCE                     TMR1L           equ	4046	;# 
   429   000FCF                     TMR1H           equ	4047	;# 
   430   000FD0                     RCON            equ	4048	;# 
   431   000FD1                     WDTCON          equ	4049	;# 
   432   000FD2                     LVDCON          equ	4050	;# 
   433   000FD3                     OSCCON          equ	4051	;# 
   434   000FD5                     T0CON           equ	4053	;# 
   435   000FD6                     TMR0            equ	4054	;# 
   436   000FD6                     TMR0L           equ	4054	;# 
   437   000FD7                     TMR0H           equ	4055	;# 
   438   000FD8                     STATUS          equ	4056	;# 
   439   000FD9                     FSR2            equ	4057	;# 
   440   000FD9                     FSR2L           equ	4057	;# 
   441   000FDA                     FSR2H           equ	4058	;# 
   442   000FDB                     PLUSW2          equ	4059	;# 
   443   000FDC                     PREINC2         equ	4060	;# 
   444   000FDD                     POSTDEC2        equ	4061	;# 
   445   000FDE                     POSTINC2        equ	4062	;# 
   446   000FDF                     INDF2           equ	4063	;# 
   447   000FE0                     BSR             equ	4064	;# 
   448   000FE1                     FSR1            equ	4065	;# 
   449   000FE1                     FSR1L           equ	4065	;# 
   450   000FE2                     FSR1H           equ	4066	;# 
   451   000FE3                     PLUSW1          equ	4067	;# 
   452   000FE4                     PREINC1         equ	4068	;# 
   453   000FE5                     POSTDEC1        equ	4069	;# 
   454   000FE6                     POSTINC1        equ	4070	;# 
   455   000FE7                     INDF1           equ	4071	;# 
   456   000FE8                     WREG            equ	4072	;# 
   457   000FE9                     FSR0            equ	4073	;# 
   458   000FE9                     FSR0L           equ	4073	;# 
   459   000FEA                     FSR0H           equ	4074	;# 
   460   000FEB                     PLUSW0          equ	4075	;# 
   461   000FEC                     PREINC0         equ	4076	;# 
   462   000FED                     POSTDEC0        equ	4077	;# 
   463   000FEE                     POSTINC0        equ	4078	;# 
   464   000FEF                     INDF0           equ	4079	;# 
   465   000FF0                     INTCON3         equ	4080	;# 
   466   000FF1                     INTCON2         equ	4081	;# 
   467   000FF2                     INTCON          equ	4082	;# 
   468   000FF2                     INTCON1         equ	4082	;# 
   469   000FF3                     PROD            equ	4083	;# 
   470   000FF3                     PRODL           equ	4083	;# 
   471   000FF4                     PRODH           equ	4084	;# 
   472   000FF5                     TABLAT          equ	4085	;# 
   473   000FF6                     TBLPTR          equ	4086	;# 
   474   000FF6                     TBLPTRL         equ	4086	;# 
   475   000FF7                     TBLPTRH         equ	4087	;# 
   476   000FF8                     TBLPTRU         equ	4088	;# 
   477   000FF9                     PCLAT           equ	4089	;# 
   478   000FF9                     PC              equ	4089	;# 
   479   000FF9                     PCL             equ	4089	;# 
   480   000FFA                     PCLATH          equ	4090	;# 
   481   000FFB                     PCLATU          equ	4091	;# 
   482   000FFC                     STKPTR          equ	4092	;# 
   483   000FFD                     TOS             equ	4093	;# 
   484   000FFD                     TOSL            equ	4093	;# 
   485   000FFE                     TOSH            equ	4094	;# 
   486   000FFF                     TOSU            equ	4095	;# 
   487   000F80                     PORTA           equ	3968	;# 
   488   000F81                     PORTB           equ	3969	;# 
   489   000F82                     PORTC           equ	3970	;# 
   490   000F83                     PORTD           equ	3971	;# 
   491   000F84                     PORTE           equ	3972	;# 
   492   000F89                     LATA            equ	3977	;# 
   493   000F8A                     LATB            equ	3978	;# 
   494   000F8B                     LATC            equ	3979	;# 
   495   000F8C                     LATD            equ	3980	;# 
   496   000F8D                     LATE            equ	3981	;# 
   497   000F92                     TRISA           equ	3986	;# 
   498   000F92                     DDRA            equ	3986	;# 
   499   000F93                     TRISB           equ	3987	;# 
   500   000F93                     DDRB            equ	3987	;# 
   501   000F94                     TRISC           equ	3988	;# 
   502   000F94                     DDRC            equ	3988	;# 
   503   000F95                     TRISD           equ	3989	;# 
   504   000F95                     DDRD            equ	3989	;# 
   505   000F96                     TRISE           equ	3990	;# 
   506   000F96                     DDRE            equ	3990	;# 
   507   000F9D                     PIE1            equ	3997	;# 
   508   000F9E                     PIR1            equ	3998	;# 
   509   000F9F                     IPR1            equ	3999	;# 
   510   000FA0                     PIE2            equ	4000	;# 
   511   000FA1                     PIR2            equ	4001	;# 
   512   000FA2                     IPR2            equ	4002	;# 
   513   000FA6                     EECON1          equ	4006	;# 
   514   000FA7                     EECON2          equ	4007	;# 
   515   000FA8                     EEDATA          equ	4008	;# 
   516   000FA9                     EEADR           equ	4009	;# 
   517   000FAB                     RCSTA           equ	4011	;# 
   518   000FAB                     RCSTA1          equ	4011	;# 
   519   000FAC                     TXSTA           equ	4012	;# 
   520   000FAC                     TXSTA1          equ	4012	;# 
   521   000FAD                     TXREG           equ	4013	;# 
   522   000FAD                     TXREG1          equ	4013	;# 
   523   000FAE                     RCREG           equ	4014	;# 
   524   000FAE                     RCREG1          equ	4014	;# 
   525   000FAF                     SPBRG           equ	4015	;# 
   526   000FAF                     SPBRG1          equ	4015	;# 
   527   000FB1                     T3CON           equ	4017	;# 
   528   000FB2                     TMR3            equ	4018	;# 
   529   000FB2                     TMR3L           equ	4018	;# 
   530   000FB3                     TMR3H           equ	4019	;# 
   531   000FBA                     CCP2CON         equ	4026	;# 
   532   000FBB                     CCPR2           equ	4027	;# 
   533   000FBB                     CCPR2L          equ	4027	;# 
   534   000FBC                     CCPR2H          equ	4028	;# 
   535   000FBD                     CCP1CON         equ	4029	;# 
   536   000FBE                     CCPR1           equ	4030	;# 
   537   000FBE                     CCPR1L          equ	4030	;# 
   538   000FBF                     CCPR1H          equ	4031	;# 
   539   000FC1                     ADCON1          equ	4033	;# 
   540   000FC2                     ADCON0          equ	4034	;# 
   541   000FC3                     ADRES           equ	4035	;# 
   542   000FC3                     ADRESL          equ	4035	;# 
   543   000FC4                     ADRESH          equ	4036	;# 
   544   000FC5                     SSPCON2         equ	4037	;# 
   545   000FC6                     SSPCON1         equ	4038	;# 
   546   000FC7                     SSPSTAT         equ	4039	;# 
   547   000FC8                     SSPADD          equ	4040	;# 
   548   000FC9                     SSPBUF          equ	4041	;# 
   549   000FCA                     T2CON           equ	4042	;# 
   550   000FCB                     PR2             equ	4043	;# 
   551   000FCB                     MEMCON          equ	4043	;# 
   552   000FCC                     TMR2            equ	4044	;# 
   553   000FCD                     T1CON           equ	4045	;# 
   554   000FCE                     TMR1            equ	4046	;# 
   555   000FCE                     TMR1L           equ	4046	;# 
   556   000FCF                     TMR1H           equ	4047	;# 
   557   000FD0                     RCON            equ	4048	;# 
   558   000FD1                     WDTCON          equ	4049	;# 
   559   000FD2                     LVDCON          equ	4050	;# 
   560   000FD3                     OSCCON          equ	4051	;# 
   561   000FD5                     T0CON           equ	4053	;# 
   562   000FD6                     TMR0            equ	4054	;# 
   563   000FD6                     TMR0L           equ	4054	;# 
   564   000FD7                     TMR0H           equ	4055	;# 
   565   000FD8                     STATUS          equ	4056	;# 
   566   000FD9                     FSR2            equ	4057	;# 
   567   000FD9                     FSR2L           equ	4057	;# 
   568   000FDA                     FSR2H           equ	4058	;# 
   569   000FDB                     PLUSW2          equ	4059	;# 
   570   000FDC                     PREINC2         equ	4060	;# 
   571   000FDD                     POSTDEC2        equ	4061	;# 
   572   000FDE                     POSTINC2        equ	4062	;# 
   573   000FDF                     INDF2           equ	4063	;# 
   574   000FE0                     BSR             equ	4064	;# 
   575   000FE1                     FSR1            equ	4065	;# 
   576   000FE1                     FSR1L           equ	4065	;# 
   577   000FE2                     FSR1H           equ	4066	;# 
   578   000FE3                     PLUSW1          equ	4067	;# 
   579   000FE4                     PREINC1         equ	4068	;# 
   580   000FE5                     POSTDEC1        equ	4069	;# 
   581   000FE6                     POSTINC1        equ	4070	;# 
   582   000FE7                     INDF1           equ	4071	;# 
   583   000FE8                     WREG            equ	4072	;# 
   584   000FE9                     FSR0            equ	4073	;# 
   585   000FE9                     FSR0L           equ	4073	;# 
   586   000FEA                     FSR0H           equ	4074	;# 
   587   000FEB                     PLUSW0          equ	4075	;# 
   588   000FEC                     PREINC0         equ	4076	;# 
   589   000FED                     POSTDEC0        equ	4077	;# 
   590   000FEE                     POSTINC0        equ	4078	;# 
   591   000FEF                     INDF0           equ	4079	;# 
   592   000FF0                     INTCON3         equ	4080	;# 
   593   000FF1                     INTCON2         equ	4081	;# 
   594   000FF2                     INTCON          equ	4082	;# 
   595   000FF2                     INTCON1         equ	4082	;# 
   596   000FF3                     PROD            equ	4083	;# 
   597   000FF3                     PRODL           equ	4083	;# 
   598   000FF4                     PRODH           equ	4084	;# 
   599   000FF5                     TABLAT          equ	4085	;# 
   600   000FF6                     TBLPTR          equ	4086	;# 
   601   000FF6                     TBLPTRL         equ	4086	;# 
   602   000FF7                     TBLPTRH         equ	4087	;# 
   603   000FF8                     TBLPTRU         equ	4088	;# 
   604   000FF9                     PCLAT           equ	4089	;# 
   605   000FF9                     PC              equ	4089	;# 
   606   000FF9                     PCL             equ	4089	;# 
   607   000FFA                     PCLATH          equ	4090	;# 
   608   000FFB                     PCLATU          equ	4091	;# 
   609   000FFC                     STKPTR          equ	4092	;# 
   610   000FFD                     TOS             equ	4093	;# 
   611   000FFD                     TOSL            equ	4093	;# 
   612   000FFE                     TOSH            equ	4094	;# 
   613   000FFF                     TOSU            equ	4095	;# 
   614   000F80                     PORTA           equ	3968	;# 
   615   000F81                     PORTB           equ	3969	;# 
   616   000F82                     PORTC           equ	3970	;# 
   617   000F83                     PORTD           equ	3971	;# 
   618   000F84                     PORTE           equ	3972	;# 
   619   000F89                     LATA            equ	3977	;# 
   620   000F8A                     LATB            equ	3978	;# 
   621   000F8B                     LATC            equ	3979	;# 
   622   000F8C                     LATD            equ	3980	;# 
   623   000F8D                     LATE            equ	3981	;# 
   624   000F92                     TRISA           equ	3986	;# 
   625   000F92                     DDRA            equ	3986	;# 
   626   000F93                     TRISB           equ	3987	;# 
   627   000F93                     DDRB            equ	3987	;# 
   628   000F94                     TRISC           equ	3988	;# 
   629   000F94                     DDRC            equ	3988	;# 
   630   000F95                     TRISD           equ	3989	;# 
   631   000F95                     DDRD            equ	3989	;# 
   632   000F96                     TRISE           equ	3990	;# 
   633   000F96                     DDRE            equ	3990	;# 
   634   000F9D                     PIE1            equ	3997	;# 
   635   000F9E                     PIR1            equ	3998	;# 
   636   000F9F                     IPR1            equ	3999	;# 
   637   000FA0                     PIE2            equ	4000	;# 
   638   000FA1                     PIR2            equ	4001	;# 
   639   000FA2                     IPR2            equ	4002	;# 
   640   000FA6                     EECON1          equ	4006	;# 
   641   000FA7                     EECON2          equ	4007	;# 
   642   000FA8                     EEDATA          equ	4008	;# 
   643   000FA9                     EEADR           equ	4009	;# 
   644   000FAB                     RCSTA           equ	4011	;# 
   645   000FAB                     RCSTA1          equ	4011	;# 
   646   000FAC                     TXSTA           equ	4012	;# 
   647   000FAC                     TXSTA1          equ	4012	;# 
   648   000FAD                     TXREG           equ	4013	;# 
   649   000FAD                     TXREG1          equ	4013	;# 
   650   000FAE                     RCREG           equ	4014	;# 
   651   000FAE                     RCREG1          equ	4014	;# 
   652   000FAF                     SPBRG           equ	4015	;# 
   653   000FAF                     SPBRG1          equ	4015	;# 
   654   000FB1                     T3CON           equ	4017	;# 
   655   000FB2                     TMR3            equ	4018	;# 
   656   000FB2                     TMR3L           equ	4018	;# 
   657   000FB3                     TMR3H           equ	4019	;# 
   658   000FBA                     CCP2CON         equ	4026	;# 
   659   000FBB                     CCPR2           equ	4027	;# 
   660   000FBB                     CCPR2L          equ	4027	;# 
   661   000FBC                     CCPR2H          equ	4028	;# 
   662   000FBD                     CCP1CON         equ	4029	;# 
   663   000FBE                     CCPR1           equ	4030	;# 
   664   000FBE                     CCPR1L          equ	4030	;# 
   665   000FBF                     CCPR1H          equ	4031	;# 
   666   000FC1                     ADCON1          equ	4033	;# 
   667   000FC2                     ADCON0          equ	4034	;# 
   668   000FC3                     ADRES           equ	4035	;# 
   669   000FC3                     ADRESL          equ	4035	;# 
   670   000FC4                     ADRESH          equ	4036	;# 
   671   000FC5                     SSPCON2         equ	4037	;# 
   672   000FC6                     SSPCON1         equ	4038	;# 
   673   000FC7                     SSPSTAT         equ	4039	;# 
   674   000FC8                     SSPADD          equ	4040	;# 
   675   000FC9                     SSPBUF          equ	4041	;# 
   676   000FCA                     T2CON           equ	4042	;# 
   677   000FCB                     PR2             equ	4043	;# 
   678   000FCB                     MEMCON          equ	4043	;# 
   679   000FCC                     TMR2            equ	4044	;# 
   680   000FCD                     T1CON           equ	4045	;# 
   681   000FCE                     TMR1            equ	4046	;# 
   682   000FCE                     TMR1L           equ	4046	;# 
   683   000FCF                     TMR1H           equ	4047	;# 
   684   000FD0                     RCON            equ	4048	;# 
   685   000FD1                     WDTCON          equ	4049	;# 
   686   000FD2                     LVDCON          equ	4050	;# 
   687   000FD3                     OSCCON          equ	4051	;# 
   688   000FD5                     T0CON           equ	4053	;# 
   689   000FD6                     TMR0            equ	4054	;# 
   690   000FD6                     TMR0L           equ	4054	;# 
   691   000FD7                     TMR0H           equ	4055	;# 
   692   000FD8                     STATUS          equ	4056	;# 
   693   000FD9                     FSR2            equ	4057	;# 
   694   000FD9                     FSR2L           equ	4057	;# 
   695   000FDA                     FSR2H           equ	4058	;# 
   696   000FDB                     PLUSW2          equ	4059	;# 
   697   000FDC                     PREINC2         equ	4060	;# 
   698   000FDD                     POSTDEC2        equ	4061	;# 
   699   000FDE                     POSTINC2        equ	4062	;# 
   700   000FDF                     INDF2           equ	4063	;# 
   701   000FE0                     BSR             equ	4064	;# 
   702   000FE1                     FSR1            equ	4065	;# 
   703   000FE1                     FSR1L           equ	4065	;# 
   704   000FE2                     FSR1H           equ	4066	;# 
   705   000FE3                     PLUSW1          equ	4067	;# 
   706   000FE4                     PREINC1         equ	4068	;# 
   707   000FE5                     POSTDEC1        equ	4069	;# 
   708   000FE6                     POSTINC1        equ	4070	;# 
   709   000FE7                     INDF1           equ	4071	;# 
   710   000FE8                     WREG            equ	4072	;# 
   711   000FE9                     FSR0            equ	4073	;# 
   712   000FE9                     FSR0L           equ	4073	;# 
   713   000FEA                     FSR0H           equ	4074	;# 
   714   000FEB                     PLUSW0          equ	4075	;# 
   715   000FEC                     PREINC0         equ	4076	;# 
   716   000FED                     POSTDEC0        equ	4077	;# 
   717   000FEE                     POSTINC0        equ	4078	;# 
   718   000FEF                     INDF0           equ	4079	;# 
   719   000FF0                     INTCON3         equ	4080	;# 
   720   000FF1                     INTCON2         equ	4081	;# 
   721   000FF2                     INTCON          equ	4082	;# 
   722   000FF2                     INTCON1         equ	4082	;# 
   723   000FF3                     PROD            equ	4083	;# 
   724   000FF3                     PRODL           equ	4083	;# 
   725   000FF4                     PRODH           equ	4084	;# 
   726   000FF5                     TABLAT          equ	4085	;# 
   727   000FF6                     TBLPTR          equ	4086	;# 
   728   000FF6                     TBLPTRL         equ	4086	;# 
   729   000FF7                     TBLPTRH         equ	4087	;# 
   730   000FF8                     TBLPTRU         equ	4088	;# 
   731   000FF9                     PCLAT           equ	4089	;# 
   732   000FF9                     PC              equ	4089	;# 
   733   000FF9                     PCL             equ	4089	;# 
   734   000FFA                     PCLATH          equ	4090	;# 
   735   000FFB                     PCLATU          equ	4091	;# 
   736   000FFC                     STKPTR          equ	4092	;# 
   737   000FFD                     TOS             equ	4093	;# 
   738   000FFD                     TOSL            equ	4093	;# 
   739   000FFE                     TOSH            equ	4094	;# 
   740   000FFF                     TOSU            equ	4095	;# 
   741   000F80                     PORTA           equ	3968	;# 
   742   000F81                     PORTB           equ	3969	;# 
   743   000F82                     PORTC           equ	3970	;# 
   744   000F83                     PORTD           equ	3971	;# 
   745   000F84                     PORTE           equ	3972	;# 
   746   000F89                     LATA            equ	3977	;# 
   747   000F8A                     LATB            equ	3978	;# 
   748   000F8B                     LATC            equ	3979	;# 
   749   000F8C                     LATD            equ	3980	;# 
   750   000F8D                     LATE            equ	3981	;# 
   751   000F92                     TRISA           equ	3986	;# 
   752   000F92                     DDRA            equ	3986	;# 
   753   000F93                     TRISB           equ	3987	;# 
   754   000F93                     DDRB            equ	3987	;# 
   755   000F94                     TRISC           equ	3988	;# 
   756   000F94                     DDRC            equ	3988	;# 
   757   000F95                     TRISD           equ	3989	;# 
   758   000F95                     DDRD            equ	3989	;# 
   759   000F96                     TRISE           equ	3990	;# 
   760   000F96                     DDRE            equ	3990	;# 
   761   000F9D                     PIE1            equ	3997	;# 
   762   000F9E                     PIR1            equ	3998	;# 
   763   000F9F                     IPR1            equ	3999	;# 
   764   000FA0                     PIE2            equ	4000	;# 
   765   000FA1                     PIR2            equ	4001	;# 
   766   000FA2                     IPR2            equ	4002	;# 
   767   000FA6                     EECON1          equ	4006	;# 
   768   000FA7                     EECON2          equ	4007	;# 
   769   000FA8                     EEDATA          equ	4008	;# 
   770   000FA9                     EEADR           equ	4009	;# 
   771   000FAB                     RCSTA           equ	4011	;# 
   772   000FAB                     RCSTA1          equ	4011	;# 
   773   000FAC                     TXSTA           equ	4012	;# 
   774   000FAC                     TXSTA1          equ	4012	;# 
   775   000FAD                     TXREG           equ	4013	;# 
   776   000FAD                     TXREG1          equ	4013	;# 
   777   000FAE                     RCREG           equ	4014	;# 
   778   000FAE                     RCREG1          equ	4014	;# 
   779   000FAF                     SPBRG           equ	4015	;# 
   780   000FAF                     SPBRG1          equ	4015	;# 
   781   000FB1                     T3CON           equ	4017	;# 
   782   000FB2                     TMR3            equ	4018	;# 
   783   000FB2                     TMR3L           equ	4018	;# 
   784   000FB3                     TMR3H           equ	4019	;# 
   785   000FBA                     CCP2CON         equ	4026	;# 
   786   000FBB                     CCPR2           equ	4027	;# 
   787   000FBB                     CCPR2L          equ	4027	;# 
   788   000FBC                     CCPR2H          equ	4028	;# 
   789   000FBD                     CCP1CON         equ	4029	;# 
   790   000FBE                     CCPR1           equ	4030	;# 
   791   000FBE                     CCPR1L          equ	4030	;# 
   792   000FBF                     CCPR1H          equ	4031	;# 
   793   000FC1                     ADCON1          equ	4033	;# 
   794   000FC2                     ADCON0          equ	4034	;# 
   795   000FC3                     ADRES           equ	4035	;# 
   796   000FC3                     ADRESL          equ	4035	;# 
   797   000FC4                     ADRESH          equ	4036	;# 
   798   000FC5                     SSPCON2         equ	4037	;# 
   799   000FC6                     SSPCON1         equ	4038	;# 
   800   000FC7                     SSPSTAT         equ	4039	;# 
   801   000FC8                     SSPADD          equ	4040	;# 
   802   000FC9                     SSPBUF          equ	4041	;# 
   803   000FCA                     T2CON           equ	4042	;# 
   804   000FCB                     PR2             equ	4043	;# 
   805   000FCB                     MEMCON          equ	4043	;# 
   806   000FCC                     TMR2            equ	4044	;# 
   807   000FCD                     T1CON           equ	4045	;# 
   808   000FCE                     TMR1            equ	4046	;# 
   809   000FCE                     TMR1L           equ	4046	;# 
   810   000FCF                     TMR1H           equ	4047	;# 
   811   000FD0                     RCON            equ	4048	;# 
   812   000FD1                     WDTCON          equ	4049	;# 
   813   000FD2                     LVDCON          equ	4050	;# 
   814   000FD3                     OSCCON          equ	4051	;# 
   815   000FD5                     T0CON           equ	4053	;# 
   816   000FD6                     TMR0            equ	4054	;# 
   817   000FD6                     TMR0L           equ	4054	;# 
   818   000FD7                     TMR0H           equ	4055	;# 
   819   000FD8                     STATUS          equ	4056	;# 
   820   000FD9                     FSR2            equ	4057	;# 
   821   000FD9                     FSR2L           equ	4057	;# 
   822   000FDA                     FSR2H           equ	4058	;# 
   823   000FDB                     PLUSW2          equ	4059	;# 
   824   000FDC                     PREINC2         equ	4060	;# 
   825   000FDD                     POSTDEC2        equ	4061	;# 
   826   000FDE                     POSTINC2        equ	4062	;# 
   827   000FDF                     INDF2           equ	4063	;# 
   828   000FE0                     BSR             equ	4064	;# 
   829   000FE1                     FSR1            equ	4065	;# 
   830   000FE1                     FSR1L           equ	4065	;# 
   831   000FE2                     FSR1H           equ	4066	;# 
   832   000FE3                     PLUSW1          equ	4067	;# 
   833   000FE4                     PREINC1         equ	4068	;# 
   834   000FE5                     POSTDEC1        equ	4069	;# 
   835   000FE6                     POSTINC1        equ	4070	;# 
   836   000FE7                     INDF1           equ	4071	;# 
   837   000FE8                     WREG            equ	4072	;# 
   838   000FE9                     FSR0            equ	4073	;# 
   839   000FE9                     FSR0L           equ	4073	;# 
   840   000FEA                     FSR0H           equ	4074	;# 
   841   000FEB                     PLUSW0          equ	4075	;# 
   842   000FEC                     PREINC0         equ	4076	;# 
   843   000FED                     POSTDEC0        equ	4077	;# 
   844   000FEE                     POSTINC0        equ	4078	;# 
   845   000FEF                     INDF0           equ	4079	;# 
   846   000FF0                     INTCON3         equ	4080	;# 
   847   000FF1                     INTCON2         equ	4081	;# 
   848   000FF2                     INTCON          equ	4082	;# 
   849   000FF2                     INTCON1         equ	4082	;# 
   850   000FF3                     PROD            equ	4083	;# 
   851   000FF3                     PRODL           equ	4083	;# 
   852   000FF4                     PRODH           equ	4084	;# 
   853   000FF5                     TABLAT          equ	4085	;# 
   854   000FF6                     TBLPTR          equ	4086	;# 
   855   000FF6                     TBLPTRL         equ	4086	;# 
   856   000FF7                     TBLPTRH         equ	4087	;# 
   857   000FF8                     TBLPTRU         equ	4088	;# 
   858   000FF9                     PCLAT           equ	4089	;# 
   859   000FF9                     PC              equ	4089	;# 
   860   000FF9                     PCL             equ	4089	;# 
   861   000FFA                     PCLATH          equ	4090	;# 
   862   000FFB                     PCLATU          equ	4091	;# 
   863   000FFC                     STKPTR          equ	4092	;# 
   864   000FFD                     TOS             equ	4093	;# 
   865   000FFD                     TOSL            equ	4093	;# 
   866   000FFE                     TOSH            equ	4094	;# 
   867   000FFF                     TOSU            equ	4095	;# 
   868   000F80                     PORTA           equ	3968	;# 
   869   000F81                     PORTB           equ	3969	;# 
   870   000F82                     PORTC           equ	3970	;# 
   871   000F83                     PORTD           equ	3971	;# 
   872   000F84                     PORTE           equ	3972	;# 
   873   000F89                     LATA            equ	3977	;# 
   874   000F8A                     LATB            equ	3978	;# 
   875   000F8B                     LATC            equ	3979	;# 
   876   000F8C                     LATD            equ	3980	;# 
   877   000F8D                     LATE            equ	3981	;# 
   878   000F92                     TRISA           equ	3986	;# 
   879   000F92                     DDRA            equ	3986	;# 
   880   000F93                     TRISB           equ	3987	;# 
   881   000F93                     DDRB            equ	3987	;# 
   882   000F94                     TRISC           equ	3988	;# 
   883   000F94                     DDRC            equ	3988	;# 
   884   000F95                     TRISD           equ	3989	;# 
   885   000F95                     DDRD            equ	3989	;# 
   886   000F96                     TRISE           equ	3990	;# 
   887   000F96                     DDRE            equ	3990	;# 
   888   000F9D                     PIE1            equ	3997	;# 
   889   000F9E                     PIR1            equ	3998	;# 
   890   000F9F                     IPR1            equ	3999	;# 
   891   000FA0                     PIE2            equ	4000	;# 
   892   000FA1                     PIR2            equ	4001	;# 
   893   000FA2                     IPR2            equ	4002	;# 
   894   000FA6                     EECON1          equ	4006	;# 
   895   000FA7                     EECON2          equ	4007	;# 
   896   000FA8                     EEDATA          equ	4008	;# 
   897   000FA9                     EEADR           equ	4009	;# 
   898   000FAB                     RCSTA           equ	4011	;# 
   899   000FAB                     RCSTA1          equ	4011	;# 
   900   000FAC                     TXSTA           equ	4012	;# 
   901   000FAC                     TXSTA1          equ	4012	;# 
   902   000FAD                     TXREG           equ	4013	;# 
   903   000FAD                     TXREG1          equ	4013	;# 
   904   000FAE                     RCREG           equ	4014	;# 
   905   000FAE                     RCREG1          equ	4014	;# 
   906   000FAF                     SPBRG           equ	4015	;# 
   907   000FAF                     SPBRG1          equ	4015	;# 
   908   000FB1                     T3CON           equ	4017	;# 
   909   000FB2                     TMR3            equ	4018	;# 
   910   000FB2                     TMR3L           equ	4018	;# 
   911   000FB3                     TMR3H           equ	4019	;# 
   912   000FBA                     CCP2CON         equ	4026	;# 
   913   000FBB                     CCPR2           equ	4027	;# 
   914   000FBB                     CCPR2L          equ	4027	;# 
   915   000FBC                     CCPR2H          equ	4028	;# 
   916   000FBD                     CCP1CON         equ	4029	;# 
   917   000FBE                     CCPR1           equ	4030	;# 
   918   000FBE                     CCPR1L          equ	4030	;# 
   919   000FBF                     CCPR1H          equ	4031	;# 
   920   000FC1                     ADCON1          equ	4033	;# 
   921   000FC2                     ADCON0          equ	4034	;# 
   922   000FC3                     ADRES           equ	4035	;# 
   923   000FC3                     ADRESL          equ	4035	;# 
   924   000FC4                     ADRESH          equ	4036	;# 
   925   000FC5                     SSPCON2         equ	4037	;# 
   926   000FC6                     SSPCON1         equ	4038	;# 
   927   000FC7                     SSPSTAT         equ	4039	;# 
   928   000FC8                     SSPADD          equ	4040	;# 
   929   000FC9                     SSPBUF          equ	4041	;# 
   930   000FCA                     T2CON           equ	4042	;# 
   931   000FCB                     PR2             equ	4043	;# 
   932   000FCB                     MEMCON          equ	4043	;# 
   933   000FCC                     TMR2            equ	4044	;# 
   934   000FCD                     T1CON           equ	4045	;# 
   935   000FCE                     TMR1            equ	4046	;# 
   936   000FCE                     TMR1L           equ	4046	;# 
   937   000FCF                     TMR1H           equ	4047	;# 
   938   000FD0                     RCON            equ	4048	;# 
   939   000FD1                     WDTCON          equ	4049	;# 
   940   000FD2                     LVDCON          equ	4050	;# 
   941   000FD3                     OSCCON          equ	4051	;# 
   942   000FD5                     T0CON           equ	4053	;# 
   943   000FD6                     TMR0            equ	4054	;# 
   944   000FD6                     TMR0L           equ	4054	;# 
   945   000FD7                     TMR0H           equ	4055	;# 
   946   000FD8                     STATUS          equ	4056	;# 
   947   000FD9                     FSR2            equ	4057	;# 
   948   000FD9                     FSR2L           equ	4057	;# 
   949   000FDA                     FSR2H           equ	4058	;# 
   950   000FDB                     PLUSW2          equ	4059	;# 
   951   000FDC                     PREINC2         equ	4060	;# 
   952   000FDD                     POSTDEC2        equ	4061	;# 
   953   000FDE                     POSTINC2        equ	4062	;# 
   954   000FDF                     INDF2           equ	4063	;# 
   955   000FE0                     BSR             equ	4064	;# 
   956   000FE1                     FSR1            equ	4065	;# 
   957   000FE1                     FSR1L           equ	4065	;# 
   958   000FE2                     FSR1H           equ	4066	;# 
   959   000FE3                     PLUSW1          equ	4067	;# 
   960   000FE4                     PREINC1         equ	4068	;# 
   961   000FE5                     POSTDEC1        equ	4069	;# 
   962   000FE6                     POSTINC1        equ	4070	;# 
   963   000FE7                     INDF1           equ	4071	;# 
   964   000FE8                     WREG            equ	4072	;# 
   965   000FE9                     FSR0            equ	4073	;# 
   966   000FE9                     FSR0L           equ	4073	;# 
   967   000FEA                     FSR0H           equ	4074	;# 
   968   000FEB                     PLUSW0          equ	4075	;# 
   969   000FEC                     PREINC0         equ	4076	;# 
   970   000FED                     POSTDEC0        equ	4077	;# 
   971   000FEE                     POSTINC0        equ	4078	;# 
   972   000FEF                     INDF0           equ	4079	;# 
   973   000FF0                     INTCON3         equ	4080	;# 
   974   000FF1                     INTCON2         equ	4081	;# 
   975   000FF2                     INTCON          equ	4082	;# 
   976   000FF2                     INTCON1         equ	4082	;# 
   977   000FF3                     PROD            equ	4083	;# 
   978   000FF3                     PRODL           equ	4083	;# 
   979   000FF4                     PRODH           equ	4084	;# 
   980   000FF5                     TABLAT          equ	4085	;# 
   981   000FF6                     TBLPTR          equ	4086	;# 
   982   000FF6                     TBLPTRL         equ	4086	;# 
   983   000FF7                     TBLPTRH         equ	4087	;# 
   984   000FF8                     TBLPTRU         equ	4088	;# 
   985   000FF9                     PCLAT           equ	4089	;# 
   986   000FF9                     PC              equ	4089	;# 
   987   000FF9                     PCL             equ	4089	;# 
   988   000FFA                     PCLATH          equ	4090	;# 
   989   000FFB                     PCLATU          equ	4091	;# 
   990   000FFC                     STKPTR          equ	4092	;# 
   991   000FFD                     TOS             equ	4093	;# 
   992   000FFD                     TOSL            equ	4093	;# 
   993   000FFE                     TOSH            equ	4094	;# 
   994   000FFF                     TOSU            equ	4095	;# 
   995   000F80                     PORTA           equ	3968	;# 
   996   000F81                     PORTB           equ	3969	;# 
   997   000F82                     PORTC           equ	3970	;# 
   998   000F83                     PORTD           equ	3971	;# 
   999   000F84                     PORTE           equ	3972	;# 
  1000   000F89                     LATA            equ	3977	;# 
  1001   000F8A                     LATB            equ	3978	;# 
  1002   000F8B                     LATC            equ	3979	;# 
  1003   000F8C                     LATD            equ	3980	;# 
  1004   000F8D                     LATE            equ	3981	;# 
  1005   000F92                     TRISA           equ	3986	;# 
  1006   000F92                     DDRA            equ	3986	;# 
  1007   000F93                     TRISB           equ	3987	;# 
  1008   000F93                     DDRB            equ	3987	;# 
  1009   000F94                     TRISC           equ	3988	;# 
  1010   000F94                     DDRC            equ	3988	;# 
  1011   000F95                     TRISD           equ	3989	;# 
  1012   000F95                     DDRD            equ	3989	;# 
  1013   000F96                     TRISE           equ	3990	;# 
  1014   000F96                     DDRE            equ	3990	;# 
  1015   000F9D                     PIE1            equ	3997	;# 
  1016   000F9E                     PIR1            equ	3998	;# 
  1017   000F9F                     IPR1            equ	3999	;# 
  1018   000FA0                     PIE2            equ	4000	;# 
  1019   000FA1                     PIR2            equ	4001	;# 
  1020   000FA2                     IPR2            equ	4002	;# 
  1021   000FA6                     EECON1          equ	4006	;# 
  1022   000FA7                     EECON2          equ	4007	;# 
  1023   000FA8                     EEDATA          equ	4008	;# 
  1024   000FA9                     EEADR           equ	4009	;# 
  1025   000FAB                     RCSTA           equ	4011	;# 
  1026   000FAB                     RCSTA1          equ	4011	;# 
  1027   000FAC                     TXSTA           equ	4012	;# 
  1028   000FAC                     TXSTA1          equ	4012	;# 
  1029   000FAD                     TXREG           equ	4013	;# 
  1030   000FAD                     TXREG1          equ	4013	;# 
  1031   000FAE                     RCREG           equ	4014	;# 
  1032   000FAE                     RCREG1          equ	4014	;# 
  1033   000FAF                     SPBRG           equ	4015	;# 
  1034   000FAF                     SPBRG1          equ	4015	;# 
  1035   000FB1                     T3CON           equ	4017	;# 
  1036   000FB2                     TMR3            equ	4018	;# 
  1037   000FB2                     TMR3L           equ	4018	;# 
  1038   000FB3                     TMR3H           equ	4019	;# 
  1039   000FBA                     CCP2CON         equ	4026	;# 
  1040   000FBB                     CCPR2           equ	4027	;# 
  1041   000FBB                     CCPR2L          equ	4027	;# 
  1042   000FBC                     CCPR2H          equ	4028	;# 
  1043   000FBD                     CCP1CON         equ	4029	;# 
  1044   000FBE                     CCPR1           equ	4030	;# 
  1045   000FBE                     CCPR1L          equ	4030	;# 
  1046   000FBF                     CCPR1H          equ	4031	;# 
  1047   000FC1                     ADCON1          equ	4033	;# 
  1048   000FC2                     ADCON0          equ	4034	;# 
  1049   000FC3                     ADRES           equ	4035	;# 
  1050   000FC3                     ADRESL          equ	4035	;# 
  1051   000FC4                     ADRESH          equ	4036	;# 
  1052   000FC5                     SSPCON2         equ	4037	;# 
  1053   000FC6                     SSPCON1         equ	4038	;# 
  1054   000FC7                     SSPSTAT         equ	4039	;# 
  1055   000FC8                     SSPADD          equ	4040	;# 
  1056   000FC9                     SSPBUF          equ	4041	;# 
  1057   000FCA                     T2CON           equ	4042	;# 
  1058   000FCB                     PR2             equ	4043	;# 
  1059   000FCB                     MEMCON          equ	4043	;# 
  1060   000FCC                     TMR2            equ	4044	;# 
  1061   000FCD                     T1CON           equ	4045	;# 
  1062   000FCE                     TMR1            equ	4046	;# 
  1063   000FCE                     TMR1L           equ	4046	;# 
  1064   000FCF                     TMR1H           equ	4047	;# 
  1065   000FD0                     RCON            equ	4048	;# 
  1066   000FD1                     WDTCON          equ	4049	;# 
  1067   000FD2                     LVDCON          equ	4050	;# 
  1068   000FD3                     OSCCON          equ	4051	;# 
  1069   000FD5                     T0CON           equ	4053	;# 
  1070   000FD6                     TMR0            equ	4054	;# 
  1071   000FD6                     TMR0L           equ	4054	;# 
  1072   000FD7                     TMR0H           equ	4055	;# 
  1073   000FD8                     STATUS          equ	4056	;# 
  1074   000FD9                     FSR2            equ	4057	;# 
  1075   000FD9                     FSR2L           equ	4057	;# 
  1076   000FDA                     FSR2H           equ	4058	;# 
  1077   000FDB                     PLUSW2          equ	4059	;# 
  1078   000FDC                     PREINC2         equ	4060	;# 
  1079   000FDD                     POSTDEC2        equ	4061	;# 
  1080   000FDE                     POSTINC2        equ	4062	;# 
  1081   000FDF                     INDF2           equ	4063	;# 
  1082   000FE0                     BSR             equ	4064	;# 
  1083   000FE1                     FSR1            equ	4065	;# 
  1084   000FE1                     FSR1L           equ	4065	;# 
  1085   000FE2                     FSR1H           equ	4066	;# 
  1086   000FE3                     PLUSW1          equ	4067	;# 
  1087   000FE4                     PREINC1         equ	4068	;# 
  1088   000FE5                     POSTDEC1        equ	4069	;# 
  1089   000FE6                     POSTINC1        equ	4070	;# 
  1090   000FE7                     INDF1           equ	4071	;# 
  1091   000FE8                     WREG            equ	4072	;# 
  1092   000FE9                     FSR0            equ	4073	;# 
  1093   000FE9                     FSR0L           equ	4073	;# 
  1094   000FEA                     FSR0H           equ	4074	;# 
  1095   000FEB                     PLUSW0          equ	4075	;# 
  1096   000FEC                     PREINC0         equ	4076	;# 
  1097   000FED                     POSTDEC0        equ	4077	;# 
  1098   000FEE                     POSTINC0        equ	4078	;# 
  1099   000FEF                     INDF0           equ	4079	;# 
  1100   000FF0                     INTCON3         equ	4080	;# 
  1101   000FF1                     INTCON2         equ	4081	;# 
  1102   000FF2                     INTCON          equ	4082	;# 
  1103   000FF2                     INTCON1         equ	4082	;# 
  1104   000FF3                     PROD            equ	4083	;# 
  1105   000FF3                     PRODL           equ	4083	;# 
  1106   000FF4                     PRODH           equ	4084	;# 
  1107   000FF5                     TABLAT          equ	4085	;# 
  1108   000FF6                     TBLPTR          equ	4086	;# 
  1109   000FF6                     TBLPTRL         equ	4086	;# 
  1110   000FF7                     TBLPTRH         equ	4087	;# 
  1111   000FF8                     TBLPTRU         equ	4088	;# 
  1112   000FF9                     PCLAT           equ	4089	;# 
  1113   000FF9                     PC              equ	4089	;# 
  1114   000FF9                     PCL             equ	4089	;# 
  1115   000FFA                     PCLATH          equ	4090	;# 
  1116   000FFB                     PCLATU          equ	4091	;# 
  1117   000FFC                     STKPTR          equ	4092	;# 
  1118   000FFD                     TOS             equ	4093	;# 
  1119   000FFD                     TOSL            equ	4093	;# 
  1120   000FFE                     TOSH            equ	4094	;# 
  1121   000FFF                     TOSU            equ	4095	;# 
  1122   000F80                     PORTA           equ	3968	;# 
  1123   000F81                     PORTB           equ	3969	;# 
  1124   000F82                     PORTC           equ	3970	;# 
  1125   000F83                     PORTD           equ	3971	;# 
  1126   000F84                     PORTE           equ	3972	;# 
  1127   000F89                     LATA            equ	3977	;# 
  1128   000F8A                     LATB            equ	3978	;# 
  1129   000F8B                     LATC            equ	3979	;# 
  1130   000F8C                     LATD            equ	3980	;# 
  1131   000F8D                     LATE            equ	3981	;# 
  1132   000F92                     TRISA           equ	3986	;# 
  1133   000F92                     DDRA            equ	3986	;# 
  1134   000F93                     TRISB           equ	3987	;# 
  1135   000F93                     DDRB            equ	3987	;# 
  1136   000F94                     TRISC           equ	3988	;# 
  1137   000F94                     DDRC            equ	3988	;# 
  1138   000F95                     TRISD           equ	3989	;# 
  1139   000F95                     DDRD            equ	3989	;# 
  1140   000F96                     TRISE           equ	3990	;# 
  1141   000F96                     DDRE            equ	3990	;# 
  1142   000F9D                     PIE1            equ	3997	;# 
  1143   000F9E                     PIR1            equ	3998	;# 
  1144   000F9F                     IPR1            equ	3999	;# 
  1145   000FA0                     PIE2            equ	4000	;# 
  1146   000FA1                     PIR2            equ	4001	;# 
  1147   000FA2                     IPR2            equ	4002	;# 
  1148   000FA6                     EECON1          equ	4006	;# 
  1149   000FA7                     EECON2          equ	4007	;# 
  1150   000FA8                     EEDATA          equ	4008	;# 
  1151   000FA9                     EEADR           equ	4009	;# 
  1152   000FAB                     RCSTA           equ	4011	;# 
  1153   000FAB                     RCSTA1          equ	4011	;# 
  1154   000FAC                     TXSTA           equ	4012	;# 
  1155   000FAC                     TXSTA1          equ	4012	;# 
  1156   000FAD                     TXREG           equ	4013	;# 
  1157   000FAD                     TXREG1          equ	4013	;# 
  1158   000FAE                     RCREG           equ	4014	;# 
  1159   000FAE                     RCREG1          equ	4014	;# 
  1160   000FAF                     SPBRG           equ	4015	;# 
  1161   000FAF                     SPBRG1          equ	4015	;# 
  1162   000FB1                     T3CON           equ	4017	;# 
  1163   000FB2                     TMR3            equ	4018	;# 
  1164   000FB2                     TMR3L           equ	4018	;# 
  1165   000FB3                     TMR3H           equ	4019	;# 
  1166   000FBA                     CCP2CON         equ	4026	;# 
  1167   000FBB                     CCPR2           equ	4027	;# 
  1168   000FBB                     CCPR2L          equ	4027	;# 
  1169   000FBC                     CCPR2H          equ	4028	;# 
  1170   000FBD                     CCP1CON         equ	4029	;# 
  1171   000FBE                     CCPR1           equ	4030	;# 
  1172   000FBE                     CCPR1L          equ	4030	;# 
  1173   000FBF                     CCPR1H          equ	4031	;# 
  1174   000FC1                     ADCON1          equ	4033	;# 
  1175   000FC2                     ADCON0          equ	4034	;# 
  1176   000FC3                     ADRES           equ	4035	;# 
  1177   000FC3                     ADRESL          equ	4035	;# 
  1178   000FC4                     ADRESH          equ	4036	;# 
  1179   000FC5                     SSPCON2         equ	4037	;# 
  1180   000FC6                     SSPCON1         equ	4038	;# 
  1181   000FC7                     SSPSTAT         equ	4039	;# 
  1182   000FC8                     SSPADD          equ	4040	;# 
  1183   000FC9                     SSPBUF          equ	4041	;# 
  1184   000FCA                     T2CON           equ	4042	;# 
  1185   000FCB                     PR2             equ	4043	;# 
  1186   000FCB                     MEMCON          equ	4043	;# 
  1187   000FCC                     TMR2            equ	4044	;# 
  1188   000FCD                     T1CON           equ	4045	;# 
  1189   000FCE                     TMR1            equ	4046	;# 
  1190   000FCE                     TMR1L           equ	4046	;# 
  1191   000FCF                     TMR1H           equ	4047	;# 
  1192   000FD0                     RCON            equ	4048	;# 
  1193   000FD1                     WDTCON          equ	4049	;# 
  1194   000FD2                     LVDCON          equ	4050	;# 
  1195   000FD3                     OSCCON          equ	4051	;# 
  1196   000FD5                     T0CON           equ	4053	;# 
  1197   000FD6                     TMR0            equ	4054	;# 
  1198   000FD6                     TMR0L           equ	4054	;# 
  1199   000FD7                     TMR0H           equ	4055	;# 
  1200   000FD8                     STATUS          equ	4056	;# 
  1201   000FD9                     FSR2            equ	4057	;# 
  1202   000FD9                     FSR2L           equ	4057	;# 
  1203   000FDA                     FSR2H           equ	4058	;# 
  1204   000FDB                     PLUSW2          equ	4059	;# 
  1205   000FDC                     PREINC2         equ	4060	;# 
  1206   000FDD                     POSTDEC2        equ	4061	;# 
  1207   000FDE                     POSTINC2        equ	4062	;# 
  1208   000FDF                     INDF2           equ	4063	;# 
  1209   000FE0                     BSR             equ	4064	;# 
  1210   000FE1                     FSR1            equ	4065	;# 
  1211   000FE1                     FSR1L           equ	4065	;# 
  1212   000FE2                     FSR1H           equ	4066	;# 
  1213   000FE3                     PLUSW1          equ	4067	;# 
  1214   000FE4                     PREINC1         equ	4068	;# 
  1215   000FE5                     POSTDEC1        equ	4069	;# 
  1216   000FE6                     POSTINC1        equ	4070	;# 
  1217   000FE7                     INDF1           equ	4071	;# 
  1218   000FE8                     WREG            equ	4072	;# 
  1219   000FE9                     FSR0            equ	4073	;# 
  1220   000FE9                     FSR0L           equ	4073	;# 
  1221   000FEA                     FSR0H           equ	4074	;# 
  1222   000FEB                     PLUSW0          equ	4075	;# 
  1223   000FEC                     PREINC0         equ	4076	;# 
  1224   000FED                     POSTDEC0        equ	4077	;# 
  1225   000FEE                     POSTINC0        equ	4078	;# 
  1226   000FEF                     INDF0           equ	4079	;# 
  1227   000FF0                     INTCON3         equ	4080	;# 
  1228   000FF1                     INTCON2         equ	4081	;# 
  1229   000FF2                     INTCON          equ	4082	;# 
  1230   000FF2                     INTCON1         equ	4082	;# 
  1231   000FF3                     PROD            equ	4083	;# 
  1232   000FF3                     PRODL           equ	4083	;# 
  1233   000FF4                     PRODH           equ	4084	;# 
  1234   000FF5                     TABLAT          equ	4085	;# 
  1235   000FF6                     TBLPTR          equ	4086	;# 
  1236   000FF6                     TBLPTRL         equ	4086	;# 
  1237   000FF7                     TBLPTRH         equ	4087	;# 
  1238   000FF8                     TBLPTRU         equ	4088	;# 
  1239   000FF9                     PCLAT           equ	4089	;# 
  1240   000FF9                     PC              equ	4089	;# 
  1241   000FF9                     PCL             equ	4089	;# 
  1242   000FFA                     PCLATH          equ	4090	;# 
  1243   000FFB                     PCLATU          equ	4091	;# 
  1244   000FFC                     STKPTR          equ	4092	;# 
  1245   000FFD                     TOS             equ	4093	;# 
  1246   000FFD                     TOSL            equ	4093	;# 
  1247   000FFE                     TOSH            equ	4094	;# 
  1248   000FFF                     TOSU            equ	4095	;# 
  1249   000F80                     PORTA           equ	3968	;# 
  1250   000F81                     PORTB           equ	3969	;# 
  1251   000F82                     PORTC           equ	3970	;# 
  1252   000F83                     PORTD           equ	3971	;# 
  1253   000F84                     PORTE           equ	3972	;# 
  1254   000F89                     LATA            equ	3977	;# 
  1255   000F8A                     LATB            equ	3978	;# 
  1256   000F8B                     LATC            equ	3979	;# 
  1257   000F8C                     LATD            equ	3980	;# 
  1258   000F8D                     LATE            equ	3981	;# 
  1259   000F92                     TRISA           equ	3986	;# 
  1260   000F92                     DDRA            equ	3986	;# 
  1261   000F93                     TRISB           equ	3987	;# 
  1262   000F93                     DDRB            equ	3987	;# 
  1263   000F94                     TRISC           equ	3988	;# 
  1264   000F94                     DDRC            equ	3988	;# 
  1265   000F95                     TRISD           equ	3989	;# 
  1266   000F95                     DDRD            equ	3989	;# 
  1267   000F96                     TRISE           equ	3990	;# 
  1268   000F96                     DDRE            equ	3990	;# 
  1269   000F9D                     PIE1            equ	3997	;# 
  1270   000F9E                     PIR1            equ	3998	;# 
  1271   000F9F                     IPR1            equ	3999	;# 
  1272   000FA0                     PIE2            equ	4000	;# 
  1273   000FA1                     PIR2            equ	4001	;# 
  1274   000FA2                     IPR2            equ	4002	;# 
  1275   000FA6                     EECON1          equ	4006	;# 
  1276   000FA7                     EECON2          equ	4007	;# 
  1277   000FA8                     EEDATA          equ	4008	;# 
  1278   000FA9                     EEADR           equ	4009	;# 
  1279   000FAB                     RCSTA           equ	4011	;# 
  1280   000FAB                     RCSTA1          equ	4011	;# 
  1281   000FAC                     TXSTA           equ	4012	;# 
  1282   000FAC                     TXSTA1          equ	4012	;# 
  1283   000FAD                     TXREG           equ	4013	;# 
  1284   000FAD                     TXREG1          equ	4013	;# 
  1285   000FAE                     RCREG           equ	4014	;# 
  1286   000FAE                     RCREG1          equ	4014	;# 
  1287   000FAF                     SPBRG           equ	4015	;# 
  1288   000FAF                     SPBRG1          equ	4015	;# 
  1289   000FB1                     T3CON           equ	4017	;# 
  1290   000FB2                     TMR3            equ	4018	;# 
  1291   000FB2                     TMR3L           equ	4018	;# 
  1292   000FB3                     TMR3H           equ	4019	;# 
  1293   000FBA                     CCP2CON         equ	4026	;# 
  1294   000FBB                     CCPR2           equ	4027	;# 
  1295   000FBB                     CCPR2L          equ	4027	;# 
  1296   000FBC                     CCPR2H          equ	4028	;# 
  1297   000FBD                     CCP1CON         equ	4029	;# 
  1298   000FBE                     CCPR1           equ	4030	;# 
  1299   000FBE                     CCPR1L          equ	4030	;# 
  1300   000FBF                     CCPR1H          equ	4031	;# 
  1301   000FC1                     ADCON1          equ	4033	;# 
  1302   000FC2                     ADCON0          equ	4034	;# 
  1303   000FC3                     ADRES           equ	4035	;# 
  1304   000FC3                     ADRESL          equ	4035	;# 
  1305   000FC4                     ADRESH          equ	4036	;# 
  1306   000FC5                     SSPCON2         equ	4037	;# 
  1307   000FC6                     SSPCON1         equ	4038	;# 
  1308   000FC7                     SSPSTAT         equ	4039	;# 
  1309   000FC8                     SSPADD          equ	4040	;# 
  1310   000FC9                     SSPBUF          equ	4041	;# 
  1311   000FCA                     T2CON           equ	4042	;# 
  1312   000FCB                     PR2             equ	4043	;# 
  1313   000FCB                     MEMCON          equ	4043	;# 
  1314   000FCC                     TMR2            equ	4044	;# 
  1315   000FCD                     T1CON           equ	4045	;# 
  1316   000FCE                     TMR1            equ	4046	;# 
  1317   000FCE                     TMR1L           equ	4046	;# 
  1318   000FCF                     TMR1H           equ	4047	;# 
  1319   000FD0                     RCON            equ	4048	;# 
  1320   000FD1                     WDTCON          equ	4049	;# 
  1321   000FD2                     LVDCON          equ	4050	;# 
  1322   000FD3                     OSCCON          equ	4051	;# 
  1323   000FD5                     T0CON           equ	4053	;# 
  1324   000FD6                     TMR0            equ	4054	;# 
  1325   000FD6                     TMR0L           equ	4054	;# 
  1326   000FD7                     TMR0H           equ	4055	;# 
  1327   000FD8                     STATUS          equ	4056	;# 
  1328   000FD9                     FSR2            equ	4057	;# 
  1329   000FD9                     FSR2L           equ	4057	;# 
  1330   000FDA                     FSR2H           equ	4058	;# 
  1331   000FDB                     PLUSW2          equ	4059	;# 
  1332   000FDC                     PREINC2         equ	4060	;# 
  1333   000FDD                     POSTDEC2        equ	4061	;# 
  1334   000FDE                     POSTINC2        equ	4062	;# 
  1335   000FDF                     INDF2           equ	4063	;# 
  1336   000FE0                     BSR             equ	4064	;# 
  1337   000FE1                     FSR1            equ	4065	;# 
  1338   000FE1                     FSR1L           equ	4065	;# 
  1339   000FE2                     FSR1H           equ	4066	;# 
  1340   000FE3                     PLUSW1          equ	4067	;# 
  1341   000FE4                     PREINC1         equ	4068	;# 
  1342   000FE5                     POSTDEC1        equ	4069	;# 
  1343   000FE6                     POSTINC1        equ	4070	;# 
  1344   000FE7                     INDF1           equ	4071	;# 
  1345   000FE8                     WREG            equ	4072	;# 
  1346   000FE9                     FSR0            equ	4073	;# 
  1347   000FE9                     FSR0L           equ	4073	;# 
  1348   000FEA                     FSR0H           equ	4074	;# 
  1349   000FEB                     PLUSW0          equ	4075	;# 
  1350   000FEC                     PREINC0         equ	4076	;# 
  1351   000FED                     POSTDEC0        equ	4077	;# 
  1352   000FEE                     POSTINC0        equ	4078	;# 
  1353   000FEF                     INDF0           equ	4079	;# 
  1354   000FF0                     INTCON3         equ	4080	;# 
  1355   000FF1                     INTCON2         equ	4081	;# 
  1356   000FF2                     INTCON          equ	4082	;# 
  1357   000FF2                     INTCON1         equ	4082	;# 
  1358   000FF3                     PROD            equ	4083	;# 
  1359   000FF3                     PRODL           equ	4083	;# 
  1360   000FF4                     PRODH           equ	4084	;# 
  1361   000FF5                     TABLAT          equ	4085	;# 
  1362   000FF6                     TBLPTR          equ	4086	;# 
  1363   000FF6                     TBLPTRL         equ	4086	;# 
  1364   000FF7                     TBLPTRH         equ	4087	;# 
  1365   000FF8                     TBLPTRU         equ	4088	;# 
  1366   000FF9                     PCLAT           equ	4089	;# 
  1367   000FF9                     PC              equ	4089	;# 
  1368   000FF9                     PCL             equ	4089	;# 
  1369   000FFA                     PCLATH          equ	4090	;# 
  1370   000FFB                     PCLATU          equ	4091	;# 
  1371   000FFC                     STKPTR          equ	4092	;# 
  1372   000FFD                     TOS             equ	4093	;# 
  1373   000FFD                     TOSL            equ	4093	;# 
  1374   000FFE                     TOSH            equ	4094	;# 
  1375   000FFF                     TOSU            equ	4095	;# 
  1376                           
  1377                           	psect	idataCOMRAM
  1378   000F50                     __pidataCOMRAM:
  1379                           	callstack 0
  1380                           
  1381                           ;initializer for __PORT_registers
  1382   000F50  80                 	db	128
  1383   000F51  0F                 	db	15
  1384   000F52  81                 	db	129
  1385   000F53  0F                 	db	15
  1386   000F54  82                 	db	130
  1387   000F55  0F                 	db	15
  1388   000F56  83                 	db	131
  1389   000F57  0F                 	db	15
  1390   000F58  84                 	db	132
  1391   000F59  0F                 	db	15
  1392                           
  1393                           ;initializer for __LAT_registers
  1394   000F5A  89                 	db	137
  1395   000F5B  0F                 	db	15
  1396   000F5C  8A                 	db	138
  1397   000F5D  0F                 	db	15
  1398   000F5E  8B                 	db	139
  1399   000F5F  0F                 	db	15
  1400   000F60  8C                 	db	140
  1401   000F61  0F                 	db	15
  1402   000F62  8D                 	db	141
  1403   000F63  0F                 	db	15
  1404                           
  1405                           ;initializer for __TRIS_registers
  1406   000F64  92                 	db	146
  1407   000F65  0F                 	db	15
  1408   000F66  93                 	db	147
  1409   000F67  0F                 	db	15
  1410   000F68  94                 	db	148
  1411   000F69  0F                 	db	15
  1412   000F6A  95                 	db	149
  1413   000F6B  0F                 	db	15
  1414   000F6C  96                 	db	150
  1415   000F6D  0F                 	db	15
  1416                           
  1417                           ;initializer for _keypad1
  1418   000F6E  21                 	db	33
  1419   000F6F  19                 	db	25
  1420   000F70  11                 	db	17
  1421   000F71  09                 	db	9
  1422   000F72  2B                 	db	43
  1423   000F73  23                 	db	35
  1424   000F74  1B                 	db	27
  1425   000F75  13                 	db	19
  1426   000F76  00                 	db	0
  1427                           
  1428                           ;initializer for _segment1
  1429   000F77  00                 	db	0
  1430   000F78  08                 	db	8
  1431   000F79  10                 	db	16
  1432   000F7A  18                 	db	24
  1433   000F7B  00                 	db	0
  1434                           
  1435                           ;initializer for _led_arr
  1436   000F7C  00                 	db	0
  1437   000F7D  08                 	db	8
  1438   000F7E  10                 	db	16
  1439   000F7F  18                 	db	24
  1440                           
  1441                           ;initializer for _btn2
  1442   000F80  4C                 	db	76
  1443   000F81  01                 	db	1
  1444   000F82  00                 	db	0
  1445                           
  1446                           ;initializer for _btn1
  1447   000F83  E0                 	db	224
  1448   000F84  01                 	db	1
  1449   000F85  01                 	db	1
  1450                           
  1451                           ;initializer for _motor2
  1452   000F86  7C                 	db	124
  1453   000F87  4A                 	db	74
  1454                           
  1455                           ;initializer for _motor1
  1456   000F88  08                 	db	8
  1457   000F89  10                 	db	16
  1458                           
  1459                           ;initializer for _i
  1460   000F8A  5A                 	db	90
  1461                           
  1462                           ;initializer for _seg_units_en
  1463   000F8B  8B                 	db	139
  1464                           
  1465                           ;initializer for _testing
  1466   000F8C  8B                 	db	139
  1467                           
  1468                           ;initializer for _LED2
  1469   000F8D  08                 	db	8
  1470                           
  1471                           ;initializer for _LED1
  1472   000F8E  0B                 	db	11
  1473                           
  1474                           ;initializer for _relay1
  1475   000F8F  08                 	db	8
  1476                           
  1477                           ;initializer for _LCD1
  1478   000F90  93                 	db	147
  1479   000F91  9B                 	db	155
  1480   000F92  01                 	db	1
  1481   000F93  A2                 	db	162
  1482   000F94  AA                 	db	170
  1483   000F95  B2                 	db	178
  1484   000F96  BA                 	db	186
  1485   000F97  A3                 	db	163
  1486   000F98  AB                 	db	171
  1487   000F99  B3                 	db	179
  1488   000F9A  BB                 	db	187
  1489                           
  1490                           	psect	smallconst
  1491   000600                     __psmallconst:
  1492                           	callstack 0
  1493   000600  00                 	db	0
  1494   000601                     _keypad_elements:
  1495                           	callstack 0
  1496   000601  31                 	db	49
  1497   000602  32                 	db	50
  1498   000603  33                 	db	51
  1499   000604  41                 	db	65
  1500   000605  34                 	db	52
  1501   000606  35                 	db	53
  1502   000607  36                 	db	54
  1503   000608  42                 	db	66
  1504   000609  37                 	db	55
  1505   00060A  38                 	db	56
  1506   00060B  39                 	db	57
  1507   00060C  43                 	db	67
  1508   00060D  2A                 	db	42
  1509   00060E  30                 	db	48
  1510   00060F  23                 	db	35
  1511   000610  44                 	db	68
  1512   000611                     __end_of_keypad_elements:
  1513                           	callstack 0
  1514   000F84                     _PORTE          set	3972
  1515   000F83                     _PORTD          set	3971
  1516   000F82                     _PORTC          set	3970
  1517   000F81                     _PORTB          set	3969
  1518   000F80                     _PORTA          set	3968
  1519   000F8D                     _LATE           set	3981
  1520   000F8C                     _LATD           set	3980
  1521   000F8B                     _LATC           set	3979
  1522   000F8A                     _LATB           set	3978
  1523   000F89                     _LATA           set	3977
  1524   000F96                     _TRISE          set	3990
  1525   000F95                     _TRISD          set	3989
  1526   000F94                     _TRISC          set	3988
  1527   000F93                     _TRISB          set	3987
  1528   000F92                     _TRISA          set	3986
  1529   000611                     STR_1:
  1530   000611  25                 	db	37
  1531   000612  69                 	db	105	;'i'
  1532   000613  00                 	db	0
  1533   000611                     STR_2           equ	STR_1
  1534   000611                     STR_3           equ	STR_1
  1535   000614  00                 	db	0	; dummy byte at the end
  1536   000600                     __smallconst    set	__psmallconst
  1537   000600                     __mediumconst   set	__psmallconst
  1538   000002                     __activetblptr  equ	2
  1539                           
  1540                           ; #config settings
  1541                           
  1542                           	psect	cinit
  1543   00102C                     __pcinit:
  1544                           	callstack 0
  1545   00102C                     start_initialization:
  1546                           	callstack 0
  1547   00102C                     __initialization:
  1548                           	callstack 0
  1549                           
  1550                           ; Initialize objects allocated to COMRAM (75 bytes)
  1551                           ; load TBLPTR registers with __pidataCOMRAM
  1552   00102C  0E50               	movlw	low __pidataCOMRAM
  1553   00102E  6EF6               	movwf	tblptrl,c
  1554   001030  0E0F               	movlw	high __pidataCOMRAM
  1555   001032  6EF7               	movwf	tblptrh,c
  1556   001034  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1557   001036  6EF8               	movwf	tblptru,c
  1558   001038  EE00  F001         	lfsr	0,__pdataCOMRAM
  1559   00103C  EE10 F04B          	lfsr	1,75
  1560   001040                     copy_data0:
  1561   001040  0009               	tblrd		*+
  1562   001042  CFF5 FFEE          	movff	tablat,postinc0
  1563   001046  50E5               	movf	postdec1,w,c
  1564   001048  50E1               	movf	fsr1l,w,c
  1565   00104A  E1FA               	bnz	copy_data0
  1566                           
  1567                           ; Clear objects allocated to COMRAM (12 bytes)
  1568   00104C  EE00  F069         	lfsr	0,__pbssCOMRAM
  1569   001050  0E0C               	movlw	12
  1570   001052                     clear_0:
  1571   001052  6AEE               	clrf	postinc0,c
  1572   001054  06E8               	decf	wreg,f,c
  1573   001056  E1FD               	bnz	clear_0
  1574   001058                     end_of_initialization:
  1575                           	callstack 0
  1576   001058                     __end_of__initialization:
  1577                           	callstack 0
  1578   001058  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1579   00105A  6EF8               	movwf	tblptru,c
  1580   00105C  0100               	movlb	0
  1581   00105E  EF31  F008         	goto	_main	;jump to C main() function
  1582                           
  1583                           	psect	bssCOMRAM
  1584   000069                     __pbssCOMRAM:
  1585                           	callstack 0
  1586   000069                     _errno:
  1587                           	callstack 0
  1588   000069                     	ds	2
  1589   00006B                     _prev:
  1590                           	callstack 0
  1591   00006B                     	ds	1
  1592   00006C                     _knum:
  1593                           	callstack 0
  1594   00006C                     	ds	1
  1595   00006D                     _j:
  1596                           	callstack 0
  1597   00006D                     	ds	1
  1598   00006E                     relay_turn_off@F2875:
  1599                           	callstack 0
  1600   00006E                     	ds	1
  1601   00006F                     relay_turn_on@F2870:
  1602                           	callstack 0
  1603   00006F                     	ds	1
  1604   000070                     relay_initialize@F2865:
  1605                           	callstack 0
  1606   000070                     	ds	1
  1607   000071                     LED_toggle@F2885:
  1608                           	callstack 0
  1609   000071                     	ds	1
  1610   000072                     LED_off@F2880:
  1611                           	callstack 0
  1612   000072                     	ds	1
  1613   000073                     LED_on@F2875:
  1614                           	callstack 0
  1615   000073                     	ds	1
  1616   000074                     LED_initialize@F2870:
  1617                           	callstack 0
  1618   000074                     	ds	1
  1619                           
  1620                           	psect	dataCOMRAM
  1621   000001                     __pdataCOMRAM:
  1622                           	callstack 0
  1623   000001                     __PORT_registers:
  1624                           	callstack 0
  1625   000001                     	ds	10
  1626   00000B                     __LAT_registers:
  1627                           	callstack 0
  1628   00000B                     	ds	10
  1629   000015                     __TRIS_registers:
  1630                           	callstack 0
  1631   000015                     	ds	10
  1632   00001F                     _keypad1:
  1633                           	callstack 0
  1634   00001F                     	ds	9
  1635   000028                     _segment1:
  1636                           	callstack 0
  1637   000028                     	ds	5
  1638   00002D                     _led_arr:
  1639                           	callstack 0
  1640   00002D                     	ds	4
  1641   000031                     _btn2:
  1642                           	callstack 0
  1643   000031                     	ds	3
  1644   000034                     _btn1:
  1645                           	callstack 0
  1646   000034                     	ds	3
  1647   000037                     _motor2:
  1648                           	callstack 0
  1649   000037                     	ds	2
  1650   000039                     _motor1:
  1651                           	callstack 0
  1652   000039                     	ds	2
  1653   00003B                     _i:
  1654                           	callstack 0
  1655   00003B                     	ds	1
  1656   00003C                     _seg_units_en:
  1657                           	callstack 0
  1658   00003C                     	ds	1
  1659   00003D                     _testing:
  1660                           	callstack 0
  1661   00003D                     	ds	1
  1662   00003E                     _LED2:
  1663                           	callstack 0
  1664   00003E                     	ds	1
  1665   00003F                     _LED1:
  1666                           	callstack 0
  1667   00003F                     	ds	1
  1668   000040                     _relay1:
  1669                           	callstack 0
  1670   000040                     	ds	1
  1671   000041                     _LCD1:
  1672                           	callstack 0
  1673   000041                     	ds	11
  1674                           
  1675                           	psect	cstackCOMRAM
  1676   00004C                     __pcstackCOMRAM:
  1677                           	callstack 0
  1678   00004C                     GPIO_check_access@_pin_config:
  1679                           	callstack 0
  1680                           
  1681                           ; 1 bytes @ 0x0
  1682   00004C                     	ds	1
  1683   00004D                     ??_GPIO_check_access:
  1684                           
  1685                           ; 1 bytes @ 0x1
  1686   00004D                     	ds	1
  1687   00004E                     GPIO_check_access@ret:
  1688                           	callstack 0
  1689                           
  1690                           ; 1 bytes @ 0x2
  1691   00004E                     	ds	1
  1692   00004F                     lcd_check_access@lcd:
  1693                           	callstack 0
  1694   00004F                     GPIO_pin_direction_initialize@_pin_config:
  1695                           	callstack 0
  1696   00004F                     GPIO_pin_write_logic@_pin_config:
  1697                           	callstack 0
  1698                           
  1699                           ; 1 bytes @ 0x3
  1700   00004F                     	ds	1
  1701   000050                     GPIO_pin_write_logic@logic:
  1702                           	callstack 0
  1703   000050                     ??_GPIO_pin_direction_initialize:
  1704   000050                     
  1705                           ; 1 bytes @ 0x4
  1706   000050                     	ds	1
  1707   000051                     lcd_check_access@ret:
  1708                           	callstack 0
  1709   000051                     ??_GPIO_pin_write_logic:
  1710                           
  1711                           ; 1 bytes @ 0x5
  1712   000051                     	ds	1
  1713   000052                     lcd_check_access@i:
  1714                           	callstack 0
  1715                           
  1716                           ; 1 bytes @ 0x6
  1717   000052                     	ds	3
  1718   000055                     GPIO_pin_direction_initialize@ret:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x9
  1722   000055                     	ds	1
  1723   000056                     GPIO_pin_write_logic@ret:
  1724                           	callstack 0
  1725                           
  1726                           ; 1 bytes @ 0xA
  1727   000056                     	ds	1
  1728   000057                     lcd_send_4bits@lcd:
  1729                           	callstack 0
  1730   000057                     lcd_send_8bits@lcd:
  1731                           	callstack 0
  1732   000057                     lcd_send_en@lcd:
  1733                           	callstack 0
  1734   000057                     GPIO_pin_initialize@_pin_config:
  1735                           	callstack 0
  1736                           
  1737                           ; 1 bytes @ 0xB
  1738   000057                     	ds	1
  1739   000058                     lcd_send_4bits@val:
  1740                           	callstack 0
  1741   000058                     lcd_send_8bits@val:
  1742                           	callstack 0
  1743   000058                     lcd_send_en@ret:
  1744                           	callstack 0
  1745   000058                     GPIO_pin_initialize@ret:
  1746                           	callstack 0
  1747   000058                     
  1748                           ; 1 bytes @ 0xC
  1749   000058                     	ds	1
  1750   000059                     ??_lcd_send_4bits:
  1751   000059                     ??_lcd_send_8bits:
  1752                           
  1753                           ; 1 bytes @ 0xD
  1754   000059                     	ds	2
  1755   00005B                     lcd_send_4bits@ret:
  1756                           	callstack 0
  1757   00005B                     lcd_send_8bits@ret:
  1758                           	callstack 0
  1759                           
  1760                           ; 1 bytes @ 0xF
  1761   00005B                     	ds	1
  1762   00005C                     lcd_send_4bits@i:
  1763                           	callstack 0
  1764   00005C                     lcd_send_8bits@i:
  1765                           	callstack 0
  1766                           
  1767                           ; 1 bytes @ 0x10
  1768   00005C                     	ds	1
  1769   00005D                     lcd_send_command@lcd:
  1770                           	callstack 0
  1771   00005D                     lcd_send_char_data@lcd:
  1772                           	callstack 0
  1773                           
  1774                           ; 1 bytes @ 0x11
  1775   00005D                     	ds	1
  1776   00005E                     lcd_send_command@command:
  1777                           	callstack 0
  1778   00005E                     lcd_send_char_data@data:
  1779                           	callstack 0
  1780                           
  1781                           ; 1 bytes @ 0x12
  1782   00005E                     	ds	1
  1783   00005F                     lcd_send_command@ret:
  1784                           	callstack 0
  1785   00005F                     lcd_send_char_data@ret:
  1786                           	callstack 0
  1787   00005F                     
  1788                           ; 1 bytes @ 0x13
  1789   00005F                     	ds	1
  1790   000060                     lcd_initialize@lcd:
  1791                           	callstack 0
  1792   000060                     lcd_set_cursor@lcd:
  1793                           	callstack 0
  1794                           
  1795                           ; 1 bytes @ 0x14
  1796   000060                     	ds	1
  1797   000061                     lcd_set_cursor@row:
  1798                           	callstack 0
  1799   000061                     ??_lcd_initialize:
  1800                           
  1801                           ; 1 bytes @ 0x15
  1802   000061                     	ds	1
  1803   000062                     lcd_initialize@ret:
  1804                           	callstack 0
  1805   000062                     lcd_set_cursor@col:
  1806                           	callstack 0
  1807                           
  1808                           ; 1 bytes @ 0x16
  1809   000062                     	ds	1
  1810   000063                     lcd_initialize@i:
  1811                           	callstack 0
  1812   000063                     lcd_set_cursor@ret:
  1813                           	callstack 0
  1814   000063                     
  1815                           ; 1 bytes @ 0x17
  1816   000063                     	ds	1
  1817   000064                     lcd_send_char_data_position@lcd:
  1818                           	callstack 0
  1819   000064                     ecu_init@ret:
  1820                           	callstack 0
  1821   000064                     
  1822                           ; 1 bytes @ 0x18
  1823   000064                     	ds	1
  1824   000065                     lcd_send_char_data_position@row:
  1825                           	callstack 0
  1826   000065                     
  1827                           ; 1 bytes @ 0x19
  1828   000065                     	ds	1
  1829   000066                     lcd_send_char_data_position@col:
  1830                           	callstack 0
  1831                           
  1832                           ; 1 bytes @ 0x1A
  1833   000066                     	ds	1
  1834   000067                     lcd_send_char_data_position@data:
  1835                           	callstack 0
  1836                           
  1837                           ; 1 bytes @ 0x1B
  1838   000067                     	ds	1
  1839   000068                     lcd_send_char_data_position@ret:
  1840                           	callstack 0
  1841   000068                     
  1842                           ; 1 bytes @ 0x1C
  1843   000068                     	ds	1
  1844   000069                     
  1845                           ; 1 bytes @ 0x1D
  1846 ;;
  1847 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1848 ;;
  1849 ;; *************** function _main *****************
  1850 ;; Defined at:
  1851 ;;		line 23 in file "application.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  ret             1    0        unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  2  585[None  ] int 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1865 ;;      Params:         0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels required when called: 7
  1871 ;; This function calls:
  1872 ;;		_application_initialize
  1873 ;;		_lcd_send_char_data_position
  1874 ;; This function is called by:
  1875 ;;		Startup code after reset
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text0
  1880   001062                     __ptext0:
  1881                           	callstack 0
  1882   001062                     _main:
  1883                           	callstack 24
  1884   001062  FFFF               	dw	65535	; assembler added errata NOP
  1885                           
  1886                           ;application.c: 25:     application_initialize();
  1887   001064  EC4C  F008         	call	_application_initialize	;wreg free
  1888   001068  0E41               	movlw	low _LCD1
  1889   00106A  6E64               	movwf	lcd_send_char_data_position@lcd^0,c
  1890   00106C  0E01               	movlw	1
  1891   00106E  6E65               	movwf	lcd_send_char_data_position@row^0,c
  1892   001070  0E04               	movlw	4
  1893   001072  6E66               	movwf	lcd_send_char_data_position@col^0,c
  1894   001074  0E41               	movlw	65
  1895   001076  6E67               	movwf	lcd_send_char_data_position@data^0,c
  1896   001078  ECF3  F007         	call	_lcd_send_char_data_position	;wreg free
  1897   00107C                     l586:
  1898   00107C  FFFF               	dw	65535	; assembler added errata NOP
  1899   00107E  EF3E  F008         	goto	l586
  1900   001082  EFFE  F01F         	goto	start
  1901   001086                     __end_of_main:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _lcd_send_char_data_position *****************
  1905 ;; Defined at:
  1906 ;;		line 139 in file "ECU_layer/LCD/ecu_LCD.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  lcd             1   24[COMRAM] PTR const struct .
  1909 ;;		 -> LCD1(11), 
  1910 ;;  row             1   25[COMRAM] unsigned char 
  1911 ;;  col             1   26[COMRAM] unsigned char 
  1912 ;;  data            1   27[COMRAM] unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  ret             1   28[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1924 ;;      Params:         4       0       0       0       0       0       0
  1925 ;;      Locals:         1       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0
  1927 ;;      Totals:         5       0       0       0       0       0       0
  1928 ;;Total ram usage:        5 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 5
  1931 ;; This function calls:
  1932 ;;		_lcd_send_char_data
  1933 ;;		_lcd_set_cursor
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;;		_lcd_send_custom_char
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text1
  1941   000FE6                     __ptext1:
  1942                           	callstack 0
  1943   000FE6                     _lcd_send_char_data_position:
  1944                           	callstack 0
  1945   000FE6  FFFF               	dw	65535	; assembler added errata NOP
  1946   000FE8                     
  1947                           ;ECU_layer/LCD/ecu_LCD.c: 141:  if(((void*)0) == lcd)
  1948   000FE8  5064               	movf	lcd_send_char_data_position@lcd^0,w,c
  1949   000FEA  A4D8               	btfss	status,2,c
  1950   000FEC  EFFA  F007         	goto	u2121
  1951   000FF0  EFFD  F007         	goto	u2120
  1952   000FF4                     u2121:
  1953   000FF4  FFFF               	dw	65535	; assembler added errata NOP
  1954   000FF6  EF01  F008         	goto	l2675
  1955   000FFA                     u2120:
  1956   000FFA  FFFF               	dw	65535	; assembler added errata NOP
  1957   000FFC                     
  1958                           ;ECU_layer/LCD/ecu_LCD.c: 142:   ret = (STD_ReturnType)(0x00);
  1959   000FFC  6A68               	clrf	lcd_send_char_data_position@ret^0,c
  1960   000FFE  EF12  F008         	goto	l2677
  1961   001002                     l2675:
  1962   001002  FFFF               	dw	65535	; assembler added errata NOP
  1963                           
  1964                           ;ECU_layer/LCD/ecu_LCD.c: 144:   ret = lcd_set_cursor(lcd, row, col);
  1965   001004  C064  F060         	movff	lcd_send_char_data_position@lcd,lcd_set_cursor@lcd
  1966   001008  C065  F061         	movff	lcd_send_char_data_position@row,lcd_set_cursor@row
  1967   00100C  C066  F062         	movff	lcd_send_char_data_position@col,lcd_set_cursor@col
  1968   001010  EC52  F007         	call	_lcd_set_cursor	;wreg free
  1969   001014  6E68               	movwf	lcd_send_char_data_position@ret^0,c
  1970                           
  1971                           ;ECU_layer/LCD/ecu_LCD.c: 145:   ret = lcd_send_char_data(lcd, data);
  1972   001016  C064  F05D         	movff	lcd_send_char_data_position@lcd,lcd_send_char_data@lcd
  1973   00101A  C067  F05E         	movff	lcd_send_char_data_position@data,lcd_send_char_data@data
  1974   00101E  EC2F  F006         	call	_lcd_send_char_data	;wreg free
  1975   001022  6E68               	movwf	lcd_send_char_data_position@ret^0,c
  1976   001024                     l2677:
  1977   001024  FFFF               	dw	65535	; assembler added errata NOP
  1978                           
  1979                           ;ECU_layer/LCD/ecu_LCD.c: 147:  return ret;
  1980   001026  5068               	movf	lcd_send_char_data_position@ret^0,w,c
  1981   001028  0012               	return		;funcret
  1982   00102A  FFFF               	dw	65535	; errata NOP
  1983   00102C                     __end_of_lcd_send_char_data_position:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _lcd_set_cursor *****************
  1987 ;; Defined at:
  1988 ;;		line 300 in file "ECU_layer/LCD/ecu_LCD.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  lcd             1   20[COMRAM] PTR const struct .
  1991 ;;		 -> LCD1(11), 
  1992 ;;  row             1   21[COMRAM] unsigned char 
  1993 ;;  col             1   22[COMRAM] unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  ret             1   23[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      unsigned char 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2005 ;;      Params:         3       0       0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0
  2008 ;;      Totals:         4       0       0       0       0       0       0
  2009 ;;Total ram usage:        4 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 4
  2012 ;; This function calls:
  2013 ;;		_lcd_send_command
  2014 ;; This function is called by:
  2015 ;;		_lcd_send_char_data_position
  2016 ;;		_lcd_send_string_position
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text2
  2021   000EA4                     __ptext2:
  2022                           	callstack 0
  2023   000EA4                     _lcd_set_cursor:
  2024                           	callstack 0
  2025   000EA4  FFFF               	dw	65535	; assembler added errata NOP
  2026   000EA6                     
  2027                           ;ECU_layer/LCD/ecu_LCD.c: 301:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  2028   000EA6  0E01               	movlw	1
  2029   000EA8  6E63               	movwf	lcd_set_cursor@ret^0,c
  2030   000EAA                     
  2031                           ;ECU_layer/LCD/ecu_LCD.c: 302:  col--;
  2032   000EAA  0662               	decf	lcd_set_cursor@col^0,f,c
  2033                           
  2034                           ;ECU_layer/LCD/ecu_LCD.c: 303:  switch(row){
  2035   000EAC  EF70  F007         	goto	l2633
  2036   000EB0                     l2629:
  2037   000EB0  FFFF               	dw	65535	; assembler added errata NOP
  2038   000EB2  C060  F05D         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  2039   000EB6  5061               	movf	lcd_set_cursor@row^0,w,c
  2040   000EB8  0F80               	addlw	128
  2041   000EBA  6E5E               	movwf	lcd_send_command@command^0,c
  2042   000EBC  EC7F  F006         	call	_lcd_send_command	;wreg free
  2043   000EC0  EF7C  F007         	goto	l2635
  2044   000EC4                     l2631:
  2045   000EC4  FFFF               	dw	65535	; assembler added errata NOP
  2046   000EC6  C060  F05D         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  2047   000ECA  5061               	movf	lcd_set_cursor@row^0,w,c
  2048   000ECC  0FA8               	addlw	168
  2049   000ECE  6E5E               	movwf	lcd_send_command@command^0,c
  2050   000ED0  EC7F  F006         	call	_lcd_send_command	;wreg free
  2051   000ED4  EF7C  F007         	goto	l2635
  2052   000ED8                     l291:
  2053   000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2054   000EDA  6A63               	clrf	lcd_set_cursor@ret^0,c
  2055                           
  2056                           ;ECU_layer/LCD/ecu_LCD.c: 307:  }
  2057   000EDC  EF7C  F007         	goto	l2635
  2058   000EE0                     l2633:
  2059   000EE0  FFFF               	dw	65535	; assembler added errata NOP
  2060   000EE2  5061               	movf	lcd_set_cursor@row^0,w,c
  2061                           
  2062                           ; Switch size 1, requested type "simple"
  2063                           ; Number of cases is 2, Range of values is 1 to 2
  2064                           ; switch strategies available:
  2065                           ; Name         Instructions Cycles
  2066                           ; simple_byte            7     4 (average)
  2067                           ;	Chosen strategy is simple_byte
  2068   000EE4  0A01               	xorlw	1	; case 1
  2069   000EE6  B4D8               	btfsc	status,2,c
  2070   000EE8  EF58  F007         	goto	l2629
  2071   000EEC  0A03               	xorlw	3	; case 2
  2072   000EEE  B4D8               	btfsc	status,2,c
  2073   000EF0  EF62  F007         	goto	l2631
  2074   000EF4  EF6C  F007         	goto	l291
  2075   000EF8                     l2635:
  2076   000EF8  FFFF               	dw	65535	; assembler added errata NOP
  2077                           
  2078                           ;ECU_layer/LCD/ecu_LCD.c: 308:  return ret;
  2079   000EFA  5063               	movf	lcd_set_cursor@ret^0,w,c
  2080   000EFC  0012               	return		;funcret
  2081   000EFE  FFFF               	dw	65535	; errata NOP
  2082   000F00                     __end_of_lcd_set_cursor:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _lcd_send_char_data *****************
  2086 ;; Defined at:
  2087 ;;		line 116 in file "ECU_layer/LCD/ecu_LCD.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  lcd             1   17[COMRAM] PTR const struct .
  2090 ;;		 -> LCD1(11), 
  2091 ;;  data            1   18[COMRAM] unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  ret             1   19[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      unsigned char 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         2       0       0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0
  2106 ;;      Totals:         3       0       0       0       0       0       0
  2107 ;;Total ram usage:        3 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 3
  2110 ;; This function calls:
  2111 ;;		_GPIO_pin_write_logic
  2112 ;;		_lcd_send_4bits
  2113 ;;		_lcd_send_8bits
  2114 ;;		_lcd_send_en
  2115 ;; This function is called by:
  2116 ;;		_lcd_send_char_data_position
  2117 ;;		_lcd_send_string
  2118 ;;		_lcd_send_string_position
  2119 ;;		_lcd_send_custom_char
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text3
  2124   000C5E                     __ptext3:
  2125                           	callstack 0
  2126   000C5E                     _lcd_send_char_data:
  2127                           	callstack 0
  2128   000C5E  FFFF               	dw	65535	; assembler added errata NOP
  2129   000C60                     
  2130                           ;ECU_layer/LCD/ecu_LCD.c: 118:  if(((void*)0) == lcd)
  2131   000C60  505D               	movf	lcd_send_char_data@lcd^0,w,c
  2132   000C62  A4D8               	btfss	status,2,c
  2133   000C64  EF36  F006         	goto	u2051
  2134   000C68  EF39  F006         	goto	u2050
  2135   000C6C                     u2051:
  2136   000C6C  FFFF               	dw	65535	; assembler added errata NOP
  2137   000C6E  EF3D  F006         	goto	l2613
  2138   000C72                     u2050:
  2139   000C72  FFFF               	dw	65535	; assembler added errata NOP
  2140   000C74                     
  2141                           ;ECU_layer/LCD/ecu_LCD.c: 119:   ret = (STD_ReturnType)(0x00);
  2142   000C74  6A5F               	clrf	lcd_send_char_data@ret^0,c
  2143   000C76  EF7B  F006         	goto	l2621
  2144   000C7A                     l2613:
  2145   000C7A  FFFF               	dw	65535	; assembler added errata NOP
  2146   000C7C  C05D  F04F         	movff	lcd_send_char_data@lcd,GPIO_pin_write_logic@_pin_config
  2147   000C80  0E01               	movlw	1
  2148   000C82  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  2149   000C84  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2150   000C88                     
  2151                           ;ECU_layer/LCD/ecu_LCD.c: 122:   if(lcd -> bit_mode == 0){
  2152   000C88  505D               	movf	lcd_send_char_data@lcd^0,w,c
  2153   000C8A  6ED9               	movwf	fsr2l,c
  2154   000C8C  6ADA               	clrf	fsr2h,c
  2155   000C8E  0E02               	movlw	2
  2156   000C90  26D9               	addwf	fsr2l,f,c
  2157   000C92  50DF               	movf	indf2,w,c
  2158   000C94  A4D8               	btfss	status,2,c
  2159   000C96  EF4F  F006         	goto	u2061
  2160   000C9A  EF52  F006         	goto	u2060
  2161   000C9E                     u2061:
  2162   000C9E  FFFF               	dw	65535	; assembler added errata NOP
  2163   000CA0  EF6E  F006         	goto	l2619
  2164   000CA4                     u2060:
  2165   000CA4  FFFF               	dw	65535	; assembler added errata NOP
  2166   000CA6                     
  2167                           ;ECU_layer/LCD/ecu_LCD.c: 123:    ret = lcd_send_4bits(lcd,data >> 4);
  2168   000CA6  C05D  F057         	movff	lcd_send_char_data@lcd,lcd_send_4bits@lcd
  2169   000CAA  385E               	swapf	lcd_send_char_data@data^0,w,c
  2170   000CAC  0B0F               	andlw	15
  2171   000CAE  6E58               	movwf	lcd_send_4bits@val^0,c
  2172   000CB0  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2173   000CB4  6E5F               	movwf	lcd_send_char_data@ret^0,c
  2174                           
  2175                           ;ECU_layer/LCD/ecu_LCD.c: 124:    ret = lcd_send_en(lcd);
  2176   000CB6  C05D  F057         	movff	lcd_send_char_data@lcd,lcd_send_en@lcd
  2177   000CBA  ECCE  F007         	call	_lcd_send_en	;wreg free
  2178   000CBE  6E5F               	movwf	lcd_send_char_data@ret^0,c
  2179                           
  2180                           ;ECU_layer/LCD/ecu_LCD.c: 125:    ret = lcd_send_4bits(lcd,data);
  2181   000CC0  C05D  F057         	movff	lcd_send_char_data@lcd,lcd_send_4bits@lcd
  2182   000CC4  C05E  F058         	movff	lcd_send_char_data@data,lcd_send_4bits@val
  2183   000CC8  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2184   000CCC  6E5F               	movwf	lcd_send_char_data@ret^0,c
  2185                           
  2186                           ;ECU_layer/LCD/ecu_LCD.c: 126:    ret = lcd_send_en(lcd);
  2187   000CCE  C05D  F057         	movff	lcd_send_char_data@lcd,lcd_send_en@lcd
  2188   000CD2  ECCE  F007         	call	_lcd_send_en	;wreg free
  2189   000CD6  6E5F               	movwf	lcd_send_char_data@ret^0,c
  2190                           
  2191                           ;ECU_layer/LCD/ecu_LCD.c: 127:   }
  2192   000CD8  EF7B  F006         	goto	l2621
  2193   000CDC                     l2619:
  2194   000CDC  FFFF               	dw	65535	; assembler added errata NOP
  2195                           
  2196                           ;ECU_layer/LCD/ecu_LCD.c: 129:    ret = lcd_send_8bits(lcd,data);
  2197   000CDE  C05D  F057         	movff	lcd_send_char_data@lcd,lcd_send_8bits@lcd
  2198   000CE2  C05E  F058         	movff	lcd_send_char_data@data,lcd_send_8bits@val
  2199   000CE6  ECCA  F006         	call	_lcd_send_8bits	;wreg free
  2200   000CEA  6E5F               	movwf	lcd_send_char_data@ret^0,c
  2201                           
  2202                           ;ECU_layer/LCD/ecu_LCD.c: 130:    ret = lcd_send_en(lcd);
  2203   000CEC  C05D  F057         	movff	lcd_send_char_data@lcd,lcd_send_en@lcd
  2204   000CF0  ECCE  F007         	call	_lcd_send_en	;wreg free
  2205   000CF4  6E5F               	movwf	lcd_send_char_data@ret^0,c
  2206   000CF6                     l2621:
  2207   000CF6  FFFF               	dw	65535	; assembler added errata NOP
  2208                           
  2209                           ;ECU_layer/LCD/ecu_LCD.c: 133:  return ret;
  2210   000CF8  505F               	movf	lcd_send_char_data@ret^0,w,c
  2211   000CFA  0012               	return		;funcret
  2212   000CFC  FFFF               	dw	65535	; errata NOP
  2213   000CFE                     __end_of_lcd_send_char_data:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _application_initialize *****************
  2217 ;; Defined at:
  2218 ;;		line 35 in file "application.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  ret             1    0        unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2232 ;;      Params:         0       0       0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 6
  2239 ;; This function calls:
  2240 ;;		_ecu_init
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text4
  2247   001098                     __ptext4:
  2248                           	callstack 0
  2249   001098                     _application_initialize:
  2250                           	callstack 0
  2251   001098  FFFF               	dw	65535	; assembler added errata NOP
  2252   00109A  EC43  F008         	call	_ecu_init	;wreg free
  2253   00109E  0012               	return		;funcret
  2254   0010A0  FFFF               	dw	65535	; errata NOP
  2255   0010A2                     __end_of_application_initialize:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _ecu_init *****************
  2259 ;; Defined at:
  2260 ;;		line 137 in file "ECU_layer/ecu_init.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  ret             1   24[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2274 ;;      Params:         0       0       0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0
  2277 ;;      Totals:         1       0       0       0       0       0       0
  2278 ;;Total ram usage:        1 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 5
  2281 ;; This function calls:
  2282 ;;		_lcd_initialize
  2283 ;; This function is called by:
  2284 ;;		_application_initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text5
  2289   001086                     __ptext5:
  2290                           	callstack 0
  2291   001086                     _ecu_init:
  2292                           	callstack 0
  2293   001086  FFFF               	dw	65535	; assembler added errata NOP
  2294   001088                     
  2295                           ;ECU_layer/ecu_init.c: 139:     ret = lcd_initialize(&LCD1);
  2296   001088  0E41               	movlw	low _LCD1
  2297   00108A  6E60               	movwf	lcd_initialize@lcd^0,c
  2298   00108C  EC0B  F003         	call	_lcd_initialize	;wreg free
  2299   001090  6E64               	movwf	ecu_init@ret^0,c
  2300   001092                     
  2301                           ;ECU_layer/ecu_init.c: 140:     return ret;
  2302   001092  5064               	movf	ecu_init@ret^0,w,c
  2303   001094  0012               	return		;funcret
  2304   001096  FFFF               	dw	65535	; errata NOP
  2305   001098                     __end_of_ecu_init:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _lcd_initialize *****************
  2309 ;; Defined at:
  2310 ;;		line 48 in file "ECU_layer/LCD/ecu_LCD.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  lcd             1   20[COMRAM] PTR const struct .
  2313 ;;		 -> LCD1(11), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  i               1   23[COMRAM] unsigned char 
  2316 ;;  ret             1   22[COMRAM] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      unsigned char 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2326 ;;      Params:         1       0       0       0       0       0       0
  2327 ;;      Locals:         2       0       0       0       0       0       0
  2328 ;;      Temps:          1       0       0       0       0       0       0
  2329 ;;      Totals:         4       0       0       0       0       0       0
  2330 ;;Total ram usage:        4 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 4
  2333 ;; This function calls:
  2334 ;;		_GPIO_pin_initialize
  2335 ;;		_lcd_check_access
  2336 ;;		_lcd_send_command
  2337 ;; This function is called by:
  2338 ;;		_ecu_init
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text6
  2343   000616                     __ptext6:
  2344                           	callstack 0
  2345   000616                     _lcd_initialize:
  2346                           	callstack 0
  2347   000616  FFFF               	dw	65535	; assembler added errata NOP
  2348   000618                     
  2349                           ;ECU_layer/LCD/ecu_LCD.c: 50:  uint8 i;;ECU_layer/LCD/ecu_LCD.c: 51:  if(((void*)0) == l
      +                          cd || (lcd -> bit_mode != 0 && lcd -> bit_mode != 1) || ((STD_ReturnType)(0x00) == lcd_c
      +                          heck_access(lcd)) )
  2350   000618  5060               	movf	lcd_initialize@lcd^0,w,c
  2351   00061A  B4D8               	btfsc	status,2,c
  2352   00061C  EF12  F003         	goto	u1981
  2353   000620  EF15  F003         	goto	u1980
  2354   000624                     u1981:
  2355   000624  FFFF               	dw	65535	; assembler added errata NOP
  2356   000626  EF41  F003         	goto	l196
  2357   00062A                     u1980:
  2358   00062A  FFFF               	dw	65535	; assembler added errata NOP
  2359   00062C  5060               	movf	lcd_initialize@lcd^0,w,c
  2360   00062E  6ED9               	movwf	fsr2l,c
  2361   000630  6ADA               	clrf	fsr2h,c
  2362   000632  0E02               	movlw	2
  2363   000634  26D9               	addwf	fsr2l,f,c
  2364   000636  50DF               	movf	indf2,w,c
  2365   000638  B4D8               	btfsc	status,2,c
  2366   00063A  EF21  F003         	goto	u1991
  2367   00063E  EF24  F003         	goto	u1990
  2368   000642                     u1991:
  2369   000642  FFFF               	dw	65535	; assembler added errata NOP
  2370   000644  EF33  F003         	goto	l2541
  2371   000648                     u1990:
  2372   000648  FFFF               	dw	65535	; assembler added errata NOP
  2373   00064A  5060               	movf	lcd_initialize@lcd^0,w,c
  2374   00064C  6ED9               	movwf	fsr2l,c
  2375   00064E  6ADA               	clrf	fsr2h,c
  2376   000650  0E02               	movlw	2
  2377   000652  26D9               	addwf	fsr2l,f,c
  2378   000654  04DE               	decf	postinc2,w,c
  2379   000656  A4D8               	btfss	status,2,c
  2380   000658  EF30  F003         	goto	u2001
  2381   00065C  EF33  F003         	goto	u2000
  2382   000660                     u2001:
  2383   000660  FFFF               	dw	65535	; assembler added errata NOP
  2384   000662  EF41  F003         	goto	l196
  2385   000666                     u2000:
  2386   000666                     l2541:
  2387   000666  FFFF               	dw	65535	; assembler added errata NOP
  2388   000668  C060  F04F         	movff	lcd_initialize@lcd,lcd_check_access@lcd
  2389   00066C  EC8A  F004         	call	_lcd_check_access	;wreg free
  2390   000670  0900               	iorlw	0
  2391   000672  A4D8               	btfss	status,2,c
  2392   000674  EF3E  F003         	goto	u2011
  2393   000678  EF41  F003         	goto	u2010
  2394   00067C                     u2011:
  2395   00067C  FFFF               	dw	65535	; assembler added errata NOP
  2396   00067E  EF45  F003         	goto	l2543
  2397   000682                     u2010:
  2398   000682                     l196:
  2399   000682  FFFF               	dw	65535	; assembler added errata NOP
  2400                           
  2401                           ;ECU_layer/LCD/ecu_LCD.c: 52:   ret = (STD_ReturnType)(0x00);
  2402   000684  6A62               	clrf	lcd_initialize@ret^0,c
  2403   000686  EFF4  F003         	goto	l2605
  2404   00068A                     l2543:
  2405   00068A  FFFF               	dw	65535	; assembler added errata NOP
  2406                           
  2407                           ;ECU_layer/LCD/ecu_LCD.c: 54:   ret = GPIO_pin_initialize(&(lcd -> lcd_rs));
  2408   00068C  C060  F057         	movff	lcd_initialize@lcd,GPIO_pin_initialize@_pin_config
  2409   000690  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2410   000694  6E62               	movwf	lcd_initialize@ret^0,c
  2411                           
  2412                           ;ECU_layer/LCD/ecu_LCD.c: 55:   ret = GPIO_pin_initialize(&(lcd -> lcd_en));
  2413   000696  2860               	incf	lcd_initialize@lcd^0,w,c
  2414   000698  6E57               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2415   00069A  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2416   00069E  6E62               	movwf	lcd_initialize@ret^0,c
  2417   0006A0                     
  2418                           ;ECU_layer/LCD/ecu_LCD.c: 56:   if((lcd -> bit_mode) == 0){
  2419   0006A0  5060               	movf	lcd_initialize@lcd^0,w,c
  2420   0006A2  6ED9               	movwf	fsr2l,c
  2421   0006A4  6ADA               	clrf	fsr2h,c
  2422   0006A6  0E02               	movlw	2
  2423   0006A8  26D9               	addwf	fsr2l,f,c
  2424   0006AA  50DF               	movf	indf2,w,c
  2425   0006AC  A4D8               	btfss	status,2,c
  2426   0006AE  EF5B  F003         	goto	u2021
  2427   0006B2  EF5E  F003         	goto	u2020
  2428   0006B6                     u2021:
  2429   0006B6  FFFF               	dw	65535	; assembler added errata NOP
  2430   0006B8  EFB6  F003         	goto	l200
  2431   0006BC                     u2020:
  2432   0006BC  FFFF               	dw	65535	; assembler added errata NOP
  2433   0006BE                     
  2434                           ;ECU_layer/LCD/ecu_LCD.c: 57:    for(i=0;i<4;i++){
  2435   0006BE  6A63               	clrf	lcd_initialize@i^0,c
  2436   0006C0                     l2553:
  2437   0006C0  FFFF               	dw	65535	; assembler added errata NOP
  2438   0006C2  5060               	movf	lcd_initialize@lcd^0,w,c
  2439   0006C4  2463               	addwf	lcd_initialize@i^0,w,c
  2440   0006C6  0F07               	addlw	7
  2441   0006C8  6E57               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2442   0006CA  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2443   0006CE                     
  2444                           ;ECU_layer/LCD/ecu_LCD.c: 59:             }
  2445   0006CE  2A63               	incf	lcd_initialize@i^0,f,c
  2446   0006D0  0E03               	movlw	3
  2447   0006D2  6463               	cpfsgt	lcd_initialize@i^0,c
  2448   0006D4  EF6E  F003         	goto	u2031
  2449   0006D8  EF71  F003         	goto	u2030
  2450   0006DC                     u2031:
  2451   0006DC  FFFF               	dw	65535	; assembler added errata NOP
  2452   0006DE  EF60  F003         	goto	l2553
  2453   0006E2                     u2030:
  2454   0006E2  FFFF               	dw	65535	; assembler added errata NOP
  2455   0006E4                     
  2456                           ;ECU_layer/LCD/ecu_LCD.c: 60:    _delay((unsigned long)((50)*(8000000/4000.0)));
  2457   0006E4  0E62               	movlw	98
  2458   0006E6  6E61               	movwf	??_lcd_initialize^0,c
  2459   0006E8  0E76               	movlw	118
  2460   0006EA                     u2857:
  2461   0006EA  FFFF               	dw	65535	; errata NOP
  2462   0006EC  2EE8               	decfsz	wreg,f,c
  2463   0006EE  D7FD               	bra	u2857
  2464   0006F0  2E61               	decfsz	??_lcd_initialize^0,f,c
  2465   0006F2  D7FB               	bra	u2857
  2466   0006F4  D000               	nop2	
  2467   0006F6  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2468   0006FA  0E28               	movlw	40
  2469   0006FC  6E5E               	movwf	lcd_send_command@command^0,c
  2470   0006FE  EC7F  F006         	call	_lcd_send_command	;wreg free
  2471   000702                     
  2472                           ;ECU_layer/LCD/ecu_LCD.c: 62:    _delay((unsigned long)((5)*(8000000/4000.0)));
  2473   000702  0E0A               	movlw	10
  2474   000704  6E61               	movwf	??_lcd_initialize^0,c
  2475   000706  0EBE               	movlw	190
  2476   000708                     u2867:
  2477   000708  FFFF               	dw	65535	; errata NOP
  2478   00070A  2EE8               	decfsz	wreg,f,c
  2479   00070C  D7FD               	bra	u2867
  2480   00070E  2E61               	decfsz	??_lcd_initialize^0,f,c
  2481   000710  D7FB               	bra	u2867
  2482   000712  D000               	nop2	
  2483   000714  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2484   000718  0E28               	movlw	40
  2485   00071A  6E5E               	movwf	lcd_send_command@command^0,c
  2486   00071C  EC7F  F006         	call	_lcd_send_command	;wreg free
  2487   000720                     
  2488                           ;ECU_layer/LCD/ecu_LCD.c: 64:    _delay((unsigned long)((150)*(8000000/4000000.0)));
  2489   000720  0E4B               	movlw	75
  2490   000722                     u2877:
  2491   000722  FFFF               	dw	65535	; errata NOP
  2492   000724  2EE8               	decfsz	wreg,f,c
  2493   000726  D7FD               	bra	u2877
  2494   000728  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2495   00072C  0E28               	movlw	40
  2496   00072E  6E5E               	movwf	lcd_send_command@command^0,c
  2497   000730  EC7F  F006         	call	_lcd_send_command	;wreg free
  2498   000734                     l2569:
  2499   000734  FFFF               	dw	65535	; assembler added errata NOP
  2500   000736  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2501   00073A  0E01               	movlw	1
  2502   00073C  6E5E               	movwf	lcd_send_command@command^0,c
  2503   00073E  EC7F  F006         	call	_lcd_send_command	;wreg free
  2504   000742  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2505   000746  0E02               	movlw	2
  2506   000748  6E5E               	movwf	lcd_send_command@command^0,c
  2507   00074A  EC7F  F006         	call	_lcd_send_command	;wreg free
  2508   00074E  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2509   000752  0E06               	movlw	6
  2510   000754  6E5E               	movwf	lcd_send_command@command^0,c
  2511   000756  EC7F  F006         	call	_lcd_send_command	;wreg free
  2512   00075A                     
  2513                           ;ECU_layer/LCD/ecu_LCD.c: 69:    ret =lcd_send_command(lcd,0x80);
  2514   00075A  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2515   00075E  0E80               	movlw	128
  2516   000760  6E5E               	movwf	lcd_send_command@command^0,c
  2517   000762  EC7F  F006         	call	_lcd_send_command	;wreg free
  2518   000766  6E62               	movwf	lcd_initialize@ret^0,c
  2519                           
  2520                           ;ECU_layer/LCD/ecu_LCD.c: 70:         }
  2521   000768  EFF4  F003         	goto	l2605
  2522   00076C                     l200:
  2523   00076C  FFFF               	dw	65535	; assembler added errata NOP
  2524                           
  2525                           ;ECU_layer/LCD/ecu_LCD.c: 72:    for(i=0;i<8;i++){
  2526   00076E  6A63               	clrf	lcd_initialize@i^0,c
  2527   000770                     l2581:
  2528   000770  FFFF               	dw	65535	; assembler added errata NOP
  2529   000772  5060               	movf	lcd_initialize@lcd^0,w,c
  2530   000774  2463               	addwf	lcd_initialize@i^0,w,c
  2531   000776  0F03               	addlw	3
  2532   000778  6E57               	movwf	GPIO_pin_initialize@_pin_config^0,c
  2533   00077A  EC80  F007         	call	_GPIO_pin_initialize	;wreg free
  2534   00077E                     
  2535                           ;ECU_layer/LCD/ecu_LCD.c: 74:             }
  2536   00077E  2A63               	incf	lcd_initialize@i^0,f,c
  2537   000780  0E07               	movlw	7
  2538   000782  6463               	cpfsgt	lcd_initialize@i^0,c
  2539   000784  EFC6  F003         	goto	u2041
  2540   000788  EFC9  F003         	goto	u2040
  2541   00078C                     u2041:
  2542   00078C  FFFF               	dw	65535	; assembler added errata NOP
  2543   00078E  EFB8  F003         	goto	l2581
  2544   000792                     u2040:
  2545   000792  FFFF               	dw	65535	; assembler added errata NOP
  2546   000794                     
  2547                           ;ECU_layer/LCD/ecu_LCD.c: 75:    _delay((unsigned long)((50)*(8000000/4000.0)));
  2548   000794  0E62               	movlw	98
  2549   000796  6E61               	movwf	??_lcd_initialize^0,c
  2550   000798  0E76               	movlw	118
  2551   00079A                     u2887:
  2552   00079A  FFFF               	dw	65535	; errata NOP
  2553   00079C  2EE8               	decfsz	wreg,f,c
  2554   00079E  D7FD               	bra	u2887
  2555   0007A0  2E61               	decfsz	??_lcd_initialize^0,f,c
  2556   0007A2  D7FB               	bra	u2887
  2557   0007A4  D000               	nop2	
  2558   0007A6  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2559   0007AA  0E38               	movlw	56
  2560   0007AC  6E5E               	movwf	lcd_send_command@command^0,c
  2561   0007AE  EC7F  F006         	call	_lcd_send_command	;wreg free
  2562   0007B2                     
  2563                           ;ECU_layer/LCD/ecu_LCD.c: 77:    _delay((unsigned long)((5)*(8000000/4000.0)));
  2564   0007B2  0E0A               	movlw	10
  2565   0007B4  6E61               	movwf	??_lcd_initialize^0,c
  2566   0007B6  0EBE               	movlw	190
  2567   0007B8                     u2897:
  2568   0007B8  FFFF               	dw	65535	; errata NOP
  2569   0007BA  2EE8               	decfsz	wreg,f,c
  2570   0007BC  D7FD               	bra	u2897
  2571   0007BE  2E61               	decfsz	??_lcd_initialize^0,f,c
  2572   0007C0  D7FB               	bra	u2897
  2573   0007C2  D000               	nop2	
  2574   0007C4  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2575   0007C8  0E38               	movlw	56
  2576   0007CA  6E5E               	movwf	lcd_send_command@command^0,c
  2577   0007CC  EC7F  F006         	call	_lcd_send_command	;wreg free
  2578   0007D0                     
  2579                           ;ECU_layer/LCD/ecu_LCD.c: 79:    _delay((unsigned long)((150)*(8000000/4000000.0)));
  2580   0007D0  0E4B               	movlw	75
  2581   0007D2                     u2907:
  2582   0007D2  FFFF               	dw	65535	; errata NOP
  2583   0007D4  2EE8               	decfsz	wreg,f,c
  2584   0007D6  D7FD               	bra	u2907
  2585   0007D8  C060  F05D         	movff	lcd_initialize@lcd,lcd_send_command@lcd
  2586   0007DC  0E38               	movlw	56
  2587   0007DE  6E5E               	movwf	lcd_send_command@command^0,c
  2588   0007E0  EC7F  F006         	call	_lcd_send_command	;wreg free
  2589   0007E4  EF9A  F003         	goto	l2569
  2590   0007E8                     l2605:
  2591   0007E8  FFFF               	dw	65535	; assembler added errata NOP
  2592                           
  2593                           ;ECU_layer/LCD/ecu_LCD.c: 87:  return ret;
  2594   0007EA  5062               	movf	lcd_initialize@ret^0,w,c
  2595   0007EC  0012               	return		;funcret
  2596   0007EE  FFFF               	dw	65535	; errata NOP
  2597   0007F0                     __end_of_lcd_initialize:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _lcd_send_command *****************
  2601 ;; Defined at:
  2602 ;;		line 94 in file "ECU_layer/LCD/ecu_LCD.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  lcd             1   17[COMRAM] PTR const struct .
  2605 ;;		 -> LCD1(11), 
  2606 ;;  command         1   18[COMRAM] unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  ret             1   19[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      unsigned char 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2618 ;;      Params:         2       0       0       0       0       0       0
  2619 ;;      Locals:         1       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0
  2621 ;;      Totals:         3       0       0       0       0       0       0
  2622 ;;Total ram usage:        3 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 3
  2625 ;; This function calls:
  2626 ;;		_GPIO_pin_write_logic
  2627 ;;		_lcd_send_4bits
  2628 ;;		_lcd_send_8bits
  2629 ;;		_lcd_send_en
  2630 ;; This function is called by:
  2631 ;;		_lcd_initialize
  2632 ;;		_lcd_set_cursor
  2633 ;;		_lcd_send_custom_char
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text7
  2638   000CFE                     __ptext7:
  2639                           	callstack 0
  2640   000CFE                     _lcd_send_command:
  2641                           	callstack 0
  2642   000CFE  FFFF               	dw	65535	; assembler added errata NOP
  2643   000D00                     
  2644                           ;ECU_layer/LCD/ecu_LCD.c: 96:  if(((void*)0) == lcd)
  2645   000D00  505D               	movf	lcd_send_command@lcd^0,w,c
  2646   000D02  A4D8               	btfss	status,2,c
  2647   000D04  EF86  F006         	goto	u1961
  2648   000D08  EF89  F006         	goto	u1960
  2649   000D0C                     u1961:
  2650   000D0C  FFFF               	dw	65535	; assembler added errata NOP
  2651   000D0E  EF8D  F006         	goto	l2523
  2652   000D12                     u1960:
  2653   000D12  FFFF               	dw	65535	; assembler added errata NOP
  2654   000D14                     
  2655                           ;ECU_layer/LCD/ecu_LCD.c: 97:   ret = (STD_ReturnType)(0x00);
  2656   000D14  6A5F               	clrf	lcd_send_command@ret^0,c
  2657   000D16  EFC6  F006         	goto	l2531
  2658   000D1A                     l2523:
  2659   000D1A  FFFF               	dw	65535	; assembler added errata NOP
  2660   000D1C  C05D  F04F         	movff	lcd_send_command@lcd,GPIO_pin_write_logic@_pin_config
  2661   000D20  0E00               	movlw	0
  2662   000D22  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  2663   000D24  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2664   000D28                     
  2665                           ;ECU_layer/LCD/ecu_LCD.c: 100:   if((lcd -> bit_mode) == 0){
  2666   000D28  505D               	movf	lcd_send_command@lcd^0,w,c
  2667   000D2A  6ED9               	movwf	fsr2l,c
  2668   000D2C  6ADA               	clrf	fsr2h,c
  2669   000D2E  0E02               	movlw	2
  2670   000D30  26D9               	addwf	fsr2l,f,c
  2671   000D32  50DF               	movf	indf2,w,c
  2672   000D34  A4D8               	btfss	status,2,c
  2673   000D36  EF9F  F006         	goto	u1971
  2674   000D3A  EFA2  F006         	goto	u1970
  2675   000D3E                     u1971:
  2676   000D3E  FFFF               	dw	65535	; assembler added errata NOP
  2677   000D40  EFB9  F006         	goto	l2529
  2678   000D44                     u1970:
  2679   000D44  FFFF               	dw	65535	; assembler added errata NOP
  2680   000D46                     
  2681                           ;ECU_layer/LCD/ecu_LCD.c: 101:    ret = lcd_send_4bits(lcd,command >> 4);
  2682   000D46  C05D  F057         	movff	lcd_send_command@lcd,lcd_send_4bits@lcd
  2683   000D4A  385E               	swapf	lcd_send_command@command^0,w,c
  2684   000D4C  0B0F               	andlw	15
  2685   000D4E  6E58               	movwf	lcd_send_4bits@val^0,c
  2686   000D50  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2687   000D54  6E5F               	movwf	lcd_send_command@ret^0,c
  2688                           
  2689                           ;ECU_layer/LCD/ecu_LCD.c: 102:    ret = lcd_send_en(lcd);
  2690   000D56  C05D  F057         	movff	lcd_send_command@lcd,lcd_send_en@lcd
  2691   000D5A  ECCE  F007         	call	_lcd_send_en	;wreg free
  2692   000D5E  6E5F               	movwf	lcd_send_command@ret^0,c
  2693                           
  2694                           ;ECU_layer/LCD/ecu_LCD.c: 103:    ret = lcd_send_4bits(lcd,command);
  2695   000D60  C05D  F057         	movff	lcd_send_command@lcd,lcd_send_4bits@lcd
  2696   000D64  C05E  F058         	movff	lcd_send_command@command,lcd_send_4bits@val
  2697   000D68  EC0E  F007         	call	_lcd_send_4bits	;wreg free
  2698   000D6C  6E5F               	movwf	lcd_send_command@ret^0,c
  2699                           
  2700                           ;ECU_layer/LCD/ecu_LCD.c: 104:   }
  2701   000D6E  EFC6  F006         	goto	l2531
  2702   000D72                     l2529:
  2703   000D72  FFFF               	dw	65535	; assembler added errata NOP
  2704                           
  2705                           ;ECU_layer/LCD/ecu_LCD.c: 106:    ret = lcd_send_8bits(lcd,command);
  2706   000D74  C05D  F057         	movff	lcd_send_command@lcd,lcd_send_8bits@lcd
  2707   000D78  C05E  F058         	movff	lcd_send_command@command,lcd_send_8bits@val
  2708   000D7C  ECCA  F006         	call	_lcd_send_8bits	;wreg free
  2709   000D80  6E5F               	movwf	lcd_send_command@ret^0,c
  2710                           
  2711                           ;ECU_layer/LCD/ecu_LCD.c: 107:    ret = lcd_send_en(lcd);
  2712   000D82  C05D  F057         	movff	lcd_send_command@lcd,lcd_send_en@lcd
  2713   000D86  ECCE  F007         	call	_lcd_send_en	;wreg free
  2714   000D8A  6E5F               	movwf	lcd_send_command@ret^0,c
  2715   000D8C                     l2531:
  2716   000D8C  FFFF               	dw	65535	; assembler added errata NOP
  2717                           
  2718                           ;ECU_layer/LCD/ecu_LCD.c: 110:  return ret;
  2719   000D8E  505F               	movf	lcd_send_command@ret^0,w,c
  2720   000D90  0012               	return		;funcret
  2721   000D92  FFFF               	dw	65535	; errata NOP
  2722   000D94                     __end_of_lcd_send_command:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _lcd_send_en *****************
  2726 ;; Defined at:
  2727 ;;		line 285 in file "ECU_layer/LCD/ecu_LCD.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  lcd             1   11[COMRAM] PTR const struct .
  2730 ;;		 -> LCD1(11), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  ret             1   12[COMRAM] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      unsigned char 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2742 ;;      Params:         1       0       0       0       0       0       0
  2743 ;;      Locals:         1       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0
  2745 ;;      Totals:         2       0       0       0       0       0       0
  2746 ;;Total ram usage:        2 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 2
  2749 ;; This function calls:
  2750 ;;		_GPIO_pin_write_logic
  2751 ;; This function is called by:
  2752 ;;		_lcd_send_command
  2753 ;;		_lcd_send_char_data
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text8
  2758   000F9C                     __ptext8:
  2759                           	callstack 0
  2760   000F9C                     _lcd_send_en:
  2761                           	callstack 0
  2762   000F9C  FFFF               	dw	65535	; assembler added errata NOP
  2763   000F9E                     
  2764                           ;ECU_layer/LCD/ecu_LCD.c: 287:  if (((void*)0) == lcd)
  2765   000F9E  5057               	movf	lcd_send_en@lcd^0,w,c
  2766   000FA0  A4D8               	btfss	status,2,c
  2767   000FA2  EFD5  F007         	goto	u1821
  2768   000FA6  EFD8  F007         	goto	u1820
  2769   000FAA                     u1821:
  2770   000FAA  FFFF               	dw	65535	; assembler added errata NOP
  2771   000FAC  EFDC  F007         	goto	l2419
  2772   000FB0                     u1820:
  2773   000FB0  FFFF               	dw	65535	; assembler added errata NOP
  2774   000FB2                     
  2775                           ;ECU_layer/LCD/ecu_LCD.c: 288:   ret = (STD_ReturnType)(0x00);
  2776   000FB2  6A58               	clrf	lcd_send_en@ret^0,c
  2777   000FB4  EFEF  F007         	goto	l2425
  2778   000FB8                     l2419:
  2779   000FB8  FFFF               	dw	65535	; assembler added errata NOP
  2780   000FBA  2857               	incf	lcd_send_en@lcd^0,w,c
  2781   000FBC  6E4F               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2782   000FBE  0E01               	movlw	1
  2783   000FC0  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  2784   000FC2  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2785   000FC6                     
  2786                           ;ECU_layer/LCD/ecu_LCD.c: 291:   _delay((unsigned long)((15)*(8000000/4000000.0)));
  2787   000FC6  0E07               	movlw	7
  2788   000FC8                     u2917:
  2789   000FC8  FFFF               	dw	65535	; errata NOP
  2790   000FCA  2EE8               	decfsz	wreg,f,c
  2791   000FCC  D7FD               	bra	u2917
  2792   000FCE  D000               	nop2	
  2793   000FD0                     
  2794                           ;ECU_layer/LCD/ecu_LCD.c: 292:   ret = GPIO_pin_write_logic(&(lcd -> lcd_en), GPIO_LOW);
  2795   000FD0  2857               	incf	lcd_send_en@lcd^0,w,c
  2796   000FD2  6E4F               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2797   000FD4  0E00               	movlw	0
  2798   000FD6  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  2799   000FD8  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2800   000FDC  6E58               	movwf	lcd_send_en@ret^0,c
  2801   000FDE                     l2425:
  2802   000FDE  FFFF               	dw	65535	; assembler added errata NOP
  2803                           
  2804                           ;ECU_layer/LCD/ecu_LCD.c: 294:  return ret;
  2805   000FE0  5058               	movf	lcd_send_en@ret^0,w,c
  2806   000FE2  0012               	return		;funcret
  2807   000FE4  FFFF               	dw	65535	; errata NOP
  2808   000FE6                     __end_of_lcd_send_en:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _lcd_send_8bits *****************
  2812 ;; Defined at:
  2813 ;;		line 266 in file "ECU_layer/LCD/ecu_LCD.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  lcd             1   11[COMRAM] PTR const struct .
  2816 ;;		 -> LCD1(11), 
  2817 ;;  val             1   12[COMRAM] unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  i               1   16[COMRAM] unsigned char 
  2820 ;;  ret             1   15[COMRAM] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      unsigned char 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2830 ;;      Params:         2       0       0       0       0       0       0
  2831 ;;      Locals:         2       0       0       0       0       0       0
  2832 ;;      Temps:          2       0       0       0       0       0       0
  2833 ;;      Totals:         6       0       0       0       0       0       0
  2834 ;;Total ram usage:        6 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 2
  2837 ;; This function calls:
  2838 ;;		_GPIO_pin_write_logic
  2839 ;; This function is called by:
  2840 ;;		_lcd_send_command
  2841 ;;		_lcd_send_char_data
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text9
  2846   000D94                     __ptext9:
  2847                           	callstack 0
  2848   000D94                     _lcd_send_8bits:
  2849                           	callstack 0
  2850   000D94  FFFF               	dw	65535	; assembler added errata NOP
  2851   000D96                     
  2852                           ;ECU_layer/LCD/ecu_LCD.c: 269:  if (((void*)0) == lcd)
  2853   000D96  5057               	movf	lcd_send_8bits@lcd^0,w,c
  2854   000D98  A4D8               	btfss	status,2,c
  2855   000D9A  EFD1  F006         	goto	u1831
  2856   000D9E  EFD4  F006         	goto	u1830
  2857   000DA2                     u1831:
  2858   000DA2  FFFF               	dw	65535	; assembler added errata NOP
  2859   000DA4  EFD8  F006         	goto	l274
  2860   000DA8                     u1830:
  2861   000DA8  FFFF               	dw	65535	; assembler added errata NOP
  2862   000DAA                     
  2863                           ;ECU_layer/LCD/ecu_LCD.c: 270:   ret = (STD_ReturnType)(0x00);
  2864   000DAA  6A5B               	clrf	lcd_send_8bits@ret^0,c
  2865   000DAC  EF0A  F007         	goto	l2449
  2866   000DB0                     l274:
  2867   000DB0  FFFF               	dw	65535	; assembler added errata NOP
  2868                           
  2869                           ;ECU_layer/LCD/ecu_LCD.c: 272:   for(i=0;i<8;i++){
  2870   000DB2  6A5C               	clrf	lcd_send_8bits@i^0,c
  2871   000DB4                     l2439:
  2872   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  2873                           
  2874                           ;ECU_layer/LCD/ecu_LCD.c: 273:    ret = GPIO_pin_write_logic(&(lcd -> lcd_data[i]), (val
      +                           >> i) & ((uint8) 0x01));
  2875   000DB6  5057               	movf	lcd_send_8bits@lcd^0,w,c
  2876   000DB8  245C               	addwf	lcd_send_8bits@i^0,w,c
  2877   000DBA  0F03               	addlw	3
  2878   000DBC  6E4F               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2879   000DBE  C05C  F059         	movff	lcd_send_8bits@i,??_lcd_send_8bits
  2880   000DC2  C058  F05A         	movff	lcd_send_8bits@val,??_lcd_send_8bits+1
  2881   000DC6  2A59               	incf	??_lcd_send_8bits^0,f,c
  2882   000DC8  EFE9  F006         	goto	u1844
  2883   000DCC                     u1845:
  2884   000DCC  FFFF               	dw	65535	; assembler added errata NOP
  2885   000DCE  90D8               	bcf	status,0,c
  2886   000DD0  325A               	rrcf	(??_lcd_send_8bits+1)^0,f,c
  2887   000DD2                     u1844:
  2888   000DD2  FFFF               	dw	65535	; assembler added errata NOP
  2889   000DD4  2E59               	decfsz	??_lcd_send_8bits^0,f,c
  2890   000DD6  EFE6  F006         	goto	u1845
  2891   000DDA  505A               	movf	(??_lcd_send_8bits+1)^0,w,c
  2892   000DDC  0B01               	andlw	1
  2893   000DDE  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  2894   000DE0  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  2895   000DE4  6E5B               	movwf	lcd_send_8bits@ret^0,c
  2896   000DE6                     
  2897                           ;ECU_layer/LCD/ecu_LCD.c: 274:             if(ret==(STD_ReturnType)(0x00)){
  2898   000DE6  505B               	movf	lcd_send_8bits@ret^0,w,c
  2899   000DE8  A4D8               	btfss	status,2,c
  2900   000DEA  EFF9  F006         	goto	u1851
  2901   000DEE  EFFC  F006         	goto	u1850
  2902   000DF2                     u1851:
  2903   000DF2  FFFF               	dw	65535	; assembler added errata NOP
  2904   000DF4  EFFF  F006         	goto	l2445
  2905   000DF8                     u1850:
  2906   000DF8  FFFF               	dw	65535	; assembler added errata NOP
  2907   000DFA  EF0A  F007         	goto	l2449
  2908   000DFE                     l2445:
  2909   000DFE  FFFF               	dw	65535	; assembler added errata NOP
  2910                           
  2911                           ;ECU_layer/LCD/ecu_LCD.c: 277:         }
  2912   000E00  2A5C               	incf	lcd_send_8bits@i^0,f,c
  2913   000E02  0E07               	movlw	7
  2914   000E04  645C               	cpfsgt	lcd_send_8bits@i^0,c
  2915   000E06  EF07  F007         	goto	u1861
  2916   000E0A  EF0A  F007         	goto	u1860
  2917   000E0E                     u1861:
  2918   000E0E  FFFF               	dw	65535	; assembler added errata NOP
  2919   000E10  EFDA  F006         	goto	l2439
  2920   000E14                     u1860:
  2921   000E14                     l2449:
  2922   000E14  FFFF               	dw	65535	; assembler added errata NOP
  2923                           
  2924                           ;ECU_layer/LCD/ecu_LCD.c: 279:  return ret;
  2925   000E16  505B               	movf	lcd_send_8bits@ret^0,w,c
  2926   000E18  0012               	return		;funcret
  2927   000E1A  FFFF               	dw	65535	; errata NOP
  2928   000E1C                     __end_of_lcd_send_8bits:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _lcd_send_4bits *****************
  2932 ;; Defined at:
  2933 ;;		line 247 in file "ECU_layer/LCD/ecu_LCD.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  lcd             1   11[COMRAM] PTR const struct .
  2936 ;;		 -> LCD1(11), 
  2937 ;;  val             1   12[COMRAM] unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  i               1   16[COMRAM] unsigned char 
  2940 ;;  ret             1   15[COMRAM] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      unsigned char 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2950 ;;      Params:         2       0       0       0       0       0       0
  2951 ;;      Locals:         2       0       0       0       0       0       0
  2952 ;;      Temps:          2       0       0       0       0       0       0
  2953 ;;      Totals:         6       0       0       0       0       0       0
  2954 ;;Total ram usage:        6 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 2
  2957 ;; This function calls:
  2958 ;;		_GPIO_pin_write_logic
  2959 ;; This function is called by:
  2960 ;;		_lcd_send_command
  2961 ;;		_lcd_send_char_data
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text10
  2966   000E1C                     __ptext10:
  2967                           	callstack 0
  2968   000E1C                     _lcd_send_4bits:
  2969                           	callstack 0
  2970   000E1C  FFFF               	dw	65535	; assembler added errata NOP
  2971   000E1E                     
  2972                           ;ECU_layer/LCD/ecu_LCD.c: 250:  if (((void*)0) == lcd)
  2973   000E1E  5057               	movf	lcd_send_4bits@lcd^0,w,c
  2974   000E20  A4D8               	btfss	status,2,c
  2975   000E22  EF15  F007         	goto	u1781
  2976   000E26  EF18  F007         	goto	u1780
  2977   000E2A                     u1781:
  2978   000E2A  FFFF               	dw	65535	; assembler added errata NOP
  2979   000E2C  EF1C  F007         	goto	l266
  2980   000E30                     u1780:
  2981   000E30  FFFF               	dw	65535	; assembler added errata NOP
  2982   000E32                     
  2983                           ;ECU_layer/LCD/ecu_LCD.c: 251:   ret = (STD_ReturnType)(0x00);
  2984   000E32  6A5B               	clrf	lcd_send_4bits@ret^0,c
  2985   000E34  EF4E  F007         	goto	l2411
  2986   000E38                     l266:
  2987   000E38  FFFF               	dw	65535	; assembler added errata NOP
  2988                           
  2989                           ;ECU_layer/LCD/ecu_LCD.c: 253:   for(i=0;i<4;i++){
  2990   000E3A  6A5C               	clrf	lcd_send_4bits@i^0,c
  2991   000E3C                     l2401:
  2992   000E3C  FFFF               	dw	65535	; assembler added errata NOP
  2993                           
  2994                           ;ECU_layer/LCD/ecu_LCD.c: 254:    ret = GPIO_pin_write_logic(&(lcd -> lcd_data[i+4]), (v
      +                          al >> i) & (uint8) 0x01);
  2995   000E3E  5057               	movf	lcd_send_4bits@lcd^0,w,c
  2996   000E40  245C               	addwf	lcd_send_4bits@i^0,w,c
  2997   000E42  0F07               	addlw	7
  2998   000E44  6E4F               	movwf	GPIO_pin_write_logic@_pin_config^0,c
  2999   000E46  C05C  F059         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  3000   000E4A  C058  F05A         	movff	lcd_send_4bits@val,??_lcd_send_4bits+1
  3001   000E4E  2A59               	incf	??_lcd_send_4bits^0,f,c
  3002   000E50  EF2D  F007         	goto	u1794
  3003   000E54                     u1795:
  3004   000E54  FFFF               	dw	65535	; assembler added errata NOP
  3005   000E56  90D8               	bcf	status,0,c
  3006   000E58  325A               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3007   000E5A                     u1794:
  3008   000E5A  FFFF               	dw	65535	; assembler added errata NOP
  3009   000E5C  2E59               	decfsz	??_lcd_send_4bits^0,f,c
  3010   000E5E  EF2A  F007         	goto	u1795
  3011   000E62  505A               	movf	(??_lcd_send_4bits+1)^0,w,c
  3012   000E64  0B01               	andlw	1
  3013   000E66  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  3014   000E68  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  3015   000E6C  6E5B               	movwf	lcd_send_4bits@ret^0,c
  3016   000E6E                     
  3017                           ;ECU_layer/LCD/ecu_LCD.c: 255:             if(ret==(STD_ReturnType)(0x00)){
  3018   000E6E  505B               	movf	lcd_send_4bits@ret^0,w,c
  3019   000E70  A4D8               	btfss	status,2,c
  3020   000E72  EF3D  F007         	goto	u1801
  3021   000E76  EF40  F007         	goto	u1800
  3022   000E7A                     u1801:
  3023   000E7A  FFFF               	dw	65535	; assembler added errata NOP
  3024   000E7C  EF43  F007         	goto	l2407
  3025   000E80                     u1800:
  3026   000E80  FFFF               	dw	65535	; assembler added errata NOP
  3027   000E82  EF4E  F007         	goto	l2411
  3028   000E86                     l2407:
  3029   000E86  FFFF               	dw	65535	; assembler added errata NOP
  3030                           
  3031                           ;ECU_layer/LCD/ecu_LCD.c: 258:         }
  3032   000E88  2A5C               	incf	lcd_send_4bits@i^0,f,c
  3033   000E8A  0E03               	movlw	3
  3034   000E8C  645C               	cpfsgt	lcd_send_4bits@i^0,c
  3035   000E8E  EF4B  F007         	goto	u1811
  3036   000E92  EF4E  F007         	goto	u1810
  3037   000E96                     u1811:
  3038   000E96  FFFF               	dw	65535	; assembler added errata NOP
  3039   000E98  EF1E  F007         	goto	l2401
  3040   000E9C                     u1810:
  3041   000E9C                     l2411:
  3042   000E9C  FFFF               	dw	65535	; assembler added errata NOP
  3043                           
  3044                           ;ECU_layer/LCD/ecu_LCD.c: 260:  return ret;
  3045   000E9E  505B               	movf	lcd_send_4bits@ret^0,w,c
  3046   000EA0  0012               	return		;funcret
  3047   000EA2  FFFF               	dw	65535	; errata NOP
  3048   000EA4                     __end_of_lcd_send_4bits:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _lcd_check_access *****************
  3052 ;; Defined at:
  3053 ;;		line 13 in file "ECU_layer/LCD/ecu_LCD.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  lcd             1    3[COMRAM] PTR const struct .
  3056 ;;		 -> LCD1(11), 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  i               1    6[COMRAM] unsigned char 
  3059 ;;  ret             1    5[COMRAM] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      unsigned char 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3069 ;;      Params:         1       0       0       0       0       0       0
  3070 ;;      Locals:         2       0       0       0       0       0       0
  3071 ;;      Temps:          1       0       0       0       0       0       0
  3072 ;;      Totals:         4       0       0       0       0       0       0
  3073 ;;Total ram usage:        4 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 1
  3076 ;; This function calls:
  3077 ;;		_GPIO_check_access
  3078 ;; This function is called by:
  3079 ;;		_lcd_initialize
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text11
  3084   000914                     __ptext11:
  3085                           	callstack 0
  3086   000914                     _lcd_check_access:
  3087                           	callstack 0
  3088   000914  FFFF               	dw	65535	; assembler added errata NOP
  3089   000916                     
  3090                           ;ECU_layer/LCD/ecu_LCD.c: 15:  uint8 i;;ECU_layer/LCD/ecu_LCD.c: 16:  if(((STD_ReturnTyp
      +                          e)(0x00) == GPIO_check_access(&(lcd -> lcd_rs))) || ((STD_ReturnType)(0x00) == GPIO_chec
      +                          k_access(&(lcd -> lcd_en)))){
  3091   000916  C04F  F04C         	movff	lcd_check_access@lcd,GPIO_check_access@_pin_config
  3092   00091A  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3093   00091E  0900               	iorlw	0
  3094   000920  B4D8               	btfsc	status,2,c
  3095   000922  EF95  F004         	goto	u1881
  3096   000926  EF98  F004         	goto	u1880
  3097   00092A                     u1881:
  3098   00092A  FFFF               	dw	65535	; assembler added errata NOP
  3099   00092C  EFA6  F004         	goto	l177
  3100   000930                     u1880:
  3101   000930  FFFF               	dw	65535	; assembler added errata NOP
  3102   000932  284F               	incf	lcd_check_access@lcd^0,w,c
  3103   000934  6E4C               	movwf	GPIO_check_access@_pin_config^0,c
  3104   000936  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3105   00093A  0900               	iorlw	0
  3106   00093C  A4D8               	btfss	status,2,c
  3107   00093E  EFA3  F004         	goto	u1891
  3108   000942  EFA6  F004         	goto	u1890
  3109   000946                     u1891:
  3110   000946  FFFF               	dw	65535	; assembler added errata NOP
  3111   000948  EFAA  F004         	goto	l2471
  3112   00094C                     u1890:
  3113   00094C                     l177:
  3114   00094C  FFFF               	dw	65535	; assembler added errata NOP
  3115                           
  3116                           ;ECU_layer/LCD/ecu_LCD.c: 17:   ret = (STD_ReturnType)(0x00);
  3117   00094E  6A51               	clrf	lcd_check_access@ret^0,c
  3118                           
  3119                           ;ECU_layer/LCD/ecu_LCD.c: 18:  }
  3120   000950  EF15  F005         	goto	l178
  3121   000954                     l2471:
  3122   000954  FFFF               	dw	65535	; assembler added errata NOP
  3123                           
  3124                           ;ECU_layer/LCD/ecu_LCD.c: 20:   if(lcd -> bit_mode == 0){
  3125   000956  504F               	movf	lcd_check_access@lcd^0,w,c
  3126   000958  6ED9               	movwf	fsr2l,c
  3127   00095A  6ADA               	clrf	fsr2h,c
  3128   00095C  0E02               	movlw	2
  3129   00095E  26D9               	addwf	fsr2l,f,c
  3130   000960  50DF               	movf	indf2,w,c
  3131   000962  A4D8               	btfss	status,2,c
  3132   000964  EFB6  F004         	goto	u1901
  3133   000968  EFB9  F004         	goto	u1900
  3134   00096C                     u1901:
  3135   00096C  FFFF               	dw	65535	; assembler added errata NOP
  3136   00096E  EFDF  F004         	goto	l2493
  3137   000972                     u1900:
  3138   000972  FFFF               	dw	65535	; assembler added errata NOP
  3139   000974                     
  3140                           ;ECU_layer/LCD/ecu_LCD.c: 21:    for(i=0;i<4;i++){
  3141   000974  6A52               	clrf	lcd_check_access@i^0,c
  3142   000976                     l2479:
  3143   000976  FFFF               	dw	65535	; assembler added errata NOP
  3144                           
  3145                           ;ECU_layer/LCD/ecu_LCD.c: 22:     ret = GPIO_check_access(&(lcd -> lcd_data[i+4]));
  3146   000978  504F               	movf	lcd_check_access@lcd^0,w,c
  3147   00097A  2452               	addwf	lcd_check_access@i^0,w,c
  3148   00097C  0F07               	addlw	7
  3149   00097E  6E4C               	movwf	GPIO_check_access@_pin_config^0,c
  3150   000980  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3151   000984  6E51               	movwf	lcd_check_access@ret^0,c
  3152   000986                     
  3153                           ;ECU_layer/LCD/ecu_LCD.c: 23:     if (ret == (STD_ReturnType)(0x00)){
  3154   000986  5051               	movf	lcd_check_access@ret^0,w,c
  3155   000988  A4D8               	btfss	status,2,c
  3156   00098A  EFC9  F004         	goto	u1911
  3157   00098E  EFCC  F004         	goto	u1910
  3158   000992                     u1911:
  3159   000992  FFFF               	dw	65535	; assembler added errata NOP
  3160   000994  EFD1  F004         	goto	l2489
  3161   000998                     u1910:
  3162   000998  FFFF               	dw	65535	; assembler added errata NOP
  3163   00099A                     l2483:
  3164   00099A  FFFF               	dw	65535	; assembler added errata NOP
  3165                           
  3166                           ;ECU_layer/LCD/ecu_LCD.c: 24:      return (STD_ReturnType)(0x00);
  3167   00099C  0E00               	movlw	0
  3168   00099E  EF17  F005         	goto	l183
  3169   0009A2                     l2489:
  3170   0009A2  FFFF               	dw	65535	; assembler added errata NOP
  3171                           
  3172                           ;ECU_layer/LCD/ecu_LCD.c: 27:    }
  3173   0009A4  2A52               	incf	lcd_check_access@i^0,f,c
  3174   0009A6  0E03               	movlw	3
  3175   0009A8  6452               	cpfsgt	lcd_check_access@i^0,c
  3176   0009AA  EFD9  F004         	goto	u1921
  3177   0009AE  EFDC  F004         	goto	u1920
  3178   0009B2                     u1921:
  3179   0009B2  FFFF               	dw	65535	; assembler added errata NOP
  3180   0009B4  EFBB  F004         	goto	l2479
  3181   0009B8                     u1920:
  3182   0009B8  FFFF               	dw	65535	; assembler added errata NOP
  3183   0009BA  EF15  F005         	goto	l178
  3184   0009BE                     l2493:
  3185   0009BE  FFFF               	dw	65535	; assembler added errata NOP
  3186   0009C0  504F               	movf	lcd_check_access@lcd^0,w,c
  3187   0009C2  6ED9               	movwf	fsr2l,c
  3188   0009C4  6ADA               	clrf	fsr2h,c
  3189   0009C6  0E02               	movlw	2
  3190   0009C8  26D9               	addwf	fsr2l,f,c
  3191   0009CA  04DE               	decf	postinc2,w,c
  3192   0009CC  A4D8               	btfss	status,2,c
  3193   0009CE  EFEB  F004         	goto	u1931
  3194   0009D2  EFEE  F004         	goto	u1930
  3195   0009D6                     u1931:
  3196   0009D6  FFFF               	dw	65535	; assembler added errata NOP
  3197   0009D8  EF12  F005         	goto	l2515
  3198   0009DC                     u1930:
  3199   0009DC  FFFF               	dw	65535	; assembler added errata NOP
  3200   0009DE                     
  3201                           ;ECU_layer/LCD/ecu_LCD.c: 30:    for(i=0;i<8;i++){
  3202   0009DE  6A52               	clrf	lcd_check_access@i^0,c
  3203   0009E0                     l2501:
  3204   0009E0  FFFF               	dw	65535	; assembler added errata NOP
  3205                           
  3206                           ;ECU_layer/LCD/ecu_LCD.c: 31:     ret = GPIO_check_access(&(lcd -> lcd_data[i]));
  3207   0009E2  504F               	movf	lcd_check_access@lcd^0,w,c
  3208   0009E4  2452               	addwf	lcd_check_access@i^0,w,c
  3209   0009E6  0F03               	addlw	3
  3210   0009E8  6E4C               	movwf	GPIO_check_access@_pin_config^0,c
  3211   0009EA  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3212   0009EE  6E51               	movwf	lcd_check_access@ret^0,c
  3213   0009F0                     
  3214                           ;ECU_layer/LCD/ecu_LCD.c: 32:     if (ret == (STD_ReturnType)(0x00)){
  3215   0009F0  5051               	movf	lcd_check_access@ret^0,w,c
  3216   0009F2  A4D8               	btfss	status,2,c
  3217   0009F4  EFFE  F004         	goto	u1941
  3218   0009F8  EF01  F005         	goto	u1940
  3219   0009FC                     u1941:
  3220   0009FC  FFFF               	dw	65535	; assembler added errata NOP
  3221   0009FE  EF04  F005         	goto	l2511
  3222   000A02                     u1940:
  3223   000A02  FFFF               	dw	65535	; assembler added errata NOP
  3224   000A04  EFCD  F004         	goto	l2483
  3225   000A08                     l2511:
  3226   000A08  FFFF               	dw	65535	; assembler added errata NOP
  3227                           
  3228                           ;ECU_layer/LCD/ecu_LCD.c: 36:    }
  3229   000A0A  2A52               	incf	lcd_check_access@i^0,f,c
  3230   000A0C  0E07               	movlw	7
  3231   000A0E  6452               	cpfsgt	lcd_check_access@i^0,c
  3232   000A10  EF0C  F005         	goto	u1951
  3233   000A14  EF0F  F005         	goto	u1950
  3234   000A18                     u1951:
  3235   000A18  FFFF               	dw	65535	; assembler added errata NOP
  3236   000A1A  EFF0  F004         	goto	l2501
  3237   000A1E                     u1950:
  3238   000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3239   000A20  EF15  F005         	goto	l178
  3240   000A24                     l2515:
  3241   000A24  FFFF               	dw	65535	; assembler added errata NOP
  3242                           
  3243                           ;ECU_layer/LCD/ecu_LCD.c: 39:    ret = (STD_ReturnType)(0x01);
  3244   000A26  0E01               	movlw	1
  3245   000A28  6E51               	movwf	lcd_check_access@ret^0,c
  3246   000A2A                     l178:
  3247   000A2A  FFFF               	dw	65535	; assembler added errata NOP
  3248                           
  3249                           ;ECU_layer/LCD/ecu_LCD.c: 41:  return ret;
  3250   000A2C  5051               	movf	lcd_check_access@ret^0,w,c
  3251   000A2E                     l183:
  3252   000A2E  FFFF               	dw	65535	; assembler added errata NOP
  3253   000A30  0012               	return		;funcret
  3254   000A32  FFFF               	dw	65535	; errata NOP
  3255   000A34                     __end_of_lcd_check_access:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _GPIO_pin_initialize *****************
  3259 ;; Defined at:
  3260 ;;		line 37 in file "MCAL_layer/GPIO/hal_gpio.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  _pin_config     1   11[COMRAM] PTR const struct .
  3263 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_initialize@lpin(1), LED_initialize@pin_local(1), 
  3264 ;;		 -> keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_initialize
      +@lpin(4), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  ret             1   12[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      unsigned char 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3276 ;;      Params:         1       0       0       0       0       0       0
  3277 ;;      Locals:         1       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0
  3279 ;;      Totals:         2       0       0       0       0       0       0
  3280 ;;Total ram usage:        2 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 2
  3283 ;; This function calls:
  3284 ;;		_GPIO_check_access
  3285 ;;		_GPIO_pin_direction_initialize
  3286 ;;		_GPIO_pin_write_logic
  3287 ;; This function is called by:
  3288 ;;		_lcd_initialize
  3289 ;;		_seven_segment_initialize
  3290 ;;		_dc_motor_initialize
  3291 ;;		_keypad_initialize
  3292 ;;		_LED_initialize
  3293 ;;		_relay_initialize
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text12
  3298   000F00                     __ptext12:
  3299                           	callstack 0
  3300   000F00                     _GPIO_pin_initialize:
  3301                           	callstack 0
  3302   000F00  FFFF               	dw	65535	; assembler added errata NOP
  3303   000F02                     
  3304                           ;MCAL_layer/GPIO/hal_gpio.c: 39:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3305   000F02  C057  F04C         	movff	GPIO_pin_initialize@_pin_config,GPIO_check_access@_pin_config
  3306   000F06  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3307   000F0A  0900               	iorlw	0
  3308   000F0C  A4D8               	btfss	status,2,c
  3309   000F0E  EF8B  F007         	goto	u1871
  3310   000F12  EF8E  F007         	goto	u1870
  3311   000F16                     u1871:
  3312   000F16  FFFF               	dw	65535	; assembler added errata NOP
  3313   000F18  EF92  F007         	goto	l2459
  3314   000F1C                     u1870:
  3315   000F1C  FFFF               	dw	65535	; assembler added errata NOP
  3316   000F1E                     
  3317                           ;MCAL_layer/GPIO/hal_gpio.c: 40:   ret = (STD_ReturnType)(0x00);
  3318   000F1E  6A58               	clrf	GPIO_pin_initialize@ret^0,c
  3319                           
  3320                           ;MCAL_layer/GPIO/hal_gpio.c: 41:  }
  3321   000F20  EFA4  F007         	goto	l2461
  3322   000F24                     l2459:
  3323   000F24  FFFF               	dw	65535	; assembler added errata NOP
  3324                           
  3325                           ;MCAL_layer/GPIO/hal_gpio.c: 43:   ret = GPIO_pin_direction_initialize(_pin_config);
  3326   000F26  C057  F04F         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_direction_initialize@_pin_config
  3327   000F2A  EC1A  F005         	call	_GPIO_pin_direction_initialize	;wreg free
  3328   000F2E  6E58               	movwf	GPIO_pin_initialize@ret^0,c
  3329                           
  3330                           ;MCAL_layer/GPIO/hal_gpio.c: 44:   ret = GPIO_pin_write_logic(_pin_config, _pin_config -
      +                          > logic);
  3331   000F30  C057  F04F         	movff	GPIO_pin_initialize@_pin_config,GPIO_pin_write_logic@_pin_config
  3332   000F34  5057               	movf	GPIO_pin_initialize@_pin_config^0,w,c
  3333   000F36  6ED9               	movwf	fsr2l,c
  3334   000F38  6ADA               	clrf	fsr2h,c
  3335   000F3A  0E00               	movlw	0
  3336   000F3C  BEDF               	btfsc	indf2,7,c
  3337   000F3E  0E01               	movlw	1
  3338   000F40  6E50               	movwf	GPIO_pin_write_logic@logic^0,c
  3339   000F42  ECA6  F005         	call	_GPIO_pin_write_logic	;wreg free
  3340   000F46  6E58               	movwf	GPIO_pin_initialize@ret^0,c
  3341   000F48                     l2461:
  3342   000F48  FFFF               	dw	65535	; assembler added errata NOP
  3343                           
  3344                           ;MCAL_layer/GPIO/hal_gpio.c: 46:     return ret;
  3345   000F4A  5058               	movf	GPIO_pin_initialize@ret^0,w,c
  3346   000F4C  0012               	return		;funcret
  3347   000F4E  FFFF               	dw	65535	; errata NOP
  3348   000F50                     __end_of_GPIO_pin_initialize:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _GPIO_pin_write_logic *****************
  3352 ;; Defined at:
  3353 ;;		line 97 in file "MCAL_layer/GPIO/hal_gpio.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  _pin_config     1    3[COMRAM] PTR const struct .
  3356 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_turn_off@lpin(1), relay_turn_on@lpin(1), 
  3357 ;;		 -> relay_initialize@lpin(1), LED_off@pin_local(1), LED_on@pin_local(1), LED_initialize@pin_local(1), 
  3358 ;;		 -> keypad_read_number@lpinr(4), keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), 
  3359 ;;		 -> dc_motor_turn_left@lpin2(1), dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin
      +1(1), 
  3360 ;;		 -> dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(1), seven_segment_write_number@lpin(4), seven_segment_in
      +itialize@lpin(4), 
  3361 ;;  logic           1    4[COMRAM] enum E2776
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  ret             1   10[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      unsigned char 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3373 ;;      Params:         2       0       0       0       0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0
  3375 ;;      Temps:          5       0       0       0       0       0       0
  3376 ;;      Totals:         8       0       0       0       0       0       0
  3377 ;;Total ram usage:        8 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 1
  3380 ;; This function calls:
  3381 ;;		_GPIO_check_access
  3382 ;; This function is called by:
  3383 ;;		_lcd_send_command
  3384 ;;		_lcd_send_char_data
  3385 ;;		_lcd_send_4bits
  3386 ;;		_lcd_send_8bits
  3387 ;;		_lcd_send_en
  3388 ;;		_GPIO_pin_initialize
  3389 ;;		_seven_segment_write_number
  3390 ;;		_seven_segment_write_2digit_number
  3391 ;;		_dc_motor_turn_right
  3392 ;;		_dc_motor_turn_left
  3393 ;;		_dc_motor_stop
  3394 ;;		_keypad_read_number
  3395 ;;		_LED_on
  3396 ;;		_LED_off
  3397 ;;		_relay_turn_on
  3398 ;;		_relay_turn_off
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text13
  3403   000B4C                     __ptext13:
  3404                           	callstack 0
  3405   000B4C                     _GPIO_pin_write_logic:
  3406                           	callstack 0
  3407   000B4C  FFFF               	dw	65535	; assembler added errata NOP
  3408   000B4E                     
  3409                           ;MCAL_layer/GPIO/hal_gpio.c: 98:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3410   000B4E  0E01               	movlw	1
  3411   000B50  6E56               	movwf	GPIO_pin_write_logic@ret^0,c
  3412   000B52                     
  3413                           ;MCAL_layer/GPIO/hal_gpio.c: 99:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3414   000B52  C04F  F04C         	movff	GPIO_pin_write_logic@_pin_config,GPIO_check_access@_pin_config
  3415   000B56  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3416   000B5A  0900               	iorlw	0
  3417   000B5C  A4D8               	btfss	status,2,c
  3418   000B5E  EFB3  F005         	goto	u1711
  3419   000B62  EFB6  F005         	goto	u1710
  3420   000B66                     u1711:
  3421   000B66  FFFF               	dw	65535	; assembler added errata NOP
  3422   000B68  EF14  F006         	goto	l2365
  3423   000B6C                     u1710:
  3424   000B6C  FFFF               	dw	65535	; assembler added errata NOP
  3425   000B6E                     l2359:
  3426   000B6E  FFFF               	dw	65535	; assembler added errata NOP
  3427                           
  3428                           ;MCAL_layer/GPIO/hal_gpio.c: 100:   ret = (STD_ReturnType)(0x00);
  3429   000B70  6A56               	clrf	GPIO_pin_write_logic@ret^0,c
  3430                           
  3431                           ;MCAL_layer/GPIO/hal_gpio.c: 101:  }
  3432   000B72  EF2B  F006         	goto	l2367
  3433   000B76                     l2361:
  3434   000B76  FFFF               	dw	65535	; assembler added errata NOP
  3435                           
  3436                           ;MCAL_layer/GPIO/hal_gpio.c: 105:     (*(_LAT_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3437   000B78  504F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3438   000B7A  6ED9               	movwf	fsr2l,c
  3439   000B7C  6ADA               	clrf	fsr2h,c
  3440   000B7E  30DF               	rrcf	223,w,c
  3441   000B80  32E8               	rrcf	wreg,f,c
  3442   000B82  32E8               	rrcf	wreg,f,c
  3443   000B84  0B07               	andlw	7
  3444   000B86  6E51               	movwf	??_GPIO_pin_write_logic^0,c
  3445   000B88  0E01               	movlw	1
  3446   000B8A  6E52               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  3447   000B8C  2A51               	incf	??_GPIO_pin_write_logic^0,f,c
  3448   000B8E  EFCC  F005         	goto	u1724
  3449   000B92                     u1725:
  3450   000B92  FFFF               	dw	65535	; assembler added errata NOP
  3451   000B94  90D8               	bcf	status,0,c
  3452   000B96  3652               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  3453   000B98                     u1724:
  3454   000B98  FFFF               	dw	65535	; assembler added errata NOP
  3455   000B9A  2E51               	decfsz	??_GPIO_pin_write_logic^0,f,c
  3456   000B9C  EFC9  F005         	goto	u1725
  3457   000BA0  5052               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  3458   000BA2  0AFF               	xorlw	255
  3459   000BA4  6E53               	movwf	(??_GPIO_pin_write_logic+2)^0,c
  3460   000BA6  504F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3461   000BA8  6ED9               	movwf	fsr2l,c
  3462   000BAA  6ADA               	clrf	fsr2h,c
  3463   000BAC  50DF               	movf	223,w,c
  3464   000BAE  0B07               	andlw	7
  3465   000BB0  0D02               	mullw	2
  3466   000BB2  50F3               	movf	243,w,c
  3467   000BB4  0F0B               	addlw	low __LAT_registers
  3468   000BB6  6ED9               	movwf	fsr2l,c
  3469   000BB8  6ADA               	clrf	fsr2h,c
  3470   000BBA  CFDE F054          	movff	postinc2,??_GPIO_pin_write_logic+3
  3471   000BBE  CFDD F055          	movff	postdec2,??_GPIO_pin_write_logic+4
  3472   000BC2  C054  FFD9         	movff	??_GPIO_pin_write_logic+3,fsr2l
  3473   000BC6  C055  FFDA         	movff	??_GPIO_pin_write_logic+4,fsr2h
  3474   000BCA  5053               	movf	(??_GPIO_pin_write_logic+2)^0,w,c
  3475   000BCC  16DF               	andwf	indf2,f,c
  3476                           
  3477                           ;MCAL_layer/GPIO/hal_gpio.c: 106:    break;
  3478   000BCE  EF2B  F006         	goto	l2367
  3479   000BD2                     l2363:
  3480   000BD2  FFFF               	dw	65535	; assembler added errata NOP
  3481                           
  3482                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     (*(_LAT_registers[_pin_config->port]) |= (1 << _pi
      +                          n_config -> pin));
  3483   000BD4  504F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3484   000BD6  6ED9               	movwf	fsr2l,c
  3485   000BD8  6ADA               	clrf	fsr2h,c
  3486   000BDA  30DF               	rrcf	223,w,c
  3487   000BDC  32E8               	rrcf	wreg,f,c
  3488   000BDE  32E8               	rrcf	wreg,f,c
  3489   000BE0  0B07               	andlw	7
  3490   000BE2  6E51               	movwf	??_GPIO_pin_write_logic^0,c
  3491   000BE4  0E01               	movlw	1
  3492   000BE6  6E52               	movwf	(??_GPIO_pin_write_logic+1)^0,c
  3493   000BE8  2A51               	incf	??_GPIO_pin_write_logic^0,f,c
  3494   000BEA  EFFA  F005         	goto	u1734
  3495   000BEE                     u1735:
  3496   000BEE  FFFF               	dw	65535	; assembler added errata NOP
  3497   000BF0  90D8               	bcf	status,0,c
  3498   000BF2  3652               	rlcf	(??_GPIO_pin_write_logic+1)^0,f,c
  3499   000BF4                     u1734:
  3500   000BF4  FFFF               	dw	65535	; assembler added errata NOP
  3501   000BF6  2E51               	decfsz	??_GPIO_pin_write_logic^0,f,c
  3502   000BF8  EFF7  F005         	goto	u1735
  3503   000BFC  504F               	movf	GPIO_pin_write_logic@_pin_config^0,w,c
  3504   000BFE  6ED9               	movwf	fsr2l,c
  3505   000C00  6ADA               	clrf	fsr2h,c
  3506   000C02  50DF               	movf	223,w,c
  3507   000C04  0B07               	andlw	7
  3508   000C06  0D02               	mullw	2
  3509   000C08  50F3               	movf	243,w,c
  3510   000C0A  0F0B               	addlw	low __LAT_registers
  3511   000C0C  6ED9               	movwf	fsr2l,c
  3512   000C0E  6ADA               	clrf	fsr2h,c
  3513   000C10  CFDE F053          	movff	postinc2,??_GPIO_pin_write_logic+2
  3514   000C14  CFDD F054          	movff	postdec2,??_GPIO_pin_write_logic+3
  3515   000C18  C053  FFD9         	movff	??_GPIO_pin_write_logic+2,fsr2l
  3516   000C1C  C054  FFDA         	movff	??_GPIO_pin_write_logic+3,fsr2h
  3517   000C20  5052               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  3518   000C22  12DF               	iorwf	indf2,f,c
  3519                           
  3520                           ;MCAL_layer/GPIO/hal_gpio.c: 109:    break;
  3521   000C24  EF2B  F006         	goto	l2367
  3522   000C28                     l2365:
  3523   000C28  FFFF               	dw	65535	; assembler added errata NOP
  3524   000C2A  5050               	movf	GPIO_pin_write_logic@logic^0,w,c
  3525   000C2C  6E51               	movwf	??_GPIO_pin_write_logic^0,c
  3526   000C2E  6A52               	clrf	(??_GPIO_pin_write_logic+1)^0,c
  3527                           
  3528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3529                           ; Switch size 1, requested type "simple"
  3530                           ; Number of cases is 1, Range of values is 0 to 0
  3531                           ; switch strategies available:
  3532                           ; Name         Instructions Cycles
  3533                           ; simple_byte            4     3 (average)
  3534                           ;	Chosen strategy is simple_byte
  3535   000C30  5052               	movf	(??_GPIO_pin_write_logic+1)^0,w,c
  3536   000C32  0A00               	xorlw	0	; case 0
  3537   000C34  B4D8               	btfsc	status,2,c
  3538   000C36  EF1F  F006         	goto	l3179
  3539   000C3A  EFB7  F005         	goto	l2359
  3540   000C3E                     l3179:
  3541   000C3E  FFFF               	dw	65535	; assembler added errata NOP
  3542                           
  3543                           ; Switch size 1, requested type "simple"
  3544                           ; Number of cases is 2, Range of values is 0 to 1
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte            7     4 (average)
  3548                           ;	Chosen strategy is simple_byte
  3549   000C40  5051               	movf	??_GPIO_pin_write_logic^0,w,c
  3550   000C42  0A00               	xorlw	0	; case 0
  3551   000C44  B4D8               	btfsc	status,2,c
  3552   000C46  EFBB  F005         	goto	l2361
  3553   000C4A  0A01               	xorlw	1	; case 1
  3554   000C4C  B4D8               	btfsc	status,2,c
  3555   000C4E  EFE9  F005         	goto	l2363
  3556   000C52  EFB7  F005         	goto	l2359
  3557   000C56                     l2367:
  3558   000C56  FFFF               	dw	65535	; assembler added errata NOP
  3559                           
  3560                           ;MCAL_layer/GPIO/hal_gpio.c: 114:  return ret;
  3561   000C58  5056               	movf	GPIO_pin_write_logic@ret^0,w,c
  3562   000C5A  0012               	return		;funcret
  3563   000C5C  FFFF               	dw	65535	; errata NOP
  3564   000C5E                     __end_of_GPIO_pin_write_logic:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _GPIO_pin_direction_initialize *****************
  3568 ;; Defined at:
  3569 ;;		line 54 in file "MCAL_layer/GPIO/hal_gpio.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  _pin_config     1    3[COMRAM] PTR const struct .
  3572 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_initialize@lpin(1), LED_initialize@pin_local(1), 
  3573 ;;		 -> keypad_initialize@lpinc(4), keypad_initialize@lpinr(4), dc_motor_initialize@lpin2(1), dc_motor_initialize@lpin1(
      +1), 
  3574 ;;		 -> seven_segment_initialize@lpin(4), 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  ret             1    9[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      unsigned char 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3586 ;;      Params:         1       0       0       0       0       0       0
  3587 ;;      Locals:         1       0       0       0       0       0       0
  3588 ;;      Temps:          5       0       0       0       0       0       0
  3589 ;;      Totals:         7       0       0       0       0       0       0
  3590 ;;Total ram usage:        7 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 1
  3593 ;; This function calls:
  3594 ;;		_GPIO_check_access
  3595 ;; This function is called by:
  3596 ;;		_GPIO_pin_initialize
  3597 ;;		_keypad_initialize
  3598 ;;		_btn_initialize
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text14
  3603   000A34                     __ptext14:
  3604                           	callstack 0
  3605   000A34                     _GPIO_pin_direction_initialize:
  3606                           	callstack 0
  3607   000A34  FFFF               	dw	65535	; assembler added errata NOP
  3608   000A36                     
  3609                           ;MCAL_layer/GPIO/hal_gpio.c: 55:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3610   000A36  0E01               	movlw	1
  3611   000A38  6E55               	movwf	GPIO_pin_direction_initialize@ret^0,c
  3612   000A3A                     
  3613                           ;MCAL_layer/GPIO/hal_gpio.c: 56:  if ( ((STD_ReturnType)(0x00) == GPIO_check_access(_pin
      +                          _config)) ){
  3614   000A3A  C04F  F04C         	movff	GPIO_pin_direction_initialize@_pin_config,GPIO_check_access@_pin_config
  3615   000A3E  ECF8  F003         	call	_GPIO_check_access	;wreg free
  3616   000A42  0900               	iorlw	0
  3617   000A44  A4D8               	btfss	status,2,c
  3618   000A46  EF27  F005         	goto	u1741
  3619   000A4A  EF2A  F005         	goto	u1740
  3620   000A4E                     u1741:
  3621   000A4E  FFFF               	dw	65535	; assembler added errata NOP
  3622   000A50  EF88  F005         	goto	l2385
  3623   000A54                     u1740:
  3624   000A54  FFFF               	dw	65535	; assembler added errata NOP
  3625   000A56                     l2379:
  3626   000A56  FFFF               	dw	65535	; assembler added errata NOP
  3627                           
  3628                           ;MCAL_layer/GPIO/hal_gpio.c: 57:   ret = (STD_ReturnType)(0x00);
  3629   000A58  6A55               	clrf	GPIO_pin_direction_initialize@ret^0,c
  3630                           
  3631                           ;MCAL_layer/GPIO/hal_gpio.c: 58:  }
  3632   000A5A  EFA2  F005         	goto	l2387
  3633   000A5E                     l2381:
  3634   000A5E  FFFF               	dw	65535	; assembler added errata NOP
  3635                           
  3636                           ;MCAL_layer/GPIO/hal_gpio.c: 62:     (*(_TRIS_registers[_pin_config->port]) &= ~(1 << _p
      +                          in_config -> pin));
  3637   000A60  504F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3638   000A62  6ED9               	movwf	fsr2l,c
  3639   000A64  6ADA               	clrf	fsr2h,c
  3640   000A66  30DF               	rrcf	223,w,c
  3641   000A68  32E8               	rrcf	wreg,f,c
  3642   000A6A  32E8               	rrcf	wreg,f,c
  3643   000A6C  0B07               	andlw	7
  3644   000A6E  6E50               	movwf	??_GPIO_pin_direction_initialize^0,c
  3645   000A70  0E01               	movlw	1
  3646   000A72  6E51               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  3647   000A74  2A50               	incf	??_GPIO_pin_direction_initialize^0,f,c
  3648   000A76  EF40  F005         	goto	u1754
  3649   000A7A                     u1755:
  3650   000A7A  FFFF               	dw	65535	; assembler added errata NOP
  3651   000A7C  90D8               	bcf	status,0,c
  3652   000A7E  3651               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  3653   000A80                     u1754:
  3654   000A80  FFFF               	dw	65535	; assembler added errata NOP
  3655   000A82  2E50               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  3656   000A84  EF3D  F005         	goto	u1755
  3657   000A88  5051               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  3658   000A8A  0AFF               	xorlw	255
  3659   000A8C  6E52               	movwf	(??_GPIO_pin_direction_initialize+2)^0,c
  3660   000A8E  504F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3661   000A90  6ED9               	movwf	fsr2l,c
  3662   000A92  6ADA               	clrf	fsr2h,c
  3663   000A94  50DF               	movf	223,w,c
  3664   000A96  0B07               	andlw	7
  3665   000A98  0D02               	mullw	2
  3666   000A9A  50F3               	movf	243,w,c
  3667   000A9C  0F15               	addlw	low __TRIS_registers
  3668   000A9E  6ED9               	movwf	fsr2l,c
  3669   000AA0  6ADA               	clrf	fsr2h,c
  3670   000AA2  CFDE F053          	movff	postinc2,??_GPIO_pin_direction_initialize+3
  3671   000AA6  CFDD F054          	movff	postdec2,??_GPIO_pin_direction_initialize+4
  3672   000AAA  C053  FFD9         	movff	??_GPIO_pin_direction_initialize+3,fsr2l
  3673   000AAE  C054  FFDA         	movff	??_GPIO_pin_direction_initialize+4,fsr2h
  3674   000AB2  5052               	movf	(??_GPIO_pin_direction_initialize+2)^0,w,c
  3675   000AB4  16DF               	andwf	indf2,f,c
  3676                           
  3677                           ;MCAL_layer/GPIO/hal_gpio.c: 63:     break;
  3678   000AB6  EFA2  F005         	goto	l2387
  3679   000ABA                     l2383:
  3680   000ABA  FFFF               	dw	65535	; assembler added errata NOP
  3681                           
  3682                           ;MCAL_layer/GPIO/hal_gpio.c: 65:     (*(_TRIS_registers[_pin_config-> port]) |= (1 << _p
      +                          in_config -> pin));
  3683   000ABC  504F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3684   000ABE  6ED9               	movwf	fsr2l,c
  3685   000AC0  6ADA               	clrf	fsr2h,c
  3686   000AC2  30DF               	rrcf	223,w,c
  3687   000AC4  32E8               	rrcf	wreg,f,c
  3688   000AC6  32E8               	rrcf	wreg,f,c
  3689   000AC8  0B07               	andlw	7
  3690   000ACA  6E50               	movwf	??_GPIO_pin_direction_initialize^0,c
  3691   000ACC  0E01               	movlw	1
  3692   000ACE  6E51               	movwf	(??_GPIO_pin_direction_initialize+1)^0,c
  3693   000AD0  2A50               	incf	??_GPIO_pin_direction_initialize^0,f,c
  3694   000AD2  EF6E  F005         	goto	u1764
  3695   000AD6                     u1765:
  3696   000AD6  FFFF               	dw	65535	; assembler added errata NOP
  3697   000AD8  90D8               	bcf	status,0,c
  3698   000ADA  3651               	rlcf	(??_GPIO_pin_direction_initialize+1)^0,f,c
  3699   000ADC                     u1764:
  3700   000ADC  FFFF               	dw	65535	; assembler added errata NOP
  3701   000ADE  2E50               	decfsz	??_GPIO_pin_direction_initialize^0,f,c
  3702   000AE0  EF6B  F005         	goto	u1765
  3703   000AE4  504F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3704   000AE6  6ED9               	movwf	fsr2l,c
  3705   000AE8  6ADA               	clrf	fsr2h,c
  3706   000AEA  50DF               	movf	223,w,c
  3707   000AEC  0B07               	andlw	7
  3708   000AEE  0D02               	mullw	2
  3709   000AF0  50F3               	movf	243,w,c
  3710   000AF2  0F15               	addlw	low __TRIS_registers
  3711   000AF4  6ED9               	movwf	fsr2l,c
  3712   000AF6  6ADA               	clrf	fsr2h,c
  3713   000AF8  CFDE F052          	movff	postinc2,??_GPIO_pin_direction_initialize+2
  3714   000AFC  CFDD F053          	movff	postdec2,??_GPIO_pin_direction_initialize+3
  3715   000B00  C052  FFD9         	movff	??_GPIO_pin_direction_initialize+2,fsr2l
  3716   000B04  C053  FFDA         	movff	??_GPIO_pin_direction_initialize+3,fsr2h
  3717   000B08  5051               	movf	(??_GPIO_pin_direction_initialize+1)^0,w,c
  3718   000B0A  12DF               	iorwf	indf2,f,c
  3719                           
  3720                           ;MCAL_layer/GPIO/hal_gpio.c: 66:     break;
  3721   000B0C  EFA2  F005         	goto	l2387
  3722   000B10                     l2385:
  3723   000B10  FFFF               	dw	65535	; assembler added errata NOP
  3724   000B12  504F               	movf	GPIO_pin_direction_initialize@_pin_config^0,w,c
  3725   000B14  6ED9               	movwf	fsr2l,c
  3726   000B16  6ADA               	clrf	fsr2h,c
  3727   000B18  BCDF               	btfsc	indf2,6,c
  3728   000B1A  EF91  F005         	goto	u1771
  3729   000B1E  EF95  F005         	goto	u1770
  3730   000B22                     u1771:
  3731   000B22  FFFF               	dw	65535	; assembler added errata NOP
  3732   000B24  0E01               	movlw	1
  3733   000B26  EF97  F005         	goto	u1776
  3734   000B2A                     u1770:
  3735   000B2A  FFFF               	dw	65535	; assembler added errata NOP
  3736   000B2C  0E00               	movlw	0
  3737   000B2E                     u1776:
  3738   000B2E  FFFF               	dw	65535	; assembler added errata NOP
  3739                           
  3740                           ; Switch size 1, requested type "simple"
  3741                           ; Number of cases is 2, Range of values is 0 to 1
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte            7     4 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746   000B30  0A00               	xorlw	0	; case 0
  3747   000B32  B4D8               	btfsc	status,2,c
  3748   000B34  EF2F  F005         	goto	l2381
  3749   000B38  0A01               	xorlw	1	; case 1
  3750   000B3A  B4D8               	btfsc	status,2,c
  3751   000B3C  EF5D  F005         	goto	l2383
  3752   000B40  EF2B  F005         	goto	l2379
  3753   000B44                     l2387:
  3754   000B44  FFFF               	dw	65535	; assembler added errata NOP
  3755                           
  3756                           ;MCAL_layer/GPIO/hal_gpio.c: 71:  return ret;
  3757   000B46  5055               	movf	GPIO_pin_direction_initialize@ret^0,w,c
  3758   000B48  0012               	return		;funcret
  3759   000B4A  FFFF               	dw	65535	; errata NOP
  3760   000B4C                     __end_of_GPIO_pin_direction_initialize:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _GPIO_check_access *****************
  3764 ;; Defined at:
  3765 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  3768 ;;		 -> LCD1$lcd_data(8), LCD1(11), relay_turn_off@lpin(1), relay_turn_on@lpin(1), 
  3769 ;;		 -> relay_initialize@lpin(1), LED_toggle@pin_local(1), LED_off@pin_local(1), LED_on@pin_local(1), 
  3770 ;;		 -> LED_initialize@pin_local(1), keypad_read_number@lpinc(4), keypad_read_number@lpinr(4), keypad_initialize@lpinc(4
      +), 
  3771 ;;		 -> keypad_initialize@lpinr(4), dc_motor_stop@lpin2(1), dc_motor_stop@lpin1(1), dc_motor_turn_left@lpin2(1), 
  3772 ;;		 -> dc_motor_turn_left@lpin1(1), dc_motor_turn_right@lpin2(1), dc_motor_turn_right@lpin1(1), dc_motor_initialize@lpi
      +n2(1), 
  3773 ;;		 -> dc_motor_initialize@lpin1(1), seven_segment_write_number@lpin(4), seven_segment_initialize@lpin(4), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  ret             1    2[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      unsigned char 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3785 ;;      Params:         1       0       0       0       0       0       0
  3786 ;;      Locals:         1       0       0       0       0       0       0
  3787 ;;      Temps:          1       0       0       0       0       0       0
  3788 ;;      Totals:         3       0       0       0       0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_lcd_check_access
  3795 ;;		_GPIO_pin_initialize
  3796 ;;		_GPIO_pin_direction_initialize
  3797 ;;		_GPIO_pin_write_logic
  3798 ;;		_seven_segment_initialize
  3799 ;;		_dc_motor_initialize
  3800 ;;		_LED_initialize
  3801 ;;		_LED_on
  3802 ;;		_LED_off
  3803 ;;		_LED_toggle
  3804 ;;		_btn_initialize
  3805 ;;		_btn_read_state
  3806 ;;		_relay_initialize
  3807 ;;		_relay_turn_on
  3808 ;;		_relay_turn_off
  3809 ;;		_GPIO_pin_get_direction_status
  3810 ;;		_GPIO_pin_read_logic
  3811 ;;		_GPIO_pin_toggle_logic
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text15
  3816   0007F0                     __ptext15:
  3817                           	callstack 0
  3818   0007F0                     _GPIO_check_access:
  3819                           	callstack 0
  3820   0007F0  FFFF               	dw	65535	; assembler added errata NOP
  3821   0007F2                     
  3822                           ;MCAL_layer/GPIO/hal_gpio.c: 22:  STD_ReturnType ret = (STD_ReturnType)(0x01);
  3823   0007F2  0E01               	movlw	1
  3824   0007F4  6E4E               	movwf	GPIO_check_access@ret^0,c
  3825                           
  3826                           ;MCAL_layer/GPIO/hal_gpio.c: 23:  if ((((void*)0) == _pin_config) || ( (_pin_config -> p
      +                          ort == PORTA_I) && ( (_pin_config -> pin) > 7 - 1) ) ||
  3827   0007F6  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3828   0007F8  B4D8               	btfsc	status,2,c
  3829   0007FA  EF01  F004         	goto	u1621
  3830   0007FE  EF04  F004         	goto	u1620
  3831   000802                     u1621:
  3832   000802  FFFF               	dw	65535	; assembler added errata NOP
  3833   000804  EF84  F004         	goto	l472
  3834   000808                     u1620:
  3835   000808  FFFF               	dw	65535	; assembler added errata NOP
  3836   00080A  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3837   00080C  6ED9               	movwf	fsr2l,c
  3838   00080E  6ADA               	clrf	fsr2h,c
  3839   000810  50DF               	movf	223,w,c
  3840   000812  0B07               	andlw	7
  3841   000814  0900               	iorlw	0
  3842   000816  A4D8               	btfss	status,2,c
  3843   000818  EF10  F004         	goto	u1631
  3844   00081C  EF13  F004         	goto	u1630
  3845   000820                     u1631:
  3846   000820  FFFF               	dw	65535	; assembler added errata NOP
  3847   000822  EF24  F004         	goto	l2339
  3848   000826                     u1630:
  3849   000826  FFFF               	dw	65535	; assembler added errata NOP
  3850   000828  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3851   00082A  6ED9               	movwf	fsr2l,c
  3852   00082C  6ADA               	clrf	fsr2h,c
  3853   00082E  30DF               	rrcf	223,w,c
  3854   000830  32E8               	rrcf	wreg,f,c
  3855   000832  32E8               	rrcf	wreg,f,c
  3856   000834  0B07               	andlw	7
  3857   000836  0A07               	xorlw	7
  3858   000838  B4D8               	btfsc	status,2,c
  3859   00083A  EF21  F004         	goto	u1641
  3860   00083E  EF24  F004         	goto	u1640
  3861   000842                     u1641:
  3862   000842  FFFF               	dw	65535	; assembler added errata NOP
  3863   000844  EF84  F004         	goto	l472
  3864   000848                     u1640:
  3865   000848                     l2339:
  3866   000848  FFFF               	dw	65535	; assembler added errata NOP
  3867   00084A  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3868   00084C  6ED9               	movwf	fsr2l,c
  3869   00084E  6ADA               	clrf	fsr2h,c
  3870   000850  50DF               	movf	223,w,c
  3871   000852  0B07               	andlw	7
  3872   000854  06E8               	decf	wreg,f,c
  3873   000856  B4D8               	btfsc	status,2,c
  3874   000858  EF30  F004         	goto	u1651
  3875   00085C  EF33  F004         	goto	u1650
  3876   000860                     u1651:
  3877   000860  FFFF               	dw	65535	; assembler added errata NOP
  3878   000862  EF51  F004         	goto	l2345
  3879   000866                     u1650:
  3880   000866  FFFF               	dw	65535	; assembler added errata NOP
  3881   000868  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3882   00086A  6ED9               	movwf	fsr2l,c
  3883   00086C  6ADA               	clrf	fsr2h,c
  3884   00086E  50DF               	movf	223,w,c
  3885   000870  0B07               	andlw	7
  3886   000872  0A02               	xorlw	2
  3887   000874  B4D8               	btfsc	status,2,c
  3888   000876  EF3F  F004         	goto	u1661
  3889   00087A  EF42  F004         	goto	u1660
  3890   00087E                     u1661:
  3891   00087E  FFFF               	dw	65535	; assembler added errata NOP
  3892   000880  EF51  F004         	goto	l2345
  3893   000884                     u1660:
  3894   000884  FFFF               	dw	65535	; assembler added errata NOP
  3895   000886  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3896   000888  6ED9               	movwf	fsr2l,c
  3897   00088A  6ADA               	clrf	fsr2h,c
  3898   00088C  50DF               	movf	223,w,c
  3899   00088E  0B07               	andlw	7
  3900   000890  0A03               	xorlw	3
  3901   000892  A4D8               	btfss	status,2,c
  3902   000894  EF4E  F004         	goto	u1671
  3903   000898  EF51  F004         	goto	u1670
  3904   00089C                     u1671:
  3905   00089C  FFFF               	dw	65535	; assembler added errata NOP
  3906   00089E  EF63  F004         	goto	l2347
  3907   0008A2                     u1670:
  3908   0008A2                     l2345:
  3909   0008A2  FFFF               	dw	65535	; assembler added errata NOP
  3910   0008A4  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3911   0008A6  6ED9               	movwf	fsr2l,c
  3912   0008A8  6ADA               	clrf	fsr2h,c
  3913   0008AA  30DF               	rrcf	223,w,c
  3914   0008AC  32E8               	rrcf	wreg,f,c
  3915   0008AE  32E8               	rrcf	wreg,f,c
  3916   0008B0  0B07               	andlw	7
  3917   0008B2  6E4D               	movwf	??_GPIO_check_access^0,c
  3918   0008B4  0E08               	movlw	8
  3919   0008B6  604D               	cpfslt	??_GPIO_check_access^0,c
  3920   0008B8  EF60  F004         	goto	u1681
  3921   0008BC  EF63  F004         	goto	u1680
  3922   0008C0                     u1681:
  3923   0008C0  FFFF               	dw	65535	; assembler added errata NOP
  3924   0008C2  EF84  F004         	goto	l472
  3925   0008C6                     u1680:
  3926   0008C6                     l2347:
  3927   0008C6  FFFF               	dw	65535	; assembler added errata NOP
  3928   0008C8  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3929   0008CA  6ED9               	movwf	fsr2l,c
  3930   0008CC  6ADA               	clrf	fsr2h,c
  3931   0008CE  50DF               	movf	223,w,c
  3932   0008D0  0B07               	andlw	7
  3933   0008D2  0A04               	xorlw	4
  3934   0008D4  A4D8               	btfss	status,2,c
  3935   0008D6  EF6F  F004         	goto	u1691
  3936   0008DA  EF72  F004         	goto	u1690
  3937   0008DE                     u1691:
  3938   0008DE  FFFF               	dw	65535	; assembler added errata NOP
  3939   0008E0  EF86  F004         	goto	l2351
  3940   0008E4                     u1690:
  3941   0008E4  FFFF               	dw	65535	; assembler added errata NOP
  3942   0008E6  504C               	movf	GPIO_check_access@_pin_config^0,w,c
  3943   0008E8  6ED9               	movwf	fsr2l,c
  3944   0008EA  6ADA               	clrf	fsr2h,c
  3945   0008EC  30DF               	rrcf	223,w,c
  3946   0008EE  32E8               	rrcf	wreg,f,c
  3947   0008F0  32E8               	rrcf	wreg,f,c
  3948   0008F2  0B07               	andlw	7
  3949   0008F4  6E4D               	movwf	??_GPIO_check_access^0,c
  3950   0008F6  0E02               	movlw	2
  3951   0008F8  644D               	cpfsgt	??_GPIO_check_access^0,c
  3952   0008FA  EF81  F004         	goto	u1701
  3953   0008FE  EF84  F004         	goto	u1700
  3954   000902                     u1701:
  3955   000902  FFFF               	dw	65535	; assembler added errata NOP
  3956   000904  EF86  F004         	goto	l2351
  3957   000908                     u1700:
  3958   000908                     l472:
  3959   000908  FFFF               	dw	65535	; assembler added errata NOP
  3960                           
  3961                           ;MCAL_layer/GPIO/hal_gpio.c: 26:    ((_pin_config -> pin) > 3 - 1)) ){;MCAL_layer/GPIO/h
      +                          al_gpio.c: 27:   ret = (STD_ReturnType)(0x00);
  3962   00090A  6A4E               	clrf	GPIO_check_access@ret^0,c
  3963   00090C                     l2351:
  3964   00090C  FFFF               	dw	65535	; assembler added errata NOP
  3965                           
  3966                           ;MCAL_layer/GPIO/hal_gpio.c: 30:  return ret;
  3967   00090E  504E               	movf	GPIO_check_access@ret^0,w,c
  3968   000910  0012               	return		;funcret
  3969   000912  FFFF               	dw	65535	; errata NOP
  3970   000914                     __end_of_GPIO_check_access:
  3971                           	callstack 0
  3972                           
  3973                           	psect	rparam
  3974   000001                     ___rparam_used  equ	1
  3975   000000                     ___param_bank   equ	0
  3976   000000                     __Lparam        equ	__Lrparam
  3977   000000                     __Hparam        equ	__Hrparam
  3978                           
  3979                           	psect	config
  3980                           
  3981                           ; Padding undefined space
  3982   300000                     	org	3145728
  3983   300000  FF                 	db	255
  3984                           
  3985                           ;Config register CONFIG1H @ 0x300001
  3986                           ;	Oscillator Selection bits
  3987                           ;	OSC = HS, HS oscillator
  3988                           ;	Oscillator System Clock Switch Enable bit
  3989                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  3990   300001                     	org	3145729
  3991   300001  22                 	db	34
  3992                           
  3993                           ;Config register CONFIG2L @ 0x300002
  3994                           ;	Power-up Timer Enable bit
  3995                           ;	PWRT = OFF, PWRT disabled
  3996                           ;	Brown-out Reset Enable bit
  3997                           ;	BOR = OFF, Brown-out Reset disabled
  3998                           ;	Brown-out Reset Voltage bits
  3999                           ;	BORV = 20, VBOR set to 2.0V
  4000   300002                     	org	3145730
  4001   300002  0D                 	db	13
  4002                           
  4003                           ;Config register CONFIG2H @ 0x300003
  4004                           ;	Watchdog Timer Enable bit
  4005                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4006                           ;	Watchdog Timer Postscale Select bits
  4007                           ;	WDTPS = 128, 1:128
  4008   300003                     	org	3145731
  4009   300003  0E                 	db	14
  4010                           
  4011                           ; Padding undefined space
  4012   300004                     	org	3145732
  4013   300004  FF                 	db	255
  4014                           
  4015                           ;Config register CONFIG3H @ 0x300005
  4016                           ;	CCP2 Mux bit
  4017                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  4018   300005                     	org	3145733
  4019   300005  01                 	db	1
  4020                           
  4021                           ;Config register CONFIG4L @ 0x300006
  4022                           ;	Stack Full/Underflow Reset Enable bit
  4023                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  4024                           ;	Low Voltage ICSP Enable bit
  4025                           ;	LVP = OFF, Low Voltage ICSP disabled
  4026                           ;	Background Debugger Enable bit
  4027                           ;	DEBUG = 0x1, unprogrammed default
  4028   300006                     	org	3145734
  4029   300006  81                 	db	129
  4030                           
  4031                           ; Padding undefined space
  4032   300007                     	org	3145735
  4033   300007  FF                 	db	255
  4034                           
  4035                           ;Config register CONFIG5L @ 0x300008
  4036                           ;	Code Protection bit
  4037                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4038                           ;	Code Protection bit
  4039                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4040                           ;	Code Protection bit
  4041                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4042                           ;	Code Protection bit
  4043                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4044   300008                     	org	3145736
  4045   300008  0F                 	db	15
  4046                           
  4047                           ;Config register CONFIG5H @ 0x300009
  4048                           ;	Boot Block Code Protection bit
  4049                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4050                           ;	Data EEPROM Code Protection bit
  4051                           ;	CPD = OFF, Data EEPROM not code protected
  4052   300009                     	org	3145737
  4053   300009  C0                 	db	192
  4054                           
  4055                           ;Config register CONFIG6L @ 0x30000A
  4056                           ;	Write Protection bit
  4057                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4058                           ;	Write Protection bit
  4059                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4060                           ;	Write Protection bit
  4061                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4062                           ;	Write Protection bit
  4063                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4064   30000A                     	org	3145738
  4065   30000A  0F                 	db	15
  4066                           
  4067                           ;Config register CONFIG6H @ 0x30000B
  4068                           ;	Configuration Register Write Protection bit
  4069                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4070                           ;	Boot Block Write Protection bit
  4071                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4072                           ;	Data EEPROM Write Protection bit
  4073                           ;	WRTD = OFF, Data EEPROM not write protected
  4074   30000B                     	org	3145739
  4075   30000B  E0                 	db	224
  4076                           
  4077                           ;Config register CONFIG7L @ 0x30000C
  4078                           ;	Table Read Protection bit
  4079                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4080                           ;	Table Read Protection bit
  4081                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4082                           ;	Table Read Protection bit
  4083                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4084                           ;	Table Read Protection bit
  4085                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4086   30000C                     	org	3145740
  4087   30000C  0F                 	db	15
  4088                           
  4089                           ;Config register CONFIG7H @ 0x30000D
  4090                           ;	Boot Block Table Read Protection bit
  4091                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4092   30000D                     	org	3145741
  4093   30000D  40                 	db	64
  4094                           tosu	equ	0xFFF
  4095                           tosh	equ	0xFFE
  4096                           tosl	equ	0xFFD
  4097                           stkptr	equ	0xFFC
  4098                           pclatu	equ	0xFFB
  4099                           pclath	equ	0xFFA
  4100                           pcl	equ	0xFF9
  4101                           tblptru	equ	0xFF8
  4102                           tblptrh	equ	0xFF7
  4103                           tblptrl	equ	0xFF6
  4104                           tablat	equ	0xFF5
  4105                           prodh	equ	0xFF4
  4106                           prodl	equ	0xFF3
  4107                           indf0	equ	0xFEF
  4108                           postinc0	equ	0xFEE
  4109                           postdec0	equ	0xFED
  4110                           preinc0	equ	0xFEC
  4111                           plusw0	equ	0xFEB
  4112                           fsr0h	equ	0xFEA
  4113                           fsr0l	equ	0xFE9
  4114                           wreg	equ	0xFE8
  4115                           indf1	equ	0xFE7
  4116                           postinc1	equ	0xFE6
  4117                           postdec1	equ	0xFE5
  4118                           preinc1	equ	0xFE4
  4119                           plusw1	equ	0xFE3
  4120                           fsr1h	equ	0xFE2
  4121                           fsr1l	equ	0xFE1
  4122                           bsr	equ	0xFE0
  4123                           indf2	equ	0xFDF
  4124                           postinc2	equ	0xFDE
  4125                           postdec2	equ	0xFDD
  4126                           preinc2	equ	0xFDC
  4127                           plusw2	equ	0xFDB
  4128                           fsr2h	equ	0xFDA
  4129                           fsr2l	equ	0xFD9
  4130                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        75
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     29     116
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_check_access@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinc(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), 
		 -> LCD1(COMRAM[11]), LCD1$lcd_data(COMRAM[8]), LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), 
		 -> LED_on@pin_local(COMRAM[1]), LED_toggle@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), relay_turn_off@lpin(COMRAM[1]), 
		 -> relay_turn_on@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    GPIO_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinc(COMRAM[4]), keypad_initialize@lpinr(COMRAM[4]), 
		 -> LCD1(COMRAM[11]), LCD1$lcd_data(COMRAM[8]), LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), 
		 -> seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), keypad_initialize@lpinr(COMRAM[4]), LCD1(COMRAM[11]), 
		 -> LCD1$lcd_data(COMRAM[8]), LED_initialize@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), 

    GPIO_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 11
		 -> dc_motor_initialize@lpin1(COMRAM[1]), dc_motor_initialize@lpin2(COMRAM[1]), dc_motor_stop@lpin1(COMRAM[1]), dc_motor_stop@lpin2(COMRAM[1]), 
		 -> dc_motor_turn_left@lpin1(COMRAM[1]), dc_motor_turn_left@lpin2(COMRAM[1]), dc_motor_turn_right@lpin1(COMRAM[1]), dc_motor_turn_right@lpin2(COMRAM[1]), 
		 -> keypad_initialize@lpinr(COMRAM[4]), keypad_read_number@lpinr(COMRAM[4]), LCD1(COMRAM[11]), LCD1$lcd_data(COMRAM[8]), 
		 -> LED_initialize@pin_local(COMRAM[1]), LED_off@pin_local(COMRAM[1]), LED_on@pin_local(COMRAM[1]), relay_initialize@lpin(COMRAM[1]), 
		 -> relay_turn_off@lpin(COMRAM[1]), relay_turn_on@lpin(COMRAM[1]), seven_segment_initialize@lpin(COMRAM[4]), seven_segment_write_number@lpin(COMRAM[4]), 

    _LAT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    lcd_check_access@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_initialize@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_8bits@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_char_data@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_char_data_position@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_command@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_send_en@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    lcd_set_cursor@lcd	PTR const struct . size(1) Largest target is 11
		 -> LCD1(COMRAM[11]), 

    _PORT_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    S1443$buffer	PTR unsigned char  size(2) Largest target is 0

    S1443$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    _TRIS_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_send_char_data_position
    _lcd_send_char_data_position->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_send_char_data->_lcd_send_4bits
    _lcd_send_char_data->_lcd_send_8bits
    _application_initialize->_ecu_init
    _ecu_init->_lcd_initialize
    _lcd_initialize->_lcd_send_command
    _lcd_send_command->_lcd_send_4bits
    _lcd_send_command->_lcd_send_8bits
    _lcd_send_en->_GPIO_pin_write_logic
    _lcd_send_8bits->_GPIO_pin_write_logic
    _lcd_send_4bits->_GPIO_pin_write_logic
    _lcd_check_access->_GPIO_check_access
    _GPIO_pin_initialize->_GPIO_pin_write_logic
    _GPIO_pin_write_logic->_GPIO_check_access
    _GPIO_pin_direction_initialize->_GPIO_check_access

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10757
             _application_initialize
        _lcd_send_char_data_position
 ---------------------------------------------------------------------------------
 (1) _lcd_send_char_data_position                          5     1      4    5590
                                             24 COMRAM     5     1      4
                 _lcd_send_char_data
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     1      3    2784
                                             20 COMRAM     4     1      3
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data                                   3     1      2    2640
                                             17 COMRAM     3     1      2
               _GPIO_pin_write_logic
                     _lcd_send_4bits
                     _lcd_send_8bits
                        _lcd_send_en
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    5165
                           _ecu_init
 ---------------------------------------------------------------------------------
 (2) _ecu_init                                             1     1      0    5163
                                             24 COMRAM     1     1      0
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_initialize                                       4     3      1    5139
                                             20 COMRAM     4     3      1
                _GPIO_pin_initialize
                   _lcd_check_access
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     3     1      2    2643
                                             17 COMRAM     3     1      2
               _GPIO_pin_write_logic
                     _lcd_send_4bits
                     _lcd_send_8bits
                        _lcd_send_en
 ---------------------------------------------------------------------------------
 (4) _lcd_send_en                                          2     1      1     552
                                             11 COMRAM     2     1      1
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_8bits                                       6     4      2     663
                                             11 COMRAM     6     4      2
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2     667
                                             11 COMRAM     6     4      2
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_check_access                                     4     3      1     584
                                              3 COMRAM     4     3      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (4) _GPIO_pin_initialize                                  2     1      1    1227
                                             11 COMRAM     2     1      1
                  _GPIO_check_access
      _GPIO_pin_direction_initialize
               _GPIO_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_write_logic                                 8     6      2     455
                                              3 COMRAM     8     6      2
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (5) _GPIO_pin_direction_initialize                        7     6      1     404
                                              3 COMRAM     7     6      1
                  _GPIO_check_access
 ---------------------------------------------------------------------------------
 (6) _GPIO_check_access                                    3     2      1     244
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_init
       _lcd_initialize
         _GPIO_pin_initialize
           _GPIO_check_access
           _GPIO_pin_direction_initialize
             _GPIO_check_access
           _GPIO_pin_write_logic
             _GPIO_check_access
         _lcd_check_access
           _GPIO_check_access
         _lcd_send_command
           _GPIO_pin_write_logic
           _lcd_send_4bits
             _GPIO_pin_write_logic
           _lcd_send_8bits
             _GPIO_pin_write_logic
           _lcd_send_en
             _GPIO_pin_write_logic
   _lcd_send_char_data_position
     _lcd_send_char_data
       _GPIO_pin_write_logic
       _lcd_send_4bits
       _lcd_send_8bits
       _lcd_send_en
     _lcd_set_cursor
       _lcd_send_command

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     29     116     91.3%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     116      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Mar 25 23:55:12 2025

                                               ?_lcd_send_en 0057  
                                                          _i 003B  
                                                          _j 006D  
                                            ?_lcd_send_4bits 0057  
                                            ?_lcd_send_8bits 0057  
                                            LED_toggle@F2885 0071  
                                                        l200 076C  
                                                        l220 0CFA  
                                                        l213 0D90  
                                                        l206 07EC  
                                                        l225 1028  
                                                        l183 0A2E  
                                                        l271 0EA0  
                                                        l512 0C5A  
                                                        l177 094C  
                                                        l178 0A2A  
                                                        l266 0E38  
                                                        l274 0DB0  
                                                        l427 1094  
                                                        l291 0ED8  
                                                        l284 0FE2  
                                                        l196 0682  
                                                        l292 0EFC  
                                                        l279 0E18  
                                                        l480 0910  
                                                        l472 0908  
                                                        l485 0F4C  
                                                        l495 0B48  
                                                        l592 109E  
                                                        l586 107C  
                                                        l587 107E  
                                           _lcd_check_access 0914  
                                                        wreg 0FE8  
                                      relay_initialize@F2865 0070  
                                 __end_of_lcd_send_char_data 0CFE  
                                            ?_lcd_set_cursor 0060  
                                                       l2401 0E3C  
                                                       l2403 0E6E  
                                                       l2411 0E9C  
                                                       l2341 0868  
                                                       l2333 07F2  
                                                       l2501 09E0  
                                                       l2421 0FC6  
                                                       l2351 090C  
                                                       l2343 0886  
                                                       l2335 080A  
                                                       l2511 0A08  
                                                       l2503 09F0  
                                                       l2407 0E86  
                                                       l2431 0D96  
                                                       l2423 0FD0  
                                                       l2415 0F9E  
                                                       l2345 08A2  
                                                       l2337 0828  
                                                       l2361 0B76  
                                                       l2513 0A0C  
                                                       l2409 0E8A  
                                                       l2441 0DE6  
                                                       l2433 0DAA  
                                                       l2425 0FDE  
                                                       l2417 0FB2  
                                                       l2521 0D14  
                                                       l2347 08C6  
                                                       l2339 0848  
                                                       l2363 0BD2  
                                                       l2355 0B4E  
                                                       l2515 0A24  
                                                       l2419 0FB8  
                                                       l2531 0D8C  
                                                       l2523 0D1A  
                                                       l2611 0C74  
                                                       l3171 1062  
                                                       l2349 08E6  
                                                       l2381 0A5E  
                                                       l2365 0C28  
                                                       l2357 0B52  
                                                       l2461 0F48  
                                                       l2453 0F02  
                                                       l2445 0DFE  
                                                       l2429 0D96  
                                                       l2525 0D28  
                                                       l2605 07E8  
                                                       l2541 0666  
                                                       l2621 0CF6  
                                                       l2613 0C7A  
                                                       l3173 1068  
                                                       l2383 0ABA  
                                                       l2375 0A36  
                                                       l2367 0C56  
                                                       l2359 0B6E  
                                                       l2455 0F02  
                                                       l2471 0954  
                                                       l2391 0E1E  
                                                       l2447 0E02  
                                                       l2439 0DB4  
                                                       l2527 0D46  
                                                       l2519 0D00  
                                                       l2543 068A  
                                                       l2535 0618  
                                                       l2615 0C88  
                                                       l2631 0EC4  
                                                       l2385 0B10  
                                                       l2377 0A3A  
                                                       l2457 0F1E  
                                                       l2481 0986  
                                                       l2473 0974  
                                                       l2465 0916  
                                                       l2393 0E1E  
                                                       l2449 0E14  
                                                       l2529 0D72  
                                                       l2561 06F6  
                                                       l2553 06C0  
                                                       l2545 06A0  
                                                       l2537 062C  
                                                       l2641 1088  
                                                       l2617 0CA6  
                                                       l2609 0C60  
                                                       l2633 0EE0  
                                                       l2625 0EA6  
                                                       l3169 1062  
                                                       l2387 0B44  
                                                       l2379 0A56  
                                                       l3179 0C3E  
                                                       l2459 0F24  
                                                       l2491 09A6  
                                                       l2483 099A  
                                                       l2467 0916  
                                                       l2395 0E32  
                                                       l2571 0742  
                                                       l2563 0702  
                                                       l2555 06CE  
                                                       l2547 06BE  
                                                       l2539 064A  
                                                       l2643 1092  
                                                       l2619 0CDC  
                                                       l2635 0EF8  
                                                       l2627 0EAA  
                                                       l2493 09BE  
                                                       l2469 0932  
                                                       l2581 0770  
                                                       l2573 074E  
                                                       l2565 0720  
                                                       l2557 06D0  
                                                       l2629 0EB0  
                                                       l2495 09DE  
                                                       l2479 0976  
                                                       l2591 07B2  
                                                       l2583 077E  
                                                       l2575 075A  
                                                       l2567 0728  
                                                       l2559 06E4  
                                                       l2639 1088  
                                                       l2671 0FE8  
                                                       l2489 09A2  
                                                       l2593 07D0  
                                                       l2585 0780  
                                                       l2569 0734  
                                                       l2681 109A  
                                                       l2673 0FFC  
                                                       l2595 07D8  
                                                       l2587 0794  
                                                       l2683 109A  
                                                       l2675 1002  
                                                       l2589 07A6  
                                                       l2677 1024  
                                                       STR_1 0611  
                                                       _LCD1 0041  
                                                       _LED1 003F  
                                                       _LED2 003E  
                                                       u2000 0666  
                                                       u2001 0660  
                                                       u2010 0682  
                                                       u2011 067C  
                                                       u2020 06BC  
                                                       u2021 06B6  
                                                       u2030 06E2  
                                                       u2031 06DC  
                                                       u2040 0792  
                                                       u2120 0FFA  
                                                       u2041 078C  
                                                       u2121 0FF4  
                                                       u2050 0C72  
                                                       u2051 0C6C  
                                                       u2060 0CA4  
                                                       u2061 0C9E  
                                                       _LATA 0F89  
                                                       _LATB 0F8A  
                                                       _LATC 0F8B  
                                                       _LATD 0F8C  
                                                       _LATE 0F8D  
                                                       u1700 0908  
                                                       u1620 0808  
                                                       u1701 0902  
                                                       u1621 0802  
                                                       u1630 0826  
                                                       u1710 0B6C  
                                                       u1631 0820  
                                                       u1711 0B66  
                                                       u1640 0848  
                                                       u1800 0E80  
                                                       u1641 0842  
                                                       u1801 0E7A  
                                                       u1650 0866  
                                                       u1810 0E9C  
                                                       u1651 0860  
                                                       u1811 0E96  
                                                       u1660 0884  
                                                       u1740 0A54  
                                                       u1724 0B98  
                                                       u1900 0972  
                                                       u1820 0FB0  
                                                       u1661 087E  
                                                       u1741 0A4E  
                                                       u1725 0B92  
                                                       u1901 096C  
                                                       u1821 0FAA  
                                                       u1670 08A2  
                                                       u1734 0BF4  
                                                       u1910 0998  
                                                       u1830 0DA8  
                                                       u1671 089C  
                                                       u1735 0BEE  
                                                       u1911 0992  
                                                       u1831 0DA2  
                                                       u1680 08C6  
                                                       u1920 09B8  
                                                       u1681 08C0  
                                                       u1921 09B2  
                                                       u1690 08E4  
                                                       u1770 0B2A  
                                                       u1754 0A80  
                                                       u1930 09DC  
                                                       u1850 0DF8  
                                                       u1691 08DE  
                                                       u1771 0B22  
                                                       u1755 0A7A  
                                                       u1931 09D6  
                                                       u1851 0DF2  
                                                       u1764 0ADC  
                                                       u1940 0A02  
                                                       u1780 0E30  
                                                       u1860 0E14  
                                                       u1844 0DD2  
                                                       u1765 0AD6  
                                                       u1941 09FC  
                                                       u1781 0E2A  
                                                       u1861 0E0E  
                                                       u1845 0DCC  
                                                       u1870 0F1C  
                                                       u1950 0A1E  
                                                       u1871 0F16  
                                                       u1951 0A18  
                                                       u1776 0B2E  
                                                       u1880 0930  
                                                       u1960 0D12  
                                                       u1881 092A  
                                                       u1961 0D0C  
                                                       u1890 094C  
                                                       u1794 0E5A  
                                                       u1970 0D44  
                                                       u1891 0946  
                                                       u1795 0E54  
                                                       u1971 0D3E  
                                                       u2907 07D2  
                                                       u1980 062A  
                                                       u2917 0FC8  
                                                       u1981 0624  
                                                       u1990 0648  
                                                       u1991 0642  
                                                       u2857 06EA  
                                                       u2867 0708  
                                                       u2877 0722  
                                                       u2887 079A  
                                                       u2897 07B8  
                                                       _btn1 0034  
                                                       _btn2 0031  
                                                       _main 1062  
                                                       _knum 006C  
                                                       _prev 006B  
                                                       fsr2h 0FDA  
                                                       indf2 0FDF  
                                                       fsr1l 0FE1  
                                                       fsr2l 0FD9  
                                                       prodl 0FF3  
                                                       start 3FFC  
                                       _GPIO_pin_write_logic 0B4C  
                                               ___param_bank 0000  
                                                      ?_main 004C  
                                   ??_application_initialize 0065  
                                             __LAT_registers 000B  
                                          ?_lcd_send_command 005D  
                                        relay_turn_off@F2875 006E  
                                                      _PORTA 0F80  
                                                      _PORTB 0F81  
                                                      _PORTC 0F82  
                                                      _PORTD 0F83  
                                                      _PORTE 0F84  
                                                      _TRISA 0F92  
                                                      _TRISB 0F93  
                                                      _TRISC 0F94  
                                                      _TRISD 0F95  
                                                      _TRISE 0F96  
                                          lcd_initialize@lcd 0060  
                                          lcd_initialize@ret 0062  
                                         ??_lcd_send_command 005F  
                                                      _errno 0069  
                                                      tablat 0FF5  
                                                      status 0FD8  
                                      ?_GPIO_pin_write_logic 004F  
                                            __initialization 102C  
                                                LED_on@F2875 0073  
                                               __end_of_main 1086  
                                                     ??_main 0069  
                                              __activetblptr 0002  
                                           __end_of_ecu_init 1098  
                                                     clear_0 1052  
                                                     _relay1 0040  
                                                     _motor1 0039  
                                                     _motor2 0037  
                                                     isa$std 0001  
                                               __pdataCOMRAM 0001  
                                               __mediumconst 0600  
                                                     tblptrh 0FF7  
                                                     tblptrl 0FF6  
                                                     tblptru 0FF8  
                                           ??_lcd_initialize 0061  
                                                 __accesstop 0080  
                                    __end_of__initialization 1058  
                                     ??_GPIO_pin_write_logic 0051  
                                              ___rparam_used 0001  
                                   __end_of_lcd_check_access 0A34  
                                           ??_lcd_send_4bits 0059  
                                           ??_lcd_send_8bits 0059  
                                             __pcstackCOMRAM 004C  
                            ??_GPIO_pin_direction_initialize 0050  
                        __end_of_lcd_send_char_data_position 102C  
                                _lcd_send_char_data_position 0FE6  
                   GPIO_pin_direction_initialize@_pin_config 004F  
                                           ??_lcd_set_cursor 0063  
                                            __PORT_registers 0001  
                                               LED_off@F2880 0072  
                                      lcd_send_char_data@lcd 005D  
                                      lcd_send_char_data@ret 005F  
                                     _application_initialize 1098  
                                         _lcd_send_char_data 0C5E  
                                             lcd_send_en@lcd 0057  
                                             lcd_send_en@ret 0058  
                                        ?_lcd_send_char_data 005D  
                                                  ?_ecu_init 004C  
                                       ??_lcd_send_char_data 005F  
                                                    __Hparam 0000  
                                        _GPIO_pin_initialize 0F00  
                                                    __Lparam 0000  
                                               __psmallconst 0600  
                                                    __pcinit 102C  
                                                    __ramtop 0600  
                                                    __ptext0 1062  
                                                    __ptext1 0FE6  
                                                    __ptext2 0EA4  
                                                    __ptext3 0C5E  
                                                    __ptext4 1098  
                                                    __ptext5 1086  
                                                    __ptext6 0616  
                                                    __ptext7 0CFE  
                                                    __ptext8 0F9C  
                                                    __ptext9 0D94  
                                                    _led_arr 002D  
                      __end_of_GPIO_pin_direction_initialize 0B4C  
                              _GPIO_pin_direction_initialize 0A34  
                                                    _keypad1 001F  
                                          lcd_check_access@i 0052  
                                       ?_GPIO_pin_initialize 0057  
                                            _keypad_elements 0601  
                                                 ??_ecu_init 0064  
                                                    _testing 003D  
                                       end_of_initialization 1058  
                                          lcd_send_4bits@lcd 0057  
                                          lcd_send_4bits@ret 005B  
                                          lcd_send_4bits@val 0058  
                                              __Lmediumconst 0000  
                                          lcd_send_8bits@lcd 0057  
                                          lcd_send_8bits@ret 005B  
                                          lcd_send_8bits@val 0058  
                                                    postdec1 0FE5  
                                                    postdec2 0FDD  
                                                    postinc0 0FEE  
                                                    postinc2 0FDE  
                                      ??_GPIO_pin_initialize 0058  
                                            lcd_initialize@i 0063  
                                    GPIO_pin_write_logic@ret 0056  
                                          ?_lcd_check_access 004F  
                                         relay_turn_on@F2870 006F  
                                              ??_lcd_send_en 0058  
                                         ??_lcd_check_access 0050  
                                    __end_of_keypad_elements 0611  
                                              __pidataCOMRAM 0F50  
                            lcd_send_char_data_position@data 0067  
                                        start_initialization 102C  
                                       GPIO_check_access@ret 004E  
                             ?_GPIO_pin_direction_initialize 004F  
                                    ?_application_initialize 004C  
                                           _lcd_send_command 0CFE  
                                            lcd_send_4bits@i 005C  
                                            lcd_send_8bits@i 005C  
                                        __end_of_lcd_send_en 0FE6  
                                                __pbssCOMRAM 0069  
                                     lcd_send_char_data@data 005E  
                             __end_of_application_initialize 10A2  
                                     GPIO_pin_initialize@ret 0058  
                            GPIO_pin_write_logic@_pin_config 004F  
                                        lcd_send_command@lcd 005D  
                                        LED_initialize@F2870 0074  
                                        lcd_send_command@ret 005F  
                                                __smallconst 0600  
                                        lcd_check_access@lcd 004F  
                                        lcd_check_access@ret 0051  
                                  GPIO_pin_write_logic@logic 0050  
                                            __TRIS_registers 0015  
                                                _lcd_send_en 0F9C  
                           GPIO_pin_direction_initialize@ret 0055  
                                                  copy_data0 1040  
                                               _seg_units_en 003C  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                __end_of_GPIO_pin_initialize 0F50  
                                          _GPIO_check_access 07F0  
                               ?_lcd_send_char_data_position 0064  
                                         ?_GPIO_check_access 004C  
                                   __end_of_lcd_send_command 0D94  
                             GPIO_pin_initialize@_pin_config 0057  
                                                   _ecu_init 1086  
                                        ??_GPIO_check_access 004D  
                                                   __ptext10 0E1C  
                                                   __ptext11 0914  
                                                   __ptext12 0F00  
                                                   __ptext13 0B4C  
                                                   __ptext14 0A34  
                                                   __ptext15 07F0  
                                             _lcd_initialize 0616  
                                                   _segment1 0028  
                                                   isa$xinst 0000  
                                  __end_of_GPIO_check_access 0914  
                                             _lcd_send_4bits 0E1C  
                                             _lcd_send_8bits 0D94  
                               __end_of_GPIO_pin_write_logic 0C5E  
                              ??_lcd_send_char_data_position 0068  
                                    lcd_send_command@command 005E  
                                             _lcd_set_cursor 0EA4  
                                          lcd_set_cursor@col 0062  
                                          lcd_set_cursor@lcd 0060  
                                          lcd_set_cursor@ret 0063  
                                          lcd_set_cursor@row 0061  
                                     __end_of_lcd_initialize 07F0  
                                                ecu_init@ret 0064  
                                     __end_of_lcd_send_4bits 0EA4  
                                     __end_of_lcd_send_8bits 0E1C  
                                     __end_of_lcd_set_cursor 0F00  
                             lcd_send_char_data_position@col 0066  
                             lcd_send_char_data_position@lcd 0064  
                             lcd_send_char_data_position@ret 0068  
                             lcd_send_char_data_position@row 0065  
                               GPIO_check_access@_pin_config 004C  
                                            ?_lcd_initialize 0060  
